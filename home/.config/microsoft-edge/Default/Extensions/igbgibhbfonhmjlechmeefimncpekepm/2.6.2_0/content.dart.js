// Generated by dart2js (NullSafetyMode.sound, deferred-serialization, csp), the Dart to JavaScript compiler version: 2.18.0.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key))
        to[key] = from[key];
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        cls.prototype.__proto__ = sup.prototype;
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazyOld(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        A.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel)
        holder[name] = initializer();
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel)
          A.throwLateFieldADI(name);
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number")
      funType += typesOffset;
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, lazyOld: lazyOld, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var A = {JS_CONST: function JS_CONST() {
    },
    CastIterable_CastIterable(source, $S, $T) {
      if ($S._eval$1("EfficientLengthIterable<0>")._is(source))
        return new A._EfficientLengthCastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("_EfficientLengthCastIterable<1,2>"));
      return new A.CastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastIterable<1,2>"));
    },
    LateError$fieldADI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has been assigned during initialization.");
    },
    LateError$fieldNI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has not been initialized.");
    },
    hexDigitValue(char) {
      var letter,
        digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    SystemHash_combine(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    SystemHash_finish(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    SystemHash_hash4(v1, v2, v3, v4, seed) {
      return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(seed, v1), v2), v3), v4));
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    SubListIterable$(_iterable, _start, _endOrLength, $E) {
      A.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        A.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          A.throwExpression(A.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new A.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    MappedIterable_MappedIterable(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new A.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      A.ArgumentError_checkNotNull(takeCount, _s9_, type$.int);
      A.RangeError_checkNotNegative(takeCount, _s9_);
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new A.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        A.ArgumentError_checkNotNull(count, _s5_, type$.int);
        A.RangeError_checkNotNegative(count, _s5_);
        return new A.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      A.ArgumentError_checkNotNull(count, _s5_, type$.int);
      A.RangeError_checkNotNegative(count, _s5_);
      return new A.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    IterableElementError_noElement() {
      return new A.StateError("No element");
    },
    IterableElementError_tooFew() {
      return new A.StateError("Too few elements");
    },
    Sort_sort(a, compare, $E) {
      A.Sort__doSort(a, 0, J.get$length$asx(a) - 1, compare, $E);
    },
    Sort__doSort(a, left, right, compare, $E) {
      if (right - left <= 32)
        A.Sort__insertionSort(a, left, right, compare, $E);
      else
        A.Sort__dualPivotQuicksort(a, left, right, compare, $E);
    },
    Sort__insertionSort(a, left, right, compare, $E) {
      var i, t1, el, j, t2, j0;
      for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
        el = t1.$index(a, i);
        j = i;
        while (true) {
          if (j > left) {
            t2 = compare.call$2(t1.$index(a, j - 1), el);
            if (typeof t2 !== "number")
              return t2.$gt();
            t2 = t2 > 0;
          } else
            t2 = false;
          if (!t2)
            break;
          j0 = j - 1;
          t1.$indexSet(a, j, t1.$index(a, j0));
          j = j0;
        }
        t1.$indexSet(a, j, el);
      }
    },
    Sort__dualPivotQuicksort(a, left, right, compare, $E) {
      var t0, less, great, k, ak, comp, great0, less0, pivots_are_equal,
        sixth = B.JSInt_methods._tdivFast$1(right - left + 1, 6),
        index1 = left + sixth,
        index5 = right - sixth,
        index3 = B.JSInt_methods._tdivFast$1(left + right, 2),
        index2 = index3 - sixth,
        index4 = index3 + sixth,
        t1 = J.getInterceptor$asx(a),
        el1 = t1.$index(a, index1),
        el2 = t1.$index(a, index2),
        el3 = t1.$index(a, index3),
        el4 = t1.$index(a, index4),
        el5 = t1.$index(a, index5),
        t2 = compare.call$2(el1, el2);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el2;
        el2 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el4, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t2 = compare.call$2(el1, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el2, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el1, el4);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el4;
        el4 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el3, el4);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el4;
        el4 = el3;
        el3 = t0;
      }
      t2 = compare.call$2(el2, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el2, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el4, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t1.$indexSet(a, index1, el1);
      t1.$indexSet(a, index3, el3);
      t1.$indexSet(a, index5, el5);
      t1.$indexSet(a, index2, t1.$index(a, left));
      t1.$indexSet(a, index4, t1.$index(a, right));
      less = left + 1;
      great = right - 1;
      if (J.$eq$(compare.call$2(el2, el4), 0)) {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          comp = compare.call$2(ak, el2);
          if (comp === 0)
            continue;
          if (comp < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else
            for (; true;) {
              comp = compare.call$2(t1.$index(a, great), el2);
              if (comp > 0) {
                --great;
                continue;
              } else {
                great0 = great - 1;
                if (comp < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                  break;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  break;
                }
              }
            }
        }
        pivots_are_equal = true;
      } else {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) > 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) > 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        pivots_are_equal = false;
      }
      t2 = less - 1;
      t1.$indexSet(a, left, t1.$index(a, t2));
      t1.$indexSet(a, t2, el2);
      t2 = great + 1;
      t1.$indexSet(a, right, t1.$index(a, t2));
      t1.$indexSet(a, t2, el4);
      A.Sort__doSort(a, left, less - 2, compare, $E);
      A.Sort__doSort(a, great + 2, right, compare, $E);
      if (pivots_are_equal)
        return;
      if (less < index1 && great > index5) {
        for (; J.$eq$(compare.call$2(t1.$index(a, less), el2), 0);)
          ++less;
        for (; J.$eq$(compare.call$2(t1.$index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) === 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) === 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) === 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        A.Sort__doSort(a, less, great, compare, $E);
      } else
        A.Sort__doSort(a, less, great, compare, $E);
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastIterable: function CastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastListBase: function _CastListBase() {
    },
    _CastListBase_sort_closure: function _CastListBase_sort_closure(t0, t1) {
      this.$this = t0;
      this.compare = t1;
    },
    CastList: function CastList(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastSet: function CastSet(t0, t1, t2) {
      this._source = t0;
      this._emptySet = t1;
      this.$ti = t2;
    },
    CastMap: function CastMap(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastMap_forEach_closure: function CastMap_forEach_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    CastMap_entries_closure: function CastMap_entries_closure(t0) {
      this.$this = t0;
    },
    CastQueue: function CastQueue(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    CodeUnits: function CodeUnits(t0) {
      this.__internal$_string = t0;
    },
    nullFuture_closure: function nullFuture_closure() {
    },
    SentinelValue: function SentinelValue() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1, t2) {
      this._iterator = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterable: function ExpandIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterator: function ExpandIterator(t0, t1, t2, t3) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._currentExpansion = t2;
      _.__internal$_current = null;
      _.$ti = t3;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1, t2) {
      this._iterator = t0;
      this._remaining = t1;
      this.$ti = t2;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1, t2) {
      this._iterator = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipWhileIterable: function SkipWhileIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    SkipWhileIterator: function SkipWhileIterator(t0, t1, t2) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._hasSkipped = false;
      _.$ti = t2;
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator(t0) {
      this.$ti = t0;
    },
    WhereTypeIterable: function WhereTypeIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    WhereTypeIterator: function WhereTypeIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    ReversedListIterable: function ReversedListIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    Symbol: function Symbol(t0) {
      this.__internal$_name = t0;
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    ConstantMap_ConstantMap$from(other, $K, $V) {
      var allStrings, k, object, t2,
        keys = A.List_List$from(other.get$keys(), true, $K),
        t1 = keys.length,
        _i = 0;
      while (true) {
        if (!(_i < t1)) {
          allStrings = true;
          break;
        }
        k = keys[_i];
        if (typeof k != "string" || "__proto__" === k) {
          allStrings = false;
          break;
        }
        ++_i;
      }
      if (allStrings) {
        object = {};
        for (_i = 0; t2 = keys.length, _i < t2; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i) {
          k = keys[_i];
          object[k] = $V._as(other.$index(0, k));
        }
        return new A.ConstantStringMap(t2, object, keys, $K._eval$1("@<0>")._bind$1($V)._eval$1("ConstantStringMap<1,2>"));
      }
      return new A.ConstantMapView(A.LinkedHashMap_LinkedHashMap$from(other, $K, $V), $K._eval$1("@<0>")._bind$1($V)._eval$1("ConstantMapView<1,2>"));
    },
    ConstantMap__throwUnmodifiable() {
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable Map"));
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_parseInt(source, radix) {
      var decimalMatch, maxCharCode, digitsPart, t1, i, _null = null,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      if (3 >= match.length)
        return A.ioore(match, 3);
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((B.JSString_methods._codeUnitAt$1(digitsPart, i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_parseDouble(source) {
      var result, trimmed;
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
        return null;
      result = parseFloat(source);
      if (isNaN(result)) {
        trimmed = B.JSString_methods.trim$0(source);
        if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
          return result;
        return null;
      }
      return result;
    },
    Primitives_objectTypeName(object) {
      return A.Primitives__objectTypeNameNewRti(object);
    },
    Primitives__objectTypeNameNewRti(object) {
      var interceptor, dispatchName, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.C_JS_CONST(object);
        if (dispatchName !== "Object" && dispatchName !== "")
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && constructorName !== "Object" && constructorName !== "")
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_currentUri() {
      if (!!self.location)
        return self.location.href;
      return null;
    },
    Primitives__fromCharCodeApply(array) {
      var result, i, i0, chunkEnd,
        end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints(codePoints) {
      var t1, _i, i,
        a = A._setArrayType([], type$.JSArray_int);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, A.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i <= 65535)
          B.JSArray_methods.add$1(a, i);
        else if (i <= 1114111) {
          B.JSArray_methods.add$1(a, 55296 + (B.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          B.JSArray_methods.add$1(a, 56320 + (i & 1023));
        } else
          throw A.wrapException(A.argumentErrorValue(i));
      }
      return A.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i < 0)
          throw A.wrapException(A.argumentErrorValue(i));
        if (i > 65535)
          return A.Primitives_stringFromCodePoints(charCodes);
      }
      return A.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode(charCode) {
      var bits;
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((B.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
        }
      }
      throw A.wrapException(A.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_getTimeZoneName(receiver) {
      var d = A.Primitives_lazyAsJsDate(receiver),
        match = /\((.*)\)/.exec(d.toString());
      if (match != null) {
        if (1 >= match.length)
          return A.ioore(match, 1);
        return A._asString(match[1]);
      }
      match = /^[A-Z,a-z]{3}\s[A-Z,a-z]{3}\s\d+\s\d{2}:\d{2}:\d{2}\s([A-Z]{3,5})\s\d{4}$/.exec(d.toString());
      if (match != null) {
        if (1 >= match.length)
          return A.ioore(match, 1);
        return A._asString(match[1]);
      }
      match = /(?:GMT|UTC)[+-]\d{4}/.exec(d.toString());
      if (match != null) {
        if (0 >= match.length)
          return A.ioore(match, 0);
        return A._asString(match[0]);
      }
      return "";
    },
    Primitives_valueFromDecomposedDate(years, month, day, hours, minutes, seconds, milliseconds, isUtc) {
      var value,
        jsMonth = month - 1;
      if (0 <= years && years < 100) {
        years += 400;
        jsMonth -= 4800;
      }
      value = isUtc ? Date.UTC(years, jsMonth, day, hours, minutes, seconds, milliseconds) : new Date(years, jsMonth, day, hours, minutes, seconds, milliseconds).valueOf();
      if (isNaN(value) || value < -864e13 || value > 864e13)
        return null;
      return value;
    },
    Primitives_lazyAsJsDate(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._value);
      return receiver.date;
    },
    Primitives_getYear(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : A.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : A.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : A.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : A.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : A.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments) {
      var $arguments, namedArgumentList, t1 = {};
      t1.argumentCount = 0;
      $arguments = [];
      namedArgumentList = [];
      t1.argumentCount = positionalArguments.length;
      B.JSArray_methods.addAll$1($arguments, positionalArguments);
      t1.names = "";
      if (namedArguments != null && namedArguments.__js_helper$_length !== 0)
        namedArguments.forEach$1(0, new A.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));
      return J.noSuchMethod$1$($function, new A.JSInvocationMirror(B.Symbol_call, 0, $arguments, namedArgumentList, 0));
    },
    Primitives_applyFunction($function, positionalArguments, namedArguments) {
      var t1, argumentCount, jsStub;
      if (Array.isArray(positionalArguments))
        t1 = namedArguments == null || namedArguments.__js_helper$_length === 0;
      else
        t1 = false;
      if (t1) {
        argumentCount = positionalArguments.length;
        if (argumentCount === 0) {
          if (!!$function.call$0)
            return $function.call$0();
        } else if (argumentCount === 1) {
          if (!!$function.call$1)
            return $function.call$1(positionalArguments[0]);
        } else if (argumentCount === 2) {
          if (!!$function.call$2)
            return $function.call$2(positionalArguments[0], positionalArguments[1]);
        } else if (argumentCount === 3) {
          if (!!$function.call$3)
            return $function.call$3(positionalArguments[0], positionalArguments[1], positionalArguments[2]);
        } else if (argumentCount === 4) {
          if (!!$function.call$4)
            return $function.call$4(positionalArguments[0], positionalArguments[1], positionalArguments[2], positionalArguments[3]);
        } else if (argumentCount === 5)
          if (!!$function.call$5)
            return $function.call$5(positionalArguments[0], positionalArguments[1], positionalArguments[2], positionalArguments[3], positionalArguments[4]);
        jsStub = $function["call" + "$" + argumentCount];
        if (jsStub != null)
          return jsStub.apply($function, positionalArguments);
      }
      return A.Primitives__generalApplyFunction($function, positionalArguments, namedArguments);
    },
    Primitives__generalApplyFunction($function, positionalArguments, namedArguments) {
      var $arguments, argumentCount, requiredParameterCount, defaultValuesClosure, t1, defaultValues, interceptor, jsFunction, maxArguments, missingDefaults, keys, _i, defaultValue, used, key;
      if (positionalArguments != null)
        $arguments = positionalArguments;
      else
        $arguments = [];
      argumentCount = $arguments.length;
      requiredParameterCount = $function.$requiredArgCount;
      if (argumentCount < requiredParameterCount)
        return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      defaultValuesClosure = $function.$defaultValues;
      t1 = defaultValuesClosure == null;
      defaultValues = !t1 ? defaultValuesClosure() : null;
      interceptor = J.getInterceptor$($function);
      jsFunction = interceptor["call*"];
      if (typeof jsFunction == "string")
        jsFunction = interceptor[jsFunction];
      if (t1) {
        if (namedArguments != null && namedArguments.__js_helper$_length !== 0)
          return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount === requiredParameterCount)
          return jsFunction.apply($function, $arguments);
        return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      }
      if (Array.isArray(defaultValues)) {
        if (namedArguments != null && namedArguments.__js_helper$_length !== 0)
          return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        maxArguments = requiredParameterCount + defaultValues.length;
        if (argumentCount > maxArguments)
          return A.Primitives_functionNoSuchMethod($function, $arguments, null);
        if (argumentCount < maxArguments) {
          missingDefaults = defaultValues.slice(argumentCount - requiredParameterCount);
          if ($arguments === positionalArguments)
            $arguments = A.List_List$of($arguments, true, type$.dynamic);
          B.JSArray_methods.addAll$1($arguments, missingDefaults);
        }
        return jsFunction.apply($function, $arguments);
      } else {
        if (argumentCount > requiredParameterCount)
          return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if ($arguments === positionalArguments)
          $arguments = A.List_List$of($arguments, true, type$.dynamic);
        keys = Object.keys(defaultValues);
        if (namedArguments == null)
          for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i) {
            defaultValue = defaultValues[A._asString(keys[_i])];
            if (B.C__Required === defaultValue)
              return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
            B.JSArray_methods.add$1($arguments, defaultValue);
          }
        else {
          for (t1 = keys.length, used = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i) {
            key = A._asString(keys[_i]);
            if (namedArguments.containsKey$1(key)) {
              ++used;
              B.JSArray_methods.add$1($arguments, namedArguments.$index(0, key));
            } else {
              defaultValue = defaultValues[key];
              if (B.C__Required === defaultValue)
                return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
              B.JSArray_methods.add$1($arguments, defaultValue);
            }
          }
          if (used !== namedArguments.__js_helper$_length)
            return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        }
        return jsFunction.apply($function, $arguments);
      }
    },
    iae(argument) {
      throw A.wrapException(A.argumentErrorValue(argument));
    },
    ioore(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index";
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, null);
      $length = A._asInt(J.get$length$asx(indexable));
      if (index < 0 || index >= $length)
        return A.IndexError$(index, indexable, _s5_, null, $length);
      return A.RangeError$value(index, _s5_);
    },
    diagnoseRangeError(start, end, $length) {
      if (start < 0 || start > $length)
        return A.RangeError$range(start, 0, $length, "start", null);
      if (end != null)
        if (end < start || end > $length)
          return A.RangeError$range(end, start, $length, "end", null);
      return new A.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue(object) {
      return new A.ArgumentError(true, object, null, null);
    },
    wrapException(ex) {
      var wrapper, t1;
      if (ex == null)
        ex = new A.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex) {
      throw A.wrapException(ex);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      var t1;
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (ex instanceof A.ExceptionAndStackTrace) {
        t1 = ex.dartException;
        return A.saveStackTrace(ex, t1 == null ? type$.Object._as(t1) : t1);
      }
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, t1, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, _null = null;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", _null));
            case 445:
            case 5007:
              t1 = A.S(message);
              return A.saveStackTrace(ex, new A.NullError(t1 + " (Error " + ieErrorCode + ")", _null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t1 = match != null;
                        } else
                          t1 = true;
                      } else
                        t1 = true;
                    } else
                      t1 = true;
                  } else
                    t1 = true;
                } else
                  t1 = true;
              } else
                t1 = true;
            } else
              t1 = true;
            if (t1) {
              A._asString(message);
              return A.saveStackTrace(ex, new A.NullError(message, match == null ? _null : match.method));
            }
          }
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, _null, _null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception instanceof A.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new A._StackTrace(exception);
    },
    objectHashCode(object) {
      if (object == null || typeof object != "object")
        return J.get$hashCode$(object);
      else
        return A.Primitives_objectHashCode(object);
    },
    fillLiteralMap(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      type$.Function._as(closure);
      switch (A._asInt(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(A.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function;
      if (closure == null)
        return null;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else
        $constructor = function tear_off(a, b) {
          this.$initialize(a, b);
        };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunctionNewRti(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      var arity, t1;
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      arity = $function.length;
      t1 = A.Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var t1, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template), type$.nullable_Object);
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    boolConversionCheck(value) {
      if (value == null)
        A.assertThrow("boolean expression must not be null");
      return value;
    },
    assertThrow(message) {
      throw A.wrapException(new A._AssertionError(message));
    },
    throwCyclicInit(staticName) {
      throw A.wrapException(new A.CyclicInitializationError(staticName));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    defineProperty(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = A._asString($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = A._asStringQ($.alternateTagFunction.call$2(obj, tag));
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.C_JS_CONST0();
      hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, unicode, dotAll, global) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        g = global ? "g" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + g);
      if (regexp instanceof RegExp)
        return regexp;
      throw A.wrapException(A.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked(receiver, other, startIndex) {
      var t1;
      if (typeof other == "string")
        return receiver.indexOf(other, startIndex) >= 0;
      else if (other instanceof A.JSSyntaxRegExp) {
        t1 = B.JSString_methods.substring$1(receiver, startIndex);
        return other._nativeRegExp.test(t1);
      } else {
        t1 = J.allMatches$1$s(other, B.JSString_methods.substring$1(receiver, startIndex));
        return !t1.get$isEmpty(t1);
      }
    },
    escapeReplacement(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    stringReplaceFirstRE(receiver, regexp, replacement, startIndex) {
      var match = regexp._execGlobal$2(receiver, startIndex);
      if (match == null)
        return receiver;
      return A.stringReplaceRangeUnchecked(receiver, match._match.index, match.get$end(), replacement);
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked(receiver, pattern, replacement) {
      var nativeRegexp;
      if (typeof pattern == "string")
        return A.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      if (pattern instanceof A.JSSyntaxRegExp) {
        nativeRegexp = pattern.get$_nativeGlobalVersion();
        nativeRegexp.lastIndex = 0;
        return receiver.replace(nativeRegexp, A.escapeReplacement(replacement));
      }
      return A.stringReplaceAllGeneral(receiver, pattern, replacement);
    },
    stringReplaceAllGeneral(receiver, pattern, replacement) {
      var t1, startIndex, t2, match;
      for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), startIndex = 0, t2 = ""; t1.moveNext$0();) {
        match = t1.get$current();
        t2 = t2 + receiver.substring(startIndex, match.get$start(match)) + replacement;
        startIndex = match.get$end();
      }
      t1 = t2 + receiver.substring(startIndex);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    stringReplaceAllUncheckedString(receiver, pattern, replacement) {
      var $length, t1, i, index;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        t1 = "" + replacement;
        for (i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      index = receiver.indexOf(pattern, 0);
      if (index < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(A.quoteStringForRegExp(pattern), "g"), A.escapeReplacement(replacement));
    },
    _stringIdentity(string) {
      return string;
    },
    stringReplaceAllFuncUnchecked(receiver, pattern, onMatch, onNonMatch) {
      var t1, t2, startIndex, t3, match, t4, t5;
      for (t1 = pattern.allMatches$1(0, receiver), t1 = new A._AllMatchesIterator(t1._re, t1._string, t1._start), t2 = type$.RegExpMatch, startIndex = 0, t3 = ""; t1.moveNext$0();) {
        match = t1.__js_helper$_current;
        if (match == null)
          match = t2._as(match);
        t4 = match._match;
        t5 = t4.index;
        t3 = t3 + A.S(A._stringIdentity(B.JSString_methods.substring$2(receiver, startIndex, t5))) + A.S(onMatch.call$1(match));
        startIndex = t5 + t4[0].length;
      }
      t1 = t3 + A.S(A._stringIdentity(B.JSString_methods.substring$1(receiver, startIndex)));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    stringReplaceFirstUnchecked(receiver, pattern, replacement, startIndex) {
      var index, t1, matches, match;
      if (typeof pattern == "string") {
        index = receiver.indexOf(pattern, startIndex);
        if (index < 0)
          return receiver;
        return A.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
      }
      if (pattern instanceof A.JSSyntaxRegExp)
        return startIndex === 0 ? receiver.replace(pattern._nativeRegExp, A.escapeReplacement(replacement)) : A.stringReplaceFirstRE(receiver, pattern, replacement, startIndex);
      t1 = J.allMatches$2$s(pattern, receiver, startIndex);
      matches = t1.get$iterator(t1);
      if (!matches.moveNext$0())
        return receiver;
      match = matches.get$current();
      return B.JSString_methods.replaceRange$3(receiver, match.get$start(match), match.get$end(), replacement);
    },
    stringReplaceRangeUnchecked(receiver, start, end, replacement) {
      return receiver.substring(0, start) + replacement + receiver.substring(end);
    },
    ConstantMapView: function ConstantMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantMap_map_closure: function ConstantMap_map_closure(t0, t1, t2) {
      this.$this = t0;
      this.transform = t1;
      this.result = t2;
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_length = t0;
      _._jsObject = t1;
      _.__js_helper$_keys = t2;
      _.$ti = t3;
    },
    ConstantStringMap_values_closure: function ConstantStringMap_values_closure(t0) {
      this.$this = t0;
    },
    _ConstantMapKeyIterable: function _ConstantMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    Instantiation: function Instantiation() {
    },
    Instantiation1: function Instantiation1(t0, t1) {
      this._genericClosure = t0;
      this.$ti = t1;
    },
    JSInvocationMirror: function JSInvocationMirror(t0, t1, t2, t3, t4) {
      var _ = this;
      _._memberName = t0;
      _.__js_helper$_kind = t1;
      _._arguments = t2;
      _._namedArgumentNames = t3;
      _._typeArgumentCount = t4;
    },
    Primitives_functionNoSuchMethod_closure: function Primitives_functionNoSuchMethod_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.namedArgumentList = t1;
      this.$arguments = t2;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError(t0, t1) {
      this.__js_helper$_message = t0;
      this._method = t1;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    _AssertionError: function _AssertionError(t0) {
      this.message = t0;
    },
    _Required: function _Required() {
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
      this.$this = t0;
    },
    JsLinkedHashMap_addAll_closure: function JsLinkedHashMap_addAll_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
      _.$ti = t2;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    _AllMatchesIterable: function _AllMatchesIterable(t0, t1, t2) {
      this._re = t0;
      this._string = t1;
      this._start = t2;
    },
    _AllMatchesIterator: function _AllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._regExp = t0;
      _._string = t1;
      _._nextIndex = t2;
      _.__js_helper$_current = null;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterable: function _StringAllMatchesIterable(t0, t1, t2) {
      this._input = t0;
      this._pattern = t1;
      this.__js_helper$_index = t2;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    throwLateFieldNI(fieldName) {
      return A.throwExpression(A.LateError$fieldNI(fieldName));
    },
    throwLateFieldADI(fieldName) {
      return A.throwExpression(A.LateError$fieldADI(fieldName));
    },
    _Cell$named(_name) {
      var t1 = new A._Cell(_name);
      return t1.__late_helper$_value = t1;
    },
    _Cell: function _Cell(t0) {
      this.__late_helper$_name = t0;
      this.__late_helper$_value = null;
    },
    _ensureNativeList(list) {
      var t1, result, i;
      if (type$.JSIndexable_dynamic._is(list))
        return list;
      t1 = J.getInterceptor$asx(list);
      result = A.List_List$filled(t1.get$length(list), null, false, type$.dynamic);
      for (i = 0; i < t1.get$length(list); ++i)
        B.JSArray_methods.$indexSet(result, i, t1.$index(list, i));
      return result;
    },
    NativeInt8List__create1(arg) {
      return new Int8Array(arg);
    },
    NativeUint8List_NativeUint8List$view(buffer, offsetInBytes, $length) {
      return $length == null ? new Uint8Array(buffer, offsetInBytes) : new Uint8Array(buffer, offsetInBytes, $length);
    },
    _checkValidIndex(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw A.wrapException(A.diagnoseIndexError(list, index));
    },
    _checkValidRange(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw A.wrapException(A.diagnoseRangeError(start, end, $length));
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeFloat64List: function NativeFloat64List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = A._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 11 || kind === 12;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    instantiatedGenericFunctionType(genericFunctionRti, instantiationRti) {
      var t1, cache, key, probe, rti;
      if (genericFunctionRti == null)
        return null;
      t1 = instantiationRti._rest;
      cache = genericFunctionRti._bindCache;
      if (cache == null)
        cache = genericFunctionRti._bindCache = new Map();
      key = instantiationRti._canonicalRecipe;
      probe = cache.get(key);
      if (probe != null)
        return probe;
      rti = A._substitute(init.typeUniverse, genericFunctionRti._primary, t1, 0);
      cache.set(key, rti);
      return rti;
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 11:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 12:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 13:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      var rti;
      if (object instanceof A.Object) {
        rti = object.$ti;
        return rti != null ? rti : A._instanceTypeFromConstructor(object);
      }
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? instance.__proto__.__proto__.constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    getRuntimeType(object) {
      var rti = object instanceof A.Closure ? A.closureFunctionType(object) : null;
      return A.createRuntimeType(rti == null ? A.instanceType(object) : rti);
    },
    createRuntimeType(rti) {
      var recipe, starErasedRecipe, starErasedRti,
        type = rti._cachedRuntimeType;
      if (type != null)
        return type;
      recipe = rti._canonicalRecipe;
      starErasedRecipe = recipe.replace(/\*/g, "");
      if (starErasedRecipe === recipe)
        return rti._cachedRuntimeType = new A._Type(rti);
      starErasedRti = A._Universe_eval(init.typeUniverse, starErasedRecipe, true);
      type = starErasedRti._cachedRuntimeType;
      return rti._cachedRuntimeType = type == null ? starErasedRti._cachedRuntimeType = new A._Type(starErasedRti) : type;
    },
    typeLiteral(recipe) {
      return A.createRuntimeType(A._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest(object) {
      var t1, unstarred, isFn, $name, testRti = this;
      if (testRti === type$.Object)
        return A._finishIsFn(testRti, object, A._isObject);
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return A._finishIsFn(testRti, object, A._isTop);
      t1 = testRti._kind;
      unstarred = t1 === 6 ? testRti._primary : testRti;
      if (unstarred === type$.int)
        isFn = A._isInt;
      else if (unstarred === type$.double || unstarred === type$.num)
        isFn = A._isNum;
      else if (unstarred === type$.String)
        isFn = A._isString;
      else
        isFn = unstarred === type$.bool ? A._isBool : null;
      if (isFn != null)
        return A._finishIsFn(testRti, object, isFn);
      if (unstarred._kind === 9) {
        $name = unstarred._primary;
        if (unstarred._rest.every(A.isTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._finishIsFn(testRti, object, A._isListTestViaProperty);
          return A._finishIsFn(testRti, object, A._isTestViaProperty);
        }
      } else if (t1 === 7)
        return A._finishIsFn(testRti, object, A._generalNullableIsTestImplementation);
      return A._finishIsFn(testRti, object, A._generalIsTestImplementation);
    },
    _finishIsFn(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck(object) {
      var t1, testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else {
        t1 = A.isNullable(testRti);
        if (t1)
          asFn = A._generalNullableAsCheckImplementation;
      }
      testRti._as = asFn;
      return testRti._as(object);
    },
    _nullIs(testRti) {
      var t1,
        kind = testRti._kind;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          if (!(testRti === type$.legacy_Never))
            if (kind !== 7)
              t1 = kind === 8 && A._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      return A._isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), null, testRti, null);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation(object) {
      var t1, testRti = this;
      if (object == null) {
        t1 = A.isNullable(testRti);
        if (t1)
          return object;
      } else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _failedAsCheck(object, testRti) {
      throw A.wrapException(A._TypeError$fromMessage(A._Error_compose(object, A.instanceOrFunctionType(object, testRti), A._rtiToString(testRti, null))));
    },
    checkTypeBound(type, bound, variable, methodName) {
      var _null = null;
      if (A._isSubtype(init.typeUniverse, type, _null, bound, _null))
        return type;
      throw A.wrapException(A._TypeError$fromMessage("The type argument '" + A._rtiToString(type, _null) + "' is not a subtype of the type variable bound '" + A._rtiToString(bound, _null) + "' of type variable '" + variable + "' in '" + methodName + "'."));
    },
    _Error_compose(object, objectRti, checkedTypeDescription) {
      var objectDescription = A.Error_safeToString(object);
      return objectDescription + ": type '" + A._rtiToString(objectRti == null ? A.instanceType(object) : objectRti, null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage(message) {
      return new A._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, null, type));
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "Object"));
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num?"));
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, t2, typeParametersText, typeSep, t3, t4, boundRti, kind, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = A._setArrayType([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          B.JSArray_methods.add$1(genericContext, "T" + (offset + i));
        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          t3 = genericContext.length;
          t4 = t3 - 1 - i;
          if (!(t4 >= 0))
            return A.ioore(genericContext, t4);
          typeParametersText = B.JSString_methods.$add(typeParametersText + typeSep, genericContext[t4]);
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            if (!(boundRti === t2))
              t3 = false;
            else
              t3 = true;
          else
            t3 = true;
          if (!t3)
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var s, questionArgument, argumentKind, $name, $arguments, t1, t2,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        s = A._rtiToString(rti._primary, genericContext);
        return s;
      }
      if (kind === 7) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 11 || argumentKind === 12 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 8)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 9) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 12)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 13) {
        t1 = rti._primary;
        t2 = genericContext.length;
        t1 = t2 - 1 - t1;
        if (!(t1 >= 0 && t1 < t2))
          return A.ioore(genericContext, t1);
        return genericContext[t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, normalize));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
        else
          t1 = true;
        if (t1)
          return baseType;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 7)
              t1 = baseKind === 8 && A.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1 || baseType === type$.legacy_Never)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          if (starArgument._kind === 8 && A.isNullable(starArgument._primary))
            return starArgument;
          else
            return A.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, t2, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.legacy_Object))
            t2 = false;
          else
            t2 = true;
        else
          t2 = true;
        if (t2 || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t2, i, ch, t3, array, head, base, parameters, optionalPositional, named, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36)
          i = A._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(A._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              t3 = parser.u;
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              head = t1.pop();
              if (typeof head == "string")
                t1.push(A._Universe__lookupInterfaceRti(t3, head, array));
              else {
                base = A._Parser_toType(t3, parser.e, head);
                switch (base._kind) {
                  case 11:
                    t1.push(A._Universe__lookupGenericFunctionRti(t3, base, array, parser.n));
                    break;
                  default:
                    t1.push(A._Universe__lookupBindingRti(t3, base, array));
                    break;
                }
              }
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, t1);
              break;
            case 42:
              t3 = parser.u;
              t1.push(A._Universe__lookupStarRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 63:
              t3 = parser.u;
              t1.push(A._Universe__lookupQuestionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(A._Universe__lookupFutureOrRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              t3 = parser.u;
              parameters = new A._FunctionParameters();
              optionalPositional = t3.sEA;
              named = t3.sEA;
              head = t1.pop();
              if (typeof head == "number")
                switch (head) {
                  case -1:
                    optionalPositional = t1.pop();
                    break;
                  case -2:
                    named = t1.pop();
                    break;
                  default:
                    t1.push(head);
                    break;
                }
              else
                t1.push(head);
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              parameters._requiredPositional = array;
              parameters._optionalPositional = optionalPositional;
              parameters._named = named;
              t1.push(A._Universe__lookupFunctionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parameters));
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number")
        return A._Parser_indexToType(universe, environment, item);
      else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    _isSubtype(universe, s, sEnv, t, tEnv) {
      var t1, sKind, leftTypeVariable, tKind, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isStrongTopType(s))
        return false;
      if (s._kind !== 1)
        t1 = false;
      else
        t1 = true;
      if (t1)
        return true;
      leftTypeVariable = sKind === 13;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      t1 = s === type$.Null || s === type$.JSNull;
      if (t1) {
        if (tKind === 8)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 8)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        if (sKind === 6)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return sKind !== 7;
      }
      if (sKind === 6)
        return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 6) {
        t1 = A.Rti__getQuestionFromStar(universe, t);
        return A._isSubtype(universe, s, sEnv, t1, tEnv);
      }
      if (sKind === 8) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 7) {
        t1 = A._isSubtype(universe, type$.Null, sEnv, t, tEnv);
        return t1 && A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      }
      if (tKind === 8) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 7) {
        t1 = A._isSubtype(universe, s, sEnv, type$.Null, tEnv);
        return t1 || A._isSubtype(universe, s, sEnv, t._primary, tEnv);
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 11;
      if ((!t1 || sKind === 12) && t === type$.Function)
        return true;
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 12)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 11) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv) {
      var rule, recipes, $length, supertypeArgs, i, t1, t2,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv);
      }
      t1 = s._rest;
      t2 = t._rest;
      return A._areArgumentsSubtypes(universe, t1, null, sEnv, t2, tEnv);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv) {
      var i, t1, t2,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i) {
        t1 = sArgs[i];
        t2 = tArgs[i];
        if (!A._isSubtype(universe, t1, sEnv, t2, tEnv))
          return false;
      }
      return true;
    },
    isNullable(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isStrongTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && A.isNullable(t._primary)))
              t1 = kind === 8 && A.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isTopType(t) {
      var t1;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isStrongTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      A.Timer__createTimer(B.Duration_0, type$.void_Function._as(callback));
    },
    Timer__createTimer(duration, callback) {
      var milliseconds = B.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return A._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl();
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter($T) {
      return new A._AsyncAwaitCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait(object, bodyFunction) {
      A._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn(object, completer) {
      completer.complete$1(0, object);
    },
    _asyncRethrow(object, completer) {
      completer.completeError$2(A.unwrapException(object), A.getTraceFromException(object));
    },
    _awaitOnObject(object, bodyFunction) {
      var t1, future,
        thenCallback = new A._awaitOnObject_closure(bodyFunction),
        errorCallback = new A._awaitOnObject_closure0(bodyFunction);
      if (object instanceof A._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (type$.Future_dynamic._is(object))
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new A._Future($.Zone__current, type$._Future_dynamic);
          future._state = 8;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new A._wrapJsFunctionForAsync_closure($protected), type$.void, type$.int, type$.dynamic);
    },
    _asyncStarHelper(object, bodyFunctionOrErrorCode, controller) {
      var t1, error, stackTrace, replacement, t2,
        _s10_ = "controller";
      if (bodyFunctionOrErrorCode === 0) {
        t1 = controller.cancelationFuture;
        if (t1 != null)
          t1._completeWithValue$1(null);
        else {
          t1 = controller.___AsyncStarStreamController_controller_A;
          t1 === $ && A.throwLateFieldNI(_s10_);
          t1.close$0(0);
        }
        return;
      } else if (bodyFunctionOrErrorCode === 1) {
        t1 = controller.cancelationFuture;
        if (t1 != null)
          t1._completeError$2(A.unwrapException(object), A.getTraceFromException(object));
        else {
          error = A.unwrapException(object);
          stackTrace = A.getTraceFromException(object);
          t1 = controller.___AsyncStarStreamController_controller_A;
          t1 === $ && A.throwLateFieldNI(_s10_);
          A.checkNotNullable(error, "error", type$.Object);
          if (t1._state >= 4)
            A.throwExpression(t1._badEventState$0());
          replacement = $.Zone__current.errorCallback$2(error, stackTrace);
          if (replacement != null) {
            error = replacement.error;
            stackTrace = replacement.stackTrace;
          }
          t1._addError$2(error, stackTrace);
          controller.___AsyncStarStreamController_controller_A.close$0(0);
        }
        return;
      }
      type$.void_Function_int_dynamic._as(bodyFunctionOrErrorCode);
      if (object instanceof A._IterationMarker) {
        if (controller.cancelationFuture != null) {
          bodyFunctionOrErrorCode.call$2(2, null);
          return;
        }
        t1 = object.state;
        if (t1 === 0) {
          t1 = object.value;
          t2 = controller.___AsyncStarStreamController_controller_A;
          t2 === $ && A.throwLateFieldNI(_s10_);
          t2.add$1(0, controller.$ti._precomputed1._as(t1));
          A.scheduleMicrotask(new A._asyncStarHelper_closure(controller, bodyFunctionOrErrorCode));
          return;
        } else if (t1 === 1) {
          t1 = controller.$ti._eval$1("Stream<1>")._as(type$.Stream_dynamic._as(object.value));
          t2 = controller.___AsyncStarStreamController_controller_A;
          t2 === $ && A.throwLateFieldNI(_s10_);
          t2.addStream$2$cancelOnError(t1, false).then$1$1(new A._asyncStarHelper_closure0(controller, bodyFunctionOrErrorCode), type$.Null);
          return;
        }
      }
      A._awaitOnObject(object, bodyFunctionOrErrorCode);
    },
    _streamOfController(controller) {
      var t1 = controller.___AsyncStarStreamController_controller_A;
      t1 === $ && A.throwLateFieldNI("controller");
      return new A._ControllerStream(t1, A._instanceType(t1)._eval$1("_ControllerStream<1>"));
    },
    _AsyncStarStreamController$(body, $T) {
      var t1 = new A._AsyncStarStreamController($T._eval$1("_AsyncStarStreamController<0>"));
      t1._AsyncStarStreamController$1(body, $T);
      return t1;
    },
    _makeAsyncStarStreamController(body, $T) {
      return A._AsyncStarStreamController$(body, $T);
    },
    _IterationMarker_yieldStar(values) {
      return new A._IterationMarker(values, 1);
    },
    _IterationMarker_endOfIteration() {
      return B._IterationMarker_null_2;
    },
    _IterationMarker_yieldSingle(value) {
      return new A._IterationMarker(value, 0);
    },
    _IterationMarker_uncaughtError(error) {
      return new A._IterationMarker(error, 3);
    },
    _makeSyncStarIterable(body, $T) {
      return new A._SyncStarIterable(body, $T._eval$1("_SyncStarIterable<0>"));
    },
    AsyncError$(error, stackTrace) {
      var t1 = A.checkNotNullable(error, "error", type$.Object);
      return new A.AsyncError(t1, stackTrace == null ? A.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B._StringStackTrace_3uE;
    },
    Future_Future$value(value, $T) {
      var t1, t2;
      if (value == null) {
        $T._as(value);
        t1 = value;
      } else
        t1 = value;
      t2 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t2._asyncComplete$1(t1);
      return t2;
    },
    Future_Future$delayed(duration, computation, $T) {
      var t1, result;
      if (computation == null)
        t1 = !$T._is(null);
      else
        t1 = false;
      if (t1)
        throw A.wrapException(A.ArgumentError$value(null, "computation", "The type parameter is not nullable"));
      result = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      A.Timer_Timer(duration, new A.Future_Future$delayed_closure(computation, result, $T));
      return result;
    },
    Future_wait(futures, $T) {
      var error, stackTrace, handleError, future, pos, e, st, t2, _i, t3, exception, replacement, _box_0 = {}, cleanUp = null,
        eagerError = false,
        t1 = $T._eval$1("_Future<List<0>>"),
        _future = new A._Future($.Zone__current, t1);
      _box_0.values = null;
      _box_0.remaining = 0;
      error = A._Cell$named("error");
      stackTrace = A._Cell$named("stackTrace");
      handleError = new A.Future_wait_handleError(_box_0, cleanUp, eagerError, _future, error, stackTrace);
      try {
        for (t2 = type$.Null, _i = 0, t3 = 0; _i < 2; ++_i) {
          future = futures[_i];
          pos = t3;
          future.then$1$2$onError(new A.Future_wait_closure(_box_0, pos, _future, cleanUp, eagerError, error, stackTrace, $T), handleError, t2);
          t3 = ++_box_0.remaining;
        }
        if (t3 === 0) {
          t2 = _future;
          t2._completeWithValue$1(A._setArrayType([], $T._eval$1("JSArray<0>")));
          return t2;
        }
        _box_0.values = A.List_List$filled(t3, null, false, $T._eval$1("0?"));
      } catch (exception) {
        e = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        if (_box_0.remaining === 0 || A.boolConversionCheck(eagerError)) {
          error = e;
          stackTrace = st;
          A.checkNotNullable(error, "error", type$.Object);
          t2 = $.Zone__current;
          if (t2 !== B.C__RootZone) {
            replacement = t2.errorCallback$2(error, stackTrace);
            if (replacement != null) {
              error = replacement.error;
              stackTrace = replacement.stackTrace;
            }
          }
          if (stackTrace == null)
            stackTrace = A.AsyncError_defaultStackTrace(error);
          t1 = new A._Future($.Zone__current, t1);
          t1._asyncCompleteError$2(error, stackTrace);
          return t1;
        } else {
          error.__late_helper$_value = e;
          stackTrace.__late_helper$_value = st;
        }
      }
      return _future;
    },
    _completeWithErrorCallback(result, error, stackTrace) {
      var replacement = $.Zone__current.errorCallback$2(error, stackTrace);
      if (replacement != null) {
        error = replacement.error;
        stackTrace = replacement.stackTrace;
      } else if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      result._completeError$2(error, stackTrace);
    },
    _Future__chainCoreFuture(source, target) {
      var t1, t2, listeners;
      for (t1 = type$._Future_dynamic; t2 = source._state, (t2 & 4) !== 0;)
        source = t1._as(source._resultOrListeners);
      if ((t2 & 24) !== 0) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(source);
        A._Future__propagateToListeners(target, listeners);
      } else {
        listeners = type$.nullable__FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._state = target._state & 1 | 4;
        target._resultOrListeners = source;
        source._prependListeners$1(listeners);
      }
    },
    _Future__propagateToListeners(source, listeners) {
      var t2, t3, t4, _box_0, t5, t6, hasError, asyncError, nextListener, nextListener0, sourceResult, t7, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.AsyncError, t3 = type$.nullable__FutureListener_dynamic_dynamic, t4 = type$.Future_dynamic; true;) {
        _box_0 = {};
        t5 = t1._state;
        t6 = (t5 & 16) === 0;
        hasError = !t6;
        if (listeners == null) {
          if (hasError && (t5 & 1) === 0) {
            asyncError = t2._as(t1._resultOrListeners);
            t1._zone.handleUncaughtError$2(asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t5 = _box_1.source;
        sourceResult = t5._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t6) {
          t7 = t1.state;
          t7 = (t7 & 1) !== 0 || (t7 & 15) === 8;
        } else
          t7 = true;
        if (t7) {
          zone = t1.result._zone;
          if (hasError) {
            t1 = t5._zone;
            t1 = !(t1 === zone || t1.get$errorZone() === zone.get$errorZone());
          } else
            t1 = false;
          if (t1) {
            t1 = _box_1.source;
            asyncError = t2._as(t1._resultOrListeners);
            t1._zone.handleUncaughtError$2(asyncError.error, asyncError.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = _box_0.listener.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t6) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t4._is(t1)) {
            t5 = _box_0.listener.$ti;
            t5 = t5._eval$1("Future<2>")._is(t1) || !t5._rest[1]._is(t1);
          } else
            t5 = false;
          if (t5) {
            t4._as(t1);
            result = _box_0.listener.result;
            if ((t1._state & 24) !== 0) {
              current = t3._as(result._resultOrListeners);
              result._resultOrListeners = null;
              listeners = result._reverseListeners$1(current);
              result._state = t1._state & 30 | result._state & 1;
              result._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              A._Future__chainCoreFuture(t1, result);
            return;
          }
        }
        result = _box_0.listener.result;
        current = t3._as(result._resultOrListeners);
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t5 = _box_0.listenerValueOrError;
        if (!t1) {
          result.$ti._precomputed1._as(t5);
          result._state = 8;
          result._resultOrListeners = t5;
        } else {
          t2._as(t5);
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t5;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$3$1(errorHandler, type$.dynamic, type$.Object, type$.StackTrace);
      if (type$.dynamic_Function_Object._is(errorHandler))
        return zone.registerUnaryCallback$2$1(errorHandler, type$.dynamic, type$.Object);
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var t1, _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      if (B.C__RootZone === currentZone.get$_scheduleMicrotask().zone)
        t1 = B.C__RootZone.get$errorZone() === currentZone.get$errorZone();
      else
        t1 = false;
      if (t1) {
        A._rootScheduleMicrotask(_null, _null, currentZone, currentZone.registerCallback$1$1(callback, type$.void));
        return;
      }
      t1 = $.Zone__current;
      t1.scheduleMicrotask$1(t1.bindCallbackGuarded$1(callback));
    },
    Stream_Stream$value(value, $T) {
      var _null = null,
        t1 = $T._eval$1("_AsyncStreamController<0>"),
        t2 = new A._AsyncStreamController(_null, _null, _null, _null, t1);
      t2._async$_add$1(0, value);
      t2._closeUnchecked$0();
      return new A._ControllerStream(t2, t1._eval$1("_ControllerStream<1>"));
    },
    StreamIterator_StreamIterator(stream, $T) {
      A.checkNotNullable(stream, "stream", type$.Object);
      return new A._StreamIterator($T._eval$1("_StreamIterator<0>"));
    },
    StreamController_StreamController(onCancel, onListen, onResume, sync, $T) {
      return sync ? new A._SyncStreamController(onListen, null, onResume, onCancel, $T._eval$1("_SyncStreamController<0>")) : new A._AsyncStreamController(onListen, null, onResume, onCancel, $T._eval$1("_AsyncStreamController<0>"));
    },
    _runGuarded(notificationHandler) {
      var e, s, exception;
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        $.Zone__current.handleUncaughtError$2(e, s);
      }
    },
    _ControllerSubscription$(_controller, onData, onError, onDone, cancelOnError, $T) {
      var t1 = $.Zone__current,
        t2 = cancelOnError ? 1 : 0;
      return new A._ControllerSubscription(_controller, A._BufferingStreamSubscription__registerDataHandler(t1, onData, $T), A._BufferingStreamSubscription__registerErrorHandler(t1, onError), A._BufferingStreamSubscription__registerDoneHandler(t1, onDone), t1, t2, $T._eval$1("_ControllerSubscription<0>"));
    },
    _BufferingStreamSubscription__registerDataHandler(zone, handleData, $T) {
      var t1 = handleData == null ? A.async___nullDataHandler$closure() : handleData;
      return zone.registerUnaryCallback$2$1(t1, type$.void, $T);
    },
    _BufferingStreamSubscription__registerErrorHandler(zone, handleError) {
      if (handleError == null)
        handleError = A.async___nullErrorHandler$closure();
      if (type$.void_Function_Object_StackTrace._is(handleError))
        return zone.registerBinaryCallback$3$1(handleError, type$.dynamic, type$.Object, type$.StackTrace);
      if (type$.void_Function_Object._is(handleError))
        return zone.registerUnaryCallback$2$1(handleError, type$.dynamic, type$.Object);
      throw A.wrapException(A.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace.", null));
    },
    _BufferingStreamSubscription__registerDoneHandler(zone, handleDone) {
      var t1 = handleDone == null ? A.async___nullDoneHandler$closure() : handleDone;
      return zone.registerCallback$1$1(t1, type$.void);
    },
    _nullDataHandler(value) {
    },
    _nullErrorHandler(error, stackTrace) {
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      $.Zone__current.handleUncaughtError$2(error, stackTrace);
    },
    _nullDoneHandler() {
    },
    _DoneStreamSubscription$(_onDone, $T) {
      var t1 = new A._DoneStreamSubscription($.Zone__current, _onDone, $T._eval$1("_DoneStreamSubscription<0>"));
      t1._schedule$0();
      return t1;
    },
    _cancelAndValue(subscription, future, value) {
      var cancelFuture = subscription.cancel$0(),
        t1 = $.$get$Future__nullFuture();
      if (cancelFuture !== t1)
        cancelFuture.whenComplete$1(new A._cancelAndValue_closure(future, value));
      else
        future._complete$1(value);
    },
    Timer_Timer(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return t1.createTimer$2(duration, callback);
      return t1.createTimer$2(duration, t1.bindCallbackGuarded$1(callback));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f, $R) {
      var old, t1;
      type$.nullable_Zone._as($self);
      type$.nullable_ZoneDelegate._as($parent);
      type$.Zone._as(zone);
      $R._eval$1("0()")._as(f);
      t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg, $R, $T) {
      var old, t1;
      type$.nullable_Zone._as($self);
      type$.nullable_ZoneDelegate._as($parent);
      type$.Zone._as(zone);
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old, t1;
      type$.nullable_Zone._as($self);
      type$.nullable_ZoneDelegate._as($parent);
      type$.Zone._as(zone);
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      var t1, t2;
      type$.void_Function._as(f);
      if (B.C__RootZone !== zone) {
        t1 = B.C__RootZone.get$errorZone();
        t2 = zone.get$errorZone();
        f = t1 !== t2 ? zone.bindCallbackGuarded$1(f) : zone.bindCallback$1$1(f, type$.void);
      }
      A._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl() {
      this._tick = 0;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _asyncStarHelper_closure: function _asyncStarHelper_closure(t0, t1) {
      this.controller = t0;
      this.bodyFunction = t1;
    },
    _asyncStarHelper_closure0: function _asyncStarHelper_closure0(t0, t1) {
      this.controller = t0;
      this.bodyFunction = t1;
    },
    _AsyncStarStreamController: function _AsyncStarStreamController(t0) {
      var _ = this;
      _.___AsyncStarStreamController_controller_A = $;
      _.isSuspended = false;
      _.cancelationFuture = null;
      _.$ti = t0;
    },
    _AsyncStarStreamController__resumeBody: function _AsyncStarStreamController__resumeBody(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController__resumeBody_closure: function _AsyncStarStreamController__resumeBody_closure(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController_closure0: function _AsyncStarStreamController_closure0(t0) {
      this._resumeBody = t0;
    },
    _AsyncStarStreamController_closure1: function _AsyncStarStreamController_closure1(t0, t1) {
      this.$this = t0;
      this._resumeBody = t1;
    },
    _AsyncStarStreamController_closure: function _AsyncStarStreamController_closure(t0, t1) {
      this.$this = t0;
      this.body = t1;
    },
    _AsyncStarStreamController__closure: function _AsyncStarStreamController__closure(t0) {
      this.body = t0;
    },
    _IterationMarker: function _IterationMarker(t0, t1) {
      this.value = t0;
      this.state = t1;
    },
    _SyncStarIterator: function _SyncStarIterator(t0, t1) {
      var _ = this;
      _._body = t0;
      _._suspendedBodies = _._nestedIterator = _._async$_current = null;
      _.$ti = t1;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _BroadcastSubscription: function _BroadcastSubscription(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._eventState = 0;
      _._async$_previous = _._async$_next = null;
      _._controller = t0;
      _._async$_onData = t1;
      _._onError = t2;
      _._onDone = t3;
      _._zone = t4;
      _._state = t5;
      _._pending = _._cancelFuture = null;
      _.$ti = t6;
    },
    _BroadcastStreamController: function _BroadcastStreamController() {
    },
    _AsyncBroadcastStreamController: function _AsyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._addStreamState = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    Future_Future$delayed_closure: function Future_Future$delayed_closure(t0, t1, t2) {
      this.computation = t0;
      this.result = t1;
      this.T = t2;
    },
    Future_wait_handleError: function Future_wait_handleError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.cleanUp = t1;
      _.eagerError = t2;
      _._future = t3;
      _.error = t4;
      _.stackTrace = t5;
    },
    Future_wait_closure: function Future_wait_closure(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._box_0 = t0;
      _.pos = t1;
      _._future = t2;
      _.cleanUp = t3;
      _.eagerError = t4;
      _.error = t5;
      _.stackTrace = t6;
      _.T = t7;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__chainFuture_closure: function _Future__chainFuture_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    Stream_first_closure: function Stream_first_closure(t0) {
      this.future = t0;
    },
    Stream_first_closure0: function Stream_first_closure0(t0, t1, t2) {
      this.$this = t0;
      this.subscription = t1;
      this.future = t2;
    },
    StreamSubscription: function StreamSubscription() {
    },
    StreamView: function StreamView() {
    },
    StreamTransformerBase: function StreamTransformerBase() {
    },
    _StreamController: function _StreamController() {
    },
    _StreamController__subscribe_closure: function _StreamController__subscribe_closure(t0) {
      this.$this = t0;
    },
    _StreamController__recordCancel_complete: function _StreamController__recordCancel_complete(t0) {
      this.$this = t0;
    },
    _SyncStreamControllerDispatch: function _SyncStreamControllerDispatch() {
    },
    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {
    },
    _AsyncStreamController: function _AsyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _SyncStreamController: function _SyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _ControllerStream: function _ControllerStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._controller = t0;
      _._async$_onData = t1;
      _._onError = t2;
      _._onDone = t3;
      _._zone = t4;
      _._state = t5;
      _._pending = _._cancelFuture = null;
      _.$ti = t6;
    },
    _StreamSinkWrapper: function _StreamSinkWrapper(t0, t1) {
      this._async$_target = t0;
      this.$ti = t1;
    },
    _AddStreamState: function _AddStreamState() {
    },
    _AddStreamState_cancel_closure: function _AddStreamState_cancel_closure(t0) {
      this.$this = t0;
    },
    _StreamControllerAddStreamState: function _StreamControllerAddStreamState(t0, t1, t2, t3) {
      var _ = this;
      _.varData = t0;
      _.addStreamFuture = t1;
      _.addSubscription = t2;
      _.$ti = t3;
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _BufferingStreamSubscription__sendError_sendError: function _BufferingStreamSubscription__sendError_sendError(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0, t1) {
      this.value = t0;
      this.next = null;
      this.$ti = t1;
    },
    _DelayedError: function _DelayedError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
      this.next = null;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents(t0) {
      var _ = this;
      _._state = 0;
      _.lastPendingEvent = _.firstPendingEvent = null;
      _.$ti = t0;
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _DoneStreamSubscription: function _DoneStreamSubscription(t0, t1, t2) {
      var _ = this;
      _._zone = t0;
      _._state = 0;
      _._onDone = t1;
      _.$ti = t2;
    },
    _StreamIterator: function _StreamIterator(t0) {
      this.$ti = t0;
    },
    _EmptyStream: function _EmptyStream(t0) {
      this.$ti = t0;
    },
    _cancelAndValue_closure: function _cancelAndValue_closure(t0, t1) {
      this.future = t0;
      this.value = t1;
    },
    _ZoneFunction: function _ZoneFunction(t0, t1, t2) {
      this.zone = t0;
      this.$function = t1;
      this.$ti = t2;
    },
    _Zone: function _Zone() {
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallback_closure: function _RootZone_bindCallback_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.R = t2;
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    _RootZone_bindBinaryCallbackGuarded_closure: function _RootZone_bindBinaryCallbackGuarded_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.f = t1;
      _.T1 = t2;
      _.T2 = t3;
    },
    LinkedHashMap_LinkedHashMap(equals, hashCode, isValidKey, $K, $V) {
      if (isValidKey == null)
        if (hashCode == null) {
          if (equals == null)
            return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
          hashCode = A.collection___defaultHashCode$closure();
        } else {
          if (A.core__identityHashCode$closure() === hashCode && A.core__identical$closure() === equals)
            return new A._LinkedIdentityHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_LinkedIdentityHashMap<1,2>"));
          if (equals == null)
            equals = A.collection___defaultEquals$closure();
        }
      else {
        if (hashCode == null)
          hashCode = A.collection___defaultHashCode$closure();
        if (equals == null)
          equals = A.collection___defaultEquals$closure();
      }
      return A._LinkedCustomHashMap$(equals, hashCode, isValidKey, $K, $V);
    },
    LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
      return $K._eval$1("@<0>")._bind$1($V)._eval$1("LinkedHashMap<1,2>")._as(A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"))));
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    _LinkedCustomHashMap$(_equals, _hashCode, validKey, $K, $V) {
      var t1 = validKey != null ? validKey : new A._LinkedCustomHashMap_closure($K);
      return new A._LinkedCustomHashMap(_equals, _hashCode, t1, $K._eval$1("@<0>")._bind$1($V)._eval$1("_LinkedCustomHashMap<1,2>"));
    },
    LinkedHashSet_LinkedHashSet($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_empty($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    _LinkedHashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedHashSetIterator$(_set, _modifications, $E) {
      var t1 = new A._LinkedHashSetIterator(_set, _modifications, $E._eval$1("_LinkedHashSetIterator<0>"));
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    _defaultEquals(a, b) {
      return J.$eq$(a, b);
    },
    _defaultHashCode(a) {
      return J.get$hashCode$(a);
    },
    IterableBase_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      B.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      B.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting(o) {
      var t1, i;
      for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)
        if (o === $._toStringVisiting[i])
          return true;
      return false;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current());
        B.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            B.JSArray_methods.add$1(parts, A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          if (0 >= parts.length)
            return A.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return A.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              B.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        B.JSArray_methods.add$1(parts, elision);
      B.JSArray_methods.add$1(parts, penultimateString);
      B.JSArray_methods.add$1(parts, ultimateString);
    },
    LinkedHashMap_LinkedHashMap$from(other, $K, $V) {
      var result = A.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
      other.forEach$1(0, new A.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    LinkedHashMap_LinkedHashMap$fromIterables(keys, values, $K, $V) {
      var map = A.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
      A.MapBase__fillMapWithIterables(map, keys, values);
      return map;
    },
    LinkedHashSet_LinkedHashSet$of(elements, $E) {
      var t1 = A.LinkedHashSet_LinkedHashSet($E);
      t1.addAll$1(0, elements);
      return t1;
    },
    ListMixin__compareAny(a, b) {
      var t1 = type$.Comparable_dynamic;
      return J.compareTo$1$ns(t1._as(a), t1._as(b));
    },
    MapBase_mapToString(m) {
      var result, t1 = {};
      if (A._isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        B.JSArray_methods.add$1($._toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        m.forEach$1(0, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    MapBase__fillMapWithIterables(map, keys, values) {
      var keyIterator = keys.get$iterator(keys),
        valueIterator = values.get$iterator(values),
        hasNextKey = keyIterator.moveNext$0(),
        hasNextValue = valueIterator.moveNext$0();
      while (true) {
        if (!(hasNextKey && hasNextValue))
          break;
        map.$indexSet(0, keyIterator.get$current(), valueIterator.get$current());
        hasNextKey = keyIterator.moveNext$0();
        hasNextValue = valueIterator.moveNext$0();
      }
      if (hasNextKey || hasNextValue)
        throw A.wrapException(A.ArgumentError$("Iterables do not have same length.", null));
    },
    ListQueue$($E) {
      return new A.ListQueue(A.List_List$filled(A.ListQueue__calculateCapacity(null), null, false, $E._eval$1("0?")), $E._eval$1("ListQueue<0>"));
    },
    ListQueue__calculateCapacity(initialCapacity) {
      return 8;
    },
    _LinkedIdentityHashMap: function _LinkedIdentityHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    _LinkedCustomHashMap: function _LinkedCustomHashMap(t0, t1, t2, t3) {
      var _ = this;
      _._equals = t0;
      _._hashCode = t1;
      _._validKey = t2;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t3;
    },
    _LinkedCustomHashMap_closure: function _LinkedCustomHashMap_closure(t0) {
      this.K = t0;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._collection$_element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
      _.$ti = t2;
    },
    IterableBase: function IterableBase() {
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    ListBase: function ListBase() {
    },
    ListMixin: function ListMixin() {
    },
    MapBase: function MapBase() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    MapMixin: function MapMixin() {
    },
    MapMixin_entries_closure: function MapMixin_entries_closure(t0) {
      this.$this = t0;
    },
    _MapBaseValueIterable: function _MapBaseValueIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _MapBaseValueIterator: function _MapBaseValueIterator(t0, t1, t2) {
      var _ = this;
      _._keys = t0;
      _._collection$_map = t1;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ListQueue: function ListQueue(t0, t1) {
      var _ = this;
      _._table = t0;
      _._modificationCount = _._tail = _._head = 0;
      _.$ti = t1;
    },
    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._queue = t0;
      _._collection$_end = t1;
      _._modificationCount = t2;
      _._collection$_position = t3;
      _._collection$_current = null;
      _.$ti = t4;
    },
    SetMixin: function SetMixin() {
    },
    SetBase: function SetBase() {
    },
    _SetBase: function _SetBase() {
    },
    _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {
    },
    _SetBase_Object_SetMixin: function _SetBase_Object_SetMixin() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    __SetBase_Object_SetMixin: function __SetBase_Object_SetMixin() {
    },
    _parseJson(source, reviver) {
      var e, exception, t1, parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.FormatException$(String(e), null, null);
        throw A.wrapException(t1);
      }
      t1 = A._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new A._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = A._convertJsonToDartLazy(object[i]);
      return object;
    },
    Utf8Decoder__convertIntercepted(allowMalformed, codeUnits, start, end) {
      var casted, result;
      if (codeUnits instanceof Uint8Array) {
        casted = codeUnits;
        end = casted.length;
        if (end - start < 15)
          return null;
        result = A.Utf8Decoder__convertInterceptedUint8List(allowMalformed, casted, start, end);
        if (result != null && allowMalformed)
          if (result.indexOf("\ufffd") >= 0)
            return null;
        return result;
      }
      return null;
    },
    Utf8Decoder__convertInterceptedUint8List(allowMalformed, codeUnits, start, end) {
      var decoder = allowMalformed ? $.$get$Utf8Decoder__decoderNonfatal() : $.$get$Utf8Decoder__decoder();
      if (decoder == null)
        return null;
      if (0 === start && end === codeUnits.length)
        return A.Utf8Decoder__useTextDecoder(decoder, codeUnits);
      return A.Utf8Decoder__useTextDecoder(decoder, codeUnits.subarray(start, A.RangeError_checkValidRange(start, end, codeUnits.length)));
    },
    Utf8Decoder__useTextDecoder(decoder, codeUnits) {
      var t1, exception;
      try {
        t1 = decoder.decode(codeUnits);
        return t1;
      } catch (exception) {
      }
      return null;
    },
    Base64Codec__checkPadding(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (B.JSInt_methods.$mod($length, 4) !== 0)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    _Base64Encoder_encodeChunk(alphabet, bytes, start, end, isLast, output, outputIndex, state) {
      var t1, t2, i, byteOr, byte, outputIndex0, t3, outputIndex1,
        bits = state >>> 2,
        expectedChars = 3 - (state & 3);
      for (t1 = J.getInterceptor$asx(bytes), t2 = output.length, i = start, byteOr = 0; i < end; ++i) {
        byte = t1.$index(bytes, i);
        byteOr = (byteOr | byte) >>> 0;
        bits = (bits << 8 | byte) & 16777215;
        --expectedChars;
        if (expectedChars === 0) {
          outputIndex0 = outputIndex + 1;
          t3 = B.JSString_methods._codeUnitAt$1(alphabet, bits >>> 18 & 63);
          if (!(outputIndex < t2))
            return A.ioore(output, outputIndex);
          output[outputIndex] = t3;
          outputIndex = outputIndex0 + 1;
          t3 = B.JSString_methods._codeUnitAt$1(alphabet, bits >>> 12 & 63);
          if (!(outputIndex0 < t2))
            return A.ioore(output, outputIndex0);
          output[outputIndex0] = t3;
          outputIndex0 = outputIndex + 1;
          t3 = B.JSString_methods._codeUnitAt$1(alphabet, bits >>> 6 & 63);
          if (!(outputIndex < t2))
            return A.ioore(output, outputIndex);
          output[outputIndex] = t3;
          outputIndex = outputIndex0 + 1;
          t3 = B.JSString_methods._codeUnitAt$1(alphabet, bits & 63);
          if (!(outputIndex0 < t2))
            return A.ioore(output, outputIndex0);
          output[outputIndex0] = t3;
          bits = 0;
          expectedChars = 3;
        }
      }
      if (byteOr >= 0 && byteOr <= 255) {
        if (expectedChars < 3) {
          outputIndex0 = outputIndex + 1;
          outputIndex1 = outputIndex0 + 1;
          if (3 - expectedChars === 1) {
            t1 = B.JSString_methods._codeUnitAt$1(alphabet, bits >>> 2 & 63);
            if (!(outputIndex < t2))
              return A.ioore(output, outputIndex);
            output[outputIndex] = t1;
            t1 = B.JSString_methods._codeUnitAt$1(alphabet, bits << 4 & 63);
            if (!(outputIndex0 < t2))
              return A.ioore(output, outputIndex0);
            output[outputIndex0] = t1;
            outputIndex = outputIndex1 + 1;
            if (!(outputIndex1 < t2))
              return A.ioore(output, outputIndex1);
            output[outputIndex1] = 61;
            if (!(outputIndex < t2))
              return A.ioore(output, outputIndex);
            output[outputIndex] = 61;
          } else {
            t1 = B.JSString_methods._codeUnitAt$1(alphabet, bits >>> 10 & 63);
            if (!(outputIndex < t2))
              return A.ioore(output, outputIndex);
            output[outputIndex] = t1;
            t1 = B.JSString_methods._codeUnitAt$1(alphabet, bits >>> 4 & 63);
            if (!(outputIndex0 < t2))
              return A.ioore(output, outputIndex0);
            output[outputIndex0] = t1;
            outputIndex = outputIndex1 + 1;
            t1 = B.JSString_methods._codeUnitAt$1(alphabet, bits << 2 & 63);
            if (!(outputIndex1 < t2))
              return A.ioore(output, outputIndex1);
            output[outputIndex1] = t1;
            if (!(outputIndex < t2))
              return A.ioore(output, outputIndex);
            output[outputIndex] = 61;
          }
          return 0;
        }
        return (bits << 2 | 3 - expectedChars) >>> 0;
      }
      for (i = start; i < end;) {
        byte = t1.$index(bytes, i);
        if (byte < 0 || byte > 255)
          break;
        ++i;
      }
      throw A.wrapException(A.ArgumentError$value(bytes, "Not a byte value at index " + i + ": 0x" + J.toRadixString$1$n(t1.$index(bytes, i), 16), null));
    },
    Encoding_getByName($name) {
      return $.$get$Encoding__nameToEncoding().$index(0, $name.toLowerCase());
    },
    JsonUnsupportedObjectError$(unsupportedObject, cause, partialResult) {
      return new A.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    JsonUtf8Encoder$(indent, toEncodable, bufferSize) {
      var t1 = A.JsonUtf8Encoder__utf8Encode(indent);
      return new A.JsonUtf8Encoder(t1, toEncodable, 256);
    },
    JsonUtf8Encoder__utf8Encode(string) {
      return null;
    },
    _defaultToEncodable(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier$(_sink, _toEncodable) {
      return new A._JsonStringStringifier(_sink, [], A.convert___defaultToEncodable$closure());
    },
    _JsonStringStringifier_stringify(object, toEncodable, indent) {
      var t1,
        output = new A.StringBuffer(""),
        stringifier = A._JsonStringStringifier$(output, toEncodable);
      stringifier.writeObject$1(object);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _JsonUtf8Stringifier$(toEncodable, bufferSize, addChunk) {
      var t1 = new Uint8Array(bufferSize),
        t2 = toEncodable == null ? A.convert___defaultToEncodable$closure() : toEncodable;
      return new A._JsonUtf8Stringifier(bufferSize, addChunk, t1, [], t2);
    },
    _Utf8Decoder_errorDescription(state) {
      switch (state) {
        case 65:
          return "Missing extension byte";
        case 67:
          return "Unexpected extension byte";
        case 69:
          return "Invalid UTF-8 byte";
        case 71:
          return "Overlong encoding";
        case 73:
          return "Out of unicode range";
        case 75:
          return "Encoded surrogate";
        case 77:
          return "Unfinished UTF-8 octet sequence";
        default:
          return "";
      }
    },
    _Utf8Decoder__makeUint8List(codeUnits, start, end) {
      var t1, i, b,
        $length = end - start,
        bytes = new Uint8Array($length);
      for (t1 = J.getInterceptor$asx(codeUnits), i = 0; i < $length; ++i) {
        b = t1.$index(codeUnits, start + i);
        if ((b & 4294967040) >>> 0 !== 0)
          b = 255;
        if (!(i < $length))
          return A.ioore(bytes, i);
        bytes[i] = b;
      }
      return bytes;
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._data = null;
    },
    _JsonMap_values_closure: function _JsonMap_values_closure(t0) {
      this.$this = t0;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._parent = t0;
    },
    Utf8Decoder__decoder_closure: function Utf8Decoder__decoder_closure() {
    },
    Utf8Decoder__decoderNonfatal_closure: function Utf8Decoder__decoderNonfatal_closure() {
    },
    AsciiCodec: function AsciiCodec() {
    },
    _UnicodeSubsetEncoder: function _UnicodeSubsetEncoder() {
    },
    AsciiEncoder: function AsciiEncoder(t0) {
      this._subsetMask = t0;
    },
    _UnicodeSubsetDecoder: function _UnicodeSubsetDecoder() {
    },
    AsciiDecoder: function AsciiDecoder(t0, t1) {
      this._allowInvalid = t0;
      this._subsetMask = t1;
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    _Base64Encoder: function _Base64Encoder(t0) {
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    ByteConversionSink: function ByteConversionSink() {
    },
    ByteConversionSinkBase: function ByteConversionSinkBase() {
    },
    _ByteCallbackSink: function _ByteCallbackSink(t0, t1) {
      this._callback = t0;
      this._convert$_buffer = t1;
      this._bufferIndex = 0;
    },
    ChunkedConversionSink: function ChunkedConversionSink() {
    },
    Codec: function Codec() {
    },
    _FusedCodec: function _FusedCodec(t0, t1, t2) {
      this._convert$_first = t0;
      this._second = t1;
      this.$ti = t2;
    },
    Converter: function Converter() {
    },
    _FusedConverter: function _FusedConverter(t0, t1, t2) {
      this._convert$_first = t0;
      this._second = t1;
      this.$ti = t2;
    },
    Encoding: function Encoding() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0) {
      this._toEncodable = t0;
    },
    JsonUtf8Encoder: function JsonUtf8Encoder(t0, t1, t2) {
      this._indent = t0;
      this._toEncodable = t1;
      this._bufferSize = t2;
    },
    JsonUtf8Encoder_convert_addChunk: function JsonUtf8Encoder_convert_addChunk(t0) {
      this.bytes = t0;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonPrettyPrintMixin: function _JsonPrettyPrintMixin() {
    },
    _JsonPrettyPrintMixin_writeMap_closure: function _JsonPrettyPrintMixin_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    _JsonUtf8Stringifier: function _JsonUtf8Stringifier(t0, t1, t2, t3, t4) {
      var _ = this;
      _.bufferSize = t0;
      _.addChunk = t1;
      _.buffer = t2;
      _.index = 0;
      _._seen = t3;
      _._toEncodable = t4;
    },
    _JsonUtf8StringifierPretty: function _JsonUtf8StringifierPretty(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.indent = t0;
      _._JsonPrettyPrintMixin__indentLevel = t1;
      _.bufferSize = t2;
      _.addChunk = t3;
      _.buffer = t4;
      _.index = 0;
      _._seen = t5;
      _._toEncodable = t6;
    },
    Latin1Codec: function Latin1Codec() {
    },
    Latin1Encoder: function Latin1Encoder(t0) {
      this._subsetMask = t0;
    },
    Latin1Decoder: function Latin1Decoder(t0, t1) {
      this._allowInvalid = t0;
      this._subsetMask = t1;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = 0;
      this._convert$_buffer = t0;
    },
    Utf8Decoder: function Utf8Decoder(t0) {
      this._allowMalformed = t0;
    },
    _Utf8Decoder: function _Utf8Decoder(t0) {
      this.allowMalformed = t0;
      this._convert$_state = 16;
      this._charOrIndex = 0;
    },
    __JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin: function __JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin() {
    },
    _symbolMapToStringMap(map) {
      var result = new A.JsLinkedHashMap(type$.JsLinkedHashMap_String_dynamic);
      map.forEach$1(0, new A._symbolMapToStringMap_closure(result));
      return result;
    },
    identityHashCode(object) {
      return A.objectHashCode(object);
    },
    Function_apply($function, positionalArguments, namedArguments) {
      return A.Primitives_applyFunction($function, positionalArguments, namedArguments == null ? null : A._symbolMapToStringMap(namedArguments));
    },
    Expando$($T) {
      return new A.Expando(new WeakMap(), $T._eval$1("Expando<0>"));
    },
    Expando__checkType(object) {
      if (A._isBool(object) || typeof object == "number" || typeof object == "string")
        throw A.wrapException(A.ArgumentError$value(object, string$.Expand, null));
    },
    int_parse(source, radix) {
      var value = A.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$(source, null, null));
    },
    double_parse(source) {
      var value = A.Primitives_parseDouble(source);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$("Invalid double", source, null));
    },
    Error__objectToString(object) {
      if (object instanceof A.Closure)
        return object.toString$0(0);
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    Error__throw(error, stackTrace) {
      error = A.wrapException(error);
      if (error == null)
        error = type$.Object._as(error);
      error.stack = stackTrace.toString$0(0);
      throw error;
      throw A.wrapException("unreachable");
    },
    DateTime$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc) {
      var t1;
      if (Math.abs(millisecondsSinceEpoch) <= 864e13)
        t1 = false;
      else
        t1 = true;
      if (t1)
        A.throwExpression(A.ArgumentError$("DateTime is outside valid range: " + millisecondsSinceEpoch, null));
      A.checkNotNullable(isUtc, "isUtc", type$.bool);
      return new A.DateTime(millisecondsSinceEpoch, isUtc);
    },
    List_List$filled($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from(elements, growable, $E) {
      var t1,
        list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, $E._as(t1.get$current()));
      if (growable)
        return list;
      return J.JSArray_markFixedList(list, $E);
    },
    List_List$of(elements, growable, $E) {
      var t1;
      if (growable)
        return A.List_List$_of(elements, $E);
      t1 = J.JSArray_markFixedList(A.List_List$_of(elements, $E), $E);
      return t1;
    },
    List_List$_of(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, t1.get$current());
      return list;
    },
    List_List$unmodifiable(elements, $E) {
      return J.JSArray_markUnmodifiableList(A.List_List$from(elements, false, $E));
    },
    String_String$fromCharCodes(charCodes, start, end) {
      var array, len;
      if (Array.isArray(charCodes)) {
        array = charCodes;
        len = array.length;
        end = A.RangeError_checkValidRange(start, end, len);
        return A.Primitives_stringFromCharCodes(start > 0 || end < len ? array.slice(start, end) : array);
      }
      if (type$.NativeUint8List._is(charCodes))
        return A.Primitives_stringFromNativeUint8List(charCodes, start, A.RangeError_checkValidRange(start, end, charCodes.length));
      return A.String__stringFromIterable(charCodes, start, end);
    },
    String_String$fromCharCode(charCode) {
      return A.Primitives_stringFromCharCode(charCode);
    },
    String__stringFromIterable(charCodes, start, end) {
      var t1, it, i, list, _null = null;
      if (start < 0)
        throw A.wrapException(A.RangeError$range(start, 0, J.get$length$asx(charCodes), _null, _null));
      t1 = end == null;
      if (!t1 && end < start)
        throw A.wrapException(A.RangeError$range(end, start, J.get$length$asx(charCodes), _null, _null));
      it = J.get$iterator$ax(charCodes);
      for (i = 0; i < start; ++i)
        if (!it.moveNext$0())
          throw A.wrapException(A.RangeError$range(start, 0, i, _null, _null));
      list = [];
      if (t1)
        for (; it.moveNext$0();)
          list.push(it.get$current());
      else
        for (i = start; i < end; ++i) {
          if (!it.moveNext$0())
            throw A.wrapException(A.RangeError$range(end, start, i, _null, _null));
          list.push(it.get$current());
        }
      return A.Primitives_stringFromCharCodes(list);
    },
    RegExp_RegExp(source, multiLine) {
      return new A.JSSyntaxRegExp(source, A.JSSyntaxRegExp_makeNative(source, multiLine, true, false, false, false));
    },
    identical(a, b) {
      return a == null ? b == null : a === b;
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current());
      }
      return string;
    },
    NoSuchMethodError$(receiver, memberName, positionalArguments, namedArguments) {
      return new A.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments);
    },
    Uri_base() {
      var uri = A.Primitives_currentUri();
      if (uri != null)
        return A.Uri_parse(uri);
      throw A.wrapException(A.UnsupportedError$("'Uri.base' is not supported"));
    },
    _Uri__uriEncode(canonicalTable, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte, t3,
        _s16_ = "0123456789ABCDEF";
      if (encoding === B.C_Utf8Codec) {
        t1 = $.$get$_Uri__needsNoEncoding()._nativeRegExp;
        t1 = t1.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      bytes = encoding.encode$1(text);
      for (t1 = J.getInterceptor$asx(bytes), i = 0, t2 = ""; i < t1.get$length(bytes); ++i) {
        byte = t1.$index(bytes, i);
        if (byte < 128) {
          t3 = B.JSInt_methods._shrOtherPositive$1(byte, 4);
          if (!(t3 < 8))
            return A.ioore(canonicalTable, t3);
          t3 = (canonicalTable[t3] & 1 << (byte & 15)) !== 0;
        } else
          t3 = false;
        if (t3)
          t2 += A.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + _s16_[B.JSInt_methods._shrOtherPositive$1(byte, 4) & 15] + _s16_[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    StackTrace_current() {
      var stackTrace, exception;
      if (A.boolConversionCheck($.$get$_hasErrorStackProperty()))
        return A.getTraceFromException(new Error());
      try {
        throw A.wrapException("");
      } catch (exception) {
        stackTrace = A.getTraceFromException(exception);
        return stackTrace;
      }
    },
    DateTime_parse(formattedString) {
      var t1, t2, t3, years, month, day, hour, minute, second, milliAndMicroseconds, millisecond, tzSign, sign, hourDifference, isUtc, value, _null = null,
        match = $.$get$DateTime__parseFormat().firstMatch$1(formattedString);
      if (match != null) {
        t1 = new A.DateTime_parse_parseIntOrZero();
        t2 = match._match;
        if (1 >= t2.length)
          return A.ioore(t2, 1);
        t3 = t2[1];
        t3.toString;
        years = A.int_parse(t3, _null);
        if (2 >= t2.length)
          return A.ioore(t2, 2);
        t3 = t2[2];
        t3.toString;
        month = A.int_parse(t3, _null);
        if (3 >= t2.length)
          return A.ioore(t2, 3);
        t3 = t2[3];
        t3.toString;
        day = A.int_parse(t3, _null);
        if (4 >= t2.length)
          return A.ioore(t2, 4);
        hour = t1.call$1(t2[4]);
        if (5 >= t2.length)
          return A.ioore(t2, 5);
        minute = t1.call$1(t2[5]);
        if (6 >= t2.length)
          return A.ioore(t2, 6);
        second = t1.call$1(t2[6]);
        if (7 >= t2.length)
          return A.ioore(t2, 7);
        milliAndMicroseconds = new A.DateTime_parse_parseMilliAndMicroseconds().call$1(t2[7]);
        millisecond = B.JSInt_methods._tdivFast$1(milliAndMicroseconds, 1000);
        t3 = t2.length;
        if (8 >= t3)
          return A.ioore(t2, 8);
        if (t2[8] != null) {
          if (9 >= t3)
            return A.ioore(t2, 9);
          tzSign = t2[9];
          if (tzSign != null) {
            sign = tzSign === "-" ? -1 : 1;
            if (10 >= t3)
              return A.ioore(t2, 10);
            t3 = t2[10];
            t3.toString;
            hourDifference = A.int_parse(t3, _null);
            if (11 >= t2.length)
              return A.ioore(t2, 11);
            minute -= sign * (t1.call$1(t2[11]) + 60 * hourDifference);
          }
          isUtc = true;
        } else
          isUtc = false;
        value = A.Primitives_valueFromDecomposedDate(years, month, day, hour, minute, second, millisecond + B.JSNumber_methods.round$0(milliAndMicroseconds % 1000 / 1000), isUtc);
        if (value == null)
          throw A.wrapException(A.FormatException$("Time out of range", formattedString, _null));
        return A.DateTime$_withValue(value, isUtc);
      } else
        throw A.wrapException(A.FormatException$("Invalid date format", formattedString, _null));
    },
    DateTime_tryParse(formattedString) {
      var t1, exception;
      try {
        t1 = A.DateTime_parse(formattedString);
        return t1;
      } catch (exception) {
        if (type$.FormatException._is(A.unwrapException(exception)))
          return null;
        else
          throw exception;
      }
    },
    DateTime$_withValue(_value, isUtc) {
      var t1;
      if (Math.abs(_value) <= 864e13)
        t1 = false;
      else
        t1 = true;
      if (t1)
        A.throwExpression(A.ArgumentError$("DateTime is outside valid range: " + _value, null));
      A.checkNotNullable(isUtc, "isUtc", type$.bool);
      return new A.DateTime(_value, isUtc);
    },
    DateTime__fourDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__sixDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "+";
      if (absN >= 100000)
        return sign + absN;
      return sign + "0" + absN;
    },
    DateTime__threeDigits(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Duration$(seconds) {
      return new A.Duration(1000000 * seconds);
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Error__objectToString(object);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    ArgumentError_checkNotNull(argument, $name, $T) {
      return argument;
    },
    RangeError$(message) {
      var _null = null;
      return new A.RangeError(_null, _null, false, _null, _null, message);
    },
    RangeError$value(value, $name) {
      return new A.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValueInInterval(value, minValue, maxValue, $name) {
      if (value < minValue || value > maxValue)
        throw A.wrapException(A.RangeError$range(value, minValue, maxValue, $name, null));
      return value;
    },
    RangeError_checkValidRange(start, end, $length) {
      if (0 > start || start > $length)
        throw A.wrapException(A.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (start > end || end > $length)
          throw A.wrapException(A.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative(value, $name) {
      if (value < 0)
        throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$(invalidValue, indexable, $name, message, $length) {
      var t1 = A._asInt($length == null ? J.get$length$asx(indexable) : $length);
      return new A.IndexError(t1, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    StateError$(message) {
      return new A.StateError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception(message) {
      return new A._Exception(message);
    },
    FormatException$(message, source, offset) {
      return new A.FormatException(message, source, offset);
    },
    Map_castFrom(source, $K, $V, K2, V2) {
      return new A.CastMap(source, $K._eval$1("@<0>")._bind$1($V)._bind$1(K2)._bind$1(V2)._eval$1("CastMap<1,2,3,4>"));
    },
    num_parse(input) {
      var t1,
        source = B.JSString_methods.trim$0(input),
        result = A.Primitives_parseInt(source, null);
      if (result == null)
        result = A.Primitives_parseDouble(source);
      if (result != null)
        return result;
      t1 = A.FormatException$(input, null, null);
      throw A.wrapException(t1);
    },
    Object_hash(object1, object2, object3) {
      var t1, t2;
      if (B.C_SentinelValue === object3) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2));
      }
      t1 = J.get$hashCode$(object1);
      object2 = J.get$hashCode$(object2);
      object3 = J.get$hashCode$(object3);
      t2 = $.$get$_hashSeed();
      return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(t2, t1), object2), object3));
    },
    Set_castFrom(source, newSet, $S, $T) {
      return new A.CastSet(source, newSet, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastSet<1,2>"));
    },
    Uri_Uri$dataFromString($content) {
      var t1, _null = null,
        buffer = new A.StringBuffer(""),
        indices = A._setArrayType([-1], type$.JSArray_int);
      A.UriData__writeUri(_null, _null, _null, buffer, indices);
      B.JSArray_methods.add$1(indices, buffer._contents.length);
      buffer._contents += ",";
      A.UriData__uriEncodeBytes(B.List_CVk, B.C_AsciiCodec.encode$1($content), buffer);
      t1 = buffer._contents;
      return new A.UriData(t1.charCodeAt(0) == 0 ? t1 : t1, indices, _null).get$uri();
    },
    Uri_parse(uri) {
      var delta, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t1, t2, schemeAuth, queryStart0, pathStart0, userInfoStart, userInfo, host, portNumber, port, path, query, _null = null,
        end = uri.length;
      if (end >= 5) {
        delta = ((B.JSString_methods._codeUnitAt$1(uri, 4) ^ 58) * 3 | B.JSString_methods._codeUnitAt$1(uri, 0) ^ 100 | B.JSString_methods._codeUnitAt$1(uri, 1) ^ 97 | B.JSString_methods._codeUnitAt$1(uri, 2) ^ 116 | B.JSString_methods._codeUnitAt$1(uri, 3) ^ 97) >>> 0;
        if (delta === 0)
          return A.UriData__parse(end < end ? B.JSString_methods.substring$2(uri, 0, end) : uri, 5, _null).get$uri();
        else if (delta === 32)
          return A.UriData__parse(B.JSString_methods.substring$2(uri, 5, end), 0, _null).get$uri();
      }
      indices = A.List_List$filled(8, 0, false, type$.int);
      B.JSArray_methods.$indexSet(indices, 0, 0);
      B.JSArray_methods.$indexSet(indices, 1, -1);
      B.JSArray_methods.$indexSet(indices, 2, -1);
      B.JSArray_methods.$indexSet(indices, 7, -1);
      B.JSArray_methods.$indexSet(indices, 3, 0);
      B.JSArray_methods.$indexSet(indices, 4, 0);
      B.JSArray_methods.$indexSet(indices, 5, end);
      B.JSArray_methods.$indexSet(indices, 6, end);
      if (A._scan(uri, 0, end, 0, indices) >= 14)
        B.JSArray_methods.$indexSet(indices, 7, end);
      schemeEnd = indices[1];
      if (schemeEnd >= 0)
        if (A._scan(uri, 0, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      hostStart = indices[2] + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      isSimple = indices[7] < 0;
      if (isSimple)
        if (hostStart > schemeEnd + 3) {
          scheme = _null;
          isSimple = false;
        } else {
          t1 = portStart > 0;
          if (t1 && portStart + 1 === pathStart) {
            scheme = _null;
            isSimple = false;
          } else {
            if (!(queryStart < end && queryStart === pathStart + 2 && B.JSString_methods.startsWith$2(uri, "..", pathStart)))
              t2 = queryStart > pathStart + 2 && B.JSString_methods.startsWith$2(uri, "/..", queryStart - 3);
            else
              t2 = true;
            if (t2) {
              scheme = _null;
              isSimple = false;
            } else {
              if (schemeEnd === 4)
                if (B.JSString_methods.startsWith$2(uri, "file", 0)) {
                  if (hostStart <= 0) {
                    if (!B.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                      schemeAuth = "file:///";
                      delta = 3;
                    } else {
                      schemeAuth = "file://";
                      delta = 2;
                    }
                    uri = schemeAuth + B.JSString_methods.substring$2(uri, pathStart, end);
                    schemeEnd -= 0;
                    t1 = delta - 0;
                    queryStart += t1;
                    fragmentStart += t1;
                    end = uri.length;
                    hostStart = 7;
                    portStart = 7;
                    pathStart = 7;
                  } else if (pathStart === queryStart) {
                    ++fragmentStart;
                    queryStart0 = queryStart + 1;
                    uri = B.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                    ++end;
                    queryStart = queryStart0;
                  }
                  scheme = "file";
                } else if (B.JSString_methods.startsWith$2(uri, "http", 0)) {
                  if (t1 && portStart + 3 === pathStart && B.JSString_methods.startsWith$2(uri, "80", portStart + 1)) {
                    fragmentStart -= 3;
                    pathStart0 = pathStart - 3;
                    queryStart -= 3;
                    uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                    end -= 3;
                    pathStart = pathStart0;
                  }
                  scheme = "http";
                } else
                  scheme = _null;
              else if (schemeEnd === 5 && B.JSString_methods.startsWith$2(uri, "https", 0)) {
                if (t1 && portStart + 4 === pathStart && B.JSString_methods.startsWith$2(uri, "443", portStart + 1)) {
                  fragmentStart -= 4;
                  pathStart0 = pathStart - 4;
                  queryStart -= 4;
                  uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                  end -= 3;
                  pathStart = pathStart0;
                }
                scheme = "https";
              } else
                scheme = _null;
              isSimple = true;
            }
          }
        }
      else
        scheme = _null;
      if (isSimple) {
        if (end < uri.length) {
          uri = B.JSString_methods.substring$2(uri, 0, end);
          schemeEnd -= 0;
          hostStart -= 0;
          portStart -= 0;
          pathStart -= 0;
          queryStart -= 0;
          fragmentStart -= 0;
        }
        return new A._SimpleUri(uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      }
      if (scheme == null)
        if (schemeEnd > 0)
          scheme = A._Uri__makeScheme(uri, 0, schemeEnd);
        else {
          if (schemeEnd === 0)
            A._Uri__fail(uri, 0, "Invalid empty scheme");
          scheme = "";
        }
      if (hostStart > 0) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? A._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = A._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        if (t1 < pathStart) {
          portNumber = A.Primitives_parseInt(B.JSString_methods.substring$2(uri, t1, pathStart), _null);
          port = A._Uri__makePort(portNumber == null ? A.throwExpression(A.FormatException$("Invalid port", uri, t1)) : portNumber, scheme);
        } else
          port = _null;
      } else {
        port = _null;
        host = port;
        userInfo = "";
      }
      path = A._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? A._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, fragmentStart < end ? A._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    Uri_decodeComponent(encodedComponent) {
      A._asString(encodedComponent);
      return A._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, B.C_Utf8Codec, false);
    },
    Uri__parseIPv4Address(host, start, end) {
      var i, partStart, partIndex, char, part, partIndex0,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new A.Uri__parseIPv4Address_error(host),
        result = new Uint8Array(4);
      for (i = start, partStart = i, partIndex = 0; i < end; ++i) {
        char = B.JSString_methods.codeUnitAt$1(host, i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = A.int_parse(B.JSString_methods.substring$2(host, partStart, i), null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          if (!(partIndex < 4))
            return A.ioore(result, partIndex);
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = A.int_parse(B.JSString_methods.substring$2(host, partStart, end), null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      if (!(partIndex < 4))
        return A.ioore(result, partIndex);
      result[partIndex] = part;
      return result;
    },
    Uri_parseIPv6Address(host, start, end) {
      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, t1, last, bytes, wildCardLength, index, value, j, t2, _null = null,
        error = new A.Uri_parseIPv6Address_error(host),
        parseHex = new A.Uri_parseIPv6Address_parseHex(error, host);
      if (host.length < 2)
        error.call$2("address is too short", _null);
      parts = A._setArrayType([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        char = B.JSString_methods.codeUnitAt$1(host, i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (B.JSString_methods.codeUnitAt$1(host, i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            B.JSArray_methods.add$1(parts, -1);
            wildcardSeen = true;
          } else
            B.JSArray_methods.add$1(parts, parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$2("too few parts", _null);
      atEnd = partStart === end;
      t1 = B.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          B.JSArray_methods.add$1(parts, parseHex.call$2(partStart, end));
        else {
          last = A.Uri__parseIPv4Address(host, partStart, end);
          B.JSArray_methods.add$1(parts, (last[0] << 8 | last[1]) >>> 0);
          B.JSArray_methods.add$1(parts, (last[2] << 8 | last[3]) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$2("an address with a wildcard must have less than 7 parts", _null);
      } else if (parts.length !== 8)
        error.call$2("an address without a wildcard must contain exactly 8 parts", _null);
      bytes = new Uint8Array(16);
      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            if (!(index >= 0 && index < 16))
              return A.ioore(bytes, index);
            bytes[index] = 0;
            t2 = index + 1;
            if (!(t2 < 16))
              return A.ioore(bytes, t2);
            bytes[t2] = 0;
            index += 2;
          }
        else {
          t2 = B.JSInt_methods._shrOtherPositive$1(value, 8);
          if (!(index >= 0 && index < 16))
            return A.ioore(bytes, index);
          bytes[index] = t2;
          t2 = index + 1;
          if (!(t2 < 16))
            return A.ioore(bytes, t2);
          bytes[t2] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _Uri$_internal(scheme, _userInfo, _host, _port, path, _query, _fragment) {
      return new A._Uri(scheme, _userInfo, _host, _port, path, _query, _fragment);
    },
    _Uri__Uri(host, path, pathSegments, scheme) {
      var userInfo, query, fragment, port, isFile, t1, hasAuthority, t2, _null = null;
      scheme = scheme == null ? "" : A._Uri__makeScheme(scheme, 0, scheme.length);
      userInfo = A._Uri__makeUserInfo(_null, 0, 0);
      host = A._Uri__makeHost(host, 0, host == null ? 0 : host.length, false);
      query = A._Uri__makeQuery(_null, 0, 0, _null);
      fragment = A._Uri__makeFragment(_null, 0, 0);
      port = A._Uri__makePort(_null, scheme);
      isFile = scheme === "file";
      if (host == null)
        t1 = userInfo.length !== 0 || port != null || isFile;
      else
        t1 = false;
      if (t1)
        host = "";
      t1 = host == null;
      hasAuthority = !t1;
      path = A._Uri__makePath(path, 0, path == null ? 0 : path.length, pathSegments, scheme, hasAuthority);
      t2 = scheme.length === 0;
      if (t2 && t1 && !B.JSString_methods.startsWith$1(path, "/"))
        path = A._Uri__normalizeRelativePath(path, !t2 || hasAuthority);
      else
        path = A._Uri__removeDotSegments(path);
      return A._Uri$_internal(scheme, userInfo, t1 && B.JSString_methods.startsWith$1(path, "//") ? "" : host, port, path, query, fragment);
    },
    _Uri__defaultPort(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail(uri, index, message) {
      throw A.wrapException(A.FormatException$(message, uri, index));
    },
    _Uri__Uri$file(path, windows) {
      return windows ? A._Uri__makeWindowsFileUrl(path, false) : A._Uri__makeFileUri(path, false);
    },
    _Uri__checkNonWindowsPathReservedCharacters(segments, argumentError) {
      var t1, _i, segment, t2, t3;
      for (t1 = segments.length, _i = 0; _i < t1; ++_i) {
        segment = segments[_i];
        t2 = J.getInterceptor$asx(segment);
        t3 = t2.get$length(segment);
        if (0 > t3)
          A.throwExpression(A.RangeError$range(0, 0, t2.get$length(segment), null, null));
        if (A.stringContainsUnchecked(segment, "/", 0)) {
          t1 = A.UnsupportedError$("Illegal path character " + A.S(segment));
          throw A.wrapException(t1);
        }
      }
    },
    _Uri__checkWindowsPathReservedCharacters(segments, argumentError, firstSegment) {
      var t1, t2, t3, t4, t5, _null = null;
      for (t1 = A.SubListIterable$(segments, firstSegment, _null, A._arrayInstanceType(segments)._precomputed1), t2 = t1.$ti, t1 = new A.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        t4 = A.RegExp_RegExp('["*/:<>?\\\\|]', false);
        t5 = t3.length;
        if (A.stringContainsUnchecked(t3, t4, 0))
          if (argumentError)
            throw A.wrapException(A.ArgumentError$("Illegal character in path", _null));
          else
            throw A.wrapException(A.UnsupportedError$("Illegal character in path: " + t3));
      }
    },
    _Uri__checkWindowsDriveLetter(charCode, argumentError) {
      var t1,
        _s21_ = "Illegal drive letter ";
      if (!(65 <= charCode && charCode <= 90))
        t1 = 97 <= charCode && charCode <= 122;
      else
        t1 = true;
      if (t1)
        return;
      if (argumentError)
        throw A.wrapException(A.ArgumentError$(_s21_ + A.String_String$fromCharCode(charCode), null));
      else
        throw A.wrapException(A.UnsupportedError$(_s21_ + A.String_String$fromCharCode(charCode)));
    },
    _Uri__makeFileUri(path, slashTerminated) {
      var _null = null,
        segments = A._setArrayType(path.split("/"), type$.JSArray_String);
      if (B.JSString_methods.startsWith$1(path, "/"))
        return A._Uri__Uri(_null, _null, segments, "file");
      else
        return A._Uri__Uri(_null, _null, segments, _null);
    },
    _Uri__makeWindowsFileUrl(path, slashTerminated) {
      var t1, pathSegments, pathStart, hostPart, _s1_ = "\\", _null = null, _s4_ = "file";
      if (B.JSString_methods.startsWith$1(path, "\\\\?\\"))
        if (B.JSString_methods.startsWith$2(path, "UNC\\", 4))
          path = B.JSString_methods.replaceRange$3(path, 0, 7, _s1_);
        else {
          path = B.JSString_methods.substring$1(path, 4);
          if (path.length < 3 || B.JSString_methods._codeUnitAt$1(path, 1) !== 58 || B.JSString_methods._codeUnitAt$1(path, 2) !== 92)
            throw A.wrapException(A.ArgumentError$("Windows paths with \\\\?\\ prefix must be absolute", _null));
        }
      else
        path = A.stringReplaceAllUnchecked(path, "/", _s1_);
      t1 = path.length;
      if (t1 > 1 && B.JSString_methods._codeUnitAt$1(path, 1) === 58) {
        A._Uri__checkWindowsDriveLetter(B.JSString_methods._codeUnitAt$1(path, 0), true);
        if (t1 === 2 || B.JSString_methods._codeUnitAt$1(path, 2) !== 92)
          throw A.wrapException(A.ArgumentError$("Windows paths with drive letter must be absolute", _null));
        pathSegments = A._setArrayType(path.split(_s1_), type$.JSArray_String);
        A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 1);
        return A._Uri__Uri(_null, _null, pathSegments, _s4_);
      }
      if (B.JSString_methods.startsWith$1(path, _s1_))
        if (B.JSString_methods.startsWith$2(path, _s1_, 1)) {
          pathStart = B.JSString_methods.indexOf$2(path, _s1_, 2);
          t1 = pathStart < 0;
          hostPart = t1 ? B.JSString_methods.substring$1(path, 2) : B.JSString_methods.substring$2(path, 2, pathStart);
          pathSegments = A._setArrayType((t1 ? "" : B.JSString_methods.substring$1(path, pathStart + 1)).split(_s1_), type$.JSArray_String);
          A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
          return A._Uri__Uri(hostPart, _null, pathSegments, _s4_);
        } else {
          pathSegments = A._setArrayType(path.split(_s1_), type$.JSArray_String);
          A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
          return A._Uri__Uri(_null, _null, pathSegments, _s4_);
        }
      else {
        pathSegments = A._setArrayType(path.split(_s1_), type$.JSArray_String);
        A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
        return A._Uri__Uri(_null, _null, pathSegments, _null);
      }
    },
    _Uri__makePort(port, scheme) {
      if (port != null && port === A._Uri__defaultPort(scheme))
        return null;
      return port;
    },
    _Uri__makeHost(host, start, end, strictIPv6) {
      var t1, t2, index, zoneIDstart, zoneID, i;
      if (host == null)
        return null;
      if (start === end)
        return "";
      if (B.JSString_methods.codeUnitAt$1(host, start) === 91) {
        t1 = end - 1;
        if (B.JSString_methods.codeUnitAt$1(host, t1) !== 93)
          A._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t2 = start + 1;
        index = A._Uri__checkZoneID(host, t2, t1);
        if (index < t1) {
          zoneIDstart = index + 1;
          zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, t1, "%25");
        } else
          zoneID = "";
        A.Uri_parseIPv6Address(host, t2, index);
        return B.JSString_methods.substring$2(host, start, index).toLowerCase() + zoneID + "]";
      }
      for (i = start; i < end; ++i)
        if (B.JSString_methods.codeUnitAt$1(host, i) === 58) {
          index = B.JSString_methods.indexOf$2(host, "%", start);
          index = index >= start && index < end ? index : end;
          if (index < end) {
            zoneIDstart = index + 1;
            zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, end, "%25");
          } else
            zoneID = "";
          A.Uri_parseIPv6Address(host, start, index);
          return "[" + B.JSString_methods.substring$2(host, start, index) + zoneID + "]";
        }
      return A._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID(host, start, end) {
      var index = B.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__normalizeZoneID(host, start, end, prefix) {
      var index, sectionStart, isNormalized, char, replacement, t1, t2, tail, sourceLength, slice,
        buffer = prefix !== "" ? new A.StringBuffer(prefix) : null;
      for (index = start, sectionStart = index, isNormalized = true; index < end;) {
        char = B.JSString_methods.codeUnitAt$1(host, index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          t2 = buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
          if (t1)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            A._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer._contents = t2 + replacement;
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else {
          if (char < 127) {
            t1 = char >>> 4;
            if (!(t1 < 8))
              return A.ioore(B.List_nxB, t1);
            t1 = (B.List_nxB[t1] & 1 << (char & 15)) !== 0;
          } else
            t1 = false;
          if (t1) {
            if (isNormalized && 65 <= char && 90 >= char) {
              if (buffer == null)
                buffer = new A.StringBuffer("");
              if (sectionStart < index) {
                buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
                sectionStart = index;
              }
              isNormalized = false;
            }
            ++index;
          } else {
            if ((char & 64512) === 55296 && index + 1 < end) {
              tail = B.JSString_methods.codeUnitAt$1(host, index + 1);
              if ((tail & 64512) === 56320) {
                char = (char & 1023) << 10 | tail & 1023 | 65536;
                sourceLength = 2;
              } else
                sourceLength = 1;
            } else
              sourceLength = 1;
            slice = B.JSString_methods.substring$2(host, sectionStart, index);
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t1 = buffer;
            } else
              t1 = buffer;
            t1._contents += slice;
            t1._contents += A._Uri__escapeChar(char);
            index += sourceLength;
            sectionStart = index;
          }
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end)
        buffer._contents += B.JSString_methods.substring$2(host, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__normalizeRegName(host, start, end) {
      var index, sectionStart, buffer, isNormalized, char, replacement, t1, slice, t2, sourceLength, tail;
      for (index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        char = B.JSString_methods.codeUnitAt$1(host, index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          t2 = buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
          if (t1) {
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
            sourceLength = 3;
          } else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          } else
            sourceLength = 3;
          buffer._contents = t2 + replacement;
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else {
          if (char < 127) {
            t1 = char >>> 4;
            if (!(t1 < 8))
              return A.ioore(B.List_qNA, t1);
            t1 = (B.List_qNA[t1] & 1 << (char & 15)) !== 0;
          } else
            t1 = false;
          if (t1) {
            if (isNormalized && 65 <= char && 90 >= char) {
              if (buffer == null)
                buffer = new A.StringBuffer("");
              if (sectionStart < index) {
                buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
                sectionStart = index;
              }
              isNormalized = false;
            }
            ++index;
          } else {
            if (char <= 93) {
              t1 = char >>> 4;
              if (!(t1 < 8))
                return A.ioore(B.List_2Vk, t1);
              t1 = (B.List_2Vk[t1] & 1 << (char & 15)) !== 0;
            } else
              t1 = false;
            if (t1)
              A._Uri__fail(host, index, "Invalid character");
            else {
              if ((char & 64512) === 55296 && index + 1 < end) {
                tail = B.JSString_methods.codeUnitAt$1(host, index + 1);
                if ((tail & 64512) === 56320) {
                  char = (char & 1023) << 10 | tail & 1023 | 65536;
                  sourceLength = 2;
                } else
                  sourceLength = 1;
              } else
                sourceLength = 1;
              slice = B.JSString_methods.substring$2(host, sectionStart, index);
              if (!isNormalized)
                slice = slice.toLowerCase();
              if (buffer == null) {
                buffer = new A.StringBuffer("");
                t1 = buffer;
              } else
                t1 = buffer;
              t1._contents += slice;
              t1._contents += A._Uri__escapeChar(char);
              index += sourceLength;
              sectionStart = index;
            }
          }
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeScheme(scheme, start, end) {
      var i, containsUpperCase, codeUnit, t1;
      if (start === end)
        return "";
      if (!A._Uri__isAlphabeticCharacter(B.JSString_methods._codeUnitAt$1(scheme, start)))
        A._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        codeUnit = B.JSString_methods._codeUnitAt$1(scheme, i);
        if (codeUnit < 128) {
          t1 = codeUnit >>> 4;
          if (!(t1 < 8))
            return A.ioore(B.List_JYB, t1);
          t1 = (B.List_JYB[t1] & 1 << (codeUnit & 15)) !== 0;
        } else
          t1 = false;
        if (!t1)
          A._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = B.JSString_methods.substring$2(scheme, start, end);
      return A._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
    },
    _Uri__canonicalizeScheme(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo(userInfo, start, end) {
      if (userInfo == null)
        return "";
      return A._Uri__normalizeOrSubstring(userInfo, start, end, B.List_gRj, false);
    },
    _Uri__makePath(path, start, end, pathSegments, scheme, hasAuthority) {
      var t1, result,
        isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority;
      if (path == null) {
        if (pathSegments == null)
          return isFile ? "/" : "";
        t1 = A._arrayInstanceType(pathSegments);
        result = new A.MappedListIterable(pathSegments, t1._eval$1("String(1)")._as(new A._Uri__makePath_closure()), t1._eval$1("MappedListIterable<1,String>")).join$1(0, "/");
      } else if (pathSegments != null)
        throw A.wrapException(A.ArgumentError$("Both path and pathSegments specified", null));
      else
        result = A._Uri__normalizeOrSubstring(path, start, end, B.List_qg4, true);
      if (result.length === 0) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !B.JSString_methods.startsWith$1(result, "/"))
        result = "/" + result;
      return A._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath(path, scheme, hasAuthority) {
      var t1 = scheme.length === 0;
      if (t1 && !hasAuthority && !B.JSString_methods.startsWith$1(path, "/"))
        return A._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
      return A._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery(query, start, end, queryParameters) {
      if (query != null)
        return A._Uri__normalizeOrSubstring(query, start, end, B.List_CVk, true);
      return null;
    },
    _Uri__makeFragment(fragment, start, end) {
      if (fragment == null)
        return null;
      return A._Uri__normalizeOrSubstring(fragment, start, end, B.List_CVk, true);
    },
    _Uri__normalizeEscape(source, index, lowerCase) {
      var firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        t1 = index + 2;
      if (t1 >= source.length)
        return "%";
      firstDigit = B.JSString_methods.codeUnitAt$1(source, index + 1);
      secondDigit = B.JSString_methods.codeUnitAt$1(source, t1);
      firstDigitValue = A.hexDigitValue(firstDigit);
      secondDigitValue = A.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (value < 127) {
        t1 = B.JSInt_methods._shrOtherPositive$1(value, 4);
        if (!(t1 < 8))
          return A.ioore(B.List_nxB, t1);
        t1 = (B.List_nxB[t1] & 1 << (value & 15)) !== 0;
      } else
        t1 = false;
      if (t1)
        return A.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return B.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
      return null;
    },
    _Uri__escapeChar(char) {
      var codeUnits, flag, encodedBytes, t1, index, byte, t2, t3,
        _s16_ = "0123456789ABCDEF";
      if (char < 128) {
        codeUnits = new Uint8Array(3);
        codeUnits[0] = 37;
        codeUnits[1] = B.JSString_methods._codeUnitAt$1(_s16_, char >>> 4);
        codeUnits[2] = B.JSString_methods._codeUnitAt$1(_s16_, char & 15);
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        t1 = 3 * encodedBytes;
        codeUnits = new Uint8Array(t1);
        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = B.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
          if (!(index < t1))
            return A.ioore(codeUnits, index);
          codeUnits[index] = 37;
          t2 = index + 1;
          t3 = B.JSString_methods._codeUnitAt$1(_s16_, byte >>> 4);
          if (!(t2 < t1))
            return A.ioore(codeUnits, t2);
          codeUnits[t2] = t3;
          t3 = index + 2;
          t2 = B.JSString_methods._codeUnitAt$1(_s16_, byte & 15);
          if (!(t3 < t1))
            return A.ioore(codeUnits, t3);
          codeUnits[t3] = t2;
          index += 3;
        }
      }
      return A.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring(component, start, end, charTable, escapeDelimiters) {
      var t1 = A._Uri__normalize(component, start, end, charTable, escapeDelimiters);
      return t1 == null ? B.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize(component, start, end, charTable, escapeDelimiters) {
      var t1, index, sectionStart, buffer, char, t2, replacement, sourceLength, tail, t3, _null = null;
      for (t1 = !escapeDelimiters, index = start, sectionStart = index, buffer = _null; index < end;) {
        char = B.JSString_methods.codeUnitAt$1(component, index);
        if (char < 127) {
          t2 = char >>> 4;
          if (!(t2 < 8))
            return A.ioore(charTable, t2);
          t2 = (charTable[t2] & 1 << (char & 15)) !== 0;
        } else
          t2 = false;
        if (t2)
          ++index;
        else {
          if (char === 37) {
            replacement = A._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement) {
              replacement = "%25";
              sourceLength = 1;
            } else
              sourceLength = 3;
          } else {
            if (t1)
              if (char <= 93) {
                t2 = char >>> 4;
                if (!(t2 < 8))
                  return A.ioore(B.List_2Vk, t2);
                t2 = (B.List_2Vk[t2] & 1 << (char & 15)) !== 0;
              } else
                t2 = false;
            else
              t2 = false;
            if (t2) {
              A._Uri__fail(component, index, "Invalid character");
              sourceLength = _null;
              replacement = sourceLength;
            } else {
              if ((char & 64512) === 55296) {
                t2 = index + 1;
                if (t2 < end) {
                  tail = B.JSString_methods.codeUnitAt$1(component, t2);
                  if ((tail & 64512) === 56320) {
                    char = (char & 1023) << 10 | tail & 1023 | 65536;
                    sourceLength = 2;
                  } else
                    sourceLength = 1;
                } else
                  sourceLength = 1;
              } else
                sourceLength = 1;
              replacement = A._Uri__escapeChar(char);
            }
          }
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t2 = buffer;
          } else
            t2 = buffer;
          t3 = t2._contents += B.JSString_methods.substring$2(component, sectionStart, index);
          t2._contents = t3 + A.S(replacement);
          if (typeof sourceLength !== "number")
            return A.iae(sourceLength);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return _null;
      if (sectionStart < end)
        buffer._contents += B.JSString_methods.substring$2(component, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__mayContainDotSegments(path) {
      if (B.JSString_methods.startsWith$1(path, "."))
        return true;
      return B.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments(path) {
      var output, t1, t2, appendSlash, _i, segment, t3;
      if (!A._Uri__mayContainDotSegments(path))
        return path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (J.$eq$(segment, "..")) {
          t3 = output.length;
          if (t3 !== 0) {
            if (0 >= t3)
              return A.ioore(output, -1);
            output.pop();
            if (output.length === 0)
              B.JSArray_methods.add$1(output, "");
          }
          appendSlash = true;
        } else if ("." === segment)
          appendSlash = true;
        else {
          B.JSArray_methods.add$1(output, segment);
          appendSlash = false;
        }
      }
      if (appendSlash)
        B.JSArray_methods.add$1(output, "");
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath(path, allowScheme) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return !allowScheme ? A._Uri__escapeScheme(path) : path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (".." === segment)
          if (output.length !== 0 && B.JSArray_methods.get$last(output) !== "..") {
            if (0 >= output.length)
              return A.ioore(output, -1);
            output.pop();
            appendSlash = true;
          } else {
            B.JSArray_methods.add$1(output, "..");
            appendSlash = false;
          }
        else if ("." === segment)
          appendSlash = true;
        else {
          B.JSArray_methods.add$1(output, segment);
          appendSlash = false;
        }
      }
      t1 = output.length;
      if (t1 !== 0)
        if (t1 === 1) {
          if (0 >= t1)
            return A.ioore(output, 0);
          t1 = output[0].length === 0;
        } else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || B.JSArray_methods.get$last(output) === "..")
        B.JSArray_methods.add$1(output, "");
      if (!allowScheme) {
        if (0 >= output.length)
          return A.ioore(output, 0);
        B.JSArray_methods.$indexSet(output, 0, A._Uri__escapeScheme(output[0]));
      }
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme(path) {
      var i, char, t2,
        t1 = path.length;
      if (t1 >= 2 && A._Uri__isAlphabeticCharacter(B.JSString_methods._codeUnitAt$1(path, 0)))
        for (i = 1; i < t1; ++i) {
          char = B.JSString_methods._codeUnitAt$1(path, i);
          if (char === 58)
            return B.JSString_methods.substring$2(path, 0, i) + "%3A" + B.JSString_methods.substring$1(path, i + 1);
          if (char <= 127) {
            t2 = char >>> 4;
            if (!(t2 < 8))
              return A.ioore(B.List_JYB, t2);
            t2 = (B.List_JYB[t2] & 1 << (char & 15)) === 0;
          } else
            t2 = true;
          if (t2)
            break;
        }
      return path;
    },
    _Uri__packageNameEnd(uri, path) {
      if (uri.isScheme$1("package") && uri._host == null)
        return A._skipPackageNameChars(path, 0, path.length);
      return -1;
    },
    _Uri__toWindowsFilePath(uri) {
      var hasDriveLetter, t2, host,
        segments = uri.get$pathSegments(),
        t1 = segments.length;
      if (t1 > 0 && J.get$length$asx(segments[0]) === 2 && J.codeUnitAt$1$s(segments[0], 1) === 58) {
        if (0 >= t1)
          return A.ioore(segments, 0);
        A._Uri__checkWindowsDriveLetter(J.codeUnitAt$1$s(segments[0], 0), false);
        A._Uri__checkWindowsPathReservedCharacters(segments, false, 1);
        hasDriveLetter = true;
      } else {
        A._Uri__checkWindowsPathReservedCharacters(segments, false, 0);
        hasDriveLetter = false;
      }
      t2 = uri.get$hasAbsolutePath() && !hasDriveLetter ? "" + "\\" : "";
      if (uri.get$hasAuthority()) {
        host = uri.get$host(uri);
        if (host.length !== 0)
          t2 = t2 + "\\" + host + "\\";
      }
      t2 = A.StringBuffer__writeAll(t2, segments, "\\");
      t1 = hasDriveLetter && t1 === 1 ? t2 + "\\" : t2;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__hexCharPairToByte(s, pos) {
      var byte, i, charCode;
      for (byte = 0, i = 0; i < 2; ++i) {
        charCode = B.JSString_methods._codeUnitAt$1(s, pos + i);
        if (48 <= charCode && charCode <= 57)
          byte = byte * 16 + charCode - 48;
        else {
          charCode |= 32;
          if (97 <= charCode && charCode <= 102)
            byte = byte * 16 + charCode - 87;
          else
            throw A.wrapException(A.ArgumentError$("Invalid URL encoding", null));
        }
      }
      return byte;
    },
    _Uri__uriDecode(text, start, end, encoding, plusToSpace) {
      var simple, codeUnit, t1, bytes,
        i = start;
      while (true) {
        if (!(i < end)) {
          simple = true;
          break;
        }
        codeUnit = B.JSString_methods._codeUnitAt$1(text, i);
        if (codeUnit <= 127)
          if (codeUnit !== 37)
            t1 = false;
          else
            t1 = true;
        else
          t1 = true;
        if (t1) {
          simple = false;
          break;
        }
        ++i;
      }
      if (simple) {
        if (B.C_Utf8Codec !== encoding)
          t1 = false;
        else
          t1 = true;
        if (t1)
          return B.JSString_methods.substring$2(text, start, end);
        else
          bytes = new A.CodeUnits(B.JSString_methods.substring$2(text, start, end));
      } else {
        bytes = A._setArrayType([], type$.JSArray_int);
        for (t1 = text.length, i = start; i < end; ++i) {
          codeUnit = B.JSString_methods._codeUnitAt$1(text, i);
          if (codeUnit > 127)
            throw A.wrapException(A.ArgumentError$("Illegal percent encoding in URI", null));
          if (codeUnit === 37) {
            if (i + 3 > t1)
              throw A.wrapException(A.ArgumentError$("Truncated URI", null));
            B.JSArray_methods.add$1(bytes, A._Uri__hexCharPairToByte(text, i + 1));
            i += 2;
          } else
            B.JSArray_methods.add$1(bytes, codeUnit);
        }
      }
      return encoding.decode$1(0, bytes);
    },
    _Uri__isAlphabeticCharacter(codeUnit) {
      var lowerCase = codeUnit | 32;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    UriData__writeUri(mimeType, charsetName, parameters, buffer, indices) {
      var slashIndex, t1;
      if (true)
        buffer._contents = buffer._contents;
      else {
        slashIndex = A.UriData__validateMimeType("");
        if (slashIndex < 0)
          throw A.wrapException(A.ArgumentError$value("", "mimeType", "Invalid MIME type"));
        t1 = buffer._contents += A._Uri__uriEncode(B.List_qFt, B.JSString_methods.substring$2("", 0, slashIndex), B.C_Utf8Codec, false);
        buffer._contents = t1 + "/";
        buffer._contents += A._Uri__uriEncode(B.List_qFt, B.JSString_methods.substring$1("", slashIndex + 1), B.C_Utf8Codec, false);
      }
    },
    UriData__validateMimeType(mimeType) {
      var t1, slashIndex, i;
      for (t1 = mimeType.length, slashIndex = -1, i = 0; i < t1; ++i) {
        if (B.JSString_methods._codeUnitAt$1(mimeType, i) !== 47)
          continue;
        if (slashIndex < 0) {
          slashIndex = i;
          continue;
        }
        return -1;
      }
      return slashIndex;
    },
    UriData__parse(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = A._setArrayType([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        char = B.JSString_methods._codeUnitAt$1(text, i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw A.wrapException(A.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw A.wrapException(A.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        B.JSArray_methods.add$1(indices, i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          char = B.JSString_methods._codeUnitAt$1(text, i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          B.JSArray_methods.add$1(indices, equalsIndex);
        else {
          lastSeparator = B.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !B.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
            throw A.wrapException(A.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      B.JSArray_methods.add$1(indices, i);
      t2 = i + 1;
      if ((indices.length & 1) === 1)
        text = B.C_Base64Codec.normalize$3(text, t2, t1);
      else {
        data = A._Uri__normalize(text, t2, t1, B.List_CVk, true);
        if (data != null)
          text = B.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return new A.UriData(text, indices, sourceUri);
    },
    UriData__uriEncodeBytes(canonicalTable, bytes, buffer) {
      var t1, byteOr, i, byte, t2, t3,
        _s16_ = "0123456789ABCDEF";
      for (t1 = J.getInterceptor$asx(bytes), byteOr = 0, i = 0; i < t1.get$length(bytes); ++i) {
        byte = t1.$index(bytes, i);
        byteOr |= byte;
        if (byte < 128) {
          t2 = B.JSInt_methods._shrOtherPositive$1(byte, 4);
          if (!(t2 < 8))
            return A.ioore(canonicalTable, t2);
          t2 = (canonicalTable[t2] & 1 << (byte & 15)) !== 0;
        } else
          t2 = false;
        t3 = buffer._contents;
        if (t2)
          buffer._contents = t3 + A.Primitives_stringFromCharCode(byte);
        else {
          t2 = t3 + A.Primitives_stringFromCharCode(37);
          buffer._contents = t2;
          t2 += A.Primitives_stringFromCharCode(B.JSString_methods._codeUnitAt$1(_s16_, B.JSInt_methods._shrOtherPositive$1(byte, 4)));
          buffer._contents = t2;
          buffer._contents = t2 + A.Primitives_stringFromCharCode(B.JSString_methods._codeUnitAt$1(_s16_, byte & 15));
        }
      }
      if ((byteOr & 4294967040) >>> 0 !== 0)
        for (i = 0; i < t1.get$length(bytes); ++i) {
          byte = t1.$index(bytes, i);
          if (byte < 0 || byte > 255)
            throw A.wrapException(A.ArgumentError$value(byte, "non-byte value", null));
        }
    },
    _createTables() {
      var _i, t2, t3, t4, b,
        _s77_ = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=",
        _s1_ = ".", _s1_0 = ":", _s1_1 = "/", _s1_2 = "?", _s1_3 = "#",
        t1 = type$.Uint8List,
        tables = J.JSArray_JSArray$allocateGrowable(22, t1);
      for (_i = 0; _i < 22; ++_i)
        tables[_i] = new Uint8Array(96);
      t2 = new A._createTables_build(tables);
      t3 = new A._createTables_setChars();
      t4 = new A._createTables_setRange();
      t1 = t1._as(t2.call$2(0, 225));
      t3.call$3(t1, _s77_, 1);
      t3.call$3(t1, _s1_, 14);
      t3.call$3(t1, _s1_0, 34);
      t3.call$3(t1, _s1_1, 3);
      t3.call$3(t1, _s1_2, 172);
      t3.call$3(t1, _s1_3, 205);
      b = t2.call$2(14, 225);
      t3.call$3(b, _s77_, 1);
      t3.call$3(b, _s1_, 15);
      t3.call$3(b, _s1_0, 34);
      t3.call$3(b, _s1_1, 234);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(15, 225);
      t3.call$3(b, _s77_, 1);
      t3.call$3(b, "%", 225);
      t3.call$3(b, _s1_0, 34);
      t3.call$3(b, _s1_1, 9);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(1, 225);
      t3.call$3(b, _s77_, 1);
      t3.call$3(b, _s1_0, 34);
      t3.call$3(b, _s1_1, 10);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(2, 235);
      t3.call$3(b, _s77_, 139);
      t3.call$3(b, _s1_1, 131);
      t3.call$3(b, _s1_, 146);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(3, 235);
      t3.call$3(b, _s77_, 11);
      t3.call$3(b, _s1_1, 68);
      t3.call$3(b, _s1_, 18);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(4, 229);
      t3.call$3(b, _s77_, 5);
      t4.call$3(b, "AZ", 229);
      t3.call$3(b, _s1_0, 102);
      t3.call$3(b, "@", 68);
      t3.call$3(b, "[", 232);
      t3.call$3(b, _s1_1, 138);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(5, 229);
      t3.call$3(b, _s77_, 5);
      t4.call$3(b, "AZ", 229);
      t3.call$3(b, _s1_0, 102);
      t3.call$3(b, "@", 68);
      t3.call$3(b, _s1_1, 138);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(6, 231);
      t4.call$3(b, "19", 7);
      t3.call$3(b, "@", 68);
      t3.call$3(b, _s1_1, 138);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(7, 231);
      t4.call$3(b, "09", 7);
      t3.call$3(b, "@", 68);
      t3.call$3(b, _s1_1, 138);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      t3.call$3(t2.call$2(8, 8), "]", 5);
      b = t2.call$2(9, 235);
      t3.call$3(b, _s77_, 11);
      t3.call$3(b, _s1_, 16);
      t3.call$3(b, _s1_1, 234);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(16, 235);
      t3.call$3(b, _s77_, 11);
      t3.call$3(b, _s1_, 17);
      t3.call$3(b, _s1_1, 234);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(17, 235);
      t3.call$3(b, _s77_, 11);
      t3.call$3(b, _s1_1, 9);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(10, 235);
      t3.call$3(b, _s77_, 11);
      t3.call$3(b, _s1_, 18);
      t3.call$3(b, _s1_1, 234);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(18, 235);
      t3.call$3(b, _s77_, 11);
      t3.call$3(b, _s1_, 19);
      t3.call$3(b, _s1_1, 234);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(19, 235);
      t3.call$3(b, _s77_, 11);
      t3.call$3(b, _s1_1, 234);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(11, 235);
      t3.call$3(b, _s77_, 11);
      t3.call$3(b, _s1_1, 10);
      t3.call$3(b, _s1_2, 172);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(12, 236);
      t3.call$3(b, _s77_, 12);
      t3.call$3(b, _s1_2, 12);
      t3.call$3(b, _s1_3, 205);
      b = t2.call$2(13, 237);
      t3.call$3(b, _s77_, 13);
      t3.call$3(b, _s1_2, 13);
      t4.call$3(t2.call$2(20, 245), "az", 21);
      b = t2.call$2(21, 245);
      t4.call$3(b, "az", 21);
      t4.call$3(b, "09", 21);
      t3.call$3(b, "+-.", 21);
      return tables;
    },
    _scan(uri, start, end, state, indices) {
      var i, table, char, transition,
        tables = $.$get$_scannerTables();
      for (i = start; i < end; ++i) {
        if (!(state >= 0 && state < tables.length))
          return A.ioore(tables, state);
        table = tables[state];
        char = B.JSString_methods._codeUnitAt$1(uri, i) ^ 96;
        transition = table[char > 95 ? 31 : char];
        state = transition & 31;
        B.JSArray_methods.$indexSet(indices, transition >>> 5, i);
      }
      return state;
    },
    _SimpleUri__packageNameEnd(uri) {
      if (uri._schemeEnd === 7 && B.JSString_methods.startsWith$1(uri._uri, "package") && uri._hostStart <= 0)
        return A._skipPackageNameChars(uri._uri, uri._pathStart, uri._queryStart);
      return -1;
    },
    _skipPackageNameChars(source, start, end) {
      var i, dots, char;
      for (i = start, dots = 0; i < end; ++i) {
        char = B.JSString_methods.codeUnitAt$1(source, i);
        if (char === 47)
          return dots !== 0 ? i : -1;
        if (char === 37 || char === 58)
          return -1;
        dots |= char ^ 46;
      }
      return -1;
    },
    _caseInsensitiveCompareStart(prefix, string, start) {
      var t1, result, i, prefixChar, stringChar, delta, lowerChar;
      for (t1 = prefix.length, result = 0, i = 0; i < t1; ++i) {
        prefixChar = B.JSString_methods._codeUnitAt$1(prefix, i);
        stringChar = B.JSString_methods._codeUnitAt$1(string, start + i);
        delta = prefixChar ^ stringChar;
        if (delta !== 0) {
          if (delta === 32) {
            lowerChar = stringChar | delta;
            if (97 <= lowerChar && lowerChar <= 122) {
              result = 32;
              continue;
            }
          }
          return -1;
        }
      }
      return result;
    },
    _symbolMapToStringMap_closure: function _symbolMapToStringMap_closure(t0) {
      this.result = t0;
    },
    NoSuchMethodError_toString_closure: function NoSuchMethodError_toString_closure(t0, t1) {
      this._box_0 = t0;
      this.sb = t1;
    },
    DateTime: function DateTime(t0, t1) {
      this._value = t0;
      this.isUtc = t1;
    },
    DateTime_parse_parseIntOrZero: function DateTime_parse_parseIntOrZero() {
    },
    DateTime_parse_parseMilliAndMicroseconds: function DateTime_parse_parseMilliAndMicroseconds() {
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    _Enum: function _Enum() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    NullThrownError: function NullThrownError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    NoSuchMethodError: function NoSuchMethodError(t0, t1, t2, t3) {
      var _ = this;
      _._core$_receiver = t0;
      _._core$_memberName = t1;
      _._core$_arguments = t2;
      _._namedArguments = t3;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    CyclicInitializationError: function CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Iterable: function Iterable() {
    },
    Iterator: function Iterator() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace(t0) {
      this._stackTrace = t0;
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    _Uri__makePath_closure: function _Uri__makePath_closure() {
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _createTables_build: function _createTables_build(t0) {
      this.tables = t0;
    },
    _createTables_setChars: function _createTables_setChars() {
    },
    _createTables_setRange: function _createTables_setRange() {
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    Expando: function Expando(t0, t1) {
      this._jsWeakMap = t0;
      this.$ti = t1;
    },
    _ChildrenElementList__first(_element) {
      var result = _element.firstElementChild;
      if (result == null)
        throw A.wrapException(A.StateError$("No elements"));
      return result;
    },
    _ElementFactoryProvider_createElement_tag(tag, typeExtension) {
      return document.createElement(tag);
    },
    _EventStreamSubscription$(_target, _eventType, onData, _useCapture, $T) {
      var t1 = onData == null ? null : A._wrapZone(new A._EventStreamSubscription_closure(onData), type$.Event);
      t1 = new A._EventStreamSubscription(_target, _eventType, t1, false, $T._eval$1("_EventStreamSubscription<0>"));
      t1._tryResume$0();
      return t1;
    },
    _convertNativeToDart_XHR_Response(o) {
      var t1;
      if (type$.Document._is(o))
        return o;
      t1 = new A._AcceptStructuredCloneDart2Js([], []);
      t1.mustCopy = true;
      return t1.walk$1(o);
    },
    _wrapZone(callback, $T) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    _wrapBinaryZone(callback, T1, T2) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return callback;
      return t1.bindBinaryCallbackGuarded$2$1(callback, T1, T2);
    },
    HtmlElement: function HtmlElement() {
    },
    AnchorElement: function AnchorElement() {
    },
    AreaElement: function AreaElement() {
    },
    Blob: function Blob() {
    },
    CharacterData: function CharacterData() {
    },
    CssStyleDeclaration: function CssStyleDeclaration() {
    },
    CssStyleDeclarationBase: function CssStyleDeclarationBase() {
    },
    Document: function Document() {
    },
    DomException: function DomException() {
    },
    DomTokenList: function DomTokenList() {
    },
    _ChildrenElementList: function _ChildrenElementList(t0, t1) {
      this._element = t0;
      this._childElements = t1;
    },
    _FrozenElementList: function _FrozenElementList(t0, t1) {
      this._nodeList = t0;
      this.$ti = t1;
    },
    Element: function Element() {
    },
    Event: function Event() {
    },
    EventTarget: function EventTarget() {
    },
    FormElement: function FormElement() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    HttpRequest: function HttpRequest() {
    },
    HttpRequestEventTarget: function HttpRequestEventTarget() {
    },
    ImageData: function ImageData() {
    },
    ImageElement: function ImageElement() {
    },
    Location: function Location() {
    },
    MouseEvent: function MouseEvent() {
    },
    MutationObserver: function MutationObserver() {
    },
    MutationObserver_observe_override: function MutationObserver_observe_override(t0) {
      this.parsedOptions = t0;
    },
    _ChildNodeListLazy: function _ChildNodeListLazy(t0) {
      this._this = t0;
    },
    Node0: function Node0() {
    },
    NodeList: function NodeList() {
    },
    ProgressEvent: function ProgressEvent() {
    },
    Screen: function Screen() {
    },
    SelectElement: function SelectElement() {
    },
    UIEvent: function UIEvent() {
    },
    Window: function Window() {
    },
    WorkerGlobalScope: function WorkerGlobalScope() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _ElementCssClassSet: function _ElementCssClassSet(t0) {
      this._element = t0;
    },
    EventStreamProvider: function EventStreamProvider(t0, t1) {
      this._eventType = t0;
      this.$ti = t1;
    },
    _EventStream: function _EventStream(t0, t1, t2, t3) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _ElementEventStreamImpl: function _ElementEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._pauseCount = 0;
      _._target = t0;
      _._eventType = t1;
      _._onData = t2;
      _._useCapture = t3;
      _.$ti = t4;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0) {
      this.onData = t0;
    },
    _EventStreamSubscription_onData_closure: function _EventStreamSubscription_onData_closure(t0) {
      this.handleData = t0;
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1, t2) {
      var _ = this;
      _._array = t0;
      _._html$_length = t1;
      _._position = -1;
      _._html$_current = null;
      _.$ti = t2;
    },
    _CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase: function _CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin: function _HtmlCollection_JavaScriptObject_ListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin: function _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin: function _NodeList_JavaScriptObject_ListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin: function _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    Device_userAgent() {
      return window.navigator.userAgent;
    },
    _AcceptStructuredClone: function _AcceptStructuredClone() {
    },
    _AcceptStructuredClone_walk_closure: function _AcceptStructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _AcceptStructuredCloneDart2Js: function _AcceptStructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
      this.mustCopy = false;
    },
    CssClassSetImpl: function CssClassSetImpl() {
    },
    CssClassSetImpl_add_closure: function CssClassSetImpl_add_closure(t0) {
      this.value = t0;
    },
    FilteredElementList: function FilteredElementList(t0, t1) {
      this._node = t0;
      this._childNodes = t1;
    },
    FilteredElementList__iterable_closure: function FilteredElementList__iterable_closure() {
    },
    FilteredElementList__iterable_closure0: function FilteredElementList__iterable_closure0() {
    },
    FilteredElementList_removeRange_closure: function FilteredElementList_removeRange_closure() {
    },
    KeyRange: function KeyRange() {
    },
    _callDartFunction(callback, captureThis, $self, $arguments) {
      var arguments0, t1, dartArgs;
      A._asBool(captureThis);
      type$.List_dynamic._as($arguments);
      if (captureThis) {
        arguments0 = [$self];
        B.JSArray_methods.addAll$1(arguments0, $arguments);
        $arguments = arguments0;
      }
      t1 = type$.dynamic;
      dartArgs = A.List_List$from(J.map$1$1$ax($arguments, A.js___convertToDart$closure(), t1), true, t1);
      return A._convertToJS(A.Function_apply(type$.Function._as(callback), dartArgs, null));
    },
    _defineProperty(o, $name, value) {
      var exception;
      try {
        if (Object.isExtensible(o) && !Object.prototype.hasOwnProperty.call(o, $name)) {
          Object.defineProperty(o, $name, {value: value});
          return true;
        }
      } catch (exception) {
      }
      return false;
    },
    _getOwnProperty(o, $name) {
      if (Object.prototype.hasOwnProperty.call(o, $name))
        return o[$name];
      return null;
    },
    _convertToJS(o) {
      if (o == null || typeof o == "string" || typeof o == "number" || A._isBool(o))
        return o;
      if (o instanceof A.JsObject)
        return o._js$_jsObject;
      if (A.isBrowserObject(o))
        return o;
      if (type$.TypedData._is(o))
        return o;
      if (o instanceof A.DateTime)
        return A.Primitives_lazyAsJsDate(o);
      if (type$.Function._is(o))
        return A._getJsProxy(o, "$dart_jsFunction", new A._convertToJS_closure());
      return A._getJsProxy(o, "_$dart_jsObject", new A._convertToJS_closure0($.$get$_dartProxyCtor()));
    },
    _getJsProxy(o, propertyName, createProxy) {
      var jsProxy = A._getOwnProperty(o, propertyName);
      if (jsProxy == null) {
        jsProxy = createProxy.call$1(o);
        A._defineProperty(o, propertyName, jsProxy);
      }
      return jsProxy;
    },
    _convertToDart(o) {
      if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
        return o;
      else if (o instanceof Object && A.isBrowserObject(o))
        return o;
      else if (o instanceof Object && type$.TypedData._is(o))
        return o;
      else if (o instanceof Date)
        return A.DateTime$fromMillisecondsSinceEpoch(A._asInt(o.getTime()), false);
      else if (o.constructor === $.$get$_dartProxyCtor())
        return o.o;
      else
        return A._wrapToDart(o);
    },
    _wrapToDart(o) {
      if (typeof o == "function")
        return A._getDartProxy(o, $.$get$DART_CLOSURE_PROPERTY_NAME(), new A._wrapToDart_closure());
      if (o instanceof Array)
        return A._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new A._wrapToDart_closure0());
      return A._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new A._wrapToDart_closure1());
    },
    _getDartProxy(o, propertyName, createProxy) {
      var dartProxy = A._getOwnProperty(o, propertyName);
      if (dartProxy == null || !(o instanceof Object)) {
        dartProxy = createProxy.call$1(o);
        A._defineProperty(o, propertyName, dartProxy);
      }
      return dartProxy;
    },
    _convertToJS_closure: function _convertToJS_closure() {
    },
    _convertToJS_closure0: function _convertToJS_closure0(t0) {
      this.ctor = t0;
    },
    _wrapToDart_closure: function _wrapToDart_closure() {
    },
    _wrapToDart_closure0: function _wrapToDart_closure0() {
    },
    _wrapToDart_closure1: function _wrapToDart_closure1() {
    },
    JsObject: function JsObject(t0) {
      this._js$_jsObject = t0;
    },
    JsFunction: function JsFunction(t0) {
      this._js$_jsObject = t0;
    },
    JsArray: function JsArray(t0, t1) {
      this._js$_jsObject = t0;
      this.$ti = t1;
    },
    _JsArray_JsObject_ListMixin: function _JsArray_JsObject_ListMixin() {
    },
    promiseToFuture(jsPromise, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new A._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(A.convertDartClosureToJS(new A.promiseToFuture_closure(completer, $T), 1), A.convertDartClosureToJS(new A.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    NullRejectionException: function NullRejectionException(t0) {
      this.isUndefined = t0;
    },
    max(a, b, $T) {
      A.checkTypeBound($T, type$.num, "T", "max");
      return Math.max($T._as(a), $T._as(b));
    },
    Random_Random(seed) {
      var t1;
      if (seed == null)
        t1 = B.C__JSRandom;
      else {
        t1 = new A._Random();
        t1._Random$1(seed);
      }
      return t1;
    },
    _JSRandom: function _JSRandom() {
    },
    _Random: function _Random() {
      this._hi = this._lo = 0;
    },
    _RectangleBase: function _RectangleBase() {
    },
    Rectangle: function Rectangle(t0, t1, t2, t3, t4) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.width = t2;
      _.height = t3;
      _.$ti = t4;
    },
    AttributeClassSet: function AttributeClassSet(t0) {
      this._svg$_element = t0;
    },
    SvgElement: function SvgElement() {
    },
    CanonicalizedMap: function CanonicalizedMap() {
    },
    CanonicalizedMap_addAll_closure: function CanonicalizedMap_addAll_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_entries_closure: function CanonicalizedMap_entries_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_forEach_closure: function CanonicalizedMap_forEach_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    CanonicalizedMap_keys_closure: function CanonicalizedMap_keys_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_map_closure: function CanonicalizedMap_map_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.transform = t1;
      _.K2 = t2;
      _.V2 = t3;
    },
    CanonicalizedMap_values_closure: function CanonicalizedMap_values_closure(t0) {
      this.$this = t0;
    },
    ConnectorApi$(apiClient) {
      return new A.ConnectorApi(apiClient);
    },
    ConnectorApi: function ConnectorApi(t0) {
      this.apiClient = t0;
    },
    ApiClient$0(basePath) {
      var t2,
        t1 = A.zoneClient();
      if (t1 == null)
        t1 = new A.BrowserClient(A.LinkedHashSet_LinkedHashSet$_empty(type$.HttpRequest));
      t2 = type$.String;
      return new A.ApiClient0(basePath, t1, A.LinkedHashMap_LinkedHashMap$_empty(t2, t2), A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.Authentication));
    },
    ApiClient__deserialize0(value, targetType, growable) {
      var valueString, error, trace, t2, match, t3, exception, _null = null, t1 = {};
      try {
        switch (targetType) {
          case "String":
            t1 = typeof value == "string" ? value : J.toString$0$(value);
            return t1;
          case "int":
            t1 = A._isInt(value) ? value : A.int_parse(A.S(value), _null);
            return t1;
          case "double":
            t1 = typeof value == "number" ? value : A.double_parse(A.S(value));
            return t1;
          case "bool":
            if (A._isBool(value))
              return value;
            valueString = A.S(value).toLowerCase();
            t1 = J.$eq$(valueString, "true") || J.$eq$(valueString, "1");
            return t1;
          case "AccessEnum":
            t1 = $.AccessEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.AccessEnumTypeTransformer__instance = B.C_AccessEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Accessor":
            t1 = A.Accessor_fromJson(value);
            return t1;
          case "Accessors":
            t1 = A.Accessors_fromJson(value);
            return t1;
          case "Activities":
            t1 = A.Activities_fromJson(value);
            return t1;
          case "Activity":
            t1 = A.Activity_fromJson(value);
            return t1;
          case "Aesthetics":
            t1 = A.Aesthetics_fromJson(value);
            return t1;
          case "AllocationCloud":
            t1 = A.AllocationCloud_fromJson(value);
            return t1;
          case "AllocationCloudStatus":
            t1 = A.AllocationCloudStatus_fromJson(value);
            return t1;
          case "AllocationCloudUrl":
            t1 = A.AllocationCloudUrl_fromJson(value);
            return t1;
          case "AllocationCloudUrls":
            t1 = A.AllocationCloudUrls_fromJson(value);
            return t1;
          case "AllocationStatusEnum":
            t1 = $.AllocationStatusEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.AllocationStatusEnumTypeTransformer__instance = B.C_AllocationStatusEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Analysis":
            t1 = A.Analysis_fromJson(value);
            return t1;
          case string$.Analyt:
            t1 = A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "Application":
            t1 = A.Application_fromJson(value);
            return t1;
          case "ApplicationNameEnum":
            t1 = $.ApplicationNameEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ApplicationNameEnumTypeTransformer__instance = B.C_ApplicationNameEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Asset":
            t1 = A.Asset_fromJson(value);
            return t1;
          case "AssetFormats":
            t1 = A.AssetFormats_fromJson(value);
            return t1;
          case "Assets":
            t1 = A.Assets_fromJson(value);
            return t1;
          case "ByteDescriptor":
            t1 = A.ByteDescriptor_fromJson(value);
            return t1;
          case "CapabilitiesEnum":
            t1 = $.CapabilitiesEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.CapabilitiesEnumTypeTransformer__instance = B.C_CapabilitiesEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Classification":
            t1 = A.Classification_fromJson(value);
            return t1;
          case "ClassificationGenericEnum":
            t1 = $.ClassificationGenericEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ClassificationGenericEnumTypeTransformer__instance = B.C_ClassificationGenericEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "ClassificationRenderingEnum":
            t1 = $.ClassificationRenderingEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ClassificationRenderingEnumTypeTransformer__instance = B.C_ClassificationRenderingEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "ClassificationSpecificEnum":
            t1 = $.ClassificationSpecificEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ClassificationSpecificEnumTypeTransformer__instance = B.C_ClassificationSpecificEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "CodeAnalysis":
            t1 = A.CodeAnalysis_fromJson(value);
            return t1;
          case "ConnectorSnapshot":
            t1 = A.ConnectorSnapshot_fromJson(value);
            return t1;
          case "Context":
            t1 = A.Context_fromJson(value);
            return t1;
          case "Distribution":
            t1 = A.Distribution_fromJson(value);
            return t1;
          case "Distributions":
            t1 = A.Distributions_fromJson(value);
            return t1;
          case "Edges":
            t1 = A.Edges_fromJson(value);
            return t1;
          case "EmbeddedModelSchema":
            t1 = A.EmbeddedModelSchema_fromJson(value);
            return t1;
          case "EmbeddedModelSchemaSemanticVersionEnum":
            t1 = $.EmbeddedModelSchemaSemanticVersionEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.EmbeddedModelSchemaSemanticVersionEnumTypeTransformer__instance = B.C_EmbeddedModelSchemaSemanticVersionEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Embedding":
            t1 = A.Embedding_fromJson(value);
            return t1;
          case "Embeddings":
            t1 = A.Embeddings_fromJson(value);
            return t1;
          case "ExternalProvider":
            t1 = A.ExternalProvider_fromJson(value);
            return t1;
          case "ExternalProviderProfileData":
            t1 = A.ExternalProviderProfileData_fromJson(value);
            return t1;
          case "ExternalProviderTypeEnum":
            t1 = $.ExternalProviderTypeEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ExternalProviderTypeEnumTypeTransformer__instance = B.C_ExternalProviderTypeEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "ExternalProviders":
            t1 = A.ExternalProviders_fromJson(value);
            return t1;
          case "ExternallySourcedEnum":
            t1 = $.ExternallySourcedEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ExternallySourcedEnumTypeTransformer__instance = B.C_ExternallySourcedEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "FileFormat":
            t1 = A.FileFormat_fromJson(value);
            return t1;
          case "FileMetadata":
            t1 = A.FileMetadata_fromJson(value);
            return t1;
          case "FlattenedActivities":
            t1 = A.FlattenedActivities_fromJson(value);
            return t1;
          case "FlattenedActivity":
            t1 = A.FlattenedActivity_fromJson(value);
            return t1;
          case "FlattenedAnalysis":
            t1 = A.FlattenedAnalysis_fromJson(value);
            return t1;
          case "FlattenedAsset":
            t1 = A.FlattenedAsset_fromJson(value);
            return t1;
          case "FlattenedAssets":
            t1 = A.FlattenedAssets_fromJson(value);
            return t1;
          case "FlattenedDistribution":
            t1 = A.FlattenedDistribution_fromJson(value);
            return t1;
          case "FlattenedDistributions":
            t1 = A.FlattenedDistributions_fromJson(value);
            return t1;
          case "FlattenedFormat":
            t1 = A.FlattenedFormat_fromJson(value);
            return t1;
          case "FlattenedFormats":
            t1 = A.FlattenedFormats_fromJson(value);
            return t1;
          case "FlattenedImageAnalysis":
            t1 = A.FlattenedImageAnalysis_fromJson(value);
            return t1;
          case "FlattenedOCRAnalysis":
            t1 = A.FlattenedOCRAnalysis_fromJson(value);
            return t1;
          case "FlattenedPerson":
            t1 = A.FlattenedPerson_fromJson(value);
            return t1;
          case "FlattenedPersons":
            t1 = A.FlattenedPersons_fromJson(value);
            return t1;
          case "FlattenedPreview":
            t1 = A.FlattenedPreview_fromJson(value);
            return t1;
          case "FlattenedSensitive":
            t1 = A.FlattenedSensitive_fromJson(value);
            return t1;
          case "FlattenedSensitives":
            t1 = A.FlattenedSensitives_fromJson(value);
            return t1;
          case "FlattenedShare":
            t1 = A.FlattenedShare_fromJson(value);
            return t1;
          case "FlattenedShares":
            t1 = A.FlattenedShares_fromJson(value);
            return t1;
          case "FlattenedTag":
            t1 = A.FlattenedTag_fromJson(value);
            return t1;
          case "FlattenedTags":
            t1 = A.FlattenedTags_fromJson(value);
            return t1;
          case "FlattenedUserProfile":
            t1 = A.FlattenedUserProfile_fromJson(value);
            return t1;
          case "FlattenedWebsite":
            t1 = A.FlattenedWebsite_fromJson(value);
            return t1;
          case "FlattenedWebsites":
            t1 = A.FlattenedWebsites_fromJson(value);
            return t1;
          case "Font":
            t1 = A.Font_fromJson(value);
            return t1;
          case "Format":
            t1 = A.Format_fromJson(value);
            return t1;
          case "FragmentFormat":
            t1 = A.FragmentFormat_fromJson(value);
            return t1;
          case "FragmentMetadata":
            t1 = A.FragmentMetadata_fromJson(value);
            return t1;
          case "GitHubDistribution":
            t1 = A.GitHubDistribution_fromJson(value);
            return t1;
          case "GitHubGistDistribution":
            t1 = A.GitHubGistDistribution_fromJson(value);
            return t1;
          case "GraphicalImageDescriptiveStatistics":
            t1 = A.GraphicalImageDescriptiveStatistics_fromJson(value);
            return t1;
          case "GraphicalImageProcessing":
            t1 = A.GraphicalImageProcessing_fromJson(value);
            return t1;
          case "GraphicalImageStatistics":
            t1 = A.GraphicalImageStatistics_fromJson(value);
            return t1;
          case "GraphicalMachineLearningProcessingEvent":
            t1 = A.GraphicalMachineLearningProcessingEvent_fromJson(value);
            return t1;
          case "GraphicalOCRDescriptiveStatistics":
            t1 = A.GraphicalOCRDescriptiveStatistics_fromJson(value);
            return t1;
          case string$.Graphi:
            t1 = A.GraphicalOCRDescriptiveStatisticsConfidence_fromJson(value);
            return t1;
          case "GraphicalOCRProcessing":
            t1 = A.GraphicalOCRProcessing_fromJson(value);
            return t1;
          case "GraphicalOCRStatistics":
            t1 = A.GraphicalOCRStatistics_fromJson(value);
            return t1;
          case "GraphicalSVGStatistics":
            t1 = A.GraphicalSVGStatistics_fromJson(value);
            return t1;
          case "GroupedTimestamp":
            t1 = A.GroupedTimestamp_fromJson(value);
            return t1;
          case "Health":
            t1 = A.Health_fromJson(value);
            return t1;
          case "ImageAnalysis":
            t1 = A.ImageAnalysis_fromJson(value);
            return t1;
          case "MailgunDistribution":
            t1 = A.MailgunDistribution_fromJson(value);
            return t1;
          case "MailgunMetadata":
            t1 = A.MailgunMetadata_fromJson(value);
            return t1;
          case "MechanismEnum":
            t1 = $.MechanismEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Model":
            t1 = A.Model_fromJson(value);
            return t1;
          case "ModelTypeEnum":
            t1 = $.ModelTypeEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ModelTypeEnumTypeTransformer__instance = B.C_ModelTypeEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "ModelUsageEnum":
            t1 = $.ModelUsageEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ModelUsageEnumTypeTransformer__instance = B.C_ModelUsageEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Node":
            t1 = A.Node_fromJson(value);
            return t1;
          case "NodeTypeEnum":
            t1 = $.NodeTypeEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.NodeTypeEnumTypeTransformer__instance = B.C_NodeTypeEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "OCRAnalysis":
            t1 = A.OCRAnalysis_fromJson(value);
            return t1;
          case "OSHealth":
            t1 = A.OSHealth_fromJson(value);
            return t1;
          case "Person":
            t1 = A.Person_fromJson(value);
            return t1;
          case "PersonAccess":
            t1 = A.PersonAccess_fromJson(value);
            return t1;
          case "PersonAccessScopedEnum":
            t1 = $.PersonAccessScopedEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.PersonAccessScopedEnumTypeTransformer__instance = B.C_PersonAccessScopedEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "PersonBasicType":
            t1 = A.PersonBasicType_fromJson(value);
            return t1;
          case "PersonType":
            t1 = A.PersonType_fromJson(value);
            return t1;
          case "Persons":
            t1 = A.Persons_fromJson(value);
            return t1;
          case "PlatformEnum":
            t1 = $.PlatformEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.PlatformEnumTypeTransformer__instance = B.C_PlatformEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Preview":
            t1 = A.Preview_fromJson(value);
            return t1;
          case "PrivacyEnum":
            t1 = $.PrivacyEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.PrivacyEnumTypeTransformer__instance = B.C_PrivacyEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Reaction":
            t1 = A.Reaction_fromJson(value);
            return t1;
          case "Recipients":
            t1 = A.Recipients_fromJson(value);
            return t1;
          case "ReferencedActivity":
            t1 = A.ReferencedActivity_fromJson(value);
            return t1;
          case "ReferencedAsset":
            t1 = A.ReferencedAsset_fromJson(value);
            return t1;
          case "ReferencedDistribution":
            t1 = A.ReferencedDistribution_fromJson(value);
            return t1;
          case "ReferencedFormat":
            t1 = A.ReferencedFormat_fromJson(value);
            return t1;
          case "ReferencedPerson":
            t1 = A.ReferencedPerson_fromJson(value);
            return t1;
          case "ReferencedSensitive":
            t1 = A.ReferencedSensitive_fromJson(value);
            return t1;
          case "ReferencedShare":
            t1 = A.ReferencedShare_fromJson(value);
            return t1;
          case "ReferencedTag":
            t1 = A.ReferencedTag_fromJson(value);
            return t1;
          case "ReferencedWebsite":
            t1 = A.ReferencedWebsite_fromJson(value);
            return t1;
          case "Relationship":
            t1 = A.Relationship_fromJson(value);
            return t1;
          case "ReuseReaction":
            t1 = A.ReuseReaction_fromJson(value);
            return t1;
          case "ReuseSuggestion":
            t1 = A.ReuseSuggestion_fromJson(value);
            return t1;
          case "Role":
            t1 = $.RoleTypeTransformer__instance;
            t1 = (t1 == null ? $.RoleTypeTransformer__instance = B.C_RoleTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "SaveSuggestion":
            t1 = A.SaveSuggestion_fromJson(value);
            return t1;
          case "Score":
            t1 = A.Score_fromJson(value);
            return t1;
          case "Searched":
            t1 = A.Searched_fromJson(value);
            return t1;
          case "SearchedAsset":
            t1 = A.SearchedAsset_fromJson(value);
            return t1;
          case "SearchedAssets":
            t1 = A.SearchedAssets_fromJson(value);
            return t1;
          case "SearchedMatchEnum":
            t1 = $.SearchedMatchEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.SearchedMatchEnumTypeTransformer__instance = B.C_SearchedMatchEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "SeededAssetMetadata":
            t1 = A.SeededAssetMetadata_fromJson(value);
            return t1;
          case "SeededAssetSensitive":
            t1 = A.SeededAssetSensitive_fromJson(value);
            return t1;
          case "SeededAssetTag":
            t1 = A.SeededAssetTag_fromJson(value);
            return t1;
          case "SeededAssetWebsite":
            t1 = A.SeededAssetWebsite_fromJson(value);
            return t1;
          case "SeededClassification":
            t1 = A.SeededClassification_fromJson(value);
            return t1;
          case "SeededConnectorAsset":
            t1 = A.SeededConnectorAsset_fromJson(value);
            return t1;
          case "SeededConnectorConnection":
            t1 = A.SeededConnectorConnection_fromJson(value);
            return t1;
          case "SeededConnectorCreation":
            t1 = A.SeededConnectorCreation_fromJson(value);
            return t1;
          case "SeededConnectorTracking":
            t1 = A.SeededConnectorTracking_fromJson(value);
            return t1;
          case "SeededFile":
            t1 = A.SeededFile_fromJson(value);
            return t1;
          case "SeededFormat":
            t1 = A.SeededFormat_fromJson(value);
            return t1;
          case "SeededFragment":
            t1 = A.SeededFragment_fromJson(value);
            return t1;
          case "SeededPerson":
            t1 = A.SeededPerson_fromJson(value);
            return t1;
          case "SeededTag":
            t1 = A.SeededTag_fromJson(value);
            return t1;
          case "SeededTrackedAdoptionEvent":
            t1 = A.SeededTrackedAdoptionEvent_fromJson(value);
            return t1;
          case "SeededTrackedApplication":
            t1 = A.SeededTrackedApplication_fromJson(value);
            return t1;
          case "SeededTrackedAssetEvent":
            t1 = A.SeededTrackedAssetEvent_fromJson(value);
            return t1;
          case "SeededTrackedAssetsEvent":
            t1 = A.SeededTrackedAssetsEvent_fromJson(value);
            return t1;
          case "SeededTrackedAssetsEventMetadata":
            t1 = A.SeededTrackedAssetsEventMetadata_fromJson(value);
            return t1;
          case "SeededTrackedFormatEvent":
            t1 = A.SeededTrackedFormatEvent_fromJson(value);
            return t1;
          case "SeededTrackedInteractionEvent":
            t1 = A.SeededTrackedInteractionEvent_fromJson(value);
            return t1;
          case string$.SeededI:
            t1 = A.SeededTrackedInteractionEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "SeededTrackedKeyboardEvent":
            t1 = A.SeededTrackedKeyboardEvent_fromJson(value);
            return t1;
          case string$.SeededK:
            t1 = A.SeededTrackedKeyboardEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "SeededTrackedMachineLearningEvent":
            t1 = A.SeededTrackedMachineLearningEvent_fromJson(value);
            return t1;
          case "SeededTrackedSessionEvent":
            t1 = A.SeededTrackedSessionEvent_fromJson(value);
            return t1;
          case "SeededWebsite":
            t1 = A.SeededWebsite_fromJson(value);
            return t1;
          case "Sensitive":
            t1 = A.Sensitive_fromJson(value);
            return t1;
          case "SensitiveCategoryEnum":
            t1 = $.SensitiveCategoryEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.SensitiveCategoryEnumTypeTransformer__instance = B.C_SensitiveCategoryEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "SensitiveMetadata":
            t1 = A.SensitiveMetadata_fromJson(value);
            return t1;
          case "SensitiveSeverityEnum":
            t1 = $.SensitiveSeverityEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.SensitiveSeverityEnumTypeTransformer__instance = B.C_SensitiveSeverityEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Sensitives":
            t1 = A.Sensitives_fromJson(value);
            return t1;
          case "Share":
            t1 = A.Share_fromJson(value);
            return t1;
          case "Shares":
            t1 = A.Shares_fromJson(value);
            return t1;
          case "Space":
            t1 = A.Space_fromJson(value);
            return t1;
          case "Suggestion":
            t1 = A.Suggestion_fromJson(value);
            return t1;
          case "SuggestionTarget":
            t1 = A.SuggestionTarget_fromJson(value);
            return t1;
          case "SystemExecutionCpuInformation":
            t1 = A.SystemExecutionCpuInformation_fromJson(value);
            return t1;
          case "SystemExecutionInformation":
            t1 = A.SystemExecutionInformation_fromJson(value);
            return t1;
          case "TLPCodeDirectoryAnalytics":
            t1 = A.TLPCodeDirectoryAnalytics_fromJson(value);
            return t1;
          case "TLPCodeFileAnalytics":
            t1 = A.TLPCodeFileAnalytics_fromJson(value);
            return t1;
          case "TLPCodeFragmentClassification":
            t1 = A.TLPCodeFragmentClassification_fromJson(value);
            return t1;
          case "TLPCodeFragmentClassificationMetadata":
            t1 = A.TLPCodeFragmentClassificationMetadata_fromJson(value);
            return t1;
          case "TLPCodeFragmentDescription":
            t1 = A.TLPCodeFragmentDescription_fromJson(value);
            return t1;
          case "TLPCodeFragmentDescriptiveStatistics":
            t1 = A.TLPCodeFragmentDescriptiveStatistics_fromJson(value);
            return t1;
          case "TLPCodeFragmentReclassification":
            t1 = A.TLPCodeFragmentReclassification_fromJson(value);
            return t1;
          case "TLPCodeFragmentReclassificationUpdates":
            t1 = A.TLPCodeFragmentReclassificationUpdates_fromJson(value);
            return t1;
          case "TLPCodeFragmentStatistics":
            t1 = A.TLPCodeFragmentStatistics_fromJson(value);
            return t1;
          case "TLPCodeFragmentSuggestedReuse":
            t1 = A.TLPCodeFragmentSuggestedReuse_fromJson(value);
            return t1;
          case "TLPCodeFragmentSuggestedSave":
            t1 = A.TLPCodeFragmentSuggestedSave_fromJson(value);
            return t1;
          case "TLPCodeFragmentTagify":
            t1 = A.TLPCodeFragmentTagify_fromJson(value);
            return t1;
          case "TLPCodeProcessing":
            t1 = A.TLPCodeProcessing_fromJson(value);
            return t1;
          case "TLPCodeRepositoryAnalytics":
            t1 = A.TLPCodeRepositoryAnalytics_fromJson(value);
            return t1;
          case "TLPCodeSnippetAnalytics":
            t1 = A.TLPCodeSnippetAnalytics_fromJson(value);
            return t1;
          case "TLPCodeSnippetSuggestedInteractions":
            t1 = A.TLPCodeSnippetSuggestedInteractions_fromJson(value);
            return t1;
          case "TLPCodeSnippetTagifyCode":
            t1 = A.TLPCodeSnippetTagifyCode_fromJson(value);
            return t1;
          case "TLPMachineLearningProcessingEvent":
            t1 = A.TLPMachineLearningProcessingEvent_fromJson(value);
            return t1;
          case "Tag":
            t1 = A.Tag_fromJson(value);
            return t1;
          case "TagCategoryEnum":
            t1 = $.TagCategoryEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.TagCategoryEnumTypeTransformer__instance = B.C_TagCategoryEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Tags":
            t1 = A.Tags_fromJson(value);
            return t1;
          case "TextLocation":
            t1 = A.TextLocation_fromJson(value);
            return t1;
          case "TextMatch":
            t1 = A.TextMatch_fromJson(value);
            return t1;
          case "Theme":
            t1 = A.Theme_fromJson(value);
            return t1;
          case "TrackedAssetEventCreationMetadata":
            t1 = A.TrackedAssetEventCreationMetadata_fromJson(value);
            return t1;
          case string$.TrackeAEC:
            t1 = A.TrackedAssetEventCreationMetadataClipboard_fromJson(value);
            return t1;
          case "TrackedAssetEventCreationMetadataFile":
            t1 = A.TrackedAssetEventCreationMetadataFile_fromJson(value);
            return t1;
          case string$.TrackeAEF:
            t1 = A.TrackedAssetEventFormatReclassificationMetadata_fromJson(value);
            return t1;
          case string$.TrackeAEI:
            t1 = A.TrackedAssetEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "TrackedAssetEventMetadata":
            t1 = A.TrackedAssetEventMetadata_fromJson(value);
            return t1;
          case "TrackedAssetEventRenameMetadata":
            t1 = A.TrackedAssetEventRenameMetadata_fromJson(value);
            return t1;
          case string$.TrackeAs:
            t1 = A.TrackedAssetsEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "TrackedAssetsEventSearchMetadata":
            t1 = A.TrackedAssetsEventSearchMetadata_fromJson(value);
            return t1;
          case "TrackedAssetsEventSearchMetadataResults":
            t1 = A.TrackedAssetsEventSearchMetadataResults_fromJson(value);
            return t1;
          case string$.TrackeF:
            t1 = A.TrackedFormatEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "TrackedFormatEventMetadata":
            t1 = A.TrackedFormatEventMetadata_fromJson(value);
            return t1;
          case string$.TrackeS:
            t1 = A.TrackedSessionEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "TransferableBytes":
            t1 = A.TransferableBytes_fromJson(value);
            return t1;
          case "TransferableString":
            t1 = A.TransferableString_fromJson(value);
            return t1;
          case "UserProfile":
            t1 = A.UserProfile_fromJson(value);
            return t1;
          case "Website":
            t1 = A.Website_fromJson(value);
            return t1;
          case "Websites":
            t1 = A.Websites_fromJson(value);
            return t1;
          default:
            t1.match = null;
            if (type$.List_dynamic._is(value)) {
              t2 = $.$get$_regList0().firstMatch$1(targetType);
              if (t2 == null)
                match = _null;
              else {
                t2 = t2._match;
                if (1 >= t2.length)
                  return A.ioore(t2, 1);
                match = t2[1];
              }
              t1.match = match;
              t2 = match != null;
            } else
              t2 = false;
            if (t2) {
              t1 = J.map$1$1$ax(value, new A.ApiClient__deserialize_closure2(t1, false), type$.dynamic).toList$1$growable(0, false);
              return t1;
            }
            if (type$.Set_dynamic._is(value)) {
              t2 = $.$get$_regSet0().firstMatch$1(targetType);
              if (t2 == null)
                match = _null;
              else {
                t2 = t2._match;
                if (1 >= t2.length)
                  return A.ioore(t2, 1);
                match = t2[1];
              }
              t1.match = match;
              t2 = match != null;
            } else
              t2 = false;
            if (t2) {
              t1 = J.map$1$1$ax(value, new A.ApiClient__deserialize_closure3(t1, false), type$.dynamic);
              t1 = A.LinkedHashSet_LinkedHashSet$of(t1, A._instanceType(t1)._eval$1("Iterable.E"));
              return t1;
            }
            if (type$.Map_dynamic_dynamic._is(value)) {
              t2 = $.$get$_regMap0().firstMatch$1(targetType);
              if (t2 == null)
                match = _null;
              else {
                t2 = t2._match;
                if (1 >= t2.length)
                  return A.ioore(t2, 1);
                match = t2[1];
              }
              t1.match = match;
              t2 = match != null;
            } else
              t2 = false;
            if (t2) {
              t2 = type$.String;
              t3 = type$.dynamic;
              t3 = A.LinkedHashMap_LinkedHashMap$fromIterables(J.cast$1$0$ax(value.get$keys(), t2), J.map$1$1$ax(J.get$values$z(value), new A.ApiClient__deserialize_closure4(t1, false), t3), t2, t3);
              return t3;
            }
        }
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (type$.Exception._is(t1)) {
          error = t1;
          trace = A.getTraceFromException(exception);
          throw A.wrapException(A.ApiException$withInner0(500, "Exception during deserialization.", error, trace));
        } else
          throw exception;
      }
      throw A.wrapException(A.ApiException$0(500, string$.Could_));
    },
    ApiClient0: function ApiClient0(t0, t1, t2, t3) {
      var _ = this;
      _.basePath = t0;
      _._api_client$_client = t1;
      _._api_client$_defaultHeaderMap = t2;
      _._api_client$_authentications = t3;
    },
    ApiClient_invokeAPI_closure0: function ApiClient_invokeAPI_closure0() {
    },
    ApiClient__deserialize_closure2: function ApiClient__deserialize_closure2(t0, t1) {
      this._box_0 = t0;
      this.growable = t1;
    },
    ApiClient__deserialize_closure3: function ApiClient__deserialize_closure3(t0, t1) {
      this._box_0 = t0;
      this.growable = t1;
    },
    ApiClient__deserialize_closure4: function ApiClient__deserialize_closure4(t0, t1) {
      this._box_0 = t0;
      this.growable = t1;
    },
    ApiException$0(code, message) {
      return new A.ApiException0(code, message, null, null);
    },
    ApiException$withInner0(code, message, innerException, stackTrace) {
      return new A.ApiException0(code, message, innerException, stackTrace);
    },
    ApiException0: function ApiException0(t0, t1, t2, t3) {
      var _ = this;
      _.code = t0;
      _.message = t1;
      _.innerException = t2;
      _.stackTrace = t3;
    },
    AllocationsApi: function AllocationsApi(t0) {
      this.apiClient = t0;
    },
    AssetsApi: function AssetsApi(t0) {
      this.apiClient = t0;
    },
    LinkifyApi: function LinkifyApi(t0) {
      this.apiClient = t0;
    },
    OSApi: function OSApi(t0) {
      this.apiClient = t0;
    },
    WellKnownApi: function WellKnownApi(t0) {
      this.apiClient = t0;
    },
    ApiClient$(basePath) {
      var t2, t3, _s5_ = "auth0",
        _s13_ = "authorization",
        t1 = A.zoneClient();
      if (t1 == null)
        t1 = new A.BrowserClient(A.LinkedHashSet_LinkedHashSet$_empty(type$.HttpRequest));
      t2 = type$.String;
      t3 = A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.Authentication_2);
      t3.$indexSet(0, _s5_, new A.OAuth());
      t3.$indexSet(0, _s5_, new A.OAuth());
      t3.$indexSet(0, _s5_, new A.OAuth());
      t3.$indexSet(0, _s13_, new A.OAuth());
      t3.$indexSet(0, _s13_, new A.OAuth());
      t3.$indexSet(0, _s13_, new A.OAuth());
      return new A.ApiClient(basePath, t1, A.LinkedHashMap_LinkedHashMap$_empty(t2, t2), t3);
    },
    ApiClient__deserialize(value, targetType, growable) {
      var valueString, error, trace, t2, match, t3, exception, _null = null, t1 = {};
      try {
        switch (targetType) {
          case "String":
            t1 = typeof value == "string" ? value : J.toString$0$(value);
            return t1;
          case "int":
            t1 = A._isInt(value) ? value : A.int_parse(A.S(value), _null);
            return t1;
          case "double":
            t1 = typeof value == "number" ? value : A.double_parse(A.S(value));
            return t1;
          case "bool":
            if (A._isBool(value))
              return value;
            valueString = A.S(value).toLowerCase();
            t1 = J.$eq$(valueString, "true") || J.$eq$(valueString, "1");
            return t1;
          case "AccessEnum":
            t1 = $.AccessEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.AccessEnumTypeTransformer__instance = B.C_AccessEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Accessor":
            t1 = A.Accessor_fromJson(value);
            return t1;
          case "Accessors":
            t1 = A.Accessors_fromJson(value);
            return t1;
          case "Activities":
            t1 = A.Activities_fromJson(value);
            return t1;
          case "Activity":
            t1 = A.Activity_fromJson(value);
            return t1;
          case "Aesthetics":
            t1 = A.Aesthetics_fromJson(value);
            return t1;
          case "AllocationCloud":
            t1 = A.AllocationCloud_fromJson(value);
            return t1;
          case "AllocationCloudStatus":
            t1 = A.AllocationCloudStatus_fromJson(value);
            return t1;
          case "AllocationCloudUrl":
            t1 = A.AllocationCloudUrl_fromJson(value);
            return t1;
          case "AllocationCloudUrls":
            t1 = A.AllocationCloudUrls_fromJson(value);
            return t1;
          case "AllocationStatusEnum":
            t1 = $.AllocationStatusEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.AllocationStatusEnumTypeTransformer__instance = B.C_AllocationStatusEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Allocations":
            t1 = A.Allocations_fromJson(value);
            return t1;
          case "Analyses":
            t1 = A.Analyses_fromJson(value);
            return t1;
          case "Analysis":
            t1 = A.Analysis_fromJson(value);
            return t1;
          case string$.Analyt:
            t1 = A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "Application":
            t1 = A.Application_fromJson(value);
            return t1;
          case "ApplicationNameEnum":
            t1 = $.ApplicationNameEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ApplicationNameEnumTypeTransformer__instance = B.C_ApplicationNameEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Applications":
            t1 = A.Applications_fromJson(value);
            return t1;
          case "Asset":
            t1 = A.Asset_fromJson(value);
            return t1;
          case "AssetFormats":
            t1 = A.AssetFormats_fromJson(value);
            return t1;
          case "AssetReclassification":
            t1 = A.AssetReclassification_fromJson(value);
            return t1;
          case "Assets":
            t1 = A.Assets_fromJson(value);
            return t1;
          case "Auth0":
            t1 = A.Auth0_fromJson(value);
            return t1;
          case "Auth0Identity":
            t1 = A.Auth0Identity_fromJson(value);
            return t1;
          case "Auth0Redirects":
            t1 = A.Auth0Redirects_fromJson(value);
            return t1;
          case "Auth0User":
            t1 = A.Auth0User_fromJson(value);
            return t1;
          case "Auth0UserMetadata":
            t1 = A.Auth0UserMetadata_fromJson(value);
            return t1;
          case "AvailableFormats":
            t1 = A.AvailableFormats_fromJson(value);
            return t1;
          case "ByteDescriptor":
            t1 = A.ByteDescriptor_fromJson(value);
            return t1;
          case "CapabilitiesEnum":
            t1 = $.CapabilitiesEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.CapabilitiesEnumTypeTransformer__instance = B.C_CapabilitiesEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "ChallengedPKCE":
            t1 = A.ChallengedPKCE_fromJson(value);
            return t1;
          case "Classification":
            t1 = A.Classification_fromJson(value);
            return t1;
          case "ClassificationGenericEnum":
            t1 = $.ClassificationGenericEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ClassificationGenericEnumTypeTransformer__instance = B.C_ClassificationGenericEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "ClassificationRenderingEnum":
            t1 = $.ClassificationRenderingEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ClassificationRenderingEnumTypeTransformer__instance = B.C_ClassificationRenderingEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "ClassificationSpecificEnum":
            t1 = $.ClassificationSpecificEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ClassificationSpecificEnumTypeTransformer__instance = B.C_ClassificationSpecificEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "CodeAnalyses":
            t1 = A.CodeAnalyses_fromJson(value);
            return t1;
          case "CodeAnalysis":
            t1 = A.CodeAnalysis_fromJson(value);
            return t1;
          case "DiscoveredAsset":
            t1 = A.DiscoveredAsset_fromJson(value);
            return t1;
          case "DiscoveredAssets":
            t1 = A.DiscoveredAssets_fromJson(value);
            return t1;
          case "DiscoveredHtmlWebpage":
            t1 = A.DiscoveredHtmlWebpage_fromJson(value);
            return t1;
          case "DiscoveredHtmlWebpages":
            t1 = A.DiscoveredHtmlWebpages_fromJson(value);
            return t1;
          case "DiscoveredRelatedTag":
            t1 = A.DiscoveredRelatedTag_fromJson(value);
            return t1;
          case "DiscoveredRelatedTags":
            t1 = A.DiscoveredRelatedTags_fromJson(value);
            return t1;
          case "DiscoveredSensitive":
            t1 = A.DiscoveredSensitive_fromJson(value);
            return t1;
          case "DiscoveredSensitives":
            t1 = A.DiscoveredSensitives_fromJson(value);
            return t1;
          case "Distribution":
            t1 = A.Distribution_fromJson(value);
            return t1;
          case "Distributions":
            t1 = A.Distributions_fromJson(value);
            return t1;
          case "Edges":
            t1 = A.Edges_fromJson(value);
            return t1;
          case "EmbeddedModelSchema":
            t1 = A.EmbeddedModelSchema_fromJson(value);
            return t1;
          case "EmbeddedModelSchemaSemanticVersionEnum":
            t1 = $.EmbeddedModelSchemaSemanticVersionEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.EmbeddedModelSchemaSemanticVersionEnumTypeTransformer__instance = B.C_EmbeddedModelSchemaSemanticVersionEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Embedding":
            t1 = A.Embedding_fromJson(value);
            return t1;
          case "Embeddings":
            t1 = A.Embeddings_fromJson(value);
            return t1;
          case "ExportedAsset":
            t1 = A.ExportedAsset_fromJson(value);
            return t1;
          case "ExportedDatabase":
            t1 = A.ExportedDatabase_fromJson(value);
            return t1;
          case "ExportedDatabaseFormat":
            t1 = A.ExportedDatabaseFormat_fromJson(value);
            return t1;
          case "ExportedDatabaseFormats":
            t1 = A.ExportedDatabaseFormats_fromJson(value);
            return t1;
          case "ExternalProvider":
            t1 = A.ExternalProvider_fromJson(value);
            return t1;
          case "ExternalProviderProfileData":
            t1 = A.ExternalProviderProfileData_fromJson(value);
            return t1;
          case "ExternalProviderTypeEnum":
            t1 = $.ExternalProviderTypeEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ExternalProviderTypeEnumTypeTransformer__instance = B.C_ExternalProviderTypeEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "ExternalProviders":
            t1 = A.ExternalProviders_fromJson(value);
            return t1;
          case "ExternallySourcedEnum":
            t1 = $.ExternallySourcedEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ExternallySourcedEnumTypeTransformer__instance = B.C_ExternallySourcedEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "FileFormat":
            t1 = A.FileFormat_fromJson(value);
            return t1;
          case "FileMetadata":
            t1 = A.FileMetadata_fromJson(value);
            return t1;
          case "FlattenedActivities":
            t1 = A.FlattenedActivities_fromJson(value);
            return t1;
          case "FlattenedActivity":
            t1 = A.FlattenedActivity_fromJson(value);
            return t1;
          case "FlattenedAnalysis":
            t1 = A.FlattenedAnalysis_fromJson(value);
            return t1;
          case "FlattenedAsset":
            t1 = A.FlattenedAsset_fromJson(value);
            return t1;
          case "FlattenedAssets":
            t1 = A.FlattenedAssets_fromJson(value);
            return t1;
          case "FlattenedDistribution":
            t1 = A.FlattenedDistribution_fromJson(value);
            return t1;
          case "FlattenedDistributions":
            t1 = A.FlattenedDistributions_fromJson(value);
            return t1;
          case "FlattenedFormat":
            t1 = A.FlattenedFormat_fromJson(value);
            return t1;
          case "FlattenedFormats":
            t1 = A.FlattenedFormats_fromJson(value);
            return t1;
          case "FlattenedImageAnalysis":
            t1 = A.FlattenedImageAnalysis_fromJson(value);
            return t1;
          case "FlattenedOCRAnalysis":
            t1 = A.FlattenedOCRAnalysis_fromJson(value);
            return t1;
          case "FlattenedPerson":
            t1 = A.FlattenedPerson_fromJson(value);
            return t1;
          case "FlattenedPersons":
            t1 = A.FlattenedPersons_fromJson(value);
            return t1;
          case "FlattenedPreview":
            t1 = A.FlattenedPreview_fromJson(value);
            return t1;
          case "FlattenedSensitive":
            t1 = A.FlattenedSensitive_fromJson(value);
            return t1;
          case "FlattenedSensitives":
            t1 = A.FlattenedSensitives_fromJson(value);
            return t1;
          case "FlattenedShare":
            t1 = A.FlattenedShare_fromJson(value);
            return t1;
          case "FlattenedShares":
            t1 = A.FlattenedShares_fromJson(value);
            return t1;
          case "FlattenedTag":
            t1 = A.FlattenedTag_fromJson(value);
            return t1;
          case "FlattenedTags":
            t1 = A.FlattenedTags_fromJson(value);
            return t1;
          case "FlattenedUserProfile":
            t1 = A.FlattenedUserProfile_fromJson(value);
            return t1;
          case "FlattenedWebsite":
            t1 = A.FlattenedWebsite_fromJson(value);
            return t1;
          case "FlattenedWebsites":
            t1 = A.FlattenedWebsites_fromJson(value);
            return t1;
          case "Font":
            t1 = A.Font_fromJson(value);
            return t1;
          case "Format":
            t1 = A.Format_fromJson(value);
            return t1;
          case "FormatMetric":
            t1 = A.FormatMetric_fromJson(value);
            return t1;
          case "FormatReclassification":
            t1 = A.FormatReclassification_fromJson(value);
            return t1;
          case "Formats":
            t1 = A.Formats_fromJson(value);
            return t1;
          case "FormatsMetrics":
            t1 = A.FormatsMetrics_fromJson(value);
            return t1;
          case "FragmentFormat":
            t1 = A.FragmentFormat_fromJson(value);
            return t1;
          case "FragmentMetadata":
            t1 = A.FragmentMetadata_fromJson(value);
            return t1;
          case "GitHubDistribution":
            t1 = A.GitHubDistribution_fromJson(value);
            return t1;
          case "GitHubGistDistribution":
            t1 = A.GitHubGistDistribution_fromJson(value);
            return t1;
          case "GraphicalImageDescriptiveStatistics":
            t1 = A.GraphicalImageDescriptiveStatistics_fromJson(value);
            return t1;
          case "GraphicalImageProcessing":
            t1 = A.GraphicalImageProcessing_fromJson(value);
            return t1;
          case "GraphicalImageStatistics":
            t1 = A.GraphicalImageStatistics_fromJson(value);
            return t1;
          case "GraphicalMachineLearningProcessingEvent":
            t1 = A.GraphicalMachineLearningProcessingEvent_fromJson(value);
            return t1;
          case "GraphicalOCRDescriptiveStatistics":
            t1 = A.GraphicalOCRDescriptiveStatistics_fromJson(value);
            return t1;
          case string$.Graphi:
            t1 = A.GraphicalOCRDescriptiveStatisticsConfidence_fromJson(value);
            return t1;
          case "GraphicalOCRProcessing":
            t1 = A.GraphicalOCRProcessing_fromJson(value);
            return t1;
          case "GraphicalOCRStatistics":
            t1 = A.GraphicalOCRStatistics_fromJson(value);
            return t1;
          case "GraphicalSVGStatistics":
            t1 = A.GraphicalSVGStatistics_fromJson(value);
            return t1;
          case "GroupedTimestamp":
            t1 = A.GroupedTimestamp_fromJson(value);
            return t1;
          case "ImageAnalyses":
            t1 = A.ImageAnalyses_fromJson(value);
            return t1;
          case "ImageAnalysis":
            t1 = A.ImageAnalysis_fromJson(value);
            return t1;
          case "InteractedAsset":
            t1 = A.InteractedAsset_fromJson(value);
            return t1;
          case "InteractedAssetInteractions":
            t1 = A.InteractedAssetInteractions_fromJson(value);
            return t1;
          case "InteractedAssets":
            t1 = A.InteractedAssets_fromJson(value);
            return t1;
          case "Linkify":
            t1 = A.Linkify_fromJson(value);
            return t1;
          case "LinkifyMultiple":
            t1 = A.LinkifyMultiple_fromJson(value);
            return t1;
          case "MailgunDistribution":
            t1 = A.MailgunDistribution_fromJson(value);
            return t1;
          case "MailgunMetadata":
            t1 = A.MailgunMetadata_fromJson(value);
            return t1;
          case "MechanismEnum":
            t1 = $.MechanismEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Model":
            t1 = A.Model_fromJson(value);
            return t1;
          case "ModelTypeEnum":
            t1 = $.ModelTypeEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ModelTypeEnumTypeTransformer__instance = B.C_ModelTypeEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "ModelUsageEnum":
            t1 = $.ModelUsageEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.ModelUsageEnumTypeTransformer__instance = B.C_ModelUsageEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Models":
            t1 = A.Models_fromJson(value);
            return t1;
          case "Node":
            t1 = A.Node_fromJson(value);
            return t1;
          case "NodeTypeEnum":
            t1 = $.NodeTypeEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.NodeTypeEnumTypeTransformer__instance = B.C_NodeTypeEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Notification":
            t1 = A.Notification_fromJson(value);
            return t1;
          case "OAuthAccount":
            t1 = A.OAuthAccount_fromJson(value);
            return t1;
          case "OAuthGroup":
            t1 = A.OAuthGroup_fromJson(value);
            return t1;
          case "OAuthToken":
            t1 = A.OAuthToken_fromJson(value);
            return t1;
          case "OCRAnalyses":
            t1 = A.OCRAnalyses_fromJson(value);
            return t1;
          case "OCRAnalysis":
            t1 = A.OCRAnalysis_fromJson(value);
            return t1;
          case "OrderedMetrics":
            t1 = A.OrderedMetrics_fromJson(value);
            return t1;
          case "PKCE":
            t1 = A.PKCE_fromJson(value);
            return t1;
          case "Person":
            t1 = A.Person_fromJson(value);
            return t1;
          case "PersonAccess":
            t1 = A.PersonAccess_fromJson(value);
            return t1;
          case "PersonAccessScopedEnum":
            t1 = $.PersonAccessScopedEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.PersonAccessScopedEnumTypeTransformer__instance = B.C_PersonAccessScopedEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "PersonBasicType":
            t1 = A.PersonBasicType_fromJson(value);
            return t1;
          case "PersonType":
            t1 = A.PersonType_fromJson(value);
            return t1;
          case "Persons":
            t1 = A.Persons_fromJson(value);
            return t1;
          case "PlatformEnum":
            t1 = $.PlatformEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.PlatformEnumTypeTransformer__instance = B.C_PlatformEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Preview":
            t1 = A.Preview_fromJson(value);
            return t1;
          case "PrivacyEnum":
            t1 = $.PrivacyEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.PrivacyEnumTypeTransformer__instance = B.C_PrivacyEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Recipients":
            t1 = A.Recipients_fromJson(value);
            return t1;
          case "ReferencedActivity":
            t1 = A.ReferencedActivity_fromJson(value);
            return t1;
          case "ReferencedAsset":
            t1 = A.ReferencedAsset_fromJson(value);
            return t1;
          case "ReferencedDistribution":
            t1 = A.ReferencedDistribution_fromJson(value);
            return t1;
          case "ReferencedFormat":
            t1 = A.ReferencedFormat_fromJson(value);
            return t1;
          case "ReferencedPerson":
            t1 = A.ReferencedPerson_fromJson(value);
            return t1;
          case "ReferencedSensitive":
            t1 = A.ReferencedSensitive_fromJson(value);
            return t1;
          case "ReferencedShare":
            t1 = A.ReferencedShare_fromJson(value);
            return t1;
          case "ReferencedTag":
            t1 = A.ReferencedTag_fromJson(value);
            return t1;
          case "ReferencedUser":
            t1 = A.ReferencedUser_fromJson(value);
            return t1;
          case "ReferencedWebsite":
            t1 = A.ReferencedWebsite_fromJson(value);
            return t1;
          case "Relationship":
            t1 = A.Relationship_fromJson(value);
            return t1;
          case "Relationships":
            t1 = A.Relationships_fromJson(value);
            return t1;
          case "ResultedPKCE":
            t1 = A.ResultedPKCE_fromJson(value);
            return t1;
          case "ReturnedUserProfile":
            t1 = A.ReturnedUserProfile_fromJson(value);
            return t1;
          case "RevokedPKCE":
            t1 = A.RevokedPKCE_fromJson(value);
            return t1;
          case "Role":
            t1 = $.RoleTypeTransformer__instance;
            t1 = (t1 == null ? $.RoleTypeTransformer__instance = B.C_RoleTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Score":
            t1 = A.Score_fromJson(value);
            return t1;
          case "SearchedAsset":
            t1 = A.SearchedAsset_fromJson(value);
            return t1;
          case "SearchedAssets":
            t1 = A.SearchedAssets_fromJson(value);
            return t1;
          case "SearchedMatchEnum":
            t1 = $.SearchedMatchEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.SearchedMatchEnumTypeTransformer__instance = B.C_SearchedMatchEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Seed":
            t1 = A.Seed_fromJson(value);
            return t1;
          case "SeededAccessor":
            t1 = A.SeededAccessor_fromJson(value);
            return t1;
          case "SeededActivity":
            t1 = A.SeededActivity_fromJson(value);
            return t1;
          case "SeededAsset":
            t1 = A.SeededAsset_fromJson(value);
            return t1;
          case "SeededAssetMetadata":
            t1 = A.SeededAssetMetadata_fromJson(value);
            return t1;
          case "SeededAssetSensitive":
            t1 = A.SeededAssetSensitive_fromJson(value);
            return t1;
          case "SeededAssetTag":
            t1 = A.SeededAssetTag_fromJson(value);
            return t1;
          case "SeededAssetTags":
            t1 = A.SeededAssetTags_fromJson(value);
            return t1;
          case "SeededAssetWebsite":
            t1 = A.SeededAssetWebsite_fromJson(value);
            return t1;
          case "SeededAssetsRecommendation":
            t1 = A.SeededAssetsRecommendation_fromJson(value);
            return t1;
          case "SeededClassification":
            t1 = A.SeededClassification_fromJson(value);
            return t1;
          case "SeededConnectorTracking":
            t1 = A.SeededConnectorTracking_fromJson(value);
            return t1;
          case "SeededDiscoverableAsset":
            t1 = A.SeededDiscoverableAsset_fromJson(value);
            return t1;
          case "SeededDiscoverableAssets":
            t1 = A.SeededDiscoverableAssets_fromJson(value);
            return t1;
          case "SeededDiscoverableHtmlWebpage":
            t1 = A.SeededDiscoverableHtmlWebpage_fromJson(value);
            return t1;
          case "SeededDiscoverableHtmlWebpages":
            t1 = A.SeededDiscoverableHtmlWebpages_fromJson(value);
            return t1;
          case "SeededDiscoverableRelatedTag":
            t1 = A.SeededDiscoverableRelatedTag_fromJson(value);
            return t1;
          case "SeededDiscoverableRelatedTags":
            t1 = A.SeededDiscoverableRelatedTags_fromJson(value);
            return t1;
          case "SeededDiscoverableSensitive":
            t1 = A.SeededDiscoverableSensitive_fromJson(value);
            return t1;
          case "SeededDiscoverableSensitives":
            t1 = A.SeededDiscoverableSensitives_fromJson(value);
            return t1;
          case "SeededDistribution":
            t1 = A.SeededDistribution_fromJson(value);
            return t1;
          case "SeededDistributions":
            t1 = A.SeededDistributions_fromJson(value);
            return t1;
          case "SeededExternalProvider":
            t1 = A.SeededExternalProvider_fromJson(value);
            return t1;
          case "SeededFile":
            t1 = A.SeededFile_fromJson(value);
            return t1;
          case "SeededFormat":
            t1 = A.SeededFormat_fromJson(value);
            return t1;
          case "SeededFragment":
            t1 = A.SeededFragment_fromJson(value);
            return t1;
          case "SeededGitHubDistribution":
            t1 = A.SeededGitHubDistribution_fromJson(value);
            return t1;
          case "SeededGitHubGistDistribution":
            t1 = A.SeededGitHubGistDistribution_fromJson(value);
            return t1;
          case "SeededGithubGistsImport":
            t1 = A.SeededGithubGistsImport_fromJson(value);
            return t1;
          case "SeededMacOSAsset":
            t1 = A.SeededMacOSAsset_fromJson(value);
            return t1;
          case "SeededModel":
            t1 = A.SeededModel_fromJson(value);
            return t1;
          case "SeededPKCE":
            t1 = A.SeededPKCE_fromJson(value);
            return t1;
          case "SeededPKCEADDITIONALPARAMETERS":
            t1 = A.SeededPKCEADDITIONALPARAMETERS_fromJson(value);
            return t1;
          case "SeededPerson":
            t1 = A.SeededPerson_fromJson(value);
            return t1;
          case "SeededSensitive":
            t1 = A.SeededSensitive_fromJson(value);
            return t1;
          case "SeededShare":
            t1 = A.SeededShare_fromJson(value);
            return t1;
          case "SeededTag":
            t1 = A.SeededTag_fromJson(value);
            return t1;
          case "SeededTrackedAdoptionEvent":
            t1 = A.SeededTrackedAdoptionEvent_fromJson(value);
            return t1;
          case "SeededTrackedAssetEvent":
            t1 = A.SeededTrackedAssetEvent_fromJson(value);
            return t1;
          case "SeededTrackedAssetsEvent":
            t1 = A.SeededTrackedAssetsEvent_fromJson(value);
            return t1;
          case "SeededTrackedAssetsEventMetadata":
            t1 = A.SeededTrackedAssetsEventMetadata_fromJson(value);
            return t1;
          case "SeededTrackedFormatEvent":
            t1 = A.SeededTrackedFormatEvent_fromJson(value);
            return t1;
          case "SeededTrackedInteractionEvent":
            t1 = A.SeededTrackedInteractionEvent_fromJson(value);
            return t1;
          case string$.SeededI:
            t1 = A.SeededTrackedInteractionEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "SeededTrackedKeyboardEvent":
            t1 = A.SeededTrackedKeyboardEvent_fromJson(value);
            return t1;
          case string$.SeededK:
            t1 = A.SeededTrackedKeyboardEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "SeededTrackedMachineLearningEvent":
            t1 = A.SeededTrackedMachineLearningEvent_fromJson(value);
            return t1;
          case "SeededTrackedSessionEvent":
            t1 = A.SeededTrackedSessionEvent_fromJson(value);
            return t1;
          case "SeededUltraSuiteAsset":
            t1 = A.SeededUltraSuiteAsset_fromJson(value);
            return t1;
          case "SeededUser":
            t1 = A.SeededUser_fromJson(value);
            return t1;
          case "SeededWebsite":
            t1 = A.SeededWebsite_fromJson(value);
            return t1;
          case "Seeds":
            t1 = A.Seeds_fromJson(value);
            return t1;
          case "Sensitive":
            t1 = A.Sensitive_fromJson(value);
            return t1;
          case "SensitiveCategoryEnum":
            t1 = $.SensitiveCategoryEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.SensitiveCategoryEnumTypeTransformer__instance = B.C_SensitiveCategoryEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "SensitiveMetadata":
            t1 = A.SensitiveMetadata_fromJson(value);
            return t1;
          case "SensitiveSeverityEnum":
            t1 = $.SensitiveSeverityEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.SensitiveSeverityEnumTypeTransformer__instance = B.C_SensitiveSeverityEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Sensitives":
            t1 = A.Sensitives_fromJson(value);
            return t1;
          case "Session":
            t1 = A.Session_fromJson(value);
            return t1;
          case "Share":
            t1 = A.Share_fromJson(value);
            return t1;
          case "Shares":
            t1 = A.Shares_fromJson(value);
            return t1;
          case "Space":
            t1 = A.Space_fromJson(value);
            return t1;
          case "StreamedIdentifier":
            t1 = A.StreamedIdentifier_fromJson(value);
            return t1;
          case "StreamedIdentifiers":
            t1 = A.StreamedIdentifiers_fromJson(value);
            return t1;
          case "SystemExecutionCpuInformation":
            t1 = A.SystemExecutionCpuInformation_fromJson(value);
            return t1;
          case "SystemExecutionInformation":
            t1 = A.SystemExecutionInformation_fromJson(value);
            return t1;
          case "TLPCodeDirectoryAnalytics":
            t1 = A.TLPCodeDirectoryAnalytics_fromJson(value);
            return t1;
          case "TLPCodeFileAnalytics":
            t1 = A.TLPCodeFileAnalytics_fromJson(value);
            return t1;
          case "TLPCodeFragmentClassification":
            t1 = A.TLPCodeFragmentClassification_fromJson(value);
            return t1;
          case "TLPCodeFragmentClassificationMetadata":
            t1 = A.TLPCodeFragmentClassificationMetadata_fromJson(value);
            return t1;
          case "TLPCodeFragmentDescription":
            t1 = A.TLPCodeFragmentDescription_fromJson(value);
            return t1;
          case "TLPCodeFragmentDescriptiveStatistics":
            t1 = A.TLPCodeFragmentDescriptiveStatistics_fromJson(value);
            return t1;
          case "TLPCodeFragmentReclassification":
            t1 = A.TLPCodeFragmentReclassification_fromJson(value);
            return t1;
          case "TLPCodeFragmentReclassificationUpdates":
            t1 = A.TLPCodeFragmentReclassificationUpdates_fromJson(value);
            return t1;
          case "TLPCodeFragmentStatistics":
            t1 = A.TLPCodeFragmentStatistics_fromJson(value);
            return t1;
          case "TLPCodeFragmentSuggestedReuse":
            t1 = A.TLPCodeFragmentSuggestedReuse_fromJson(value);
            return t1;
          case "TLPCodeFragmentSuggestedSave":
            t1 = A.TLPCodeFragmentSuggestedSave_fromJson(value);
            return t1;
          case "TLPCodeFragmentTagify":
            t1 = A.TLPCodeFragmentTagify_fromJson(value);
            return t1;
          case "TLPCodeProcessing":
            t1 = A.TLPCodeProcessing_fromJson(value);
            return t1;
          case "TLPCodeRepositoryAnalytics":
            t1 = A.TLPCodeRepositoryAnalytics_fromJson(value);
            return t1;
          case "TLPCodeSnippetAnalytics":
            t1 = A.TLPCodeSnippetAnalytics_fromJson(value);
            return t1;
          case "TLPCodeSnippetSuggestedInteractions":
            t1 = A.TLPCodeSnippetSuggestedInteractions_fromJson(value);
            return t1;
          case "TLPCodeSnippetTagifyCode":
            t1 = A.TLPCodeSnippetTagifyCode_fromJson(value);
            return t1;
          case "TLPDirectedDiscoveryFilter":
            t1 = A.TLPDirectedDiscoveryFilter_fromJson(value);
            return t1;
          case "TLPDirectedDiscoveryFilterEnum":
            t1 = $.TLPDirectedDiscoveryFilterEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.TLPDirectedDiscoveryFilterEnumTypeTransformer__instance = B.C_TLPDirectedDiscoveryFilterEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "TLPDirectedDiscoveryFilters":
            t1 = A.TLPDirectedDiscoveryFilters_fromJson(value);
            return t1;
          case "TLPMachineLearningProcessingEvent":
            t1 = A.TLPMachineLearningProcessingEvent_fromJson(value);
            return t1;
          case "Tag":
            t1 = A.Tag_fromJson(value);
            return t1;
          case "TagCategoryEnum":
            t1 = $.TagCategoryEnumTypeTransformer__instance;
            t1 = (t1 == null ? $.TagCategoryEnumTypeTransformer__instance = B.C_TagCategoryEnumTypeTransformer : t1).decode$1(0, value);
            return t1;
          case "Tags":
            t1 = A.Tags_fromJson(value);
            return t1;
          case "TextLocation":
            t1 = A.TextLocation_fromJson(value);
            return t1;
          case "TextMatch":
            t1 = A.TextMatch_fromJson(value);
            return t1;
          case "Theme":
            t1 = A.Theme_fromJson(value);
            return t1;
          case "TokenizedPKCE":
            t1 = A.TokenizedPKCE_fromJson(value);
            return t1;
          case "TrackedApplication":
            t1 = A.TrackedApplication_fromJson(value);
            return t1;
          case "TrackedApplicationInstall":
            t1 = A.TrackedApplicationInstall_fromJson(value);
            return t1;
          case "TrackedApplicationUpdate":
            t1 = A.TrackedApplicationUpdate_fromJson(value);
            return t1;
          case "TrackedAssetEventCreationMetadata":
            t1 = A.TrackedAssetEventCreationMetadata_fromJson(value);
            return t1;
          case string$.TrackeAEC:
            t1 = A.TrackedAssetEventCreationMetadataClipboard_fromJson(value);
            return t1;
          case "TrackedAssetEventCreationMetadataFile":
            t1 = A.TrackedAssetEventCreationMetadataFile_fromJson(value);
            return t1;
          case string$.TrackeAEF:
            t1 = A.TrackedAssetEventFormatReclassificationMetadata_fromJson(value);
            return t1;
          case string$.TrackeAEI:
            t1 = A.TrackedAssetEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "TrackedAssetEventMetadata":
            t1 = A.TrackedAssetEventMetadata_fromJson(value);
            return t1;
          case "TrackedAssetEventRenameMetadata":
            t1 = A.TrackedAssetEventRenameMetadata_fromJson(value);
            return t1;
          case string$.TrackeAs:
            t1 = A.TrackedAssetsEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "TrackedAssetsEventSearchMetadata":
            t1 = A.TrackedAssetsEventSearchMetadata_fromJson(value);
            return t1;
          case "TrackedAssetsEventSearchMetadataResults":
            t1 = A.TrackedAssetsEventSearchMetadataResults_fromJson(value);
            return t1;
          case "TrackedFormat":
            t1 = A.TrackedFormat_fromJson(value);
            return t1;
          case "TrackedFormatEvent":
            t1 = A.TrackedFormatEvent_fromJson(value);
            return t1;
          case string$.TrackeF:
            t1 = A.TrackedFormatEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "TrackedFormatEventMetadata":
            t1 = A.TrackedFormatEventMetadata_fromJson(value);
            return t1;
          case "TrackedInteractionEvent":
            t1 = A.TrackedInteractionEvent_fromJson(value);
            return t1;
          case "TrackedKeyboardEvent":
            t1 = A.TrackedKeyboardEvent_fromJson(value);
            return t1;
          case string$.TrackeS:
            t1 = A.TrackedSessionEventIdentifierDescriptionPairs_fromJson(value);
            return t1;
          case "TrackedUserProfile":
            t1 = A.TrackedUserProfile_fromJson(value);
            return t1;
          case "TransferableBytes":
            t1 = A.TransferableBytes_fromJson(value);
            return t1;
          case "TransferableString":
            t1 = A.TransferableString_fromJson(value);
            return t1;
          case "UserProfile":
            t1 = A.UserProfile_fromJson(value);
            return t1;
          case "Users":
            t1 = A.Users_fromJson(value);
            return t1;
          case "Website":
            t1 = A.Website_fromJson(value);
            return t1;
          case "Websites":
            t1 = A.Websites_fromJson(value);
            return t1;
          default:
            t1.match = null;
            if (type$.List_dynamic._is(value)) {
              t2 = $.$get$_regList().firstMatch$1(targetType);
              if (t2 == null)
                match = _null;
              else {
                t2 = t2._match;
                if (1 >= t2.length)
                  return A.ioore(t2, 1);
                match = t2[1];
              }
              t1.match = match;
              t2 = match != null;
            } else
              t2 = false;
            if (t2) {
              t1 = J.map$1$1$ax(value, new A.ApiClient__deserialize_closure(t1, false), type$.dynamic).toList$1$growable(0, false);
              return t1;
            }
            if (type$.Set_dynamic._is(value)) {
              t2 = $.$get$_regSet().firstMatch$1(targetType);
              if (t2 == null)
                match = _null;
              else {
                t2 = t2._match;
                if (1 >= t2.length)
                  return A.ioore(t2, 1);
                match = t2[1];
              }
              t1.match = match;
              t2 = match != null;
            } else
              t2 = false;
            if (t2) {
              t1 = J.map$1$1$ax(value, new A.ApiClient__deserialize_closure0(t1, false), type$.dynamic);
              t1 = A.LinkedHashSet_LinkedHashSet$of(t1, A._instanceType(t1)._eval$1("Iterable.E"));
              return t1;
            }
            if (type$.Map_dynamic_dynamic._is(value)) {
              t2 = $.$get$_regMap().firstMatch$1(targetType);
              if (t2 == null)
                match = _null;
              else {
                t2 = t2._match;
                if (1 >= t2.length)
                  return A.ioore(t2, 1);
                match = t2[1];
              }
              t1.match = match;
              t2 = match != null;
            } else
              t2 = false;
            if (t2) {
              t2 = type$.String;
              t3 = type$.dynamic;
              t3 = A.LinkedHashMap_LinkedHashMap$fromIterables(J.cast$1$0$ax(value.get$keys(), t2), J.map$1$1$ax(J.get$values$z(value), new A.ApiClient__deserialize_closure1(t1, false), t3), t2, t3);
              return t3;
            }
        }
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (type$.Exception._is(t1)) {
          error = t1;
          trace = A.getTraceFromException(exception);
          throw A.wrapException(A.ApiException$withInner(500, "Exception during deserialization.", error, trace));
        } else
          throw exception;
      }
      throw A.wrapException(A.ApiException$(500, string$.Could_));
    },
    ApiClient: function ApiClient(t0, t1, t2, t3) {
      var _ = this;
      _.basePath = t0;
      _._client = t1;
      _._defaultHeaderMap = t2;
      _._authentications = t3;
    },
    ApiClient_invokeAPI_closure: function ApiClient_invokeAPI_closure() {
    },
    ApiClient__deserialize_closure: function ApiClient__deserialize_closure(t0, t1) {
      this._box_0 = t0;
      this.growable = t1;
    },
    ApiClient__deserialize_closure0: function ApiClient__deserialize_closure0(t0, t1) {
      this._box_0 = t0;
      this.growable = t1;
    },
    ApiClient__deserialize_closure1: function ApiClient__deserialize_closure1(t0, t1) {
      this._box_0 = t0;
      this.growable = t1;
    },
    ApiException$(code, message) {
      return new A.ApiException(code, message, null, null);
    },
    ApiException$withInner(code, message, innerException, stackTrace) {
      return new A.ApiException(code, message, innerException, stackTrace);
    },
    ApiException: function ApiException(t0, t1, t2, t3) {
      var _ = this;
      _.code = t0;
      _.message = t1;
      _.innerException = t2;
      _.stackTrace = t3;
    },
    OAuth: function OAuth() {
    },
    BaseClient: function BaseClient() {
    },
    BaseRequest: function BaseRequest() {
    },
    BaseRequest_closure: function BaseRequest_closure() {
    },
    BaseRequest_closure0: function BaseRequest_closure0() {
    },
    BaseResponse: function BaseResponse() {
    },
    BrowserClient: function BrowserClient(t0) {
      this._xhrs = t0;
    },
    BrowserClient_send_closure: function BrowserClient_send_closure(t0, t1, t2) {
      this.xhr = t0;
      this.completer = t1;
      this.request = t2;
    },
    BrowserClient_send_closure0: function BrowserClient_send_closure0(t0, t1) {
      this.completer = t0;
      this.request = t1;
    },
    ByteStream: function ByteStream(t0) {
      this._stream = t0;
    },
    ByteStream_toBytes_closure: function ByteStream_toBytes_closure(t0) {
      this.completer = t0;
    },
    ClientException: function ClientException(t0) {
      this.message = t0;
    },
    Request$(method, url) {
      var t1 = new Uint8Array(0),
        t2 = $.$get$BaseRequest__tokenRE()._nativeRegExp;
      if (!t2.test(method))
        A.throwExpression(A.ArgumentError$value(method, "method", "Not a valid method"));
      t2 = type$.String;
      return new A.Request(B.C_Utf8Codec, t1, method, url, A.LinkedHashMap_LinkedHashMap(new A.BaseRequest_closure(), new A.BaseRequest_closure0(), null, t2, t2));
    },
    Request: function Request(t0, t1, t2, t3, t4) {
      var _ = this;
      _._defaultEncoding = t0;
      _._bodyBytes = t1;
      _.method = t2;
      _.url = t3;
      _.headers = t4;
      _._finalized = false;
    },
    Response$bytes(bodyBytes, statusCode, headers, isRedirect, persistentConnection, reasonPhrase, request) {
      var t1 = A.toUint8List(bodyBytes),
        t2 = J.get$length$asx(bodyBytes);
      t1 = new A.Response(t1, request, statusCode, reasonPhrase, t2, headers, false, true);
      t1.BaseResponse$7$contentLength$headers$isRedirect$persistentConnection$reasonPhrase$request(statusCode, t2, headers, false, true, reasonPhrase, request);
      return t1;
    },
    Response_fromStream(response) {
      return A.Response_fromStream$body(type$.StreamedResponse._as(response));
    },
    Response_fromStream$body(response) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, body, t1, t2;
      var $async$Response_fromStream = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(response.stream.toBytes$0(), $async$Response_fromStream);
            case 3:
              // returning from await.
              body = $async$result;
              t1 = response.statusCode;
              t2 = response.request;
              $async$returnValue = A.Response$bytes(body, t1, response.headers, false, true, response.reasonPhrase, t2);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Response_fromStream, $async$completer);
    },
    _encodingForHeaders(headers) {
      return A.encodingForCharset(A._contentTypeForHeaders(headers).parameters._collection$_map.$index(0, "charset"));
    },
    _contentTypeForHeaders(headers) {
      var contentType = headers.$index(0, "content-type");
      if (contentType != null)
        return A.MediaType_MediaType$parse(contentType);
      return A.MediaType$("application", "octet-stream", null);
    },
    Response: function Response(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.bodyBytes = t0;
      _.request = t1;
      _.statusCode = t2;
      _.reasonPhrase = t3;
      _.contentLength = t4;
      _.headers = t5;
      _.isRedirect = t6;
      _.persistentConnection = t7;
    },
    StreamedRequest$(method, url) {
      var _null = null,
        t1 = A.StreamController_StreamController(_null, _null, _null, true, type$.List_int),
        t2 = $.$get$BaseRequest__tokenRE()._nativeRegExp;
      if (!t2.test(method))
        A.throwExpression(A.ArgumentError$value(method, "method", "Not a valid method"));
      t2 = type$.String;
      return new A.StreamedRequest(t1, method, url, A.LinkedHashMap_LinkedHashMap(new A.BaseRequest_closure(), new A.BaseRequest_closure0(), _null, t2, t2));
    },
    StreamedRequest: function StreamedRequest(t0, t1, t2, t3) {
      var _ = this;
      _._streamed_request$_controller = t0;
      _.method = t1;
      _.url = t2;
      _.headers = t3;
      _._finalized = false;
    },
    StreamedResponse$(stream, statusCode, contentLength, headers, reasonPhrase, request) {
      var t1 = new A.StreamedResponse(A.toByteStream(stream), request, statusCode, reasonPhrase, contentLength, headers, false, true);
      t1.BaseResponse$7$contentLength$headers$isRedirect$persistentConnection$reasonPhrase$request(statusCode, contentLength, headers, false, true, reasonPhrase, request);
      return t1;
    },
    StreamedResponse: function StreamedResponse(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.stream = t0;
      _.request = t1;
      _.statusCode = t2;
      _.reasonPhrase = t3;
      _.contentLength = t4;
      _.headers = t5;
      _.isRedirect = t6;
      _.persistentConnection = t7;
    },
    mapToQuery(map, encoding) {
      var pairs = A._setArrayType([], type$.JSArray_List_String);
      map.forEach$1(0, new A.mapToQuery_closure(pairs, encoding));
      return new A.MappedListIterable(pairs, type$.String_Function_List_String._as(new A.mapToQuery_closure0()), type$.MappedListIterable_of_List_String_and_String).join$1(0, "&");
    },
    encodingForCharset(charset) {
      var t1;
      if (charset == null)
        return B.C_Latin1Codec;
      t1 = A.Encoding_getByName(charset);
      return t1 == null ? B.C_Latin1Codec : t1;
    },
    toUint8List(input) {
      if (type$.Uint8List._is(input))
        return input;
      if (type$.TypedData._is(input))
        return A.NativeUint8List_NativeUint8List$view(input.buffer, 0, null);
      return new Uint8Array(A._ensureNativeList(input));
    },
    toByteStream(stream) {
      if (stream instanceof A.ByteStream)
        return stream;
      return new A.ByteStream(stream);
    },
    mapToQuery_closure: function mapToQuery_closure(t0, t1) {
      this.pairs = t0;
      this.encoding = t1;
    },
    mapToQuery_closure0: function mapToQuery_closure0() {
    },
    CaseInsensitiveMap$from(other, $V) {
      var t1 = new A.CaseInsensitiveMap(new A.CaseInsensitiveMap$from_closure(), A.LinkedHashMap_LinkedHashMap$_empty(type$.String, $V._eval$1("MapEntry<String,0>")), $V._eval$1("CaseInsensitiveMap<0>"));
      t1.addAll$1(0, other);
      return t1;
    },
    CaseInsensitiveMap: function CaseInsensitiveMap(t0, t1, t2) {
      this._canonicalize = t0;
      this._base = t1;
      this.$ti = t2;
    },
    CaseInsensitiveMap$from_closure: function CaseInsensitiveMap$from_closure() {
    },
    MediaType_MediaType$parse(mediaType) {
      return A.wrapFormatException("media type", mediaType, new A.MediaType_MediaType$parse_closure(mediaType), type$.MediaType);
    },
    MediaType$(type, subtype, parameters) {
      var t1 = type$.String;
      t1 = parameters == null ? A.LinkedHashMap_LinkedHashMap$_empty(t1, t1) : A.CaseInsensitiveMap$from(parameters, t1);
      return new A.MediaType(type.toLowerCase(), subtype.toLowerCase(), new A.UnmodifiableMapView(t1, type$.UnmodifiableMapView_String_String));
    },
    MediaType: function MediaType(t0, t1, t2) {
      this.type = t0;
      this.subtype = t1;
      this.parameters = t2;
    },
    MediaType_MediaType$parse_closure: function MediaType_MediaType$parse_closure(t0) {
      this.mediaType = t0;
    },
    MediaType_toString_closure: function MediaType_toString_closure(t0) {
      this.buffer = t0;
    },
    MediaType_toString__closure: function MediaType_toString__closure() {
    },
    expectQuotedString(scanner) {
      var string;
      scanner.expect$2$name($.$get$_quotedString(), "quoted string");
      string = scanner.get$lastMatch().$index(0, 0);
      return A.stringReplaceAllFuncUnchecked(B.JSString_methods.substring$2(string, 1, string.length - 1), type$.Pattern._as($.$get$_quotedPair()), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(new A.expectQuotedString_closure())), type$.nullable_String_Function_String._as(null));
    },
    expectQuotedString_closure: function expectQuotedString_closure() {
    },
    Context_Context(style) {
      var current = style == null ? A.current() : ".";
      if (style == null)
        style = $.$get$Style_platform();
      return new A.Context(type$.InternalStyle._as(style), current);
    },
    _parseUri(uri) {
      if (type$.Uri._is(uri))
        return uri;
      throw A.wrapException(A.ArgumentError$value(uri, "uri", "Value must be a String or a Uri"));
    },
    _validateArgList(method, args) {
      var numArgs, i, numArgs0, message, t1, t2, t3, t4;
      for (numArgs = args.length, i = 1; i < numArgs; ++i) {
        if (args[i] == null || args[i - 1] != null)
          continue;
        for (; numArgs >= 1; numArgs = numArgs0) {
          numArgs0 = numArgs - 1;
          if (args[numArgs0] != null)
            break;
        }
        message = new A.StringBuffer("");
        t1 = "" + (method + "(");
        message._contents = t1;
        t2 = A._arrayInstanceType(args);
        t3 = t2._eval$1("SubListIterable<1>");
        t4 = new A.SubListIterable(args, 0, numArgs, t3);
        t4.SubListIterable$3(args, 0, numArgs, t2._precomputed1);
        t3 = t1 + new A.MappedListIterable(t4, t3._eval$1("String(ListIterable.E)")._as(new A._validateArgList_closure()), t3._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, ", ");
        message._contents = t3;
        message._contents = t3 + ("): part " + (i - 1) + " was null, but part " + i + " was not.");
        throw A.wrapException(A.ArgumentError$(message.toString$0(0), null));
      }
    },
    Context: function Context(t0, t1) {
      this.style = t0;
      this._context$_current = t1;
    },
    Context_joinAll_closure: function Context_joinAll_closure() {
    },
    Context_split_closure: function Context_split_closure() {
    },
    _validateArgList_closure: function _validateArgList_closure() {
    },
    InternalStyle: function InternalStyle() {
    },
    ParsedPath_ParsedPath$parse(path, style) {
      var t1, parts, separators, start, i,
        root = style.getRoot$1(path);
      style.isRootRelative$1(path);
      if (root != null)
        path = B.JSString_methods.substring$1(path, root.length);
      t1 = type$.JSArray_String;
      parts = A._setArrayType([], t1);
      separators = A._setArrayType([], t1);
      t1 = path.length;
      if (t1 !== 0 && style.isSeparator$1(B.JSString_methods._codeUnitAt$1(path, 0))) {
        if (0 >= t1)
          return A.ioore(path, 0);
        B.JSArray_methods.add$1(separators, path[0]);
        start = 1;
      } else {
        B.JSArray_methods.add$1(separators, "");
        start = 0;
      }
      for (i = start; i < t1; ++i)
        if (style.isSeparator$1(B.JSString_methods._codeUnitAt$1(path, i))) {
          B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(path, start, i));
          B.JSArray_methods.add$1(separators, path[i]);
          start = i + 1;
        }
      if (start < t1) {
        B.JSArray_methods.add$1(parts, B.JSString_methods.substring$1(path, start));
        B.JSArray_methods.add$1(separators, "");
      }
      return new A.ParsedPath(style, root, parts, separators);
    },
    ParsedPath: function ParsedPath(t0, t1, t2, t3) {
      var _ = this;
      _.style = t0;
      _.root = t1;
      _.parts = t2;
      _.separators = t3;
    },
    PathException$(message) {
      return new A.PathException(message);
    },
    PathException: function PathException(t0) {
      this.message = t0;
    },
    Style__getPlatformStyle() {
      if (A.Uri_base().get$scheme() !== "file")
        return $.$get$Style_url();
      var t1 = A.Uri_base();
      if (!B.JSString_methods.endsWith$1(t1.get$path(t1), "/"))
        return $.$get$Style_url();
      if (A._Uri__Uri(null, "a/b", null, null).toFilePath$0() === "a\\b")
        return $.$get$Style_windows();
      return $.$get$Style_posix();
    },
    Style: function Style() {
    },
    PosixStyle: function PosixStyle(t0, t1, t2) {
      this.separatorPattern = t0;
      this.needsSeparatorPattern = t1;
      this.rootPattern = t2;
    },
    UrlStyle: function UrlStyle(t0, t1, t2, t3) {
      var _ = this;
      _.separatorPattern = t0;
      _.needsSeparatorPattern = t1;
      _.rootPattern = t2;
      _.relativeRootPattern = t3;
    },
    WindowsStyle: function WindowsStyle(t0, t1, t2, t3) {
      var _ = this;
      _.separatorPattern = t0;
      _.needsSeparatorPattern = t1;
      _.rootPattern = t2;
      _.relativeRootPattern = t3;
    },
    WindowsStyle_absolutePathToUri_closure: function WindowsStyle_absolutePathToUri_closure() {
    },
    AccessEnum: function AccessEnum(t0) {
      this.value = t0;
    },
    AccessEnumTypeTransformer: function AccessEnumTypeTransformer() {
    },
    Accessor_fromJson(value) {
      var t1, json, t2, t3, t4, t5;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "os", t1);
        t4.toString;
        t1 = A.mapValueOfType(json, "share", t1);
        t1.toString;
        t5 = A.mapValueOfType(json, "count", type$.int);
        t5.toString;
        return new A.Accessor(t2, t3, t4, t1, t5, A.FlattenedUserProfile_fromJson(json.$index(0, "user")));
      }
      return null;
    },
    Accessor_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Accessor);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Accessor_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Accessor);
      return t1;
    },
    Accessor: function Accessor(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.os = t2;
      _.share = t3;
      _.count = t4;
      _.user = t5;
    },
    Accessors_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Accessors(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Accessor_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Accessors: function Accessors(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Accessors_toJson_closure: function Accessors_toJson_closure() {
    },
    Activities_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Activities(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Activity_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Activities: function Activities(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Activities_toJson_closure: function Activities_toJson_closure() {
    },
    Activity_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        t3 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t3.toString;
        t4 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t4.toString;
        t5 = A.SeededConnectorTracking_fromJson(json.$index(0, "event"));
        t5.toString;
        t6 = A.Application_fromJson(json.$index(0, "application"));
        t6.toString;
        t7 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t8 = A.FlattenedAsset_fromJson(json.$index(0, "asset"));
        t9 = A.FlattenedUserProfile_fromJson(json.$index(0, "user"));
        t10 = A.FlattenedFormat_fromJson(json.$index(0, "format"));
        t11 = json.$index(0, "mechanism");
        t12 = $.MechanismEnumTypeTransformer__instance;
        t11 = (t12 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t12).decode$1(0, t11);
        t11.toString;
        return new A.Activity(t2, t1, t3, t4, t5, t6, t7, t8, t9, t10, t11, A.mapValueOfType(json, "rank", type$.int));
      }
      return null;
    },
    Activity_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Activity);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Activity_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Activity);
      return t1;
    },
    Activity: function Activity(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.created = t2;
      _.updated = t3;
      _.event = t4;
      _.application = t5;
      _.deleted = t6;
      _.asset = t7;
      _.user = t8;
      _.format = t9;
      _.mechanism = t10;
      _.rank = t11;
    },
    Aesthetics_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.Theme_fromJson(json.$index(0, "theme"));
        t2.toString;
        t3 = A.Font_fromJson(json.$index(0, "font"));
        t3.toString;
        return new A.Aesthetics(t1, t2, t3);
      }
      return null;
    },
    Aesthetics: function Aesthetics(t0, t1, t2) {
      this.schema = t0;
      this.theme = t1;
      this.font = t2;
    },
    AllocationCloud_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "user", t1);
        t4.toString;
        t5 = A.AllocationCloudUrls_fromJson(json.$index(0, "urls"));
        t5.toString;
        t6 = A.AllocationCloudStatus_fromJson(json.$index(0, "status"));
        t6.toString;
        t7 = A.mapValueOfType(json, "project", t1);
        t7.toString;
        return new A.AllocationCloud(t2, t3, t4, t5, t6, t7, A.GroupedTimestamp_fromJson(json.$index(0, "updated")), A.mapValueOfType(json, "version", t1));
      }
      return null;
    },
    AllocationCloud_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_AllocationCloud);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.AllocationCloud_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.AllocationCloud);
      return t1;
    },
    AllocationCloud: function AllocationCloud(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.user = t2;
      _.urls = t3;
      _.status = t4;
      _.project = t5;
      _.updated = t6;
      _.version = t7;
    },
    AllocationCloudStatus_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "cloud");
        t3 = $.AllocationStatusEnumTypeTransformer__instance;
        t2 = (t3 == null ? $.AllocationStatusEnumTypeTransformer__instance = B.C_AllocationStatusEnumTypeTransformer : t3).decode$1(0, t2);
        t2.toString;
        return new A.AllocationCloudStatus(t1, t2);
      }
      return null;
    },
    AllocationCloudStatus: function AllocationCloudStatus(t0, t1) {
      this.schema = t0;
      this.cloud = t1;
    },
    AllocationCloudUrl_fromJson(value) {
      var t1, json, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = json.$index(0, "status");
        t4 = $.AllocationStatusEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.AllocationStatusEnumTypeTransformer__instance = B.C_AllocationStatusEnumTypeTransformer : t4).decode$1(0, t3);
        t3.toString;
        t1 = A.mapValueOfType(json, "url", t1);
        t1.toString;
        return new A.AllocationCloudUrl(t2, t3, t1);
      }
      return null;
    },
    AllocationCloudUrl: function AllocationCloudUrl(t0, t1, t2) {
      this.schema = t0;
      this.status = t1;
      this.url = t2;
    },
    AllocationCloudUrls_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.AllocationCloudUrl_fromJson(json.$index(0, "base"));
        t2.toString;
        t3 = A.AllocationCloudUrl_fromJson(json.$index(0, "id"));
        t3.toString;
        return new A.AllocationCloudUrls(t1, t2, t3, A.AllocationCloudUrl_fromJson(json.$index(0, "vanity")));
      }
      return null;
    },
    AllocationCloudUrls: function AllocationCloudUrls(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.base = t1;
      _.id = t2;
      _.vanity = t3;
    },
    AllocationStatusEnum: function AllocationStatusEnum(t0) {
      this.value = t0;
    },
    AllocationStatusEnumTypeTransformer: function AllocationStatusEnumTypeTransformer() {
    },
    Allocations_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Allocations(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.AllocationCloud_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Allocations: function Allocations(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Allocations_toJson_closure: function Allocations_toJson_closure() {
    },
    Analyses_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Analyses(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Analysis_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Analyses: function Analyses(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Analyses_toJson_closure: function Analyses_toJson_closure() {
    },
    Analysis_fromJson(value) {
      var t1, json, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.CodeAnalysis_fromJson(json.$index(0, "code"));
        t4 = A.mapValueOfType(json, "id", t1);
        t4.toString;
        t1 = A.mapValueOfType(json, "format", t1);
        t1.toString;
        return new A.Analysis(t2, t3, t4, t1, A.ImageAnalysis_fromJson(json.$index(0, "image")));
      }
      return null;
    },
    Analysis_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Analysis);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Analysis_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Analysis);
      return t1;
    },
    Analysis: function Analysis(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.code = t1;
      _.id = t2;
      _.format = t3;
      _.image = t4;
    },
    AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs_fromJson(value) {
      var json, t1, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "adoption_install");
        t3 = $.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnumTypeTransformer__instance;
        t2 = (t3 == null ? $.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnumTypeTransformer__instance = B.C_AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnumTypeTransformer : t3).decode$1(0, t2);
        t3 = json.$index(0, "adoption_uninstall");
        t4 = $.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnumTypeTransformer__instance;
        return new A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs(t1, t2, (t4 == null ? $.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnumTypeTransformer__instance = B.C_AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnumTypeTransformer : t4).decode$1(0, t3));
      }
      return null;
    },
    AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs: function AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs(t0, t1, t2) {
      this.schema = t0;
      this.adoptionInstall = t1;
      this.adoptionUninstall = t2;
    },
    AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnum: function AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnum() {
    },
    AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnumTypeTransformer: function AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnumTypeTransformer() {
    },
    AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnum: function AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnum() {
    },
    AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnumTypeTransformer: function AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnumTypeTransformer() {
    },
    Application_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = json.$index(0, "name");
        t5 = $.ApplicationNameEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.ApplicationNameEnumTypeTransformer__instance = B.C_ApplicationNameEnumTypeTransformer : t5).decode$1(0, t4);
        t4.toString;
        t1 = A.mapValueOfType(json, "version", t1);
        t1.toString;
        t5 = json.$index(0, "platform");
        t6 = $.PlatformEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.PlatformEnumTypeTransformer__instance = B.C_PlatformEnumTypeTransformer : t6).decode$1(0, t5);
        t5.toString;
        t6 = A.mapValueOfType(json, "onboarded", type$.bool);
        t6.toString;
        t7 = json.$index(0, "privacy");
        t8 = $.PrivacyEnumTypeTransformer__instance;
        t7 = (t8 == null ? $.PrivacyEnumTypeTransformer__instance = B.C_PrivacyEnumTypeTransformer : t8).decode$1(0, t7);
        t7.toString;
        t8 = json.$index(0, "capabilities");
        t9 = $.CapabilitiesEnumTypeTransformer__instance;
        t8 = (t9 == null ? $.CapabilitiesEnumTypeTransformer__instance = B.C_CapabilitiesEnumTypeTransformer : t9).decode$1(0, t8);
        t9 = json.$index(0, "mechanism");
        t10 = $.MechanismEnumTypeTransformer__instance;
        return new A.Application(t2, t3, t4, t1, t5, t6, t7, t8, (t10 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t10).decode$1(0, t9));
      }
      return null;
    },
    Application_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Application);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Application_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Application);
      return t1;
    },
    Application: function Application(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.name = t2;
      _.version = t3;
      _.platform = t4;
      _.onboarded = t5;
      _.privacy = t6;
      _.capabilities = t7;
      _.mechanism = t8;
    },
    ApplicationNameEnum: function ApplicationNameEnum(t0) {
      this.value = t0;
    },
    ApplicationNameEnumTypeTransformer: function ApplicationNameEnumTypeTransformer() {
    },
    Applications_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Applications(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Application_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Applications: function Applications(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Applications_toJson_closure: function Applications_toJson_closure() {
    },
    Asset_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "name", t1);
        t5 = A.mapValueOfType(json, "description", t1);
        t1 = A.mapValueOfType(json, "creator", t1);
        t1.toString;
        t6 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t6.toString;
        t7 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t7.toString;
        t8 = A.GroupedTimestamp_fromJson(json.$index(0, "synced"));
        t9 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t10 = A.AssetFormats_fromJson(json.$index(0, "formats"));
        t10.toString;
        t11 = A.Preview_fromJson(json.$index(0, "preview"));
        t11.toString;
        t12 = A.ReferencedFormat_fromJson(json.$index(0, "original"));
        t12.toString;
        t13 = A.Shares_fromJson(json.$index(0, "shares"));
        t14 = json.$index(0, "mechanism");
        t15 = $.MechanismEnumTypeTransformer__instance;
        t14 = (t15 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t15).decode$1(0, t14);
        t14.toString;
        t15 = type$.bool;
        return new A.Asset(t2, t3, t4, t5, t1, t6, t7, t8, t9, t10, t11, t12, t13, t14, A.Websites_fromJson(json.$index(0, "websites")), A.GroupedTimestamp_fromJson(json.$index(0, "interacted")), A.Tags_fromJson(json.$index(0, "tags")), A.Sensitives_fromJson(json.$index(0, "sensitives")), A.Persons_fromJson(json.$index(0, "persons")), A.mapValueOfType(json, "curated", t15), A.mapValueOfType(json, "discovered", t15), A.Activities_fromJson(json.$index(0, "activities")), A.Score_fromJson(json.$index(0, "score")), A.mapValueOfType(json, "favorited", t15));
      }
      return null;
    },
    Asset_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Asset);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Asset_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Asset);
      return t1;
    },
    Asset: function Asset(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.name = t2;
      _.description = t3;
      _.creator = t4;
      _.created = t5;
      _.updated = t6;
      _.synced = t7;
      _.deleted = t8;
      _.formats = t9;
      _.preview = t10;
      _.original = t11;
      _.shares = t12;
      _.mechanism = t13;
      _.websites = t14;
      _.interacted = t15;
      _.tags = t16;
      _.sensitives = t17;
      _.persons = t18;
      _.curated = t19;
      _.discovered = t20;
      _.activities = t21;
      _.score = t22;
      _.favorited = t23;
    },
    AssetFormats_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.Format_listFromJson(json.$index(0, "iterable"));
        t3 = A.FlattenedAsset_fromJson(json.$index(0, "asset"));
        t3.toString;
        return new A.AssetFormats(t1, t2, t3);
      }
      return null;
    },
    AssetFormats: function AssetFormats(t0, t1, t2) {
      this.schema = t0;
      this.iterable = t1;
      this.asset = t2;
    },
    AssetFormats_toJson_closure: function AssetFormats_toJson_closure() {
    },
    AssetReclassification_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "ext");
        t3 = $.ClassificationSpecificEnumTypeTransformer__instance;
        t2 = (t3 == null ? $.ClassificationSpecificEnumTypeTransformer__instance = B.C_ClassificationSpecificEnumTypeTransformer : t3).decode$1(0, t2);
        t2.toString;
        t3 = A.Asset_fromJson(json.$index(0, "asset"));
        t3.toString;
        return new A.AssetReclassification(t1, t2, t3);
      }
      return null;
    },
    AssetReclassification: function AssetReclassification(t0, t1, t2) {
      this.schema = t0;
      this.ext = t1;
      this.asset = t2;
    },
    Assets_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Assets(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Asset_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Assets: function Assets(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Assets_toJson_closure: function Assets_toJson_closure() {
    },
    Auth0_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.Auth0Identity_fromJson(json.$index(0, "identity"));
        t3 = A.Auth0User_fromJson(json.$index(0, "user"));
        t4 = A.Auth0UserMetadata_fromJson(json.$index(0, "metadata"));
        t5 = A.mapValueOfType(json, "domain", t1);
        t5.toString;
        t6 = A.mapValueOfType(json, "client", t1);
        t6.toString;
        t7 = A.mapValueOfType(json, "audience", t1);
        t7.toString;
        t8 = A.Auth0Redirects_fromJson(json.$index(0, "redirects"));
        t8.toString;
        t9 = A.OAuthGroup_fromJson(json.$index(0, "oAuth"));
        t9.toString;
        return new A.Auth0(t2, t3, t4, t5, t6, t7, t8, t9, A.mapValueOfType(json, "namespace", t1));
      }
      return null;
    },
    Auth0: function Auth0(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.identity = t0;
      _.user = t1;
      _.metadata = t2;
      _.domain = t3;
      _.client = t4;
      _.audience = t5;
      _.redirects = t6;
      _.oAuth = t7;
      _.namespace = t8;
    },
    Auth0Identity_fromJson(value) {
      var t1, json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        return new A.Auth0Identity(A.mapValueOfType(json, "connection", t1), A.mapValueOfType(json, "isSocial", type$.bool), A.mapValueOfType(json, "provider", t1), A.mapValueOfType(json, "user_id", t1), A.mapValueOfType(json, "access_token", t1), A.mapValueOfType(json, "expires_in", type$.int));
      }
      return null;
    },
    Auth0Identity_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Auth0Identity);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Auth0Identity_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Auth0Identity);
      return t1;
    },
    Auth0Identity: function Auth0Identity(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.connection = t0;
      _.isSocial = t1;
      _.provider = t2;
      _.userId = t3;
      _.accessToken = t4;
      _.expiresIn = t5;
    },
    Auth0Redirects_fromJson(value) {
      var t1, json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        return new A.Auth0Redirects(A.mapValueOfType(json, "authenticated", t1), A.mapValueOfType(json, "unauthenticated", t1));
      }
      return null;
    },
    Auth0Redirects: function Auth0Redirects(t0, t1) {
      this.authenticated = t0;
      this.unauthenticated = t1;
    },
    Auth0User_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20,
        _s11_ = "blocked_for",
        _s23_ = "guardian_authenticators";
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.mapValueOfType(json, "name", t1);
        t3 = A.mapValueOfType(json, "picture", t1);
        t4 = A.mapValueOfType(json, "email", t1);
        t5 = A.mapDateTime(json, "created_at", "");
        t6 = A.mapValueOfType(json, "email_verified", type$.bool);
        t7 = A.mapValueOfType(json, "family_name", t1);
        t8 = A.mapValueOfType(json, "given_name", t1);
        t9 = A.Auth0Identity_listFromJson(json.$index(0, "identities"));
        t10 = A.mapValueOfType(json, "nickname", t1);
        t11 = A.mapDateTime(json, "updated_at", "");
        t12 = A.mapValueOfType(json, "username", t1);
        t13 = A.Auth0UserMetadata_fromJson(json.$index(0, "user_metadata"));
        t14 = A.mapValueOfType(json, "locale", t1);
        t15 = A.mapValueOfType(json, "user_id", t1);
        t16 = A.mapValueOfType(json, "last_ip", t1);
        t17 = A.mapDateTime(json, "last_login", "");
        t18 = A.mapValueOfType(json, "logins_count", type$.int);
        t19 = type$.List_dynamic;
        t20 = t19._is(json.$index(0, _s11_)) ? J.cast$1$0$ax(t19._as(json.$index(0, _s11_)), t1) : B.List_empty1;
        return new A.Auth0User(t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t20, t19._is(json.$index(0, _s23_)) ? J.cast$1$0$ax(t19._as(json.$index(0, _s23_)), t1) : B.List_empty1);
      }
      return null;
    },
    Auth0User: function Auth0User(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18) {
      var _ = this;
      _.name = t0;
      _.picture = t1;
      _.email = t2;
      _.createdAt = t3;
      _.emailVerified = t4;
      _.familyName = t5;
      _.givenName = t6;
      _.identities = t7;
      _.nickname = t8;
      _.updatedAt = t9;
      _.username = t10;
      _.userMetadata = t11;
      _.locale = t12;
      _.userId = t13;
      _.lastIp = t14;
      _.lastLogin = t15;
      _.loginsCount = t16;
      _.blockedFor = t17;
      _.guardianAuthenticators = t18;
    },
    Auth0User_toJson_closure: function Auth0User_toJson_closure() {
    },
    Auth0UserMetadata_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "global_id", t1);
        t3.toString;
        return new A.Auth0UserMetadata(t2, t3, A.mapValueOfType(json, "cloud_key", t1), A.mapValueOfType(json, "stripe_customer_id", t1), A.mapValueOfType(json, "vanityname", t1));
      }
      return null;
    },
    Auth0UserMetadata: function Auth0UserMetadata(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.globalId = t1;
      _.cloudKey = t2;
      _.stripeCustomerId = t3;
      _.vanityname = t4;
    },
    AvailableFormats_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.AvailableFormats(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Classification_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    AvailableFormats: function AvailableFormats(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    AvailableFormats_toJson_closure: function AvailableFormats_toJson_closure() {
    },
    ByteDescriptor_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "value", type$.int);
        t3.toString;
        t1 = A.mapValueOfType(json, "readable", t1);
        t1.toString;
        return new A.ByteDescriptor(t2, t3, t1);
      }
      return null;
    },
    ByteDescriptor: function ByteDescriptor(t0, t1, t2) {
      this.schema = t0;
      this.value = t1;
      this.readable = t2;
    },
    CapabilitiesEnum: function CapabilitiesEnum(t0) {
      this.value = t0;
    },
    CapabilitiesEnumTypeTransformer: function CapabilitiesEnumTypeTransformer() {
    },
    ChallengedPKCE_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "state", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "nonce", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "challenge", t1);
        t5.toString;
        t6 = json.$index(0, "method");
        t7 = $.ChallengedPKCEMethodEnumTypeTransformer__instance;
        t6 = (t7 == null ? $.ChallengedPKCEMethodEnumTypeTransformer__instance = B.C_ChallengedPKCEMethodEnumTypeTransformer : t7).decode$1(0, t6);
        t6.toString;
        t1 = A.mapValueOfType(json, "verifier", t1);
        t1.toString;
        return new A.ChallengedPKCE(t2, t3, t4, t5, t6, t1);
      }
      return null;
    },
    ChallengedPKCE: function ChallengedPKCE(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.state = t1;
      _.nonce = t2;
      _.challenge = t3;
      _.method = t4;
      _.verifier = t5;
    },
    ChallengedPKCEMethodEnum: function ChallengedPKCEMethodEnum() {
    },
    ChallengedPKCEMethodEnumTypeTransformer: function ChallengedPKCEMethodEnumTypeTransformer() {
    },
    Classification_fromJson(value) {
      var json, t1, t2, t3, t4, t5;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "generic");
        t3 = $.ClassificationGenericEnumTypeTransformer__instance;
        t2 = (t3 == null ? $.ClassificationGenericEnumTypeTransformer__instance = B.C_ClassificationGenericEnumTypeTransformer : t3).decode$1(0, t2);
        t2.toString;
        t3 = json.$index(0, "specific");
        t4 = $.ClassificationSpecificEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.ClassificationSpecificEnumTypeTransformer__instance = B.C_ClassificationSpecificEnumTypeTransformer : t4).decode$1(0, t3);
        t3.toString;
        t4 = json.$index(0, "rendering");
        t5 = $.ClassificationRenderingEnumTypeTransformer__instance;
        return new A.Classification(t1, t2, t3, (t5 == null ? $.ClassificationRenderingEnumTypeTransformer__instance = B.C_ClassificationRenderingEnumTypeTransformer : t5).decode$1(0, t4));
      }
      return null;
    },
    Classification_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Classification);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Classification_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Classification);
      return t1;
    },
    Classification: function Classification(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.generic = t1;
      _.specific = t2;
      _.rendering = t3;
    },
    ClassificationGenericEnum: function ClassificationGenericEnum(t0) {
      this.value = t0;
    },
    ClassificationGenericEnumTypeTransformer: function ClassificationGenericEnumTypeTransformer() {
    },
    ClassificationRenderingEnum: function ClassificationRenderingEnum(t0) {
      this.value = t0;
    },
    ClassificationRenderingEnumTypeTransformer: function ClassificationRenderingEnumTypeTransformer() {
    },
    ClassificationSpecificEnum: function ClassificationSpecificEnum(t0) {
      this.value = t0;
    },
    ClassificationSpecificEnumTypeTransformer: function ClassificationSpecificEnumTypeTransformer() {
    },
    CodeAnalyses_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.CodeAnalyses(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.CodeAnalysis_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    CodeAnalyses: function CodeAnalyses(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    CodeAnalyses_toJson_closure: function CodeAnalyses_toJson_closure() {
    },
    CodeAnalysis_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11,
        _s9_ = "tokenized",
        _s10_ = "top5Colors",
        _s10_0 = "top5Sorted";
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = type$.List_dynamic;
        t4 = t3._is(json.$index(0, _s9_)) ? J.cast$1$0$ax(t3._as(json.$index(0, _s9_)), t1) : B.List_empty1;
        t5 = A.mapValueOfType(json, "language", t1);
        t6 = json.$index(0, "type");
        t7 = $.ClassificationGenericEnumTypeTransformer__instance;
        t6 = (t7 == null ? $.ClassificationGenericEnumTypeTransformer__instance = B.C_ClassificationGenericEnumTypeTransformer : t7).decode$1(0, t6);
        t6.toString;
        t7 = type$.num;
        t8 = A.mapCastOfType(json, "prediction", t1, t7);
        if (t8 == null)
          t8 = B.Map_empty;
        t7 = A.mapCastOfType(json, "similarity", t1, t7);
        if (t7 == null)
          t7 = B.Map_empty;
        t9 = t3._is(json.$index(0, _s10_)) ? J.cast$1$0$ax(t3._as(json.$index(0, _s10_)), type$.int) : B.List_empty0;
        t3 = t3._is(json.$index(0, _s10_0)) ? J.cast$1$0$ax(t3._as(json.$index(0, _s10_0)), t1) : B.List_empty1;
        t10 = A.mapValueOfType(json, "id", t1);
        t10.toString;
        t1 = A.mapValueOfType(json, "analysis", t1);
        t1.toString;
        t11 = A.Model_fromJson(json.$index(0, "model"));
        t11.toString;
        return new A.CodeAnalysis(t2, t4, t5, t6, t8, t7, t9, t3, t10, t1, t11);
      }
      return null;
    },
    CodeAnalysis_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_CodeAnalysis);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.CodeAnalysis_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.CodeAnalysis);
      return t1;
    },
    CodeAnalysis: function CodeAnalysis(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.schema = t0;
      _.tokenized = t1;
      _.language = t2;
      _.type = t3;
      _.prediction = t4;
      _.similarity = t5;
      _.top5Colors = t6;
      _.top5Sorted = t7;
      _.id = t8;
      _.analysis = t9;
      _.model = t10;
    },
    ConnectorSnapshot_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.Context_fromJson(json.$index(0, "context"));
        t2.toString;
        t3 = A.Assets_fromJson(json.$index(0, "assets"));
        t3.toString;
        return new A.ConnectorSnapshot(t1, t2, t3);
      }
      return null;
    },
    ConnectorSnapshot: function ConnectorSnapshot(t0, t1, t2) {
      this.schema = t0;
      this.context = t1;
      this.assets = t2;
    },
    Context_fromJson(value) {
      var t1, json, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "os", t1);
        t1.toString;
        t3 = A.Application_fromJson(json.$index(0, "application"));
        t3.toString;
        t4 = A.Health_fromJson(json.$index(0, "health"));
        t4.toString;
        return new A.Context0(t2, t1, t3, t4, A.UserProfile_fromJson(json.$index(0, "user")));
      }
      return null;
    },
    Context0: function Context0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.os = t1;
      _.application = t2;
      _.health = t3;
      _.user = t4;
    },
    DiscoveredAsset_fromJson(value) {
      var t1, json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        return new A.DiscoveredAsset(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.SeededFile_fromJson(json.$index(0, "file")), A.SeededFragment_fromJson(json.$index(0, "fragment")), A.mapValueOfType(json, "directory", t1), A.SeededAssetMetadata_fromJson(json.$index(0, "metadata")), A.TLPDirectedDiscoveryFilters_fromJson(json.$index(0, "filters")));
      }
      return null;
    },
    DiscoveredAsset_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_DiscoveredAsset);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.DiscoveredAsset_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.DiscoveredAsset);
      return t1;
    },
    DiscoveredAsset: function DiscoveredAsset(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.file = t1;
      _.fragment = t2;
      _.directory = t3;
      _.metadata = t4;
      _.filters = t5;
    },
    DiscoveredAssets_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "application", t1);
        t1.toString;
        return new A.DiscoveredAssets(t2, t1, A.DiscoveredAsset_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    DiscoveredAssets: function DiscoveredAssets(t0, t1, t2) {
      this.schema = t0;
      this.application = t1;
      this.iterable = t2;
    },
    DiscoveredAssets_toJson_closure: function DiscoveredAssets_toJson_closure() {
    },
    DiscoveredHtmlWebpage_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.DiscoveredAssets_fromJson(json.$index(0, "assets"));
        t3.toString;
        t1 = A.mapValueOfType(json, "url", t1);
        t1.toString;
        return new A.DiscoveredHtmlWebpage(t2, t3, t1);
      }
      return null;
    },
    DiscoveredHtmlWebpage_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_DiscoveredHtmlWebpage);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.DiscoveredHtmlWebpage_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.DiscoveredHtmlWebpage);
      return t1;
    },
    DiscoveredHtmlWebpage: function DiscoveredHtmlWebpage(t0, t1, t2) {
      this.schema = t0;
      this.assets = t1;
      this.url = t2;
    },
    DiscoveredHtmlWebpages_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.DiscoveredHtmlWebpage_listFromJson(json.$index(0, "iterable"));
        t1 = A.mapValueOfType(json, "application", t1);
        t1.toString;
        return new A.DiscoveredHtmlWebpages(t2, t3, t1);
      }
      return null;
    },
    DiscoveredHtmlWebpages: function DiscoveredHtmlWebpages(t0, t1, t2) {
      this.schema = t0;
      this.iterable = t1;
      this.application = t2;
    },
    DiscoveredHtmlWebpages_toJson_closure: function DiscoveredHtmlWebpages_toJson_closure() {
    },
    DiscoveredRelatedTag_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.SeededTag_fromJson(json.$index(0, "seed"));
        t2.toString;
        return new A.DiscoveredRelatedTag(t1, t2);
      }
      return null;
    },
    DiscoveredRelatedTag_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_DiscoveredRelatedTag);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.DiscoveredRelatedTag_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.DiscoveredRelatedTag);
      return t1;
    },
    DiscoveredRelatedTag: function DiscoveredRelatedTag(t0, t1) {
      this.schema = t0;
      this.seed = t1;
    },
    DiscoveredRelatedTags_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "application", t1);
        t1.toString;
        return new A.DiscoveredRelatedTags(t2, t1, A.DiscoveredRelatedTag_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    DiscoveredRelatedTags: function DiscoveredRelatedTags(t0, t1, t2) {
      this.schema = t0;
      this.application = t1;
      this.iterable = t2;
    },
    DiscoveredRelatedTags_toJson_closure: function DiscoveredRelatedTags_toJson_closure() {
    },
    DiscoveredSensitive_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.SeededSensitive_fromJson(json.$index(0, "seed"));
        t3.toString;
        t1 = A.mapValueOfType(json, "text", t1);
        t1.toString;
        return new A.DiscoveredSensitive(t2, t3, t1);
      }
      return null;
    },
    DiscoveredSensitive_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_DiscoveredSensitive);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.DiscoveredSensitive_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.DiscoveredSensitive);
      return t1;
    },
    DiscoveredSensitive: function DiscoveredSensitive(t0, t1, t2) {
      this.schema = t0;
      this.seed = t1;
      this.text = t2;
    },
    DiscoveredSensitives_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.DiscoveredSensitive_listFromJson(json.$index(0, "iterable"));
        t1 = A.mapValueOfType(json, "application", t1);
        t1.toString;
        return new A.DiscoveredSensitives(t2, t3, t1);
      }
      return null;
    },
    DiscoveredSensitives: function DiscoveredSensitives(t0, t1, t2) {
      this.schema = t0;
      this.iterable = t1;
      this.application = t2;
    },
    DiscoveredSensitives_toJson_closure: function DiscoveredSensitives_toJson_closure() {
    },
    Distribution_fromJson(value) {
      var t1, json, t2, t3, t4, t5;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        t3 = A.FlattenedShare_fromJson(json.$index(0, "share"));
        t3.toString;
        t4 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t4.toString;
        t5 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t5.toString;
        return new A.Distribution(t2, t1, t3, t4, t5, A.GroupedTimestamp_fromJson(json.$index(0, "deleted")), A.MailgunDistribution_fromJson(json.$index(0, "mailgun")), A.GitHubDistribution_fromJson(json.$index(0, "github")));
      }
      return null;
    },
    Distribution_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Distribution);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Distribution_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Distribution);
      return t1;
    },
    Distribution: function Distribution(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.share = t2;
      _.created = t3;
      _.updated = t4;
      _.deleted = t5;
      _.mailgun = t6;
      _.github = t7;
    },
    Distributions_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Distributions(A.Distribution_listFromJson(json.$index(0, "iterable")), A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")));
      }
      return null;
    },
    Distributions: function Distributions(t0, t1) {
      this.iterable = t0;
      this.schema = t1;
    },
    Distributions_toJson_closure: function Distributions_toJson_closure() {
    },
    Edges_fromJson(value) {
      if (type$.Map_dynamic_dynamic._is(value))
        return new A.Edges(A.Node_listFromJson(value.cast$2$0(0, type$.String, type$.dynamic).$index(0, "iterable")));
      return null;
    },
    Edges: function Edges(t0) {
      this.iterable = t0;
    },
    Edges_toJson_closure: function Edges_toJson_closure() {
    },
    EmbeddedModelSchema_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.mapValueOfType(json, "migration", type$.int);
        t1.toString;
        t2 = json.$index(0, "semantic");
        t3 = $.EmbeddedModelSchemaSemanticVersionEnumTypeTransformer__instance;
        t2 = (t3 == null ? $.EmbeddedModelSchemaSemanticVersionEnumTypeTransformer__instance = B.C_EmbeddedModelSchemaSemanticVersionEnumTypeTransformer : t3).decode$1(0, t2);
        t2.toString;
        return new A.EmbeddedModelSchema(t1, t2);
      }
      return null;
    },
    EmbeddedModelSchema: function EmbeddedModelSchema(t0, t1) {
      this.migration = t0;
      this.semantic = t1;
    },
    EmbeddedModelSchemaSemanticVersionEnum: function EmbeddedModelSchemaSemanticVersionEnum() {
    },
    EmbeddedModelSchemaSemanticVersionEnumTypeTransformer: function EmbeddedModelSchemaSemanticVersionEnumTypeTransformer() {
    },
    Embedding_fromJson(value) {
      var json, t1, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = type$.List_dynamic;
        t1 = t1._is(json.$index(0, "raw")) ? J.cast$1$0$ax(t1._as(json.$index(0, "raw")), type$.num) : B.List_empty2;
        t2 = A.Model_fromJson(json.$index(0, "model"));
        t2.toString;
        t3 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t3.toString;
        t4 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t4.toString;
        return new A.Embedding(t1, t2, t3, t4, A.GroupedTimestamp_fromJson(json.$index(0, "deleted")));
      }
      return null;
    },
    Embedding_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Embedding);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Embedding_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Embedding);
      return t1;
    },
    Embedding: function Embedding(t0, t1, t2, t3, t4) {
      var _ = this;
      _.raw = t0;
      _.model = t1;
      _.created = t2;
      _.updated = t3;
      _.deleted = t4;
    },
    Embeddings_fromJson(value) {
      if (type$.Map_dynamic_dynamic._is(value))
        return new A.Embeddings(A.Embedding_listFromJson(value.cast$2$0(0, type$.String, type$.dynamic).$index(0, "iterable")));
      return null;
    },
    Embeddings: function Embeddings(t0) {
      this.iterable = t0;
    },
    Embeddings_toJson_closure: function Embeddings_toJson_closure() {
    },
    ExportedAsset_fromJson(value) {
      var t1, json, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.mapValueOfType(json, "name", t1);
        t2.toString;
        t1 = A.mapValueOfType(json, "description", t1);
        t1.toString;
        t3 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t3.toString;
        t4 = A.FileFormat_fromJson(json.$index(0, "raw"));
        t4.toString;
        return new A.ExportedAsset(t2, t1, t3, t4);
      }
      return null;
    },
    ExportedAsset: function ExportedAsset(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.description = t1;
      _.created = t2;
      _.raw = t3;
    },
    ExportedDatabase_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20,
        _s8_ = "analyses",
        _s12_ = "applications",
        _s12_0 = "codeAnalyses",
        _s13_ = "formatMetrics",
        _s9_ = "fragments",
        _s13_0 = "imageAnalyses",
        _s11_ = "ocrAnalyses",
        _s10_ = "sensitives",
        _s8_0 = "websites",
        _s13_1 = "relationships",
        _s10_0 = "activities";
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = type$.List_dynamic;
        t3 = t2._is(json.$index(0, _s8_)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s8_)), type$.int) : B.List_empty0;
        t4 = t2._is(json.$index(0, _s12_)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s12_)), type$.int) : B.List_empty0;
        t5 = t2._is(json.$index(0, "assets")) ? J.cast$1$0$ax(t2._as(json.$index(0, "assets")), type$.int) : B.List_empty0;
        t6 = t2._is(json.$index(0, _s12_0)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s12_0)), type$.int) : B.List_empty0;
        t7 = t2._is(json.$index(0, "files")) ? J.cast$1$0$ax(t2._as(json.$index(0, "files")), type$.int) : B.List_empty0;
        t8 = t2._is(json.$index(0, _s13_)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s13_)), type$.int) : B.List_empty0;
        t9 = t2._is(json.$index(0, "formats")) ? J.cast$1$0$ax(t2._as(json.$index(0, "formats")), type$.int) : B.List_empty0;
        t10 = t2._is(json.$index(0, _s9_)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s9_)), type$.int) : B.List_empty0;
        t11 = t2._is(json.$index(0, _s13_0)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s13_0)), type$.int) : B.List_empty0;
        t12 = t2._is(json.$index(0, "models")) ? J.cast$1$0$ax(t2._as(json.$index(0, "models")), type$.int) : B.List_empty0;
        t13 = t2._is(json.$index(0, _s11_)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s11_)), type$.int) : B.List_empty0;
        t14 = t2._is(json.$index(0, "persons")) ? J.cast$1$0$ax(t2._as(json.$index(0, "persons")), type$.int) : B.List_empty0;
        t15 = t2._is(json.$index(0, _s10_)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s10_)), type$.int) : B.List_empty0;
        t16 = t2._is(json.$index(0, "tags")) ? J.cast$1$0$ax(t2._as(json.$index(0, "tags")), type$.int) : B.List_empty0;
        t17 = t2._is(json.$index(0, _s8_0)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s8_0)), type$.int) : B.List_empty0;
        t18 = A.ExportedDatabaseFormats_fromJson(json.$index(0, "values"));
        t18.toString;
        t1 = A.mapValueOfType(json, "version", t1);
        t1.toString;
        t19 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t20 = t2._is(json.$index(0, _s13_1)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s13_1)), type$.int) : B.List_empty0;
        return new A.ExportedDatabase(t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t1, t19, t20, t2._is(json.$index(0, _s10_0)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s10_0)), type$.int) : B.List_empty0);
      }
      return null;
    },
    ExportedDatabase: function ExportedDatabase(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19) {
      var _ = this;
      _.analyses = t0;
      _.applications = t1;
      _.assets = t2;
      _.codeAnalyses = t3;
      _.files = t4;
      _.formatMetrics = t5;
      _.formats = t6;
      _.fragments = t7;
      _.imageAnalyses = t8;
      _.models = t9;
      _.ocrAnalyses = t10;
      _.persons = t11;
      _.sensitives = t12;
      _.tags = t13;
      _.websites = t14;
      _.values = t15;
      _.version = t16;
      _.schema = t17;
      _.relationships = t18;
      _.activities = t19;
    },
    ExportedDatabaseFormat_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        t3 = type$.List_dynamic;
        return new A.ExportedDatabaseFormat(t2, t1, t3._is(json.$index(0, "raw")) ? J.cast$1$0$ax(t3._as(json.$index(0, "raw")), type$.int) : B.List_empty0);
      }
      return null;
    },
    ExportedDatabaseFormat_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_ExportedDatabaseFormat);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.ExportedDatabaseFormat_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.ExportedDatabaseFormat);
      return t1;
    },
    ExportedDatabaseFormat: function ExportedDatabaseFormat(t0, t1, t2) {
      this.schema = t0;
      this.id = t1;
      this.raw = t2;
    },
    ExportedDatabaseFormats_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.ExportedDatabaseFormats(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.ExportedDatabaseFormat_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    ExportedDatabaseFormats: function ExportedDatabaseFormats(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    ExportedDatabaseFormats_toJson_closure: function ExportedDatabaseFormats_toJson_closure() {
    },
    ExternalProvider_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = json.$index(0, "type");
        t4 = $.ExternalProviderTypeEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.ExternalProviderTypeEnumTypeTransformer__instance = B.C_ExternalProviderTypeEnumTypeTransformer : t4).decode$1(0, t3);
        t3.toString;
        t4 = A.mapValueOfType(json, "user_id", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "access_token", t1);
        t6 = A.mapValueOfType(json, "expires_in", type$.int);
        t7 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t7.toString;
        t8 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t8.toString;
        return new A.ExternalProvider(t2, t3, t4, t5, t6, t7, t8, A.ExternalProviderProfileData_fromJson(json.$index(0, "profileData")), A.mapValueOfType(json, "connection", t1), A.mapValueOfType(json, "isSocial", type$.bool));
      }
      return null;
    },
    ExternalProvider_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_ExternalProvider);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.ExternalProvider_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.ExternalProvider);
      return t1;
    },
    ExternalProvider: function ExternalProvider(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.schema = t0;
      _.type = t1;
      _.userId = t2;
      _.accessToken = t3;
      _.expiresIn = t4;
      _.created = t5;
      _.updated = t6;
      _.profileData = t7;
      _.connection = t8;
      _.isSocial = t9;
    },
    ExternalProviderProfileData_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = type$.bool;
        t3 = type$.int;
        return new A.ExternalProviderProfileData(A.mapValueOfType(json, "name", t1), A.mapValueOfType(json, "picture", t1), A.mapValueOfType(json, "nickname", t1), A.mapValueOfType(json, "email", t1), A.mapValueOfType(json, "email_verified", t2), A.mapValueOfType(json, "node_id", t1), A.mapValueOfType(json, "gravatar_id", t1), A.mapValueOfType(json, "url", t1), A.mapValueOfType(json, "html_url", t1), A.mapValueOfType(json, "followers_url", t1), A.mapValueOfType(json, "following_url", t1), A.mapValueOfType(json, "gists_url", t1), A.mapValueOfType(json, "starred_url", t1), A.mapValueOfType(json, "subscriptions_url", t1), A.mapValueOfType(json, "organizations_url", t1), A.mapValueOfType(json, "repos_url", t1), A.mapValueOfType(json, "events_url", t1), A.mapValueOfType(json, "received_events_url", t1), A.mapValueOfType(json, "type", t1), A.mapValueOfType(json, "site_admin", t2), A.mapValueOfType(json, "company", t1), A.mapValueOfType(json, "blog", t1), A.mapValueOfType(json, "location", t1), A.mapValueOfType(json, "hireable", t2), A.mapValueOfType(json, "bio", t1), A.mapValueOfType(json, "twitter_username", t1), A.mapValueOfType(json, "public_repos", t3), A.mapValueOfType(json, "public_gists", t3), A.mapValueOfType(json, "followers", t3), A.mapValueOfType(json, "following", t3), A.mapValueOfType(json, "created_at", t1), A.mapValueOfType(json, "updated_at", t1), A.mapValueOfType(json, "private_gists", t3), A.mapValueOfType(json, "total_private_repos", t3), A.mapValueOfType(json, "owned_private_repos", t3), A.mapValueOfType(json, "disk_usage", t3), A.mapValueOfType(json, "collaborators", t3), A.mapValueOfType(json, "two_factor_authentication", t2));
      }
      return null;
    },
    ExternalProviderProfileData: function ExternalProviderProfileData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37) {
      var _ = this;
      _.name = t0;
      _.picture = t1;
      _.nickname = t2;
      _.email = t3;
      _.emailVerified = t4;
      _.nodeId = t5;
      _.gravatarId = t6;
      _.url = t7;
      _.htmlUrl = t8;
      _.followersUrl = t9;
      _.followingUrl = t10;
      _.gistsUrl = t11;
      _.starredUrl = t12;
      _.subscriptionsUrl = t13;
      _.organizationsUrl = t14;
      _.reposUrl = t15;
      _.eventsUrl = t16;
      _.receivedEventsUrl = t17;
      _.type = t18;
      _.siteAdmin = t19;
      _.company = t20;
      _.blog = t21;
      _.location = t22;
      _.hireable = t23;
      _.bio = t24;
      _.twitterUsername = t25;
      _.publicRepos = t26;
      _.publicGists = t27;
      _.followers = t28;
      _.following = t29;
      _.createdAt = t30;
      _.updatedAt = t31;
      _.privateGists = t32;
      _.totalPrivateRepos = t33;
      _.ownedPrivateRepos = t34;
      _.diskUsage = t35;
      _.collaborators = t36;
      _.twoFactorAuthentication = t37;
    },
    ExternalProviderTypeEnum: function ExternalProviderTypeEnum(t0) {
      this.value = t0;
    },
    ExternalProviderTypeEnumTypeTransformer: function ExternalProviderTypeEnumTypeTransformer() {
    },
    ExternalProviders_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.ExternalProviders(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.ExternalProvider_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    ExternalProviders: function ExternalProviders(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    ExternalProviders_toJson_closure: function ExternalProviders_toJson_closure() {
    },
    ExternallySourcedEnum: function ExternallySourcedEnum(t0) {
      this.value = t0;
    },
    ExternallySourcedEnumTypeTransformer: function ExternallySourcedEnumTypeTransformer() {
    },
    FileFormat_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.FileFormat(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TransferableBytes_fromJson(json.$index(0, "bytes")), A.TransferableString_fromJson(json.$index(0, "string")));
      }
      return null;
    },
    FileFormat: function FileFormat(t0, t1, t2) {
      this.schema = t0;
      this.bytes = t1;
      this.string = t2;
    },
    FileMetadata_fromJson(value) {
      var t1, json, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "name", t1);
        t3 = json.$index(0, "ext");
        t4 = $.ClassificationSpecificEnumTypeTransformer__instance;
        return new A.FileMetadata(t2, t1, (t4 == null ? $.ClassificationSpecificEnumTypeTransformer__instance = B.C_ClassificationSpecificEnumTypeTransformer : t4).decode$1(0, t3), A.mapValueOfType(json, "size", type$.int));
      }
      return null;
    },
    FileMetadata: function FileMetadata(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.name = t1;
      _.ext = t2;
      _.size = t3;
    },
    FlattenedActivities_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.FlattenedActivities(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.ReferencedActivity_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    FlattenedActivities: function FlattenedActivities(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    FlattenedActivities_toJson_closure: function FlattenedActivities_toJson_closure() {
    },
    FlattenedActivity_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        t3 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t3.toString;
        t4 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t4.toString;
        t5 = A.SeededConnectorTracking_fromJson(json.$index(0, "event"));
        t5.toString;
        t6 = A.Application_fromJson(json.$index(0, "application"));
        t6.toString;
        t7 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t8 = A.ReferencedAsset_fromJson(json.$index(0, "asset"));
        t9 = A.ReferencedFormat_fromJson(json.$index(0, "format"));
        t10 = A.FlattenedUserProfile_fromJson(json.$index(0, "user"));
        t11 = json.$index(0, "mechanism");
        t12 = $.MechanismEnumTypeTransformer__instance;
        t11 = (t12 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t12).decode$1(0, t11);
        t11.toString;
        return new A.FlattenedActivity(t2, t1, t3, t4, t5, t6, t7, t8, t9, t10, t11, A.mapValueOfType(json, "rank", type$.int));
      }
      return null;
    },
    FlattenedActivity: function FlattenedActivity(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.created = t2;
      _.updated = t3;
      _.event = t4;
      _.application = t5;
      _.deleted = t6;
      _.asset = t7;
      _.format = t8;
      _.user = t9;
      _.mechanism = t10;
      _.rank = t11;
    },
    FlattenedAnalysis_fromJson(value) {
      var t1, json, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.CodeAnalysis_fromJson(json.$index(0, "code"));
        t4 = A.mapValueOfType(json, "id", t1);
        t4.toString;
        t1 = A.mapValueOfType(json, "format", t1);
        t1.toString;
        return new A.FlattenedAnalysis(t2, t3, t4, t1, A.FlattenedImageAnalysis_fromJson(json.$index(0, "image")));
      }
      return null;
    },
    FlattenedAnalysis: function FlattenedAnalysis(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.code = t1;
      _.id = t2;
      _.format = t3;
      _.image = t4;
    },
    FlattenedAsset_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "name", t1);
        t5 = A.mapValueOfType(json, "description", t1);
        t6 = A.mapValueOfType(json, "creator", t1);
        t6.toString;
        t7 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t7.toString;
        t8 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t8.toString;
        t9 = A.GroupedTimestamp_fromJson(json.$index(0, "synced"));
        t10 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t11 = A.FlattenedFormats_fromJson(json.$index(0, "formats"));
        t11.toString;
        t12 = A.FlattenedPreview_fromJson(json.$index(0, "preview"));
        t12.toString;
        t1 = A.mapValueOfType(json, "original", t1);
        t1.toString;
        t13 = A.FlattenedShares_fromJson(json.$index(0, "shares"));
        t14 = json.$index(0, "mechanism");
        t15 = $.MechanismEnumTypeTransformer__instance;
        t14 = (t15 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t15).decode$1(0, t14);
        t14.toString;
        t15 = type$.bool;
        return new A.FlattenedAsset(t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t1, t13, t14, A.FlattenedWebsites_fromJson(json.$index(0, "websites")), A.GroupedTimestamp_fromJson(json.$index(0, "interacted")), A.FlattenedTags_fromJson(json.$index(0, "tags")), A.FlattenedSensitives_fromJson(json.$index(0, "sensitives")), A.FlattenedPersons_fromJson(json.$index(0, "persons")), A.mapValueOfType(json, "curated", t15), A.mapValueOfType(json, "discovered", t15), A.FlattenedActivities_fromJson(json.$index(0, "activities")), A.Score_fromJson(json.$index(0, "score")), A.mapValueOfType(json, "favorited", t15));
      }
      return null;
    },
    FlattenedAsset: function FlattenedAsset(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.name = t2;
      _.description = t3;
      _.creator = t4;
      _.created = t5;
      _.updated = t6;
      _.synced = t7;
      _.deleted = t8;
      _.formats = t9;
      _.preview = t10;
      _.original = t11;
      _.shares = t12;
      _.mechanism = t13;
      _.websites = t14;
      _.interacted = t15;
      _.tags = t16;
      _.sensitives = t17;
      _.persons = t18;
      _.curated = t19;
      _.discovered = t20;
      _.activities = t21;
      _.score = t22;
      _.favorited = t23;
    },
    FlattenedAssets_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.ReferencedAsset_listFromJson(json.$index(0, "iterable"));
        return new A.FlattenedAssets(t1, t2);
      }
      return null;
    },
    FlattenedAssets: function FlattenedAssets(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    FlattenedAssets_toJson_closure: function FlattenedAssets_toJson_closure() {
    },
    FlattenedDistribution_fromJson(value) {
      var t1, json, t2, t3, t4, t5;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t1 = A.mapValueOfType(json, "share", t1);
        t1.toString;
        t4 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t4.toString;
        t5 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t5.toString;
        return new A.FlattenedDistribution(t2, t3, t1, t4, t5, A.GroupedTimestamp_fromJson(json.$index(0, "deleted")), A.MailgunDistribution_fromJson(json.$index(0, "mailgun")), A.GitHubDistribution_fromJson(json.$index(0, "github")));
      }
      return null;
    },
    FlattenedDistribution: function FlattenedDistribution(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.share = t2;
      _.created = t3;
      _.updated = t4;
      _.deleted = t5;
      _.mailgun = t6;
      _.github = t7;
    },
    FlattenedDistributions_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.FlattenedDistributions(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.ReferencedDistribution_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    FlattenedDistributions: function FlattenedDistributions(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    FlattenedDistributions_toJson_closure: function FlattenedDistributions_toJson_closure() {
    },
    FlattenedFormat_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "creator", t1);
        t4.toString;
        t5 = A.Classification_fromJson(json.$index(0, "classification"));
        t5.toString;
        t6 = A.mapValueOfType(json, "icon", t1);
        t7 = json.$index(0, "role");
        t8 = $.RoleTypeTransformer__instance;
        t7 = (t8 == null ? $.RoleTypeTransformer__instance = B.C_RoleTypeTransformer : t8).decode$1(0, t7);
        t7.toString;
        t8 = A.Application_fromJson(json.$index(0, "application"));
        t8.toString;
        t9 = A.mapValueOfType(json, "asset", t1);
        t9.toString;
        t10 = A.ByteDescriptor_fromJson(json.$index(0, "bytes"));
        t10.toString;
        t11 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t11.toString;
        t12 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t12.toString;
        return new A.FlattenedFormat(t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, A.GroupedTimestamp_fromJson(json.$index(0, "deleted")), A.GroupedTimestamp_fromJson(json.$index(0, "synced")), A.mapValueOfType(json, "cloud", t1), A.FragmentFormat_fromJson(json.$index(0, "fragment")), A.FileFormat_fromJson(json.$index(0, "file")), A.FlattenedAnalysis_fromJson(json.$index(0, "analysis")), A.FlattenedWebsites_fromJson(json.$index(0, "websites")), A.FlattenedTags_fromJson(json.$index(0, "tags")), A.Relationship_fromJson(json.$index(0, "relationship")), A.FlattenedActivities_fromJson(json.$index(0, "activities")));
      }
      return null;
    },
    FlattenedFormat: function FlattenedFormat(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.creator = t2;
      _.classification = t3;
      _.icon = t4;
      _.role = t5;
      _.application = t6;
      _.asset = t7;
      _.bytes = t8;
      _.created = t9;
      _.updated = t10;
      _.deleted = t11;
      _.synced = t12;
      _.cloud = t13;
      _.fragment = t14;
      _.file = t15;
      _.analysis = t16;
      _.websites = t17;
      _.tags = t18;
      _.relationship = t19;
      _.activities = t20;
    },
    FlattenedFormats_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.FlattenedFormats(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.ReferencedFormat_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    FlattenedFormats: function FlattenedFormats(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    FlattenedFormats_toJson_closure: function FlattenedFormats_toJson_closure() {
    },
    FlattenedImageAnalysis_fromJson(value) {
      var t1, json, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.FlattenedOCRAnalysis_fromJson(json.$index(0, "ocr"));
        t1 = A.mapValueOfType(json, "analysis", t1);
        t1.toString;
        return new A.FlattenedImageAnalysis(t2, t3, t4, t1);
      }
      return null;
    },
    FlattenedImageAnalysis: function FlattenedImageAnalysis(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.ocr = t2;
      _.analysis = t3;
    },
    FlattenedOCRAnalysis_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.ReferencedFormat_fromJson(json.$index(0, "raw"));
        t4.toString;
        t5 = A.ReferencedFormat_fromJson(json.$index(0, "hocr"));
        t5.toString;
        t6 = A.Model_fromJson(json.$index(0, "model"));
        t6.toString;
        t1 = A.mapValueOfType(json, "image", t1);
        t1.toString;
        return new A.FlattenedOCRAnalysis(t2, t3, t4, t5, t6, t1);
      }
      return null;
    },
    FlattenedOCRAnalysis: function FlattenedOCRAnalysis(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.raw = t2;
      _.hocr = t3;
      _.model = t4;
      _.image = t5;
    },
    FlattenedPerson_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        t3 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t3.toString;
        t4 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t4.toString;
        t5 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t6 = A.PersonAccess_fromJson(json.$index(0, "access"));
        t6.toString;
        t7 = A.GroupedTimestamp_fromJson(json.$index(0, "expiration"));
        t8 = A.PersonType_fromJson(json.$index(0, "type"));
        t8.toString;
        t9 = A.ReferencedAsset_fromJson(json.$index(0, "asset"));
        t10 = json.$index(0, "mechanism");
        t11 = $.MechanismEnumTypeTransformer__instance;
        t10 = (t11 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t11).decode$1(0, t10);
        t10.toString;
        return new A.FlattenedPerson(t2, t1, t3, t4, t5, t6, t7, t8, t9, t10, A.mapValueOfType(json, "interactions", type$.int));
      }
      return null;
    },
    FlattenedPerson: function FlattenedPerson(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.created = t2;
      _.updated = t3;
      _.deleted = t4;
      _.access = t5;
      _.expiration = t6;
      _.type = t7;
      _.asset = t8;
      _.mechanism = t9;
      _.interactions = t10;
    },
    FlattenedPersons_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.FlattenedPersons(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.ReferencedPerson_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    FlattenedPersons: function FlattenedPersons(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    FlattenedPersons_toJson_closure: function FlattenedPersons_toJson_closure() {
    },
    FlattenedPreview_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "base", t1);
        t3.toString;
        return new A.FlattenedPreview(t2, t3, A.mapValueOfType(json, "overlay", t1));
      }
      return null;
    },
    FlattenedPreview: function FlattenedPreview(t0, t1, t2) {
      this.schema = t0;
      this.base = t1;
      this.overlay = t2;
    },
    FlattenedSensitive_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t4.toString;
        t5 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t5.toString;
        t6 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t7 = A.ReferencedAsset_fromJson(json.$index(0, "asset"));
        t7.toString;
        t8 = A.mapValueOfType(json, "text", t1);
        t8.toString;
        t9 = json.$index(0, "mechanism");
        t10 = $.MechanismEnumTypeTransformer__instance;
        t9 = (t10 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t10).decode$1(0, t9);
        t9.toString;
        t10 = json.$index(0, "category");
        t11 = $.SensitiveCategoryEnumTypeTransformer__instance;
        t10 = (t11 == null ? $.SensitiveCategoryEnumTypeTransformer__instance = B.C_SensitiveCategoryEnumTypeTransformer : t11).decode$1(0, t10);
        t10.toString;
        t11 = json.$index(0, "severity");
        t12 = $.SensitiveSeverityEnumTypeTransformer__instance;
        t11 = (t12 == null ? $.SensitiveSeverityEnumTypeTransformer__instance = B.C_SensitiveSeverityEnumTypeTransformer : t12).decode$1(0, t11);
        t11.toString;
        t12 = A.mapValueOfType(json, "name", t1);
        t12.toString;
        t1 = A.mapValueOfType(json, "description", t1);
        t1.toString;
        return new A.FlattenedSensitive(t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t1, A.SensitiveMetadata_fromJson(json.$index(0, "metadata")), A.mapValueOfType(json, "interactions", type$.int));
      }
      return null;
    },
    FlattenedSensitive: function FlattenedSensitive(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.created = t2;
      _.updated = t3;
      _.deleted = t4;
      _.asset = t5;
      _.text = t6;
      _.mechanism = t7;
      _.category = t8;
      _.severity = t9;
      _.name = t10;
      _.description = t11;
      _.metadata = t12;
      _.interactions = t13;
    },
    FlattenedSensitives_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.FlattenedSensitives(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.ReferencedSensitive_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    FlattenedSensitives: function FlattenedSensitives(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    FlattenedSensitives_toJson_closure: function FlattenedSensitives_toJson_closure() {
    },
    FlattenedShare_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "asset", t1);
        t5 = A.mapValueOfType(json, "user", t1);
        t6 = A.mapValueOfType(json, "link", t1);
        t6.toString;
        t7 = json.$index(0, "access");
        t8 = $.AccessEnumTypeTransformer__instance;
        t7 = (t8 == null ? $.AccessEnumTypeTransformer__instance = B.C_AccessEnumTypeTransformer : t8).decode$1(0, t7);
        t7.toString;
        t8 = A.Accessors_fromJson(json.$index(0, "accessors"));
        t8.toString;
        t9 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t9.toString;
        t10 = A.mapValueOfType(json, "short", t1);
        t10.toString;
        return new A.FlattenedShare(t2, t3, t4, t5, t6, t7, t8, t9, t10, A.mapValueOfType(json, "name", t1), A.FlattenedAssets_fromJson(json.$index(0, "assets")), A.FlattenedDistributions_fromJson(json.$index(0, "distributions")));
      }
      return null;
    },
    FlattenedShare_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_FlattenedShare);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.FlattenedShare_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.FlattenedShare);
      return t1;
    },
    FlattenedShare: function FlattenedShare(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.asset = t2;
      _.user = t3;
      _.link = t4;
      _.access = t5;
      _.accessors = t6;
      _.created = t7;
      _.short = t8;
      _.name = t9;
      _.assets = t10;
      _.distributions = t11;
    },
    FlattenedShares_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.FlattenedShares(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.FlattenedShare_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    FlattenedShares: function FlattenedShares(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    FlattenedShares_toJson_closure: function FlattenedShares_toJson_closure() {
    },
    FlattenedTag_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t1 = A.mapValueOfType(json, "text", t1);
        t1.toString;
        t4 = json.$index(0, "mechanism");
        t5 = $.MechanismEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t5).decode$1(0, t4);
        t4.toString;
        t5 = A.ReferencedAsset_fromJson(json.$index(0, "asset"));
        t5.toString;
        t6 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t6.toString;
        t7 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t7.toString;
        t8 = A.ReferencedFormat_fromJson(json.$index(0, "format"));
        t9 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t10 = json.$index(0, "category");
        t11 = $.TagCategoryEnumTypeTransformer__instance;
        t10 = (t11 == null ? $.TagCategoryEnumTypeTransformer__instance = B.C_TagCategoryEnumTypeTransformer : t11).decode$1(0, t10);
        t10.toString;
        return new A.FlattenedTag(t2, t3, t1, t4, t5, t6, t7, t8, t9, t10, A.Relationship_fromJson(json.$index(0, "relationship")), A.mapValueOfType(json, "interactions", type$.int));
      }
      return null;
    },
    FlattenedTag: function FlattenedTag(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.text = t2;
      _.mechanism = t3;
      _.asset = t4;
      _.created = t5;
      _.updated = t6;
      _.format = t7;
      _.deleted = t8;
      _.category = t9;
      _.relationship = t10;
      _.interactions = t11;
    },
    FlattenedTags_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.FlattenedTags(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.ReferencedTag_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    FlattenedTags: function FlattenedTags(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    FlattenedTags_toJson_closure: function FlattenedTags_toJson_closure() {
    },
    FlattenedUserProfile_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        return new A.FlattenedUserProfile(t2, t3, A.mapValueOfType(json, "email", t1), A.mapValueOfType(json, "name", t1), A.mapValueOfType(json, "username", t1), A.mapValueOfType(json, "picture", t1), A.mapValueOfType(json, "vanityname", t1));
      }
      return null;
    },
    FlattenedUserProfile: function FlattenedUserProfile(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.email = t2;
      _.name = t3;
      _.username = t4;
      _.picture = t5;
      _.vanityname = t6;
    },
    FlattenedWebsite_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.ReferencedAsset_fromJson(json.$index(0, "asset"));
        t4.toString;
        t5 = A.mapValueOfType(json, "name", t1);
        t5.toString;
        t1 = A.mapValueOfType(json, "url", t1);
        t1.toString;
        t6 = A.ReferencedFormat_fromJson(json.$index(0, "format"));
        t7 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t7.toString;
        t8 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t8.toString;
        t9 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t10 = json.$index(0, "mechanism");
        t11 = $.MechanismEnumTypeTransformer__instance;
        t10 = (t11 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t11).decode$1(0, t10);
        t10.toString;
        return new A.FlattenedWebsite(t2, t3, t4, t5, t1, t6, t7, t8, t9, t10, A.mapValueOfType(json, "interactions", type$.int));
      }
      return null;
    },
    FlattenedWebsite: function FlattenedWebsite(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.asset = t2;
      _.name = t3;
      _.url = t4;
      _.format = t5;
      _.created = t6;
      _.updated = t7;
      _.deleted = t8;
      _.mechanism = t9;
      _.interactions = t10;
    },
    FlattenedWebsites_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.FlattenedWebsites(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.ReferencedWebsite_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    FlattenedWebsites: function FlattenedWebsites(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    FlattenedWebsites_toJson_closure: function FlattenedWebsites_toJson_closure() {
    },
    Font_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.mapValueOfType(json, "size", type$.int);
        t2.toString;
        return new A.Font(t1, t2);
      }
      return null;
    },
    Font: function Font(t0, t1) {
      this.schema = t0;
      this.size = t1;
    },
    Format_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "creator", t1);
        t4.toString;
        t5 = A.Classification_fromJson(json.$index(0, "classification"));
        t5.toString;
        t6 = A.mapValueOfType(json, "icon", t1);
        t7 = json.$index(0, "role");
        t8 = $.RoleTypeTransformer__instance;
        t7 = (t8 == null ? $.RoleTypeTransformer__instance = B.C_RoleTypeTransformer : t8).decode$1(0, t7);
        t7.toString;
        t8 = A.Application_fromJson(json.$index(0, "application"));
        t8.toString;
        t9 = A.FlattenedAsset_fromJson(json.$index(0, "asset"));
        t9.toString;
        t10 = A.ByteDescriptor_fromJson(json.$index(0, "bytes"));
        t10.toString;
        t11 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t11.toString;
        t12 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t12.toString;
        return new A.Format(t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, A.GroupedTimestamp_fromJson(json.$index(0, "deleted")), A.GroupedTimestamp_fromJson(json.$index(0, "synced")), A.mapValueOfType(json, "cloud", t1), A.FragmentFormat_fromJson(json.$index(0, "fragment")), A.FileFormat_fromJson(json.$index(0, "file")), A.Analysis_fromJson(json.$index(0, "analysis")), A.Websites_fromJson(json.$index(0, "websites")), A.Tags_fromJson(json.$index(0, "tags")), A.Relationship_fromJson(json.$index(0, "relationship")), A.Activities_fromJson(json.$index(0, "activities")));
      }
      return null;
    },
    Format_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Format);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Format_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Format);
      return t1;
    },
    Format: function Format(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.creator = t2;
      _.classification = t3;
      _.icon = t4;
      _.role = t5;
      _.application = t6;
      _.asset = t7;
      _.bytes = t8;
      _.created = t9;
      _.updated = t10;
      _.deleted = t11;
      _.synced = t12;
      _.cloud = t13;
      _.fragment = t14;
      _.file = t15;
      _.analysis = t16;
      _.websites = t17;
      _.tags = t18;
      _.relationship = t19;
      _.activities = t20;
    },
    FormatMetric_fromJson(value) {
      var t1, json, t2, t3, t4, t5,
        _s11_ = "identifiers";
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = json.$index(0, "generic");
        t4 = $.ClassificationGenericEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.ClassificationGenericEnumTypeTransformer__instance = B.C_ClassificationGenericEnumTypeTransformer : t4).decode$1(0, t3);
        t3.toString;
        t4 = json.$index(0, "specific");
        t5 = $.ClassificationSpecificEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.ClassificationSpecificEnumTypeTransformer__instance = B.C_ClassificationSpecificEnumTypeTransformer : t5).decode$1(0, t4);
        t4.toString;
        t5 = type$.List_dynamic;
        return new A.FormatMetric(t2, t3, t4, t5._is(json.$index(0, _s11_)) ? J.cast$1$0$ax(t5._as(json.$index(0, _s11_)), t1) : B.List_empty1);
      }
      return null;
    },
    FormatMetric_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_FormatMetric);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.FormatMetric_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.FormatMetric);
      return t1;
    },
    FormatMetric: function FormatMetric(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.generic = t1;
      _.specific = t2;
      _.identifiers = t3;
    },
    FormatReclassification_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "ext");
        t3 = $.ClassificationSpecificEnumTypeTransformer__instance;
        t2 = (t3 == null ? $.ClassificationSpecificEnumTypeTransformer__instance = B.C_ClassificationSpecificEnumTypeTransformer : t3).decode$1(0, t2);
        t2.toString;
        t3 = A.Format_fromJson(json.$index(0, "format"));
        t3.toString;
        return new A.FormatReclassification(t1, t2, t3);
      }
      return null;
    },
    FormatReclassification: function FormatReclassification(t0, t1, t2) {
      this.schema = t0;
      this.ext = t1;
      this.format = t2;
    },
    Formats_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Formats(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Format_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Formats: function Formats(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Formats_toJson_closure: function Formats_toJson_closure() {
    },
    FormatsMetrics_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.FormatsMetrics(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.FormatMetric_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    FormatsMetrics: function FormatsMetrics(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    FormatsMetrics_toJson_closure: function FormatsMetrics_toJson_closure() {
    },
    FragmentFormat_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.FragmentFormat(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TransferableString_fromJson(json.$index(0, "string")), A.TransferableBytes_fromJson(json.$index(0, "bytes")), A.FragmentMetadata_fromJson(json.$index(0, "metadata")));
      }
      return null;
    },
    FragmentFormat: function FragmentFormat(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.string = t1;
      _.bytes = t2;
      _.metadata = t3;
    },
    FragmentMetadata_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "ext");
        t3 = $.ClassificationSpecificEnumTypeTransformer__instance;
        return new A.FragmentMetadata(t1, (t3 == null ? $.ClassificationSpecificEnumTypeTransformer__instance = B.C_ClassificationSpecificEnumTypeTransformer : t3).decode$1(0, t2));
      }
      return null;
    },
    FragmentMetadata: function FragmentMetadata(t0, t1) {
      this.schema = t0;
      this.ext = t1;
    },
    GitHubDistribution_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.GitHubDistribution(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.GitHubGistDistribution_fromJson(json.$index(0, "gist")));
      }
      return null;
    },
    GitHubDistribution: function GitHubDistribution(t0, t1) {
      this.schema = t0;
      this.gist = t1;
    },
    GitHubGistDistribution_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.Recipients_fromJson(json.$index(0, "recipients"));
        t3.toString;
        t4 = A.mapValueOfType(json, "public", type$.bool);
        t4.toString;
        t5 = A.mapValueOfType(json, "description", t1);
        t6 = A.mapValueOfType(json, "name", t1);
        t6.toString;
        t7 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t7.toString;
        t8 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t8.toString;
        t9 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t10 = A.mapValueOfType(json, "github_id", t1);
        t10.toString;
        t1 = A.mapValueOfType(json, "url", t1);
        t1.toString;
        return new A.GitHubGistDistribution(t2, t3, t4, t5, t6, t7, t8, t9, t10, t1);
      }
      return null;
    },
    GitHubGistDistribution: function GitHubGistDistribution(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.schema = t0;
      _.recipients = t1;
      _.$public = t2;
      _.description = t3;
      _.name = t4;
      _.created = t5;
      _.updated = t6;
      _.deleted = t7;
      _.githubId = t8;
      _.url = t9;
    },
    GraphicalImageDescriptiveStatistics_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "width", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "height", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "channels", t1);
        t5.toString;
        t6 = A.mapValueOfType(json, "asset", t1);
        t6.toString;
        t7 = A.mapValueOfType(json, "user", t1);
        t8 = A.mapValueOfType(json, "created", t1);
        t8.toString;
        t1 = A.mapValueOfType(json, "os", t1);
        t1.toString;
        return new A.GraphicalImageDescriptiveStatistics(t2, t3, t4, t5, t6, t7, t8, t1);
      }
      return null;
    },
    GraphicalImageDescriptiveStatistics: function GraphicalImageDescriptiveStatistics(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.schema = t0;
      _.width = t1;
      _.height = t2;
      _.channels = t3;
      _.asset = t4;
      _.user = t5;
      _.created = t6;
      _.os = t7;
    },
    GraphicalImageProcessing_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.GraphicalImageProcessing(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.GraphicalImageStatistics_fromJson(json.$index(0, "statistics")));
      }
      return null;
    },
    GraphicalImageProcessing: function GraphicalImageProcessing(t0, t1) {
      this.schema = t0;
      this.statistics = t1;
    },
    GraphicalImageStatistics_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.GraphicalImageStatistics(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.GraphicalImageDescriptiveStatistics_fromJson(json.$index(0, "descriptive")));
      }
      return null;
    },
    GraphicalImageStatistics: function GraphicalImageStatistics(t0, t1) {
      this.schema = t0;
      this.descriptive = t1;
    },
    GraphicalMachineLearningProcessingEvent_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.GraphicalMachineLearningProcessingEvent(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.GraphicalOCRProcessing_fromJson(json.$index(0, "ocr")), A.GraphicalImageProcessing_fromJson(json.$index(0, "image")), A.GraphicalSVGStatistics_fromJson(json.$index(0, "svg")));
      }
      return null;
    },
    GraphicalMachineLearningProcessingEvent: function GraphicalMachineLearningProcessingEvent(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.ocr = t1;
      _.image = t2;
      _.svg = t3;
    },
    GraphicalOCRDescriptiveStatistics_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "asset", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "user", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "model", t1);
        t5.toString;
        t6 = A.mapValueOfType(json, "created", t1);
        t6.toString;
        t7 = A.mapValueOfType(json, "os", t1);
        t7.toString;
        t8 = A.GraphicalOCRDescriptiveStatisticsConfidence_fromJson(json.$index(0, "confidence"));
        t8.toString;
        t1 = A.mapValueOfType(json, "duration", t1);
        t1.toString;
        return new A.GraphicalOCRDescriptiveStatistics(t2, t3, t4, t5, t6, t7, t8, t1);
      }
      return null;
    },
    GraphicalOCRDescriptiveStatistics: function GraphicalOCRDescriptiveStatistics(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.schema = t0;
      _.asset = t1;
      _.user = t2;
      _.model = t3;
      _.created = t4;
      _.os = t5;
      _.confidence = t6;
      _.duration = t7;
    },
    GraphicalOCRDescriptiveStatisticsConfidence_fromJson(value) {
      var t1;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        t1 = A.mapValueOfType(value.cast$2$0(0, t1, type$.dynamic), "mean", t1);
        t1.toString;
        return new A.GraphicalOCRDescriptiveStatisticsConfidence(t1);
      }
      return null;
    },
    GraphicalOCRDescriptiveStatisticsConfidence: function GraphicalOCRDescriptiveStatisticsConfidence(t0) {
      this.mean = t0;
    },
    GraphicalOCRProcessing_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.GraphicalOCRProcessing(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.GraphicalOCRStatistics_fromJson(json.$index(0, "statistics")));
      }
      return null;
    },
    GraphicalOCRProcessing: function GraphicalOCRProcessing(t0, t1) {
      this.schema = t0;
      this.statistics = t1;
    },
    GraphicalOCRStatistics_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.GraphicalOCRStatistics(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.GraphicalOCRDescriptiveStatistics_fromJson(json.$index(0, "descriptive")));
      }
      return null;
    },
    GraphicalOCRStatistics: function GraphicalOCRStatistics(t0, t1) {
      this.schema = t0;
      this.descriptive = t1;
    },
    GraphicalSVGStatistics_fromJson(value) {
      var t1, json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        return new A.GraphicalSVGStatistics(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.mapValueOfType(json, "id", t1));
      }
      return null;
    },
    GraphicalSVGStatistics: function GraphicalSVGStatistics(t0, t1) {
      this.schema = t0;
      this.id = t1;
    },
    GroupedTimestamp_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapDateTime(json, "value", "");
        t3.toString;
        return new A.GroupedTimestamp(t2, t3, A.mapValueOfType(json, "readable", t1));
      }
      return null;
    },
    GroupedTimestamp: function GroupedTimestamp(t0, t1, t2) {
      this.schema = t0;
      this.value = t1;
      this.readable = t2;
    },
    Health_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.OSHealth_fromJson(json.$index(0, "os"));
        t2.toString;
        return new A.Health(t1, t2);
      }
      return null;
    },
    Health: function Health(t0, t1) {
      this.schema = t0;
      this.os = t1;
    },
    ImageAnalyses_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.ImageAnalyses(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.ImageAnalysis_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    ImageAnalyses: function ImageAnalyses(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    ImageAnalyses_toJson_closure: function ImageAnalyses_toJson_closure() {
    },
    ImageAnalysis_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t1 = A.mapValueOfType(json, "analysis", t1);
        t1.toString;
        return new A.ImageAnalysis(t2, t3, t1, A.OCRAnalysis_fromJson(json.$index(0, "ocr")));
      }
      return null;
    },
    ImageAnalysis_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_ImageAnalysis);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.ImageAnalysis_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.ImageAnalysis);
      return t1;
    },
    ImageAnalysis: function ImageAnalysis(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.analysis = t2;
      _.ocr = t3;
    },
    InteractedAsset_fromJson(value) {
      var t1, json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        return new A.InteractedAsset(A.mapValueOfType(json, "asset", t1), A.InteractedAssetInteractions_fromJson(json.$index(0, "interactions")));
      }
      return null;
    },
    InteractedAsset_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_InteractedAsset);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.InteractedAsset_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.InteractedAsset);
      return t1;
    },
    InteractedAsset: function InteractedAsset(t0, t1) {
      this.asset = t0;
      this.interactions = t1;
    },
    InteractedAssetInteractions_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t1 = A.mapValueOfType(json, "viewed", t1);
        t1.toString;
        t2 = type$.bool;
        t3 = A.mapValueOfType(json, "touched", t2);
        if (t3 == null)
          t3 = false;
        t2 = A.mapValueOfType(json, "scrolled", t2);
        return new A.InteractedAssetInteractions(t1, t3, t2 == null ? false : t2);
      }
      return null;
    },
    InteractedAssetInteractions: function InteractedAssetInteractions(t0, t1, t2) {
      this.viewed = t0;
      this.touched = t1;
      this.scrolled = t2;
    },
    InteractedAssets_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.InteractedAssets(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.InteractedAsset_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    InteractedAssets: function InteractedAssets(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    InteractedAssets_toJson_closure: function InteractedAssets_toJson_closure() {
    },
    Linkify_fromJson(value) {
      var json, t1, t2, t3, t4, t5, t6;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.Seed_fromJson(json.$index(0, "seed"));
        t3 = A.Asset_fromJson(json.$index(0, "asset"));
        t4 = A.SeededUser_listFromJson(json.$index(0, "users"));
        t5 = json.$index(0, "access");
        t6 = $.AccessEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.AccessEnumTypeTransformer__instance = B.C_AccessEnumTypeTransformer : t6).decode$1(0, t5);
        t5.toString;
        return new A.Linkify(t1, t2, t3, t4, t5, A.SeededDistributions_fromJson(json.$index(0, "distributions")));
      }
      return null;
    },
    Linkify: function Linkify(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.seed = t1;
      _.asset = t2;
      _.users = t3;
      _.access = t4;
      _.distributions = t5;
    },
    Linkify_toJson_closure: function Linkify_toJson_closure() {
    },
    LinkifyMultiple_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = type$.List_dynamic;
        t3 = t3._is(json.$index(0, "assets")) ? J.cast$1$0$ax(t3._as(json.$index(0, "assets")), t1) : B.List_empty1;
        t4 = A.SeededUser_listFromJson(json.$index(0, "users"));
        t5 = json.$index(0, "access");
        t6 = $.AccessEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.AccessEnumTypeTransformer__instance = B.C_AccessEnumTypeTransformer : t6).decode$1(0, t5);
        t5.toString;
        return new A.LinkifyMultiple(t2, t3, t4, t5, A.mapValueOfType(json, "name", t1));
      }
      return null;
    },
    LinkifyMultiple: function LinkifyMultiple(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.assets = t1;
      _.users = t2;
      _.access = t3;
      _.name = t4;
    },
    LinkifyMultiple_toJson_closure: function LinkifyMultiple_toJson_closure() {
    },
    MailgunDistribution_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.Recipients_fromJson(json.$index(0, "recipients"));
        t2.toString;
        return new A.MailgunDistribution(t1, t2);
      }
      return null;
    },
    MailgunDistribution: function MailgunDistribution(t0, t1) {
      this.schema = t0;
      this.recipients = t1;
    },
    MailgunMetadata_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "messageId", t1);
        t1.toString;
        return new A.MailgunMetadata(t2, t1);
      }
      return null;
    },
    MailgunMetadata: function MailgunMetadata(t0, t1) {
      this.schema = t0;
      this.messageId = t1;
    },
    MechanismEnum: function MechanismEnum(t0) {
      this.value = t0;
    },
    MechanismEnumTypeTransformer: function MechanismEnumTypeTransformer() {
    },
    Model_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "version", t1);
        t4.toString;
        t5 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t5.toString;
        t6 = A.mapValueOfType(json, "name", t1);
        t6.toString;
        t1 = A.mapValueOfType(json, "description", t1);
        t7 = A.mapValueOfType(json, "cloud", type$.bool);
        t7.toString;
        t8 = json.$index(0, "type");
        t9 = $.ModelTypeEnumTypeTransformer__instance;
        t8 = (t9 == null ? $.ModelTypeEnumTypeTransformer__instance = B.C_ModelTypeEnumTypeTransformer : t9).decode$1(0, t8);
        t8.toString;
        t9 = json.$index(0, "usage");
        t10 = $.ModelUsageEnumTypeTransformer__instance;
        t9 = (t10 == null ? $.ModelUsageEnumTypeTransformer__instance = B.C_ModelUsageEnumTypeTransformer : t10).decode$1(0, t9);
        t9.toString;
        return new A.Model(t2, t3, t4, t5, t6, t1, t7, t8, t9);
      }
      return null;
    },
    Model_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Model);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Model_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Model);
      return t1;
    },
    Model: function Model(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.version = t2;
      _.created = t3;
      _.name = t4;
      _.description = t5;
      _.cloud = t6;
      _.type = t7;
      _.usage = t8;
    },
    ModelTypeEnum: function ModelTypeEnum(t0) {
      this.value = t0;
    },
    ModelTypeEnumTypeTransformer: function ModelTypeEnumTypeTransformer() {
    },
    ModelUsageEnum: function ModelUsageEnum(t0) {
      this.value = t0;
    },
    ModelUsageEnumTypeTransformer: function ModelUsageEnumTypeTransformer() {
    },
    Models_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Models(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Model_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Models: function Models(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Models_toJson_closure: function Models_toJson_closure() {
    },
    Node_fromJson(value) {
      var t1, json, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        t2 = json.$index(0, "type");
        t3 = $.NodeTypeEnumTypeTransformer__instance;
        t2 = (t3 == null ? $.NodeTypeEnumTypeTransformer__instance = B.C_NodeTypeEnumTypeTransformer : t3).decode$1(0, t2);
        t2.toString;
        t3 = A.mapValueOfType(json, "root", type$.bool);
        t3.toString;
        t4 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t4.toString;
        return new A.Node(t1, t2, t3, t4);
      }
      return null;
    },
    Node_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Node);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Node_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Node_2);
      return t1;
    },
    Node: function Node(t0, t1, t2, t3) {
      var _ = this;
      _.id = t0;
      _.type = t1;
      _.root = t2;
      _.created = t3;
    },
    NodeTypeEnum: function NodeTypeEnum(t0) {
      this.value = t0;
    },
    NodeTypeEnumTypeTransformer: function NodeTypeEnumTypeTransformer() {
    },
    Notification_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", type$.int);
        t3.toString;
        return new A.Notification(t2, t3, A.mapValueOfType(json, "title", t1), A.mapValueOfType(json, "message", t1), A.mapValueOfType(json, "payload", t1));
      }
      return null;
    },
    Notification: function Notification(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.title = t2;
      _.message = t3;
      _.payload = t4;
    },
    OAuthAccount_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.mapValueOfType(json, "client_id", t1);
        t2.toString;
        t3 = A.mapValueOfType(json, "email", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "connection", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "username", t1);
        t5.toString;
        t6 = A.mapValueOfType(json, "given_name", t1);
        t6.toString;
        t7 = A.mapValueOfType(json, "family_name", t1);
        t7.toString;
        t8 = A.mapValueOfType(json, "name", t1);
        t8.toString;
        t9 = A.mapValueOfType(json, "picture", t1);
        t9.toString;
        t1 = A.mapValueOfType(json, "nickname", t1);
        t1.toString;
        return new A.OAuthAccount(t2, t3, t4, t5, t6, t7, t8, t9, t1);
      }
      return null;
    },
    OAuthAccount: function OAuthAccount(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.clientId = t0;
      _.email = t1;
      _.connection = t2;
      _.username = t3;
      _.givenName = t4;
      _.familyName = t5;
      _.name = t6;
      _.picture = t7;
      _.nickname = t8;
    },
    OAuthGroup_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.OAuthGroup(A.OAuthToken_fromJson(json.$index(0, "token")), A.OAuthAccount_fromJson(json.$index(0, "account")));
      }
      return null;
    },
    OAuthGroup: function OAuthGroup(t0, t1) {
      this.token = t0;
      this.account = t1;
    },
    OAuthToken_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "access_token", t1);
        t3.toString;
        t4 = json.$index(0, "token_type");
        t5 = $.OAuthTokenTokenTypeEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.OAuthTokenTokenTypeEnumTypeTransformer__instance = B.C_OAuthTokenTokenTypeEnumTypeTransformer : t5).decode$1(0, t4);
        t4.toString;
        t5 = A.mapValueOfType(json, "expires_in", type$.int);
        t5.toString;
        t6 = A.mapValueOfType(json, "scope", t1);
        t6.toString;
        return new A.OAuthToken(t2, t3, t4, t5, t6, A.mapValueOfType(json, "refresh_token", t1), A.mapValueOfType(json, "id_token", t1));
      }
      return null;
    },
    OAuthToken: function OAuthToken(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.schema = t0;
      _.accessToken = t1;
      _.tokenType = t2;
      _.expiresIn = t3;
      _.scope = t4;
      _.refreshToken = t5;
      _.idToken = t6;
    },
    OAuthTokenTokenTypeEnum: function OAuthTokenTokenTypeEnum() {
    },
    OAuthTokenTokenTypeEnumTypeTransformer: function OAuthTokenTokenTypeEnumTypeTransformer() {
    },
    OCRAnalyses_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.OCRAnalyses(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.OCRAnalysis_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    OCRAnalyses: function OCRAnalyses(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    OCRAnalyses_toJson_closure: function OCRAnalyses_toJson_closure() {
    },
    OCRAnalysis_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.Format_fromJson(json.$index(0, "raw"));
        t4.toString;
        t5 = A.Format_fromJson(json.$index(0, "hocr"));
        t5.toString;
        t1 = A.mapValueOfType(json, "image", t1);
        t1.toString;
        t6 = A.Model_fromJson(json.$index(0, "model"));
        t6.toString;
        return new A.OCRAnalysis(t2, t3, t4, t5, t1, t6);
      }
      return null;
    },
    OCRAnalysis_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_OCRAnalysis);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.OCRAnalysis_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.OCRAnalysis);
      return t1;
    },
    OCRAnalysis: function OCRAnalysis(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.raw = t2;
      _.hocr = t3;
      _.image = t4;
      _.model = t5;
    },
    OrderedMetrics_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = type$.List_dynamic;
        return new A.OrderedMetrics(t2, t3._is(json.$index(0, "ordered")) ? J.cast$1$0$ax(t3._as(json.$index(0, "ordered")), t1) : B.List_empty1);
      }
      return null;
    },
    OrderedMetrics: function OrderedMetrics(t0, t1) {
      this.schema = t0;
      this.ordered = t1;
    },
    OSHealth_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t1 = A.mapValueOfType(json, "version", t1);
        t1.toString;
        return new A.OSHealth(t2, t3, t1);
      }
      return null;
    },
    OSHealth: function OSHealth(t0, t1, t2) {
      this.schema = t0;
      this.id = t1;
      this.version = t2;
    },
    Person_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        t3 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t3.toString;
        t4 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t4.toString;
        t5 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t6 = A.PersonAccess_fromJson(json.$index(0, "access"));
        t6.toString;
        t7 = A.GroupedTimestamp_fromJson(json.$index(0, "expiration"));
        t8 = A.PersonType_fromJson(json.$index(0, "type"));
        t8.toString;
        t9 = A.FlattenedAsset_fromJson(json.$index(0, "asset"));
        t10 = json.$index(0, "mechanism");
        t11 = $.MechanismEnumTypeTransformer__instance;
        t10 = (t11 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t11).decode$1(0, t10);
        t10.toString;
        return new A.Person(t2, t1, t3, t4, t5, t6, t7, t8, t9, t10, A.mapValueOfType(json, "interactions", type$.int));
      }
      return null;
    },
    Person_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Person);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Person_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Person);
      return t1;
    },
    Person: function Person(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.created = t2;
      _.updated = t3;
      _.deleted = t4;
      _.access = t5;
      _.expiration = t6;
      _.type = t7;
      _.asset = t8;
      _.mechanism = t9;
      _.interactions = t10;
    },
    PersonAccess_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "scoped");
        t3 = $.PersonAccessScopedEnumTypeTransformer__instance;
        return new A.PersonAccess(t1, (t3 == null ? $.PersonAccessScopedEnumTypeTransformer__instance = B.C_PersonAccessScopedEnumTypeTransformer : t3).decode$1(0, t2));
      }
      return null;
    },
    PersonAccess: function PersonAccess(t0, t1) {
      this.schema = t0;
      this.scoped = t1;
    },
    PersonAccessScopedEnum: function PersonAccessScopedEnum(t0) {
      this.value = t0;
    },
    PersonAccessScopedEnumTypeTransformer: function PersonAccessScopedEnumTypeTransformer() {
    },
    PersonBasicType_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "username", t1);
        t4 = A.mapValueOfType(json, "name", t1);
        t5 = A.mapValueOfType(json, "picture", t1);
        t6 = A.mapValueOfType(json, "email", t1);
        t7 = json.$index(0, "sourced");
        t8 = $.ExternallySourcedEnumTypeTransformer__instance;
        return new A.PersonBasicType(t2, t3, t4, t5, t6, (t8 == null ? $.ExternallySourcedEnumTypeTransformer__instance = B.C_ExternallySourcedEnumTypeTransformer : t8).decode$1(0, t7), A.mapValueOfType(json, "url", t1), A.MailgunMetadata_fromJson(json.$index(0, "mailgun")));
      }
      return null;
    },
    PersonBasicType_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_PersonBasicType);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.PersonBasicType_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.PersonBasicType);
      return t1;
    },
    PersonBasicType: function PersonBasicType(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.schema = t0;
      _.username = t1;
      _.name = t2;
      _.picture = t3;
      _.email = t4;
      _.sourced = t5;
      _.url = t6;
      _.mailgun = t7;
    },
    PersonType_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.PersonType(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.PersonBasicType_fromJson(json.$index(0, "basic")), A.UserProfile_fromJson(json.$index(0, "platform")));
      }
      return null;
    },
    PersonType: function PersonType(t0, t1, t2) {
      this.schema = t0;
      this.basic = t1;
      this.platform = t2;
    },
    Persons_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Persons(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Person_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Persons: function Persons(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Persons_toJson_closure: function Persons_toJson_closure() {
    },
    PKCE_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.PKCE(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.ResultedPKCE_fromJson(json.$index(0, "result")), A.ChallengedPKCE_fromJson(json.$index(0, "challenge")), A.RevokedPKCE_fromJson(json.$index(0, "revocation")), A.SeededPKCE_fromJson(json.$index(0, "seed")), A.TokenizedPKCE_fromJson(json.$index(0, "token")), A.Auth0_fromJson(json.$index(0, "auth0")));
      }
      return null;
    },
    PKCE: function PKCE(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.schema = t0;
      _.result = t1;
      _.challenge = t2;
      _.revocation = t3;
      _.seed = t4;
      _.token = t5;
      _.auth0 = t6;
    },
    PlatformEnum: function PlatformEnum(t0) {
      this.value = t0;
    },
    PlatformEnumTypeTransformer: function PlatformEnumTypeTransformer() {
    },
    Preview_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.ReferencedFormat_fromJson(json.$index(0, "base"));
        t2.toString;
        return new A.Preview(t1, t2, A.ReferencedFormat_fromJson(json.$index(0, "overlay")));
      }
      return null;
    },
    Preview: function Preview(t0, t1, t2) {
      this.schema = t0;
      this.base = t1;
      this.overlay = t2;
    },
    PrivacyEnum: function PrivacyEnum(t0) {
      this.value = t0;
    },
    PrivacyEnumTypeTransformer: function PrivacyEnumTypeTransformer() {
    },
    Reaction_fromJson(value) {
      var json, t1, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.mapValueOfType(json, "save", type$.bool);
        t2.toString;
        t3 = A.ReuseReaction_fromJson(json.$index(0, "reuse"));
        t4 = A.SeededConnectorCreation_fromJson(json.$index(0, "seed"));
        t4.toString;
        return new A.Reaction(t1, t2, t3, t4);
      }
      return null;
    },
    Reaction: function Reaction(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.save = t1;
      _.reuse = t2;
      _.seed = t3;
    },
    Recipients_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Recipients(A.PersonBasicType_listFromJson(json.$index(0, "iterable")), A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")));
      }
      return null;
    },
    Recipients: function Recipients(t0, t1) {
      this.iterable = t0;
      this.schema = t1;
    },
    Recipients_toJson_closure: function Recipients_toJson_closure() {
    },
    ReferencedActivity_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        return new A.ReferencedActivity(t2, t1, A.FlattenedActivity_fromJson(json.$index(0, "reference")));
      }
      return null;
    },
    ReferencedActivity_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_ReferencedActivity);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.ReferencedActivity_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.ReferencedActivity);
      return t1;
    },
    ReferencedActivity: function ReferencedActivity(t0, t1, t2) {
      this.schema = t0;
      this.id = t1;
      this.reference = t2;
    },
    ReferencedAsset_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        return new A.ReferencedAsset(t2, t1, A.FlattenedAsset_fromJson(json.$index(0, "reference")));
      }
      return null;
    },
    ReferencedAsset_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_ReferencedAsset);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.ReferencedAsset_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.ReferencedAsset);
      return t1;
    },
    ReferencedAsset: function ReferencedAsset(t0, t1, t2) {
      this.schema = t0;
      this.id = t1;
      this.reference = t2;
    },
    ReferencedDistribution_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        return new A.ReferencedDistribution(t2, t1, A.FlattenedDistribution_fromJson(json.$index(0, "reference")));
      }
      return null;
    },
    ReferencedDistribution_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_ReferencedDistribution);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.ReferencedDistribution_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.ReferencedDistribution);
      return t1;
    },
    ReferencedDistribution: function ReferencedDistribution(t0, t1, t2) {
      this.schema = t0;
      this.id = t1;
      this.reference = t2;
    },
    ReferencedFormat_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        return new A.ReferencedFormat(t2, t1, A.FlattenedFormat_fromJson(json.$index(0, "reference")));
      }
      return null;
    },
    ReferencedFormat_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_ReferencedFormat);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.ReferencedFormat_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.ReferencedFormat);
      return t1;
    },
    ReferencedFormat: function ReferencedFormat(t0, t1, t2) {
      this.schema = t0;
      this.id = t1;
      this.reference = t2;
    },
    ReferencedPerson_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        return new A.ReferencedPerson(t2, t1, A.FlattenedPerson_fromJson(json.$index(0, "reference")));
      }
      return null;
    },
    ReferencedPerson_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_ReferencedPerson);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.ReferencedPerson_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.ReferencedPerson);
      return t1;
    },
    ReferencedPerson: function ReferencedPerson(t0, t1, t2) {
      this.schema = t0;
      this.id = t1;
      this.reference = t2;
    },
    ReferencedSensitive_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        return new A.ReferencedSensitive(t2, t1, A.FlattenedSensitive_fromJson(json.$index(0, "reference")));
      }
      return null;
    },
    ReferencedSensitive_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_ReferencedSensitive);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.ReferencedSensitive_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.ReferencedSensitive);
      return t1;
    },
    ReferencedSensitive: function ReferencedSensitive(t0, t1, t2) {
      this.schema = t0;
      this.id = t1;
      this.reference = t2;
    },
    ReferencedShare_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        return new A.ReferencedShare(t2, t1, A.FlattenedShare_fromJson(json.$index(0, "reference")));
      }
      return null;
    },
    ReferencedShare: function ReferencedShare(t0, t1, t2) {
      this.schema = t0;
      this.id = t1;
      this.reference = t2;
    },
    ReferencedTag_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        return new A.ReferencedTag(t2, t1, A.FlattenedTag_fromJson(json.$index(0, "reference")));
      }
      return null;
    },
    ReferencedTag_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_ReferencedTag);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.ReferencedTag_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.ReferencedTag);
      return t1;
    },
    ReferencedTag: function ReferencedTag(t0, t1, t2) {
      this.schema = t0;
      this.id = t1;
      this.reference = t2;
    },
    ReferencedUser_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        return new A.ReferencedUser(t2, t1, A.FlattenedUserProfile_fromJson(json.$index(0, "reference")));
      }
      return null;
    },
    ReferencedUser: function ReferencedUser(t0, t1, t2) {
      this.schema = t0;
      this.id = t1;
      this.reference = t2;
    },
    ReferencedWebsite_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        return new A.ReferencedWebsite(t2, t1, A.FlattenedWebsite_fromJson(json.$index(0, "reference")));
      }
      return null;
    },
    ReferencedWebsite_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_ReferencedWebsite);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.ReferencedWebsite_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.ReferencedWebsite);
      return t1;
    },
    ReferencedWebsite: function ReferencedWebsite(t0, t1, t2) {
      this.schema = t0;
      this.id = t1;
      this.reference = t2;
    },
    Relationship_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.Embeddings_fromJson(json.$index(0, "embeddings"));
        t3.toString;
        t4 = A.Edges_fromJson(json.$index(0, "edges"));
        t4.toString;
        t5 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t5.toString;
        t6 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t6.toString;
        return new A.Relationship(t1, t2, t3, t4, t5, t6, A.GroupedTimestamp_fromJson(json.$index(0, "deleted")));
      }
      return null;
    },
    Relationship_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Relationship);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Relationship_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Relationship);
      return t1;
    },
    Relationship: function Relationship(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.id = t0;
      _.schema = t1;
      _.embeddings = t2;
      _.edges = t3;
      _.created = t4;
      _.updated = t5;
      _.deleted = t6;
    },
    Relationships_fromJson(value) {
      if (type$.Map_dynamic_dynamic._is(value))
        return new A.Relationships(A.Relationship_listFromJson(value.cast$2$0(0, type$.String, type$.dynamic).$index(0, "iterable")));
      return null;
    },
    Relationships: function Relationships(t0) {
      this.iterable = t0;
    },
    Relationships_toJson_closure: function Relationships_toJson_closure() {
    },
    ResultedPKCE_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "code", t1);
        t3.toString;
        t1 = A.mapValueOfType(json, "state", t1);
        t1.toString;
        return new A.ResultedPKCE(t2, t3, t1);
      }
      return null;
    },
    ResultedPKCE: function ResultedPKCE(t0, t1, t2) {
      this.schema = t0;
      this.code = t1;
      this.state = t2;
    },
    ReturnedUserProfile_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.ReturnedUserProfile(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.UserProfile_fromJson(json.$index(0, "user")));
      }
      return null;
    },
    ReturnedUserProfile: function ReturnedUserProfile(t0, t1) {
      this.schema = t0;
      this.user = t1;
    },
    ReuseReaction_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "asset", t1);
        t1.toString;
        return new A.ReuseReaction(t2, t1);
      }
      return null;
    },
    ReuseReaction: function ReuseReaction(t0, t1) {
      this.schema = t0;
      this.asset = t1;
    },
    ReuseSuggestion_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.mapValueOfType(json, "suggested", type$.bool);
        t2.toString;
        t3 = A.Assets_fromJson(json.$index(0, "assets"));
        t3.toString;
        return new A.ReuseSuggestion(t1, t2, t3);
      }
      return null;
    },
    ReuseSuggestion: function ReuseSuggestion(t0, t1, t2) {
      this.schema = t0;
      this.suggested = t1;
      this.assets = t2;
    },
    RevokedPKCE_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "client_id", t1);
        t3.toString;
        t1 = A.mapValueOfType(json, "token", t1);
        t1.toString;
        return new A.RevokedPKCE(t2, t3, t1);
      }
      return null;
    },
    RevokedPKCE: function RevokedPKCE(t0, t1, t2) {
      this.schema = t0;
      this.clientId = t1;
      this.token = t2;
    },
    Role: function Role(t0) {
      this.value = t0;
    },
    RoleTypeTransformer: function RoleTypeTransformer() {
    },
    SaveSuggestion_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.mapValueOfType(json, "suggested", type$.bool);
        t2.toString;
        return new A.SaveSuggestion(t1, t2);
      }
      return null;
    },
    SaveSuggestion: function SaveSuggestion(t0, t1) {
      this.schema = t0;
      this.suggested = t1;
    },
    Score_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = type$.int;
        t3 = A.mapValueOfType(json, "manual", t2);
        t3.toString;
        t2 = A.mapValueOfType(json, "automatic", t2);
        t2.toString;
        return new A.Score(t1, t3, t2);
      }
      return null;
    },
    Score: function Score(t0, t1, t2) {
      this.schema = t0;
      this.manual = t1;
      this.automatic = t2;
    },
    Searched_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.SearchedAssets_fromJson(json.$index(0, "assets"));
        t2.toString;
        return new A.Searched(t1, t2);
      }
      return null;
    },
    Searched: function Searched(t0, t1) {
      this.schema = t0;
      this.assets = t1;
    },
    SearchedAsset_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.Asset_fromJson(json.$index(0, "asset"));
        t4 = A.mapValueOfType(json, "exact", type$.bool);
        t4.toString;
        t5 = A.num_parse(J.toString$0$(json.$index(0, "score")));
        t6 = json.$index(0, "match");
        t7 = $.SearchedMatchEnumTypeTransformer__instance;
        t6 = (t7 == null ? $.SearchedMatchEnumTypeTransformer__instance = B.C_SearchedMatchEnumTypeTransformer : t7).decode$1(0, t6);
        t6.toString;
        t1 = A.mapValueOfType(json, "identifier", t1);
        t1.toString;
        return new A.SearchedAsset(t2, t3, t4, t5, t6, t1);
      }
      return null;
    },
    SearchedAsset_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SearchedAsset);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SearchedAsset_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SearchedAsset);
      return t1;
    },
    SearchedAsset: function SearchedAsset(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.asset = t1;
      _.exact = t2;
      _.score = t3;
      _.match = t4;
      _.identifier = t5;
    },
    SearchedAssets_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.SearchedAssets(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.SearchedAsset_listFromJson(json.$index(0, "iterable")), A.num_parse(J.toString$0$(json.$index(0, "suggested"))), A.num_parse(J.toString$0$(json.$index(0, "exact"))));
      }
      return null;
    },
    SearchedAssets: function SearchedAssets(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.iterable = t1;
      _.suggested = t2;
      _.exact = t3;
    },
    SearchedAssets_toJson_closure: function SearchedAssets_toJson_closure() {
    },
    SearchedMatchEnum: function SearchedMatchEnum(t0) {
      this.value = t0;
    },
    SearchedMatchEnumTypeTransformer: function SearchedMatchEnumTypeTransformer() {
    },
    Seed_fromJson(value) {
      var json, t1, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.SeededAsset_fromJson(json.$index(0, "asset"));
        t3 = json.$index(0, "type");
        t4 = $.SeedTypeEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.SeedTypeEnumTypeTransformer__instance = B.C_SeedTypeEnumTypeTransformer : t4).decode$1(0, t3);
        t3.toString;
        return new A.Seed(t1, t2, t3);
      }
      return null;
    },
    Seed_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Seed);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Seed_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Seed);
      return t1;
    },
    Seed: function Seed(t0, t1, t2) {
      this.schema = t0;
      this.asset = t1;
      this.type = t2;
    },
    SeedTypeEnum: function SeedTypeEnum(t0) {
      this.value = t0;
    },
    SeedTypeEnumTypeTransformer: function SeedTypeEnumTypeTransformer() {
    },
    SeededAccessor_fromJson(value) {
      var t1, json, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "os", t1);
        t3.toString;
        t4 = A.FlattenedUserProfile_fromJson(json.$index(0, "user"));
        t1 = A.mapValueOfType(json, "share", t1);
        t1.toString;
        return new A.SeededAccessor(t2, t3, t4, t1);
      }
      return null;
    },
    SeededAccessor: function SeededAccessor(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.os = t1;
      _.user = t2;
      _.share = t3;
    },
    SeededActivity_fromJson(value) {
      var json, t1, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.SeededConnectorTracking_fromJson(json.$index(0, "event"));
        t1.toString;
        t2 = A.Application_fromJson(json.$index(0, "application"));
        t2.toString;
        t3 = A.ReferencedAsset_fromJson(json.$index(0, "asset"));
        t4 = A.ReferencedUser_fromJson(json.$index(0, "user"));
        t5 = A.ReferencedFormat_fromJson(json.$index(0, "format"));
        t6 = json.$index(0, "mechanism");
        t7 = $.MechanismEnumTypeTransformer__instance;
        return new A.SeededActivity(t1, t2, t3, t4, t5, (t7 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t7).decode$1(0, t6));
      }
      return null;
    },
    SeededActivity: function SeededActivity(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.event = t0;
      _.application = t1;
      _.asset = t2;
      _.user = t3;
      _.format = t4;
      _.mechanism = t5;
    },
    SeededAsset_fromJson(value) {
      var json, t1, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.SeededAssetMetadata_fromJson(json.$index(0, "metadata"));
        t3 = A.Application_fromJson(json.$index(0, "application"));
        t3.toString;
        t4 = A.SeededFormat_fromJson(json.$index(0, "format"));
        t4.toString;
        return new A.SeededAsset(t1, t2, t3, t4, A.mapValueOfType(json, "discovered", type$.bool), A.AvailableFormats_fromJson(json.$index(0, "available")));
      }
      return null;
    },
    SeededAsset: function SeededAsset(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.metadata = t1;
      _.application = t2;
      _.format = t3;
      _.discovered = t4;
      _.available = t5;
    },
    SeededAssetMetadata_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "description", t1);
        t1 = A.mapValueOfType(json, "name", t1);
        t4 = json.$index(0, "mechanism");
        t5 = $.MechanismEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t5).decode$1(0, t4);
        t5 = A.SeededAssetTag_listFromJson(json.$index(0, "tags"));
        t6 = A.SeededAssetWebsite_listFromJson(json.$index(0, "websites"));
        t7 = A.SeededAssetSensitive_listFromJson(json.$index(0, "sensitives"));
        t8 = A.SeededPerson_listFromJson(json.$index(0, "persons"));
        return new A.SeededAssetMetadata(t2, t3, t1, t4, t5, t6, t7, t8);
      }
      return null;
    },
    SeededAssetMetadata: function SeededAssetMetadata(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.schema = t0;
      _.description = t1;
      _.name = t2;
      _.mechanism = t3;
      _.tags = t4;
      _.websites = t5;
      _.sensitives = t6;
      _.persons = t7;
    },
    SeededAssetMetadata_toJson_closure: function SeededAssetMetadata_toJson_closure() {
    },
    SeededAssetMetadata_toJson_closure0: function SeededAssetMetadata_toJson_closure0() {
    },
    SeededAssetMetadata_toJson_closure1: function SeededAssetMetadata_toJson_closure1() {
    },
    SeededAssetMetadata_toJson_closure2: function SeededAssetMetadata_toJson_closure2() {
    },
    SeededAssetSensitive_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "text", t1);
        t3.toString;
        t4 = json.$index(0, "mechanism");
        t5 = $.MechanismEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t5).decode$1(0, t4);
        t5 = json.$index(0, "category");
        t6 = $.SensitiveCategoryEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.SensitiveCategoryEnumTypeTransformer__instance = B.C_SensitiveCategoryEnumTypeTransformer : t6).decode$1(0, t5);
        t5.toString;
        t6 = json.$index(0, "severity");
        t7 = $.SensitiveSeverityEnumTypeTransformer__instance;
        t6 = (t7 == null ? $.SensitiveSeverityEnumTypeTransformer__instance = B.C_SensitiveSeverityEnumTypeTransformer : t7).decode$1(0, t6);
        t6.toString;
        t7 = A.mapValueOfType(json, "name", t1);
        t7.toString;
        t1 = A.mapValueOfType(json, "description", t1);
        t1.toString;
        return new A.SeededAssetSensitive(t2, t3, t4, t5, t6, t7, t1, A.SensitiveMetadata_fromJson(json.$index(0, "metadata")));
      }
      return null;
    },
    SeededAssetSensitive_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SeededAssetSensitive);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SeededAssetSensitive_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededAssetSensitive);
      return t1;
    },
    SeededAssetSensitive: function SeededAssetSensitive(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.schema = t0;
      _.text = t1;
      _.mechanism = t2;
      _.category = t3;
      _.severity = t4;
      _.name = t5;
      _.description = t6;
      _.metadata = t7;
    },
    SeededAssetTag_fromJson(value) {
      var t1, json, t2, t3, t4, t5;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "text", t1);
        t1.toString;
        t3 = json.$index(0, "mechanism");
        t4 = $.MechanismEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t4).decode$1(0, t3);
        t4 = json.$index(0, "category");
        t5 = $.TagCategoryEnumTypeTransformer__instance;
        return new A.SeededAssetTag(t2, t1, t3, (t5 == null ? $.TagCategoryEnumTypeTransformer__instance = B.C_TagCategoryEnumTypeTransformer : t5).decode$1(0, t4));
      }
      return null;
    },
    SeededAssetTag_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SeededAssetTag);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SeededAssetTag_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededAssetTag);
      return t1;
    },
    SeededAssetTag: function SeededAssetTag(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.text = t1;
      _.mechanism = t2;
      _.category = t3;
    },
    SeededAssetTags_fromJson(value) {
      if (type$.Map_dynamic_dynamic._is(value))
        return new A.SeededAssetTags(A.SeededAssetTag_listFromJson(value.cast$2$0(0, type$.String, type$.dynamic).$index(0, "iterable")));
      return null;
    },
    SeededAssetTags: function SeededAssetTags(t0) {
      this.iterable = t0;
    },
    SeededAssetTags_toJson_closure: function SeededAssetTags_toJson_closure() {
    },
    SeededAssetWebsite_fromJson(value) {
      var t1, json, t2, t3, t4, t5;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "url", t1);
        t3.toString;
        t1 = A.mapValueOfType(json, "name", t1);
        t1.toString;
        t4 = json.$index(0, "mechanism");
        t5 = $.MechanismEnumTypeTransformer__instance;
        return new A.SeededAssetWebsite(t2, t3, t1, (t5 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t5).decode$1(0, t4));
      }
      return null;
    },
    SeededAssetWebsite_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SeededAssetWebsite);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SeededAssetWebsite_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededAssetWebsite);
      return t1;
    },
    SeededAssetWebsite: function SeededAssetWebsite(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.url = t1;
      _.name = t2;
      _.mechanism = t3;
    },
    SeededAssetsRecommendation_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.Assets_fromJson(json.$index(0, "assets"));
        t2.toString;
        t3 = A.InteractedAssets_fromJson(json.$index(0, "interactions"));
        t3.toString;
        return new A.SeededAssetsRecommendation(t1, t2, t3);
      }
      return null;
    },
    SeededAssetsRecommendation: function SeededAssetsRecommendation(t0, t1, t2) {
      this.schema = t0;
      this.assets = t1;
      this.interactions = t2;
    },
    SeededClassification_fromJson(value) {
      var json, t1, t2, t3, t4, t5;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "generic");
        t3 = $.ClassificationGenericEnumTypeTransformer__instance;
        t2 = (t3 == null ? $.ClassificationGenericEnumTypeTransformer__instance = B.C_ClassificationGenericEnumTypeTransformer : t3).decode$1(0, t2);
        t3 = json.$index(0, "specific");
        t4 = $.ClassificationSpecificEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.ClassificationSpecificEnumTypeTransformer__instance = B.C_ClassificationSpecificEnumTypeTransformer : t4).decode$1(0, t3);
        t4 = json.$index(0, "rendering");
        t5 = $.ClassificationRenderingEnumTypeTransformer__instance;
        return new A.SeededClassification(t1, t2, t3, (t5 == null ? $.ClassificationRenderingEnumTypeTransformer__instance = B.C_ClassificationRenderingEnumTypeTransformer : t5).decode$1(0, t4));
      }
      return null;
    },
    SeededClassification: function SeededClassification(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.generic = t1;
      _.specific = t2;
      _.rendering = t3;
    },
    SeededConnectorAsset_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.SeededAssetMetadata_fromJson(json.$index(0, "metadata"));
        t3 = A.SeededFormat_fromJson(json.$index(0, "format"));
        t3.toString;
        return new A.SeededConnectorAsset(t1, t2, t3);
      }
      return null;
    },
    SeededConnectorAsset: function SeededConnectorAsset(t0, t1, t2) {
      this.schema = t0;
      this.metadata = t1;
      this.format = t2;
    },
    SeededConnectorConnection_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.SeededTrackedApplication_fromJson(json.$index(0, "application"));
        t2.toString;
        return new A.SeededConnectorConnection(t1, t2);
      }
      return null;
    },
    SeededConnectorConnection: function SeededConnectorConnection(t0, t1) {
      this.schema = t0;
      this.application = t1;
    },
    SeededConnectorCreation_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.SeededConnectorCreation(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.SeededConnectorAsset_fromJson(json.$index(0, "asset")));
      }
      return null;
    },
    SeededConnectorCreation: function SeededConnectorCreation(t0, t1) {
      this.schema = t0;
      this.asset = t1;
    },
    SeededConnectorTracking_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.SeededConnectorTracking(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.SeededTrackedFormatEvent_fromJson(json.$index(0, "format")), A.SeededTrackedAssetEvent_fromJson(json.$index(0, "asset")), A.SeededTrackedInteractionEvent_fromJson(json.$index(0, "interaction")), A.SeededTrackedKeyboardEvent_fromJson(json.$index(0, "keyboard")), A.SeededTrackedSessionEvent_fromJson(json.$index(0, "session")), A.SeededTrackedAssetsEvent_fromJson(json.$index(0, "assets")), A.SeededTrackedMachineLearningEvent_fromJson(json.$index(0, "ml")), A.SeededTrackedAdoptionEvent_fromJson(json.$index(0, "adoption")));
      }
      return null;
    },
    SeededConnectorTracking: function SeededConnectorTracking(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.schema = t0;
      _.format = t1;
      _.asset = t2;
      _.interaction = t3;
      _.keyboard = t4;
      _.session = t5;
      _.assets = t6;
      _.ml = t7;
      _.adoption = t8;
    },
    SeededDiscoverableAsset_fromJson(value) {
      var t1, json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        return new A.SeededDiscoverableAsset(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.SeededFile_fromJson(json.$index(0, "file")), A.SeededFragment_fromJson(json.$index(0, "fragment")), A.mapValueOfType(json, "directory", t1), A.TLPDirectedDiscoveryFilters_fromJson(json.$index(0, "filters")));
      }
      return null;
    },
    SeededDiscoverableAsset_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SeededDiscoverableAsset);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SeededDiscoverableAsset_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededDiscoverableAsset);
      return t1;
    },
    SeededDiscoverableAsset: function SeededDiscoverableAsset(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.file = t1;
      _.fragment = t2;
      _.directory = t3;
      _.filters = t4;
    },
    SeededDiscoverableAssets_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "application", t1);
        t1.toString;
        return new A.SeededDiscoverableAssets(t2, t1, A.SeededDiscoverableAsset_listFromJson(json.$index(0, "iterable")), A.TLPDirectedDiscoveryFilters_fromJson(json.$index(0, "filters")));
      }
      return null;
    },
    SeededDiscoverableAssets: function SeededDiscoverableAssets(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.application = t1;
      _.iterable = t2;
      _.filters = t3;
    },
    SeededDiscoverableAssets_toJson_closure: function SeededDiscoverableAssets_toJson_closure() {
    },
    SeededDiscoverableHtmlWebpage_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "url", t1);
        t3.toString;
        t1 = A.mapValueOfType(json, "page", t1);
        t1.toString;
        return new A.SeededDiscoverableHtmlWebpage(t2, t3, t1);
      }
      return null;
    },
    SeededDiscoverableHtmlWebpage_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SeededDiscoverableHtmlWebpage);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SeededDiscoverableHtmlWebpage_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededDiscoverableHtmlWebpage);
      return t1;
    },
    SeededDiscoverableHtmlWebpage: function SeededDiscoverableHtmlWebpage(t0, t1, t2) {
      this.schema = t0;
      this.url = t1;
      this.page = t2;
    },
    SeededDiscoverableHtmlWebpages_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.SeededDiscoverableHtmlWebpage_listFromJson(json.$index(0, "iterable"));
        t1 = A.mapValueOfType(json, "application", t1);
        t1.toString;
        return new A.SeededDiscoverableHtmlWebpages(t2, t3, t1);
      }
      return null;
    },
    SeededDiscoverableHtmlWebpages: function SeededDiscoverableHtmlWebpages(t0, t1, t2) {
      this.schema = t0;
      this.iterable = t1;
      this.application = t2;
    },
    SeededDiscoverableHtmlWebpages_toJson_closure: function SeededDiscoverableHtmlWebpages_toJson_closure() {
    },
    SeededDiscoverableRelatedTag_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "text", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "asset", t1);
        t4.toString;
        t5 = json.$index(0, "mechanism");
        t6 = $.MechanismEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t6).decode$1(0, t5);
        t1 = A.mapValueOfType(json, "format", t1);
        t6 = json.$index(0, "category");
        t7 = $.TagCategoryEnumTypeTransformer__instance;
        return new A.SeededDiscoverableRelatedTag(t2, t3, t4, t5, t1, (t7 == null ? $.TagCategoryEnumTypeTransformer__instance = B.C_TagCategoryEnumTypeTransformer : t7).decode$1(0, t6));
      }
      return null;
    },
    SeededDiscoverableRelatedTag_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SeededDiscoverableRelatedTag);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SeededDiscoverableRelatedTag_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededDiscoverableRelatedTag);
      return t1;
    },
    SeededDiscoverableRelatedTag: function SeededDiscoverableRelatedTag(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.text = t1;
      _.asset = t2;
      _.mechanism = t3;
      _.format = t4;
      _.category = t5;
    },
    SeededDiscoverableRelatedTags_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.SeededDiscoverableRelatedTag_listFromJson(json.$index(0, "iterable"));
        t1 = A.mapValueOfType(json, "application", t1);
        t1.toString;
        return new A.SeededDiscoverableRelatedTags(t2, t3, t1);
      }
      return null;
    },
    SeededDiscoverableRelatedTags: function SeededDiscoverableRelatedTags(t0, t1, t2) {
      this.schema = t0;
      this.iterable = t1;
      this.application = t2;
    },
    SeededDiscoverableRelatedTags_toJson_closure: function SeededDiscoverableRelatedTags_toJson_closure() {
    },
    SeededDiscoverableSensitive_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "asset", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "text", t1);
        t4.toString;
        t5 = json.$index(0, "mechanism");
        t6 = $.MechanismEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t6).decode$1(0, t5);
        t6 = json.$index(0, "category");
        t7 = $.SensitiveCategoryEnumTypeTransformer__instance;
        t6 = (t7 == null ? $.SensitiveCategoryEnumTypeTransformer__instance = B.C_SensitiveCategoryEnumTypeTransformer : t7).decode$1(0, t6);
        t7 = json.$index(0, "severity");
        t8 = $.SensitiveSeverityEnumTypeTransformer__instance;
        return new A.SeededDiscoverableSensitive(t2, t3, t4, t5, t6, (t8 == null ? $.SensitiveSeverityEnumTypeTransformer__instance = B.C_SensitiveSeverityEnumTypeTransformer : t8).decode$1(0, t7), A.mapValueOfType(json, "name", t1), A.mapValueOfType(json, "description", t1), A.SensitiveMetadata_fromJson(json.$index(0, "metadata")));
      }
      return null;
    },
    SeededDiscoverableSensitive_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SeededDiscoverableSensitive);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SeededDiscoverableSensitive_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededDiscoverableSensitive);
      return t1;
    },
    SeededDiscoverableSensitive: function SeededDiscoverableSensitive(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.schema = t0;
      _.asset = t1;
      _.text = t2;
      _.mechanism = t3;
      _.category = t4;
      _.severity = t5;
      _.name = t6;
      _.description = t7;
      _.metadata = t8;
    },
    SeededDiscoverableSensitives_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.SeededDiscoverableSensitive_listFromJson(json.$index(0, "iterable"));
        t1 = A.mapValueOfType(json, "application", t1);
        t1.toString;
        return new A.SeededDiscoverableSensitives(t2, t3, t1);
      }
      return null;
    },
    SeededDiscoverableSensitives: function SeededDiscoverableSensitives(t0, t1, t2) {
      this.schema = t0;
      this.iterable = t1;
      this.application = t2;
    },
    SeededDiscoverableSensitives_toJson_closure: function SeededDiscoverableSensitives_toJson_closure() {
    },
    SeededDistribution_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.SeededDistribution(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.MailgunDistribution_fromJson(json.$index(0, "mailgun")), A.SeededGitHubDistribution_fromJson(json.$index(0, "github")));
      }
      return null;
    },
    SeededDistribution_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SeededDistribution);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SeededDistribution_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededDistribution);
      return t1;
    },
    SeededDistribution: function SeededDistribution(t0, t1, t2) {
      this.schema = t0;
      this.mailgun = t1;
      this.github = t2;
    },
    SeededDistributions_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.SeededDistributions(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.SeededDistribution_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    SeededDistributions: function SeededDistributions(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    SeededDistributions_toJson_closure: function SeededDistributions_toJson_closure() {
    },
    SeededExternalProvider_fromJson(value) {
      var t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = value.cast$2$0(0, type$.String, type$.dynamic).$index(0, "type");
        t2 = $.ExternalProviderTypeEnumTypeTransformer__instance;
        t1 = (t2 == null ? $.ExternalProviderTypeEnumTypeTransformer__instance = B.C_ExternalProviderTypeEnumTypeTransformer : t2).decode$1(0, t1);
        t1.toString;
        return new A.SeededExternalProvider(t1);
      }
      return null;
    },
    SeededExternalProvider: function SeededExternalProvider(t0) {
      this.type = t0;
    },
    SeededFile_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.SeededFile(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TransferableBytes_fromJson(json.$index(0, "bytes")), A.TransferableString_fromJson(json.$index(0, "string")), A.FileMetadata_fromJson(json.$index(0, "metadata")));
      }
      return null;
    },
    SeededFile: function SeededFile(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.bytes = t1;
      _.string = t2;
      _.metadata = t3;
    },
    SeededFormat_fromJson(value) {
      var json, t1, t2, t3, t4, t5, t6;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.SeededFile_fromJson(json.$index(0, "file"));
        t3 = A.SeededFragment_fromJson(json.$index(0, "fragment"));
        t4 = A.SeededWebsite_listFromJson(json.$index(0, "websites"));
        t5 = A.SeededClassification_fromJson(json.$index(0, "classification"));
        t6 = A.SeededTag_listFromJson(json.$index(0, "tags"));
        return new A.SeededFormat(t1, t2, t3, t4, t5, t6);
      }
      return null;
    },
    SeededFormat: function SeededFormat(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.file = t1;
      _.fragment = t2;
      _.websites = t3;
      _.classification = t4;
      _.tags = t5;
    },
    SeededFormat_toJson_closure: function SeededFormat_toJson_closure() {
    },
    SeededFormat_toJson_closure0: function SeededFormat_toJson_closure0() {
    },
    SeededFragment_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.SeededFragment(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TransferableString_fromJson(json.$index(0, "string")), A.TransferableBytes_fromJson(json.$index(0, "bytes")), A.FragmentMetadata_fromJson(json.$index(0, "metadata")));
      }
      return null;
    },
    SeededFragment: function SeededFragment(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.string = t1;
      _.bytes = t2;
      _.metadata = t3;
    },
    SeededGitHubDistribution_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.SeededGitHubDistribution(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.SeededGitHubGistDistribution_fromJson(json.$index(0, "gist")));
      }
      return null;
    },
    SeededGitHubDistribution: function SeededGitHubDistribution(t0, t1) {
      this.schema = t0;
      this.gist = t1;
    },
    SeededGitHubGistDistribution_fromJson(value) {
      var t1, json, t2, t3, t4, t5;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.Recipients_fromJson(json.$index(0, "recipients"));
        t4 = A.mapValueOfType(json, "public", type$.bool);
        t5 = A.mapValueOfType(json, "description", t1);
        t1 = A.mapValueOfType(json, "name", t1);
        t1.toString;
        return new A.SeededGitHubGistDistribution(t2, t3, t4, t5, t1);
      }
      return null;
    },
    SeededGitHubGistDistribution: function SeededGitHubGistDistribution(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.recipients = t1;
      _.$public = t2;
      _.description = t3;
      _.name = t4;
    },
    SeededGithubGistsImport_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "application", t1);
        t1.toString;
        return new A.SeededGithubGistsImport(t2, t1, A.mapValueOfType(json, "public", type$.bool));
      }
      return null;
    },
    SeededGithubGistsImport: function SeededGithubGistsImport(t0, t1, t2) {
      this.schema = t0;
      this.application = t1;
      this.$public = t2;
    },
    SeededMacOSAsset_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.Application_fromJson(json.$index(0, "application"));
        t1 = A.mapValueOfType(json, "value", t1);
        t1.toString;
        return new A.SeededMacOSAsset(t2, t3, t1);
      }
      return null;
    },
    SeededMacOSAsset: function SeededMacOSAsset(t0, t1, t2) {
      this.schema = t0;
      this.application = t1;
      this.value = t2;
    },
    SeededModel_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "version", t1);
        t3.toString;
        t4 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t4.toString;
        t5 = A.mapValueOfType(json, "name", t1);
        t5.toString;
        t1 = A.mapValueOfType(json, "description", t1);
        t6 = A.mapValueOfType(json, "cloud", type$.bool);
        t6.toString;
        t7 = json.$index(0, "type");
        t8 = $.ModelTypeEnumTypeTransformer__instance;
        t7 = (t8 == null ? $.ModelTypeEnumTypeTransformer__instance = B.C_ModelTypeEnumTypeTransformer : t8).decode$1(0, t7);
        t7.toString;
        t8 = json.$index(0, "usage");
        t9 = $.ModelUsageEnumTypeTransformer__instance;
        t8 = (t9 == null ? $.ModelUsageEnumTypeTransformer__instance = B.C_ModelUsageEnumTypeTransformer : t9).decode$1(0, t8);
        t8.toString;
        return new A.SeededModel(t2, t3, t4, t5, t1, t6, t7, t8);
      }
      return null;
    },
    SeededModel: function SeededModel(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.schema = t0;
      _.version = t1;
      _.created = t2;
      _.name = t3;
      _.description = t4;
      _.cloud = t5;
      _.type = t6;
      _.usage = t7;
    },
    SeededPerson_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "asset", t1);
        t3 = json.$index(0, "mechanism");
        t4 = $.MechanismEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t4).decode$1(0, t3);
        t4 = A.GroupedTimestamp_fromJson(json.$index(0, "expiration"));
        t5 = A.PersonAccess_fromJson(json.$index(0, "access"));
        t5.toString;
        t6 = A.PersonType_fromJson(json.$index(0, "type"));
        t6.toString;
        return new A.SeededPerson(t2, t1, t3, t4, t5, t6);
      }
      return null;
    },
    SeededPerson_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SeededPerson);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SeededPerson_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededPerson);
      return t1;
    },
    SeededPerson: function SeededPerson(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.asset = t1;
      _.mechanism = t2;
      _.expiration = t3;
      _.access = t4;
      _.type = t5;
    },
    SeededPKCE_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = json.$index(0, "response_type");
        t4 = $.SeededPKCEResponseTypeEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.SeededPKCEResponseTypeEnumTypeTransformer__instance = B.C_SeededPKCEResponseTypeEnumTypeTransformer : t4).decode$1(0, t3);
        t3.toString;
        t4 = A.mapValueOfType(json, "state", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "nonce", t1);
        t5.toString;
        t6 = A.mapValueOfType(json, "redirect_uri", t1);
        t7 = A.mapValueOfType(json, "code_challenge", t1);
        t7.toString;
        t8 = json.$index(0, "code_challenge_method");
        t9 = $.SeededPKCECodeChallengeMethodEnumTypeTransformer__instance;
        t8 = (t9 == null ? $.SeededPKCECodeChallengeMethodEnumTypeTransformer__instance = B.C_SeededPKCECodeChallengeMethodEnumTypeTransformer : t9).decode$1(0, t8);
        t8.toString;
        t9 = A.mapValueOfType(json, "domain", t1);
        t10 = A.mapValueOfType(json, "audience", t1);
        t11 = json.$index(0, "screen_hint");
        t12 = $.SeededPKCEScreenHintEnumTypeTransformer__instance;
        t11 = (t12 == null ? $.SeededPKCEScreenHintEnumTypeTransformer__instance = B.C_SeededPKCEScreenHintEnumTypeTransformer : t12).decode$1(0, t11);
        t12 = json.$index(0, "prompt");
        t13 = $.SeededPKCEPromptEnumTypeTransformer__instance;
        t12 = (t13 == null ? $.SeededPKCEPromptEnumTypeTransformer__instance = B.C_SeededPKCEPromptEnumTypeTransformer : t13).decode$1(0, t12);
        t13 = A.mapValueOfType(json, "organization", t1);
        t14 = A.mapValueOfType(json, "invitation", t1);
        t15 = A.SeededPKCEScopeEnum_listFromJson(json.$index(0, "scope"));
        t1 = A.mapValueOfType(json, "client_id", t1);
        t1.toString;
        t16 = A.SeededPKCEADDITIONALPARAMETERS_fromJson(json.$index(0, "ADDITIONAL_PARAMETERS"));
        t17 = json.$index(0, "response_mode");
        t18 = $.SeededPKCEResponseModeEnumTypeTransformer__instance;
        return new A.SeededPKCE(t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t1, t16, (t18 == null ? $.SeededPKCEResponseModeEnumTypeTransformer__instance = B.C_SeededPKCEResponseModeEnumTypeTransformer : t18).decode$1(0, t17));
      }
      return null;
    },
    SeededPKCEScopeEnum_listFromJson(json) {
      var t1, row, t2, value,
        result = A._setArrayType([], type$.JSArray_SeededPKCEScopeEnum);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          row = t1.get$current();
          t2 = $.SeededPKCEScopeEnumTypeTransformer__instance;
          value = (t2 == null ? $.SeededPKCEScopeEnumTypeTransformer__instance = B.C_SeededPKCEScopeEnumTypeTransformer : t2).decode$1(0, row);
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededPKCEScopeEnum);
      return t1;
    },
    SeededPKCE: function SeededPKCE(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.schema = t0;
      _.responseType = t1;
      _.state = t2;
      _.nonce = t3;
      _.redirectUri = t4;
      _.codeChallenge = t5;
      _.codeChallengeMethod = t6;
      _.domain = t7;
      _.audience = t8;
      _.screenHint = t9;
      _.prompt = t10;
      _.organization = t11;
      _.invitation = t12;
      _.scope = t13;
      _.clientId = t14;
      _.ADDITIONAL_PARAMETERS = t15;
      _.responseMode = t16;
    },
    SeededPKCE_toJson_closure: function SeededPKCE_toJson_closure() {
    },
    SeededPKCEResponseTypeEnum: function SeededPKCEResponseTypeEnum(t0) {
      this.value = t0;
    },
    SeededPKCEResponseTypeEnumTypeTransformer: function SeededPKCEResponseTypeEnumTypeTransformer() {
    },
    SeededPKCECodeChallengeMethodEnum: function SeededPKCECodeChallengeMethodEnum() {
    },
    SeededPKCECodeChallengeMethodEnumTypeTransformer: function SeededPKCECodeChallengeMethodEnumTypeTransformer() {
    },
    SeededPKCEScreenHintEnum: function SeededPKCEScreenHintEnum() {
    },
    SeededPKCEScreenHintEnumTypeTransformer: function SeededPKCEScreenHintEnumTypeTransformer() {
    },
    SeededPKCEPromptEnum: function SeededPKCEPromptEnum(t0) {
      this.value = t0;
    },
    SeededPKCEPromptEnumTypeTransformer: function SeededPKCEPromptEnumTypeTransformer() {
    },
    SeededPKCEScopeEnum: function SeededPKCEScopeEnum(t0) {
      this.value = t0;
    },
    SeededPKCEScopeEnumTypeTransformer: function SeededPKCEScopeEnumTypeTransformer() {
    },
    SeededPKCEResponseModeEnum: function SeededPKCEResponseModeEnum(t0) {
      this.value = t0;
    },
    SeededPKCEResponseModeEnumTypeTransformer: function SeededPKCEResponseModeEnumTypeTransformer() {
    },
    SeededPKCEADDITIONALPARAMETERS_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = json.$index(0, "access_type");
        t2 = $.SeededPKCEADDITIONALPARAMETERSAccessTypeEnumTypeTransformer__instance;
        t1 = (t2 == null ? $.SeededPKCEADDITIONALPARAMETERSAccessTypeEnumTypeTransformer__instance = B.C_SeededPKCEADDITIONALPARAMETERSAccessTypeEnumTypeTransformer : t2).decode$1(0, t1);
        t2 = json.$index(0, "display");
        t3 = $.SeededPKCEADDITIONALPARAMETERSDisplayEnumTypeTransformer__instance;
        return new A.SeededPKCEADDITIONALPARAMETERS(t1, (t3 == null ? $.SeededPKCEADDITIONALPARAMETERSDisplayEnumTypeTransformer__instance = B.C_SeededPKCEADDITIONALPARAMETERSDisplayEnumTypeTransformer : t3).decode$1(0, t2));
      }
      return null;
    },
    SeededPKCEADDITIONALPARAMETERS: function SeededPKCEADDITIONALPARAMETERS(t0, t1) {
      this.accessType = t0;
      this.display = t1;
    },
    SeededPKCEADDITIONALPARAMETERSAccessTypeEnum: function SeededPKCEADDITIONALPARAMETERSAccessTypeEnum() {
    },
    SeededPKCEADDITIONALPARAMETERSAccessTypeEnumTypeTransformer: function SeededPKCEADDITIONALPARAMETERSAccessTypeEnumTypeTransformer() {
    },
    SeededPKCEADDITIONALPARAMETERSDisplayEnum: function SeededPKCEADDITIONALPARAMETERSDisplayEnum() {
    },
    SeededPKCEADDITIONALPARAMETERSDisplayEnumTypeTransformer: function SeededPKCEADDITIONALPARAMETERSDisplayEnumTypeTransformer() {
    },
    SeededSensitive_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "asset", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "text", t1);
        t4.toString;
        t5 = json.$index(0, "mechanism");
        t6 = $.MechanismEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t6).decode$1(0, t5);
        t6 = json.$index(0, "category");
        t7 = $.SensitiveCategoryEnumTypeTransformer__instance;
        t6 = (t7 == null ? $.SensitiveCategoryEnumTypeTransformer__instance = B.C_SensitiveCategoryEnumTypeTransformer : t7).decode$1(0, t6);
        t6.toString;
        t7 = json.$index(0, "severity");
        t8 = $.SensitiveSeverityEnumTypeTransformer__instance;
        t7 = (t8 == null ? $.SensitiveSeverityEnumTypeTransformer__instance = B.C_SensitiveSeverityEnumTypeTransformer : t8).decode$1(0, t7);
        t7.toString;
        t8 = A.mapValueOfType(json, "name", t1);
        t8.toString;
        t1 = A.mapValueOfType(json, "description", t1);
        t1.toString;
        return new A.SeededSensitive(t2, t3, t4, t5, t6, t7, t8, t1, A.SensitiveMetadata_fromJson(json.$index(0, "metadata")));
      }
      return null;
    },
    SeededSensitive: function SeededSensitive(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.schema = t0;
      _.asset = t1;
      _.text = t2;
      _.mechanism = t3;
      _.category = t4;
      _.severity = t5;
      _.name = t6;
      _.description = t7;
      _.metadata = t8;
    },
    SeededShare_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.Asset_fromJson(json.$index(0, "asset"));
        t4 = A.SeededUser_listFromJson(json.$index(0, "users"));
        t5 = json.$index(0, "access");
        t6 = $.AccessEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.AccessEnumTypeTransformer__instance = B.C_AccessEnumTypeTransformer : t6).decode$1(0, t5);
        t5.toString;
        return new A.SeededShare(t2, t3, t4, t5, A.Assets_fromJson(json.$index(0, "assets")), A.mapValueOfType(json, "name", t1));
      }
      return null;
    },
    SeededShare: function SeededShare(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.asset = t1;
      _.users = t2;
      _.access = t3;
      _.assets = t4;
      _.name = t5;
    },
    SeededShare_toJson_closure: function SeededShare_toJson_closure() {
    },
    SeededTag_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "text", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "asset", t1);
        t4.toString;
        t5 = json.$index(0, "mechanism");
        t6 = $.MechanismEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t6).decode$1(0, t5);
        t1 = A.mapValueOfType(json, "format", t1);
        t6 = json.$index(0, "category");
        t7 = $.TagCategoryEnumTypeTransformer__instance;
        return new A.SeededTag(t2, t3, t4, t5, t1, (t7 == null ? $.TagCategoryEnumTypeTransformer__instance = B.C_TagCategoryEnumTypeTransformer : t7).decode$1(0, t6));
      }
      return null;
    },
    SeededTag_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SeededTag);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SeededTag_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededTag);
      return t1;
    },
    SeededTag: function SeededTag(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.text = t1;
      _.asset = t2;
      _.mechanism = t3;
      _.format = t4;
      _.category = t5;
    },
    SeededTrackedAdoptionEvent_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.SeededTrackedAdoptionEvent(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs_fromJson(json.$index(0, "identifier_description_pair")));
      }
      return null;
    },
    SeededTrackedAdoptionEvent: function SeededTrackedAdoptionEvent(t0, t1) {
      this.schema = t0;
      this.identifierDescriptionPair = t1;
    },
    SeededTrackedApplication_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = json.$index(0, "name");
        t4 = $.ApplicationNameEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.ApplicationNameEnumTypeTransformer__instance = B.C_ApplicationNameEnumTypeTransformer : t4).decode$1(0, t3);
        t3.toString;
        t1 = A.mapValueOfType(json, "version", t1);
        t1.toString;
        t4 = json.$index(0, "platform");
        t5 = $.PlatformEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.PlatformEnumTypeTransformer__instance = B.C_PlatformEnumTypeTransformer : t5).decode$1(0, t4);
        t4.toString;
        t5 = json.$index(0, "capabilities");
        t6 = $.CapabilitiesEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.CapabilitiesEnumTypeTransformer__instance = B.C_CapabilitiesEnumTypeTransformer : t6).decode$1(0, t5);
        t6 = json.$index(0, "privacy");
        t7 = $.PrivacyEnumTypeTransformer__instance;
        return new A.SeededTrackedApplication(t2, t3, t1, t4, t5, (t7 == null ? $.PrivacyEnumTypeTransformer__instance = B.C_PrivacyEnumTypeTransformer : t7).decode$1(0, t6));
      }
      return null;
    },
    SeededTrackedApplication: function SeededTrackedApplication(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.name = t1;
      _.version = t2;
      _.platform = t3;
      _.capabilities = t4;
      _.privacy = t5;
    },
    SeededTrackedAssetEvent_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.ReferencedAsset_fromJson(json.$index(0, "asset"));
        t2.toString;
        t3 = A.TrackedAssetEventIdentifierDescriptionPairs_fromJson(json.$index(0, "identifier_description_pair"));
        t3.toString;
        return new A.SeededTrackedAssetEvent(t1, t2, t3, A.TrackedAssetEventMetadata_fromJson(json.$index(0, "metadata")));
      }
      return null;
    },
    SeededTrackedAssetEvent: function SeededTrackedAssetEvent(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.asset = t1;
      _.identifierDescriptionPair = t2;
      _.metadata = t3;
    },
    SeededTrackedAssetsEvent_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.SeededTrackedAssetsEvent(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TrackedAssetsEventIdentifierDescriptionPairs_fromJson(json.$index(0, "identifier_description_pair")), A.SeededTrackedAssetsEventMetadata_fromJson(json.$index(0, "metadata")));
      }
      return null;
    },
    SeededTrackedAssetsEvent: function SeededTrackedAssetsEvent(t0, t1, t2) {
      this.schema = t0;
      this.identifierDescriptionPair = t1;
      this.metadata = t2;
    },
    SeededTrackedAssetsEventMetadata_fromJson(value) {
      if (type$.Map_dynamic_dynamic._is(value))
        return new A.SeededTrackedAssetsEventMetadata(A.TrackedAssetsEventSearchMetadata_fromJson(value.cast$2$0(0, type$.String, type$.dynamic).$index(0, "search")));
      return null;
    },
    SeededTrackedAssetsEventMetadata: function SeededTrackedAssetsEventMetadata(t0) {
      this.search = t0;
    },
    SeededTrackedFormatEvent_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.TrackedFormatEventIdentifierDescriptionPairs_fromJson(json.$index(0, "identifier_description_pair"));
        t2.toString;
        t3 = A.ReferencedFormat_fromJson(json.$index(0, "format"));
        t3.toString;
        return new A.SeededTrackedFormatEvent(t1, t2, t3, A.TrackedFormatEventMetadata_fromJson(json.$index(0, "metadata")));
      }
      return null;
    },
    SeededTrackedFormatEvent: function SeededTrackedFormatEvent(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.identifierDescriptionPair = t1;
      _.format = t2;
      _.metadata = t3;
    },
    SeededTrackedInteractionEvent_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "description", t1);
        t3.toString;
        return new A.SeededTrackedInteractionEvent(t2, t3, A.mapValueOfType(json, "element", t1), A.SeededTrackedInteractionEventIdentifierDescriptionPairs_fromJson(json.$index(0, "identifier_description_pair")));
      }
      return null;
    },
    SeededTrackedInteractionEvent: function SeededTrackedInteractionEvent(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.description = t1;
      _.element = t2;
      _.identifierDescriptionPair = t3;
    },
    SeededTrackedInteractionEventIdentifierDescriptionPairs_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "assets_list_refreshed");
        t3 = $.SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer__instance;
        return new A.SeededTrackedInteractionEventIdentifierDescriptionPairs(t1, (t3 == null ? $.SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer__instance = B.C_SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer : t3).decode$1(0, t2));
      }
      return null;
    },
    SeededTrackedInteractionEventIdentifierDescriptionPairs: function SeededTrackedInteractionEventIdentifierDescriptionPairs(t0, t1) {
      this.schema = t0;
      this.assetsListRefreshed = t1;
    },
    SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnum: function SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnum() {
    },
    SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer: function SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer() {
    },
    SeededTrackedKeyboardEvent_fromJson(value) {
      var t1, json, t2, t3,
        _s8_ = "shortcut";
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "description", t1);
        t1.toString;
        t3 = type$.List_dynamic;
        t3 = t3._is(json.$index(0, _s8_)) ? J.cast$1$0$ax(t3._as(json.$index(0, _s8_)), type$.int) : B.List_empty0;
        return new A.SeededTrackedKeyboardEvent(t2, t1, t3, A.SeededTrackedKeyboardEventIdentifierDescriptionPairs_fromJson(json.$index(0, "identifier_description_pair")));
      }
      return null;
    },
    SeededTrackedKeyboardEvent: function SeededTrackedKeyboardEvent(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.description = t1;
      _.shortcut = t2;
      _.identifierDescriptionPair = t3;
    },
    SeededTrackedKeyboardEventIdentifierDescriptionPairs_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "assets_list_refreshed");
        t3 = $.SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer__instance;
        return new A.SeededTrackedKeyboardEventIdentifierDescriptionPairs(t1, (t3 == null ? $.SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer__instance = B.C_SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer : t3).decode$1(0, t2));
      }
      return null;
    },
    SeededTrackedKeyboardEventIdentifierDescriptionPairs: function SeededTrackedKeyboardEventIdentifierDescriptionPairs(t0, t1) {
      this.schema = t0;
      this.assetsListRefreshed = t1;
    },
    SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnum: function SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnum() {
    },
    SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer: function SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer() {
    },
    SeededTrackedMachineLearningEvent_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.SeededTrackedMachineLearningEvent(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TLPMachineLearningProcessingEvent_fromJson(json.$index(0, "tlp")), A.GraphicalMachineLearningProcessingEvent_fromJson(json.$index(0, "graphical")));
      }
      return null;
    },
    SeededTrackedMachineLearningEvent: function SeededTrackedMachineLearningEvent(t0, t1, t2) {
      this.schema = t0;
      this.tlp = t1;
      this.graphical = t2;
    },
    SeededTrackedSessionEvent_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.TrackedSessionEventIdentifierDescriptionPairs_fromJson(json.$index(0, "identifier_description_pair"));
        t2.toString;
        return new A.SeededTrackedSessionEvent(t1, t2);
      }
      return null;
    },
    SeededTrackedSessionEvent: function SeededTrackedSessionEvent(t0, t1) {
      this.schema = t0;
      this.identifierDescriptionPair = t1;
    },
    SeededUltraSuiteAsset_fromJson(value) {
      var t1, json, t2, t3, t4, t5;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "name", t1);
        t4 = json.$index(0, "ext");
        t5 = $.ClassificationSpecificEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.ClassificationSpecificEnumTypeTransformer__instance = B.C_ClassificationSpecificEnumTypeTransformer : t5).decode$1(0, t4);
        t5 = A.SeededFormat_fromJson(json.$index(0, "format"));
        t5.toString;
        return new A.SeededUltraSuiteAsset(t2, t3, t4, t5, A.mapValueOfType(json, "description", t1));
      }
      return null;
    },
    SeededUltraSuiteAsset: function SeededUltraSuiteAsset(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.name = t1;
      _.ext = t2;
      _.format = t3;
      _.description = t4;
    },
    SeededUser_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = type$.List_dynamic;
        return new A.SeededUser(t2, t3._is(json.$index(0, "emails")) ? J.cast$1$0$ax(t3._as(json.$index(0, "emails")), t1) : B.List_empty1);
      }
      return null;
    },
    SeededUser_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SeededUser);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SeededUser_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededUser);
      return t1;
    },
    SeededUser: function SeededUser(t0, t1) {
      this.schema = t0;
      this.emails = t1;
    },
    SeededWebsite_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "asset", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "url", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "name", t1);
        t5.toString;
        t1 = A.mapValueOfType(json, "format", t1);
        t6 = json.$index(0, "mechanism");
        t7 = $.MechanismEnumTypeTransformer__instance;
        return new A.SeededWebsite(t2, t3, t4, t5, t1, (t7 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t7).decode$1(0, t6));
      }
      return null;
    },
    SeededWebsite_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_SeededWebsite);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.SeededWebsite_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.SeededWebsite);
      return t1;
    },
    SeededWebsite: function SeededWebsite(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.asset = t1;
      _.url = t2;
      _.name = t3;
      _.format = t4;
      _.mechanism = t5;
    },
    Seeds_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Seeds(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Seed_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Seeds: function Seeds(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Seeds_toJson_closure: function Seeds_toJson_closure() {
    },
    Sensitive_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t4.toString;
        t5 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t5.toString;
        t6 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t7 = A.FlattenedAsset_fromJson(json.$index(0, "asset"));
        t7.toString;
        t8 = A.mapValueOfType(json, "text", t1);
        t8.toString;
        t9 = json.$index(0, "mechanism");
        t10 = $.MechanismEnumTypeTransformer__instance;
        t9 = (t10 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t10).decode$1(0, t9);
        t9.toString;
        t10 = json.$index(0, "category");
        t11 = $.SensitiveCategoryEnumTypeTransformer__instance;
        t10 = (t11 == null ? $.SensitiveCategoryEnumTypeTransformer__instance = B.C_SensitiveCategoryEnumTypeTransformer : t11).decode$1(0, t10);
        t10.toString;
        t11 = json.$index(0, "severity");
        t12 = $.SensitiveSeverityEnumTypeTransformer__instance;
        t11 = (t12 == null ? $.SensitiveSeverityEnumTypeTransformer__instance = B.C_SensitiveSeverityEnumTypeTransformer : t12).decode$1(0, t11);
        t11.toString;
        t12 = A.mapValueOfType(json, "name", t1);
        t12.toString;
        t1 = A.mapValueOfType(json, "description", t1);
        t1.toString;
        return new A.Sensitive(t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t1, A.SensitiveMetadata_fromJson(json.$index(0, "metadata")), A.mapValueOfType(json, "interactions", type$.int));
      }
      return null;
    },
    Sensitive_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Sensitive);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Sensitive_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Sensitive);
      return t1;
    },
    Sensitive: function Sensitive(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.created = t2;
      _.updated = t3;
      _.deleted = t4;
      _.asset = t5;
      _.text = t6;
      _.mechanism = t7;
      _.category = t8;
      _.severity = t9;
      _.name = t10;
      _.description = t11;
      _.metadata = t12;
      _.interactions = t13;
    },
    SensitiveCategoryEnum: function SensitiveCategoryEnum(t0) {
      this.value = t0;
    },
    SensitiveCategoryEnumTypeTransformer: function SensitiveCategoryEnumTypeTransformer() {
    },
    SensitiveMetadata_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.SensitiveMetadata(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TextMatch_fromJson(json.$index(0, "match")), A.num_parse(J.toString$0$(json.$index(0, "entropy"))));
      }
      return null;
    },
    SensitiveMetadata: function SensitiveMetadata(t0, t1, t2) {
      this.schema = t0;
      this.match = t1;
      this.entropy = t2;
    },
    SensitiveSeverityEnum: function SensitiveSeverityEnum(t0) {
      this.value = t0;
    },
    SensitiveSeverityEnumTypeTransformer: function SensitiveSeverityEnumTypeTransformer() {
    },
    Sensitives_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Sensitives(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Sensitive_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Sensitives: function Sensitives(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Sensitives_toJson_closure: function Sensitives_toJson_closure() {
    },
    Session_fromJson(value) {
      var t1, json, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t1 = A.mapValueOfType(json, "id", t1);
        t1.toString;
        t2 = A.GroupedTimestamp_fromJson(json.$index(0, "opened"));
        t2.toString;
        return new A.Session(t1, t2, A.GroupedTimestamp_fromJson(json.$index(0, "closed")));
      }
      return null;
    },
    Session: function Session(t0, t1, t2) {
      this.id = t0;
      this.opened = t1;
      this.closed = t2;
    },
    Share_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "user", t1);
        t5 = A.FlattenedAsset_fromJson(json.$index(0, "asset"));
        t6 = A.FlattenedAssets_fromJson(json.$index(0, "assets"));
        t7 = A.mapValueOfType(json, "link", t1);
        t7.toString;
        t8 = json.$index(0, "access");
        t9 = $.AccessEnumTypeTransformer__instance;
        t8 = (t9 == null ? $.AccessEnumTypeTransformer__instance = B.C_AccessEnumTypeTransformer : t9).decode$1(0, t8);
        t8.toString;
        t9 = A.Accessors_fromJson(json.$index(0, "accessors"));
        t9.toString;
        t10 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t10.toString;
        t11 = A.mapValueOfType(json, "short", t1);
        t11.toString;
        return new A.Share(t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, A.mapValueOfType(json, "name", t1), A.Distributions_fromJson(json.$index(0, "distributions")));
      }
      return null;
    },
    Share_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Share);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Share_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Share);
      return t1;
    },
    Share: function Share(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.user = t2;
      _.asset = t3;
      _.assets = t4;
      _.link = t5;
      _.access = t6;
      _.accessors = t7;
      _.created = t8;
      _.short = t9;
      _.name = t10;
      _.distributions = t11;
    },
    Shares_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Shares(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Share_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Shares: function Shares(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Shares_toJson_closure: function Shares_toJson_closure() {
    },
    Space_fromJson(value) {
      var json, t1;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = type$.int;
        return new A.Space(A.mapValueOfType(json, "size", t1), A.mapValueOfType(json, "duration", t1));
      }
      return null;
    },
    Space: function Space(t0, t1) {
      this.size = t0;
      this.duration = t1;
    },
    StreamedIdentifier_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.StreamedIdentifier(A.ReferencedAsset_fromJson(json.$index(0, "asset")), A.mapValueOfType(json, "deleted", type$.bool));
      }
      return null;
    },
    StreamedIdentifier_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_StreamedIdentifier);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.StreamedIdentifier_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.StreamedIdentifier);
      return t1;
    },
    StreamedIdentifier: function StreamedIdentifier(t0, t1) {
      this.asset = t0;
      this.deleted = t1;
    },
    StreamedIdentifiers_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.StreamedIdentifiers(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.StreamedIdentifier_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    StreamedIdentifiers: function StreamedIdentifiers(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    StreamedIdentifiers_toJson_closure: function StreamedIdentifiers_toJson_closure() {
    },
    Suggestion_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.ReuseSuggestion_fromJson(json.$index(0, "reuse"));
        t3.toString;
        t4 = A.SaveSuggestion_fromJson(json.$index(0, "save"));
        t4.toString;
        t5 = A.SuggestionTarget_fromJson(json.$index(0, "target"));
        t5.toString;
        t6 = A.Assets_fromJson(json.$index(0, "assets"));
        t6.toString;
        t1 = A.mapCastOfType(json, "distribution", t1, type$.num);
        return new A.Suggestion(t2, t3, t4, t5, t6, t1 == null ? B.Map_empty : t1);
      }
      return null;
    },
    Suggestion: function Suggestion(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.schema = t0;
      _.reuse = t1;
      _.save = t2;
      _.target = t3;
      _.assets = t4;
      _.distribution = t5;
    },
    SuggestionTarget_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.SeededConnectorCreation_fromJson(json.$index(0, "seed"));
        t2.toString;
        t3 = A.mapValueOfType(json, "vector", type$.int);
        t3.toString;
        return new A.SuggestionTarget(t1, t2, t3);
      }
      return null;
    },
    SuggestionTarget: function SuggestionTarget(t0, t1, t2) {
      this.schema = t0;
      this.seed = t1;
      this.vector = t2;
    },
    SystemExecutionCpuInformation_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = type$.int;
        t3 = A.mapValueOfType(json, "count", t2);
        t3.toString;
        t1 = A.mapValueOfType(json, "brand", t1);
        t1.toString;
        t2 = A.mapValueOfType(json, "frequency", t2);
        t2.toString;
        return new A.SystemExecutionCpuInformation(t3, t1, t2);
      }
      return null;
    },
    SystemExecutionCpuInformation: function SystemExecutionCpuInformation(t0, t1, t2) {
      this.count = t0;
      this.brand = t1;
      this.frequency = t2;
    },
    SystemExecutionInformation_fromJson(value) {
      var t1, json, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.mapValueOfType(json, "memory", type$.int);
        t2.toString;
        t3 = A.mapValueOfType(json, "os", t1);
        t3.toString;
        t1 = A.mapValueOfType(json, "kernel", t1);
        t1.toString;
        t4 = A.SystemExecutionCpuInformation_fromJson(json.$index(0, "cpu"));
        t4.toString;
        return new A.SystemExecutionInformation(t2, t3, t1, t4);
      }
      return null;
    },
    SystemExecutionInformation: function SystemExecutionInformation(t0, t1, t2, t3) {
      var _ = this;
      _.memory = t0;
      _.os = t1;
      _.kernel = t2;
      _.cpu = t3;
    },
    Tag_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t1 = A.mapValueOfType(json, "text", t1);
        t1.toString;
        t4 = json.$index(0, "mechanism");
        t5 = $.MechanismEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t5).decode$1(0, t4);
        t4.toString;
        t5 = A.FlattenedAsset_fromJson(json.$index(0, "asset"));
        t5.toString;
        t6 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t6.toString;
        t7 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t7.toString;
        t8 = A.FlattenedFormat_fromJson(json.$index(0, "format"));
        t9 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t10 = json.$index(0, "category");
        t11 = $.TagCategoryEnumTypeTransformer__instance;
        t10 = (t11 == null ? $.TagCategoryEnumTypeTransformer__instance = B.C_TagCategoryEnumTypeTransformer : t11).decode$1(0, t10);
        t10.toString;
        return new A.Tag(t2, t3, t1, t4, t5, t6, t7, t8, t9, t10, A.Relationship_fromJson(json.$index(0, "relationship")), A.mapValueOfType(json, "interactions", type$.int));
      }
      return null;
    },
    Tag_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Tag);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Tag_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Tag);
      return t1;
    },
    Tag: function Tag(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.text = t2;
      _.mechanism = t3;
      _.asset = t4;
      _.created = t5;
      _.updated = t6;
      _.format = t7;
      _.deleted = t8;
      _.category = t9;
      _.relationship = t10;
      _.interactions = t11;
    },
    TagCategoryEnum: function TagCategoryEnum(t0) {
      this.value = t0;
    },
    TagCategoryEnumTypeTransformer: function TagCategoryEnumTypeTransformer() {
    },
    Tags_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Tags(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Tag_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Tags: function Tags(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Tags_toJson_closure: function Tags_toJson_closure() {
    },
    TextLocation_fromJson(value) {
      var t1, json, t2, t3, t4;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "text", t1);
        t1.toString;
        t3 = type$.int;
        t4 = A.mapValueOfType(json, "start", t3);
        t4.toString;
        t3 = A.mapValueOfType(json, "end", t3);
        t3.toString;
        return new A.TextLocation(t2, t1, t4, t3);
      }
      return null;
    },
    TextLocation: function TextLocation(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.text = t1;
      _.start = t2;
      _.end = t3;
    },
    TextMatch_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.TextLocation_fromJson(json.$index(0, "group"));
        t2.toString;
        return new A.TextMatch(t1, t2, A.TextLocation_fromJson(json.$index(0, "subgroup")));
      }
      return null;
    },
    TextMatch: function TextMatch(t0, t1, t2) {
      this.schema = t0;
      this.group = t1;
      this.subgroup = t2;
    },
    Theme_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.mapValueOfType(json, "dark", type$.bool);
        t2.toString;
        return new A.Theme(t1, t2);
      }
      return null;
    },
    Theme: function Theme(t0, t1) {
      this.schema = t0;
      this.dark = t1;
    },
    TLPCodeDirectoryAnalytics_fromJson(value) {
      var t1, json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        return new A.TLPCodeDirectoryAnalytics(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.mapValueOfType(json, "id", t1));
      }
      return null;
    },
    TLPCodeDirectoryAnalytics: function TLPCodeDirectoryAnalytics(t0, t1) {
      this.schema = t0;
      this.id = t1;
    },
    TLPCodeFileAnalytics_fromJson(value) {
      var t1, json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        return new A.TLPCodeFileAnalytics(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.mapValueOfType(json, "id", t1));
      }
      return null;
    },
    TLPCodeFileAnalytics: function TLPCodeFileAnalytics(t0, t1) {
      this.schema = t0;
      this.id = t1;
    },
    TLPCodeFragmentClassification_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "asset", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "model", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "created", t1);
        t5.toString;
        t6 = A.mapValueOfType(json, "classification", t1);
        t6.toString;
        t7 = A.num_parse(J.toString$0$(json.$index(0, "probability")));
        t8 = A.mapValueOfType(json, "context", t1);
        t8.toString;
        t9 = A.mapValueOfType(json, "distribution", t1);
        t10 = A.TLPCodeFragmentClassificationMetadata_fromJson(json.$index(0, "metadata"));
        t1 = A.mapValueOfType(json, "user", t1);
        t1.toString;
        return new A.TLPCodeFragmentClassification(t2, t3, t4, t5, t6, t7, t8, t9, t10, t1, A.num_parse(J.toString$0$(json.$index(0, "latency"))), A.SystemExecutionInformation_fromJson(json.$index(0, "system")));
      }
      return null;
    },
    TLPCodeFragmentClassification: function TLPCodeFragmentClassification(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.schema = t0;
      _.asset = t1;
      _.model = t2;
      _.created = t3;
      _.classification = t4;
      _.probability = t5;
      _.context = t6;
      _.distribution = t7;
      _.metadata = t8;
      _.user = t9;
      _.latency = t10;
      _.system = t11;
    },
    TLPCodeFragmentClassificationMetadata_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.TLPCodeFragmentClassificationMetadata(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Classification_fromJson(json.$index(0, "context")), A.Classification_fromJson(json.$index(0, "prior")));
      }
      return null;
    },
    TLPCodeFragmentClassificationMetadata: function TLPCodeFragmentClassificationMetadata(t0, t1, t2) {
      this.schema = t0;
      this.context = t1;
      this.prior = t2;
    },
    TLPCodeFragmentDescription_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.mapValueOfType(json, "description", t1);
        t3 = A.mapValueOfType(json, "asset", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "created", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "model", t1);
        t5.toString;
        t6 = A.num_parse(J.toString$0$(json.$index(0, "latency")));
        t7 = A.mapValueOfType(json, "user", t1);
        t7.toString;
        return new A.TLPCodeFragmentDescription(t2, t3, t4, t5, t6, t7, A.mapValueOfType(json, "context", t1), A.mapValueOfType(json, "os", t1));
      }
      return null;
    },
    TLPCodeFragmentDescription: function TLPCodeFragmentDescription(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.description = t0;
      _.asset = t1;
      _.created = t2;
      _.model = t3;
      _.latency = t4;
      _.user = t5;
      _.context = t6;
      _.os = t7;
    },
    TLPCodeFragmentDescriptiveStatistics_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "user", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "os", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "language", t1);
        t5.toString;
        t6 = A.num_parse(J.toString$0$(json.$index(0, "length")));
        t7 = A.mapValueOfType(json, "ast", t1);
        t7.toString;
        t8 = A.mapValueOfType(json, "timestamp", t1);
        t8.toString;
        t9 = A.mapValueOfType(json, "asset", t1);
        t9.toString;
        t10 = A.mapValueOfType(json, "context", t1);
        t10.toString;
        t1 = A.mapValueOfType(json, "snippet", t1);
        t1.toString;
        return new A.TLPCodeFragmentDescriptiveStatistics(t2, t3, t4, t5, t6, t7, t8, t9, t10, t1);
      }
      return null;
    },
    TLPCodeFragmentDescriptiveStatistics: function TLPCodeFragmentDescriptiveStatistics(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.schema = t0;
      _.user = t1;
      _.os = t2;
      _.language = t3;
      _.length = t4;
      _.ast = t5;
      _.timestamp = t6;
      _.asset = t7;
      _.context = t8;
      _.snippet = t9;
    },
    TLPCodeFragmentReclassification_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "asset", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "model", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "created", t1);
        t5.toString;
        t6 = A.TLPCodeFragmentReclassificationUpdates_fromJson(json.$index(0, "updates"));
        t6.toString;
        t7 = A.mapValueOfType(json, "user", t1);
        t7.toString;
        t1 = A.mapValueOfType(json, "context", t1);
        t1.toString;
        return new A.TLPCodeFragmentReclassification(t2, t3, t4, t5, t6, t7, t1);
      }
      return null;
    },
    TLPCodeFragmentReclassification: function TLPCodeFragmentReclassification(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.schema = t0;
      _.asset = t1;
      _.model = t2;
      _.created = t3;
      _.updates = t4;
      _.user = t5;
      _.context = t6;
    },
    TLPCodeFragmentReclassificationUpdates_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.Classification_fromJson(json.$index(0, "previous"));
        t2.toString;
        t3 = A.Classification_fromJson(json.$index(0, "current"));
        t3.toString;
        return new A.TLPCodeFragmentReclassificationUpdates(t1, t2, t3);
      }
      return null;
    },
    TLPCodeFragmentReclassificationUpdates: function TLPCodeFragmentReclassificationUpdates(t0, t1, t2) {
      this.schema = t0;
      this.previous = t1;
      this.current = t2;
    },
    TLPCodeFragmentStatistics_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.TLPCodeFragmentStatistics(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TLPCodeFragmentDescriptiveStatistics_fromJson(json.$index(0, "descriptive")));
      }
      return null;
    },
    TLPCodeFragmentStatistics: function TLPCodeFragmentStatistics(t0, t1) {
      this.schema = t0;
      this.descriptive = t1;
    },
    TLPCodeFragmentSuggestedReuse_fromJson(value) {
      var t1, json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        return new A.TLPCodeFragmentSuggestedReuse(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.mapValueOfType(json, "id", t1));
      }
      return null;
    },
    TLPCodeFragmentSuggestedReuse: function TLPCodeFragmentSuggestedReuse(t0, t1) {
      this.schema = t0;
      this.id = t1;
    },
    TLPCodeFragmentSuggestedSave_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "asset", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "user", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "model", t1);
        t5.toString;
        t6 = A.mapValueOfType(json, "created", t1);
        t6.toString;
        t7 = A.mapValueOfType(json, "os", t1);
        t7.toString;
        return new A.TLPCodeFragmentSuggestedSave(t2, t3, t4, t5, t6, t7, A.mapValueOfType(json, "context", t1), A.num_parse(J.toString$0$(json.$index(0, "score"))), A.mapValueOfType(json, "candidates", type$.int));
      }
      return null;
    },
    TLPCodeFragmentSuggestedSave: function TLPCodeFragmentSuggestedSave(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.schema = t0;
      _.asset = t1;
      _.user = t2;
      _.model = t3;
      _.created = t4;
      _.os = t5;
      _.context = t6;
      _.score = t7;
      _.candidates = t8;
    },
    TLPCodeFragmentTagify_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.TLPCodeFragmentTagify(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TLPCodeSnippetTagifyCode_fromJson(json.$index(0, "code")));
      }
      return null;
    },
    TLPCodeFragmentTagify: function TLPCodeFragmentTagify(t0, t1) {
      this.schema = t0;
      this.code = t1;
    },
    TLPCodeProcessing_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.TLPCodeProcessing(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TLPCodeSnippetAnalytics_fromJson(json.$index(0, "fragment")), A.TLPCodeFileAnalytics_fromJson(json.$index(0, "file")), A.TLPCodeDirectoryAnalytics_fromJson(json.$index(0, "directory")), A.TLPCodeRepositoryAnalytics_fromJson(json.$index(0, "repository")));
      }
      return null;
    },
    TLPCodeProcessing: function TLPCodeProcessing(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.fragment = t1;
      _.file = t2;
      _.directory = t3;
      _.repository = t4;
    },
    TLPCodeRepositoryAnalytics_fromJson(value) {
      var t1, json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        return new A.TLPCodeRepositoryAnalytics(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.mapValueOfType(json, "id", t1));
      }
      return null;
    },
    TLPCodeRepositoryAnalytics: function TLPCodeRepositoryAnalytics(t0, t1) {
      this.schema = t0;
      this.id = t1;
    },
    TLPCodeSnippetAnalytics_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.TLPCodeSnippetAnalytics(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TLPCodeFragmentStatistics_fromJson(json.$index(0, "statistics")), A.TLPCodeFragmentClassification_fromJson(json.$index(0, "classification")), A.TLPCodeFragmentReclassification_fromJson(json.$index(0, "reclassification")), A.TLPCodeSnippetSuggestedInteractions_fromJson(json.$index(0, "suggested")), A.TLPCodeFragmentTagify_fromJson(json.$index(0, "tagify")), A.TLPCodeFragmentDescription_fromJson(json.$index(0, "description")));
      }
      return null;
    },
    TLPCodeSnippetAnalytics: function TLPCodeSnippetAnalytics(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.schema = t0;
      _.statistics = t1;
      _.classification = t2;
      _.reclassification = t3;
      _.suggested = t4;
      _.tagify = t5;
      _.description = t6;
    },
    TLPCodeSnippetSuggestedInteractions_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.TLPCodeSnippetSuggestedInteractions(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TLPCodeFragmentSuggestedSave_fromJson(json.$index(0, "save")), A.TLPCodeFragmentSuggestedReuse_fromJson(json.$index(0, "reuse")));
      }
      return null;
    },
    TLPCodeSnippetSuggestedInteractions: function TLPCodeSnippetSuggestedInteractions(t0, t1, t2) {
      this.schema = t0;
      this.save = t1;
      this.reuse = t2;
    },
    TLPCodeSnippetTagifyCode_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "distribution", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "inferred_distribution", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "tags", t1);
        t5.toString;
        t6 = A.mapValueOfType(json, "inferred_tags", t1);
        t6.toString;
        t7 = A.mapValueOfType(json, "model", t1);
        t7.toString;
        t8 = A.mapValueOfType(json, "label_version", t1);
        t8.toString;
        t9 = A.num_parse(J.toString$0$(json.$index(0, "threshold")));
        t10 = A.num_parse(J.toString$0$(json.$index(0, "inferred_threshold")));
        t11 = A.mapValueOfType(json, "context", t1);
        t11.toString;
        t1 = A.mapValueOfType(json, "asset", t1);
        t1.toString;
        return new A.TLPCodeSnippetTagifyCode(t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t1);
      }
      return null;
    },
    TLPCodeSnippetTagifyCode: function TLPCodeSnippetTagifyCode(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.schema = t0;
      _.distribution = t1;
      _.inferredDistribution = t2;
      _.tags = t3;
      _.inferredTags = t4;
      _.model = t5;
      _.labelVersion = t6;
      _.threshold = t7;
      _.inferredThreshold = t8;
      _.context = t9;
      _.asset = t10;
    },
    TLPDirectedDiscoveryFilter_fromJson(value) {
      var t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = value.cast$2$0(0, type$.String, type$.dynamic).$index(0, "name");
        t2 = $.TLPDirectedDiscoveryFilterEnumTypeTransformer__instance;
        t1 = (t2 == null ? $.TLPDirectedDiscoveryFilterEnumTypeTransformer__instance = B.C_TLPDirectedDiscoveryFilterEnumTypeTransformer : t2).decode$1(0, t1);
        t1.toString;
        return new A.TLPDirectedDiscoveryFilter(t1);
      }
      return null;
    },
    TLPDirectedDiscoveryFilter_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_TLPDirectedDiscoveryFilter);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.TLPDirectedDiscoveryFilter_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.TLPDirectedDiscoveryFilter);
      return t1;
    },
    TLPDirectedDiscoveryFilter: function TLPDirectedDiscoveryFilter(t0) {
      this.name = t0;
    },
    TLPDirectedDiscoveryFilterEnum: function TLPDirectedDiscoveryFilterEnum(t0) {
      this.value = t0;
    },
    TLPDirectedDiscoveryFilterEnumTypeTransformer: function TLPDirectedDiscoveryFilterEnumTypeTransformer() {
    },
    TLPDirectedDiscoveryFilters_fromJson(value) {
      if (type$.Map_dynamic_dynamic._is(value))
        return new A.TLPDirectedDiscoveryFilters(A.TLPDirectedDiscoveryFilter_listFromJson(value.cast$2$0(0, type$.String, type$.dynamic).$index(0, "iterable")));
      return null;
    },
    TLPDirectedDiscoveryFilters: function TLPDirectedDiscoveryFilters(t0) {
      this.iterable = t0;
    },
    TLPDirectedDiscoveryFilters_toJson_closure: function TLPDirectedDiscoveryFilters_toJson_closure() {
    },
    TLPMachineLearningProcessingEvent_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.TLPMachineLearningProcessingEvent(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TLPCodeProcessing_fromJson(json.$index(0, "code")));
      }
      return null;
    },
    TLPMachineLearningProcessingEvent: function TLPMachineLearningProcessingEvent(t0, t1) {
      this.schema = t0;
      this.code = t1;
    },
    TokenizedPKCE_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = json.$index(0, "grant_type");
        t4 = $.TokenizedPKCEGrantTypeEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.TokenizedPKCEGrantTypeEnumTypeTransformer__instance = B.C_TokenizedPKCEGrantTypeEnumTypeTransformer : t4).decode$1(0, t3);
        t3.toString;
        t4 = A.mapValueOfType(json, "client_id", t1);
        t4.toString;
        t5 = A.mapValueOfType(json, "code", t1);
        t5.toString;
        t6 = A.mapValueOfType(json, "redirect_uri", t1);
        t6.toString;
        t7 = A.mapValueOfType(json, "code_verifier", t1);
        t7.toString;
        return new A.TokenizedPKCE(t2, t3, t4, t5, t6, t7, A.mapValueOfType(json, "audience", t1));
      }
      return null;
    },
    TokenizedPKCE: function TokenizedPKCE(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.schema = t0;
      _.grantType = t1;
      _.clientId = t2;
      _.code = t3;
      _.redirectUri = t4;
      _.codeVerifier = t5;
      _.audience = t6;
    },
    TokenizedPKCEGrantTypeEnum: function TokenizedPKCEGrantTypeEnum(t0) {
      this.value = t0;
    },
    TokenizedPKCEGrantTypeEnumTypeTransformer: function TokenizedPKCEGrantTypeEnumTypeTransformer() {
    },
    TrackedApplication_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = json.$index(0, "name");
        t5 = $.ApplicationNameEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.ApplicationNameEnumTypeTransformer__instance = B.C_ApplicationNameEnumTypeTransformer : t5).decode$1(0, t4);
        t4.toString;
        t1 = A.mapValueOfType(json, "version", t1);
        t1.toString;
        t5 = json.$index(0, "platform");
        t6 = $.PlatformEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.PlatformEnumTypeTransformer__instance = B.C_PlatformEnumTypeTransformer : t6).decode$1(0, t5);
        t5.toString;
        return new A.TrackedApplication(t2, t3, t4, t1, t5);
      }
      return null;
    },
    TrackedApplication: function TrackedApplication(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.name = t2;
      _.version = t3;
      _.platform = t4;
    },
    TrackedApplicationInstall_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.TrackedApplication_fromJson(json.$index(0, "application"));
        t2.toString;
        return new A.TrackedApplicationInstall(t1, t2, A.TrackedUserProfile_fromJson(json.$index(0, "user")));
      }
      return null;
    },
    TrackedApplicationInstall: function TrackedApplicationInstall(t0, t1, t2) {
      this.schema = t0;
      this.application = t1;
      this.user = t2;
    },
    TrackedApplicationUpdate_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.TrackedApplication_fromJson(json.$index(0, "current"));
        t2.toString;
        return new A.TrackedApplicationUpdate(t1, t2, A.TrackedApplication_fromJson(json.$index(0, "previous")), A.TrackedUserProfile_fromJson(json.$index(0, "user")));
      }
      return null;
    },
    TrackedApplicationUpdate: function TrackedApplicationUpdate(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.current = t1;
      _.previous = t2;
      _.user = t3;
    },
    TrackedAssetEventCreationMetadata_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.TrackedAssetEventCreationMetadata(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.TrackedAssetEventCreationMetadataClipboard_fromJson(json.$index(0, "clipboard")), A.TrackedAssetEventCreationMetadataFile_fromJson(json.$index(0, "file")));
      }
      return null;
    },
    TrackedAssetEventCreationMetadata: function TrackedAssetEventCreationMetadata(t0, t1, t2) {
      this.schema = t0;
      this.clipboard = t1;
      this.file = t2;
    },
    TrackedAssetEventCreationMetadataClipboard_fromJson(value) {
      var json, t1;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = type$.bool;
        return new A.TrackedAssetEventCreationMetadataClipboard(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.mapValueOfType(json, "keyboard", t1), A.mapValueOfType(json, "interaction", t1));
      }
      return null;
    },
    TrackedAssetEventCreationMetadataClipboard: function TrackedAssetEventCreationMetadataClipboard(t0, t1, t2) {
      this.schema = t0;
      this.keyboard = t1;
      this.interaction = t2;
    },
    TrackedAssetEventCreationMetadataFile_fromJson(value) {
      var json, t1;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = type$.bool;
        return new A.TrackedAssetEventCreationMetadataFile(A.mapValueOfType(json, "keyboard", t1), A.mapValueOfType(json, "drag_and_drop", t1), A.mapValueOfType(json, "interaction", t1));
      }
      return null;
    },
    TrackedAssetEventCreationMetadataFile: function TrackedAssetEventCreationMetadataFile(t0, t1, t2) {
      this.keyboard = t0;
      this.dragAndDrop = t1;
      this.interaction = t2;
    },
    TrackedAssetEventFormatReclassificationMetadata_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.TrackedAssetEventFormatReclassificationMetadata(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Classification_fromJson(json.$index(0, "previous")), A.Classification_fromJson(json.$index(0, "current")));
      }
      return null;
    },
    TrackedAssetEventFormatReclassificationMetadata: function TrackedAssetEventFormatReclassificationMetadata(t0, t1, t2) {
      this.schema = t0;
      this.previous = t1;
      this.current = t2;
    },
    TrackedAssetEventIdentifierDescriptionPairs$(activityAssetReferenced, assetCreated, assetCreationFailed, assetDeleted, assetDescriptionUpdated, assetFormatCopied, assetFormatDownloaded, assetFormatGenericClassificationUpdated, assetFormatSpecificClassificationUpdated, assetFormatUpdated, assetFormatValueEdited, assetLinkAdded, assetLinkDeleted, assetLinkGenerated, assetLinkRevoked, assetNameUpdated, assetPersonAdded, assetPersonDeleted, assetReferenced, assetSensitiveAdded, assetSensitiveDeleted, assetTagAdded, assetTagDeleted, assetUpdated, assetViewed, schema, searchedAssetReferenced, suggestedAssetReferenced) {
      return new A.TrackedAssetEventIdentifierDescriptionPairs(schema, assetCreated, assetViewed, assetFormatCopied, assetFormatDownloaded, assetDeleted, assetDescriptionUpdated, assetNameUpdated, assetFormatGenericClassificationUpdated, assetFormatSpecificClassificationUpdated, assetCreationFailed, assetTagAdded, assetLinkAdded, assetLinkGenerated, assetLinkDeleted, assetTagDeleted, assetUpdated, assetFormatValueEdited, assetFormatUpdated, assetLinkRevoked, assetPersonAdded, assetPersonDeleted, assetSensitiveAdded, assetSensitiveDeleted, suggestedAssetReferenced, searchedAssetReferenced, assetReferenced, activityAssetReferenced);
    },
    TrackedAssetEventIdentifierDescriptionPairs_fromJson(value) {
      var json, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "asset_created");
        t3 = $.TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnumTypeTransformer__instance;
        t2 = (t3 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnumTypeTransformer : t3).decode$1(0, t2);
        t3 = json.$index(0, "asset_viewed");
        t4 = $.TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnumTypeTransformer : t4).decode$1(0, t3);
        t4 = json.$index(0, "asset_format_copied");
        t5 = $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnumTypeTransformer : t5).decode$1(0, t4);
        t5 = json.$index(0, "asset_format_downloaded");
        t6 = $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnumTypeTransformer : t6).decode$1(0, t5);
        t6 = json.$index(0, "asset_deleted");
        t7 = $.TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnumTypeTransformer__instance;
        t6 = (t7 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnumTypeTransformer : t7).decode$1(0, t6);
        t7 = json.$index(0, "asset_description_updated");
        t8 = $.TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnumTypeTransformer__instance;
        t7 = (t8 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnumTypeTransformer : t8).decode$1(0, t7);
        t8 = json.$index(0, "asset_name_updated");
        t9 = $.TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnumTypeTransformer__instance;
        t8 = (t9 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnumTypeTransformer : t9).decode$1(0, t8);
        t9 = json.$index(0, string$.asset_g);
        t10 = $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnumTypeTransformer__instance;
        t9 = (t10 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnumTypeTransformer : t10).decode$1(0, t9);
        t10 = json.$index(0, string$.asset_s);
        t11 = $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnumTypeTransformer__instance;
        t10 = (t11 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnumTypeTransformer : t11).decode$1(0, t10);
        t11 = json.$index(0, "asset_creation_failed");
        t12 = $.TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnumTypeTransformer__instance;
        t11 = (t12 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnumTypeTransformer : t12).decode$1(0, t11);
        t12 = json.$index(0, "asset_tag_added");
        t13 = $.TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnumTypeTransformer__instance;
        t12 = (t13 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnumTypeTransformer : t13).decode$1(0, t12);
        t13 = json.$index(0, "asset_link_added");
        t14 = $.TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnumTypeTransformer__instance;
        t13 = (t14 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnumTypeTransformer : t14).decode$1(0, t13);
        t14 = json.$index(0, "asset_link_generated");
        t15 = $.TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnumTypeTransformer__instance;
        t14 = (t15 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnumTypeTransformer : t15).decode$1(0, t14);
        t15 = json.$index(0, "asset_link_deleted");
        t16 = $.TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnumTypeTransformer__instance;
        t15 = (t16 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnumTypeTransformer : t16).decode$1(0, t15);
        t16 = json.$index(0, "asset_tag_deleted");
        t17 = $.TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnumTypeTransformer__instance;
        t16 = (t17 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnumTypeTransformer : t17).decode$1(0, t16);
        t17 = json.$index(0, "asset_updated");
        t18 = $.TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnumTypeTransformer__instance;
        t17 = (t18 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnumTypeTransformer : t18).decode$1(0, t17);
        t18 = json.$index(0, "asset_format_value_edited");
        t19 = $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnumTypeTransformer__instance;
        t18 = (t19 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnumTypeTransformer : t19).decode$1(0, t18);
        t19 = json.$index(0, "asset_format_updated");
        t20 = $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnumTypeTransformer__instance;
        t19 = (t20 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnumTypeTransformer : t20).decode$1(0, t19);
        t20 = json.$index(0, "asset_link_revoked");
        t21 = $.TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnumTypeTransformer__instance;
        t20 = (t21 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnumTypeTransformer : t21).decode$1(0, t20);
        t21 = json.$index(0, "asset_person_added");
        t22 = $.TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnumTypeTransformer__instance;
        t21 = (t22 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnumTypeTransformer : t22).decode$1(0, t21);
        t22 = json.$index(0, "asset_person_deleted");
        t23 = $.TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnumTypeTransformer__instance;
        t22 = (t23 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnumTypeTransformer : t23).decode$1(0, t22);
        t23 = json.$index(0, "asset_sensitive_added");
        t24 = $.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnumTypeTransformer__instance;
        t23 = (t24 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnumTypeTransformer : t24).decode$1(0, t23);
        t24 = json.$index(0, "asset_sensitive_deleted");
        t25 = $.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnumTypeTransformer__instance;
        t24 = (t25 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnumTypeTransformer : t25).decode$1(0, t24);
        t25 = json.$index(0, "suggested_asset_referenced");
        t26 = $.TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnumTypeTransformer__instance;
        t25 = (t26 == null ? $.TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnumTypeTransformer : t26).decode$1(0, t25);
        t26 = json.$index(0, "searched_asset_referenced");
        t27 = $.TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnumTypeTransformer__instance;
        t26 = (t27 == null ? $.TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnumTypeTransformer : t27).decode$1(0, t26);
        t27 = json.$index(0, "asset_referenced");
        t28 = $.TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnumTypeTransformer__instance;
        t27 = (t28 == null ? $.TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnumTypeTransformer : t28).decode$1(0, t27);
        t28 = json.$index(0, "activity_asset_referenced");
        t29 = $.TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnumTypeTransformer__instance;
        return A.TrackedAssetEventIdentifierDescriptionPairs$((t29 == null ? $.TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnumTypeTransformer__instance = B.C_TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnumTypeTransformer : t29).decode$1(0, t28), t2, t11, t6, t7, t4, t5, t9, t10, t19, t18, t13, t15, t14, t20, t8, t21, t22, t27, t23, t24, t12, t16, t17, t3, t1, t26, t25);
      }
      return null;
    },
    TrackedAssetEventIdentifierDescriptionPairs: function TrackedAssetEventIdentifierDescriptionPairs(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27) {
      var _ = this;
      _.schema = t0;
      _.assetCreated = t1;
      _.assetViewed = t2;
      _.assetFormatCopied = t3;
      _.assetFormatDownloaded = t4;
      _.assetDeleted = t5;
      _.assetDescriptionUpdated = t6;
      _.assetNameUpdated = t7;
      _.assetFormatGenericClassificationUpdated = t8;
      _.assetFormatSpecificClassificationUpdated = t9;
      _.assetCreationFailed = t10;
      _.assetTagAdded = t11;
      _.assetLinkAdded = t12;
      _.assetLinkGenerated = t13;
      _.assetLinkDeleted = t14;
      _.assetTagDeleted = t15;
      _.assetUpdated = t16;
      _.assetFormatValueEdited = t17;
      _.assetFormatUpdated = t18;
      _.assetLinkRevoked = t19;
      _.assetPersonAdded = t20;
      _.assetPersonDeleted = t21;
      _.assetSensitiveAdded = t22;
      _.assetSensitiveDeleted = t23;
      _.suggestedAssetReferenced = t24;
      _.searchedAssetReferenced = t25;
      _.assetReferenced = t26;
      _.activityAssetReferenced = t27;
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnum: function TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnum: function TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnum: function TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnumTypeTransformer() {
    },
    TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnum: function TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnum() {
    },
    TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnumTypeTransformer: function TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnumTypeTransformer() {
    },
    TrackedAssetEventMetadata_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.TrackedAssetEventMetadata(A.TrackedAssetEventFormatReclassificationMetadata_fromJson(json.$index(0, "reclassification")), A.TrackedAssetEventCreationMetadata_fromJson(json.$index(0, "creation")), A.TrackedAssetEventRenameMetadata_fromJson(json.$index(0, "rename")), A.ReferencedTag_fromJson(json.$index(0, "tag")), A.ReferencedWebsite_fromJson(json.$index(0, "website")), A.ReferencedPerson_fromJson(json.$index(0, "person")), A.ReferencedSensitive_fromJson(json.$index(0, "sensitive")), A.ReferencedShare_fromJson(json.$index(0, "share")), A.TrackedAssetsEventSearchMetadata_fromJson(json.$index(0, "search")));
      }
      return null;
    },
    TrackedAssetEventMetadata: function TrackedAssetEventMetadata(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.reclassification = t0;
      _.creation = t1;
      _.rename = t2;
      _.tag = t3;
      _.website = t4;
      _.person = t5;
      _.sensitive = t6;
      _.share = t7;
      _.search = t8;
    },
    TrackedAssetEventRenameMetadata_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "previous", t1);
        t3.toString;
        t1 = A.mapValueOfType(json, "current", t1);
        t1.toString;
        return new A.TrackedAssetEventRenameMetadata(t2, t3, t1);
      }
      return null;
    },
    TrackedAssetEventRenameMetadata: function TrackedAssetEventRenameMetadata(t0, t1, t2) {
      this.schema = t0;
      this.previous = t1;
      this.current = t2;
    },
    TrackedAssetsEventIdentifierDescriptionPairs_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "assets_searched");
        t3 = $.TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnumTypeTransformer__instance;
        return new A.TrackedAssetsEventIdentifierDescriptionPairs(t1, (t3 == null ? $.TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnumTypeTransformer__instance = B.C_TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnumTypeTransformer : t3).decode$1(0, t2));
      }
      return null;
    },
    TrackedAssetsEventIdentifierDescriptionPairs: function TrackedAssetsEventIdentifierDescriptionPairs(t0, t1) {
      this.schema = t0;
      this.assetsSearched = t1;
    },
    TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnum: function TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnum() {
    },
    TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnumTypeTransformer: function TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnumTypeTransformer() {
    },
    TrackedAssetsEventSearchMetadata_fromJson(value) {
      var t1, json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        return new A.TrackedAssetsEventSearchMetadata(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.mapValueOfType(json, "query", t1), A.TrackedAssetsEventSearchMetadataResults_fromJson(json.$index(0, "results")));
      }
      return null;
    },
    TrackedAssetsEventSearchMetadata: function TrackedAssetsEventSearchMetadata(t0, t1, t2) {
      this.schema = t0;
      this.query = t1;
      this.results = t2;
    },
    TrackedAssetsEventSearchMetadataResults_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.TrackedAssetsEventSearchMetadataResults(A.num_parse(J.toString$0$(json.$index(0, "fuzzy"))), A.num_parse(J.toString$0$(json.$index(0, "exact"))), A.FlattenedAssets_fromJson(json.$index(0, "assets")), A.Space_fromJson(json.$index(0, "space")));
      }
      return null;
    },
    TrackedAssetsEventSearchMetadataResults: function TrackedAssetsEventSearchMetadataResults(t0, t1, t2, t3) {
      var _ = this;
      _.fuzzy = t0;
      _.exact = t1;
      _.assets = t2;
      _.space = t3;
    },
    TrackedFormat_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.Classification_fromJson(json.$index(0, "classification"));
        t4.toString;
        t5 = json.$index(0, "role");
        t6 = $.RoleTypeTransformer__instance;
        t5 = (t6 == null ? $.RoleTypeTransformer__instance = B.C_RoleTypeTransformer : t6).decode$1(0, t5);
        t5.toString;
        t1 = A.mapValueOfType(json, "asset", t1);
        t1.toString;
        t6 = type$.bool;
        t7 = A.mapValueOfType(json, "fragment", t6);
        t7.toString;
        t6 = A.mapValueOfType(json, "file", t6);
        t6.toString;
        return new A.TrackedFormat(t2, t3, t4, t5, t1, t7, t6);
      }
      return null;
    },
    TrackedFormat: function TrackedFormat(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.classification = t2;
      _.role = t3;
      _.asset = t4;
      _.fragment = t5;
      _.file = t6;
    },
    TrackedFormatEvent_fromJson(value) {
      var json, t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.TrackedFormat_fromJson(json.$index(0, " format"));
        t2.toString;
        t3 = A.TrackedFormatEventIdentifierDescriptionPairs_fromJson(json.$index(0, "identifier_description_pair"));
        t3.toString;
        return new A.TrackedFormatEvent(t1, t2, t3, A.TrackedFormatEventMetadata_fromJson(json.$index(0, "metadata")));
      }
      return null;
    },
    TrackedFormatEvent: function TrackedFormatEvent(t0, t1, t2, t3) {
      var _ = this;
      _.schema = t0;
      _.format = t1;
      _.identifierDescriptionPair = t2;
      _.metadata = t3;
    },
    TrackedFormatEventIdentifierDescriptionPairs_fromJson(value) {
      var json, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "format_created");
        t3 = $.TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnumTypeTransformer__instance;
        t2 = (t3 == null ? $.TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnumTypeTransformer__instance = B.C_TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnumTypeTransformer : t3).decode$1(0, t2);
        t3 = json.$index(0, "format_copied");
        t4 = $.TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnumTypeTransformer__instance = B.C_TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnumTypeTransformer : t4).decode$1(0, t3);
        t4 = json.$index(0, "format_partially_copied");
        t5 = $.TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnumTypeTransformer__instance = B.C_TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnumTypeTransformer : t5).decode$1(0, t4);
        t5 = json.$index(0, "format_downloaded");
        t6 = $.TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnumTypeTransformer__instance = B.C_TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnumTypeTransformer : t6).decode$1(0, t5);
        t6 = json.$index(0, "format_deleted");
        t7 = $.TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnumTypeTransformer__instance;
        t6 = (t7 == null ? $.TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnumTypeTransformer__instance = B.C_TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnumTypeTransformer : t7).decode$1(0, t6);
        t7 = json.$index(0, "format_generic_classification_updated");
        t8 = $.TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnumTypeTransformer__instance;
        t7 = (t8 == null ? $.TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnumTypeTransformer__instance = B.C_TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnumTypeTransformer : t8).decode$1(0, t7);
        t8 = json.$index(0, "format_specific_classification_updated");
        t9 = $.TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnumTypeTransformer__instance;
        t8 = (t9 == null ? $.TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnumTypeTransformer__instance = B.C_TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnumTypeTransformer : t9).decode$1(0, t8);
        t9 = json.$index(0, "format_updated");
        t10 = $.TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnumTypeTransformer__instance;
        t9 = (t10 == null ? $.TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnumTypeTransformer__instance = B.C_TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnumTypeTransformer : t10).decode$1(0, t9);
        t10 = json.$index(0, "format_inserted");
        t11 = $.TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnumTypeTransformer__instance;
        t10 = (t11 == null ? $.TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnumTypeTransformer__instance = B.C_TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnumTypeTransformer : t11).decode$1(0, t10);
        t11 = json.$index(0, "format_value_edited");
        t12 = $.TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnumTypeTransformer__instance;
        return new A.TrackedFormatEventIdentifierDescriptionPairs(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, (t12 == null ? $.TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnumTypeTransformer__instance = B.C_TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnumTypeTransformer : t12).decode$1(0, t11));
      }
      return null;
    },
    TrackedFormatEventIdentifierDescriptionPairs: function TrackedFormatEventIdentifierDescriptionPairs(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.schema = t0;
      _.formatCreated = t1;
      _.formatCopied = t2;
      _.formatPartiallyCopied = t3;
      _.formatDownloaded = t4;
      _.formatDeleted = t5;
      _.formatGenericClassificationUpdated = t6;
      _.formatSpecificClassificationUpdated = t7;
      _.formatUpdated = t8;
      _.formatInserted = t9;
      _.formatValueEdited = t10;
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnum: function TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnum() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnumTypeTransformer: function TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnumTypeTransformer() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnum: function TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnum() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnumTypeTransformer: function TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnumTypeTransformer() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnum: function TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnum() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnumTypeTransformer: function TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnumTypeTransformer() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnum: function TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnum() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnumTypeTransformer: function TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnumTypeTransformer() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnum: function TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnum() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnumTypeTransformer: function TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnumTypeTransformer() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnum: function TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnum() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnumTypeTransformer: function TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnumTypeTransformer() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnum: function TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnum() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnumTypeTransformer: function TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnumTypeTransformer() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnum: function TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnum() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnumTypeTransformer: function TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnumTypeTransformer() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnum: function TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnum() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnumTypeTransformer: function TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnumTypeTransformer() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnum: function TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnum() {
    },
    TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnumTypeTransformer: function TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnumTypeTransformer() {
    },
    TrackedFormatEventMetadata_fromJson(value) {
      if (type$.Map_dynamic_dynamic._is(value))
        return new A.TrackedFormatEventMetadata(A.TrackedAssetEventFormatReclassificationMetadata_fromJson(value.cast$2$0(0, type$.String, type$.dynamic).$index(0, "reclassification")));
      return null;
    },
    TrackedFormatEventMetadata: function TrackedFormatEventMetadata(t0) {
      this.reclassification = t0;
    },
    TrackedInteractionEvent_fromJson(value) {
      var t1, json, t2, t3;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "description", t1);
        t3.toString;
        return new A.TrackedInteractionEvent(t2, t3, A.mapValueOfType(json, "element", t1));
      }
      return null;
    },
    TrackedInteractionEvent: function TrackedInteractionEvent(t0, t1, t2) {
      this.schema = t0;
      this.description = t1;
      this.element = t2;
    },
    TrackedKeyboardEvent_fromJson(value) {
      var t1, json, t2, t3,
        _s8_ = "shortcut";
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t1 = A.mapValueOfType(json, "description", t1);
        t1.toString;
        t3 = type$.List_dynamic;
        return new A.TrackedKeyboardEvent(t2, t1, t3._is(json.$index(0, _s8_)) ? J.cast$1$0$ax(t3._as(json.$index(0, _s8_)), type$.int) : B.List_empty0);
      }
      return null;
    },
    TrackedKeyboardEvent: function TrackedKeyboardEvent(t0, t1, t2) {
      this.schema = t0;
      this.description = t1;
      this.shortcut = t2;
    },
    TrackedSessionEventIdentifierDescriptionPairs_fromJson(value) {
      var json, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = json.$index(0, "session_initialized");
        t3 = $.TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnumTypeTransformer__instance;
        t2 = (t3 == null ? $.TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnumTypeTransformer__instance = B.C_TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnumTypeTransformer : t3).decode$1(0, t2);
        t3 = json.$index(0, "session_local_connection_succeeded");
        t4 = $.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnumTypeTransformer__instance;
        t3 = (t4 == null ? $.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnumTypeTransformer__instance = B.C_TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnumTypeTransformer : t4).decode$1(0, t3);
        t4 = json.$index(0, "session_local_connection_failed");
        t5 = $.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnumTypeTransformer__instance;
        t4 = (t5 == null ? $.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnumTypeTransformer__instance = B.C_TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnumTypeTransformer : t5).decode$1(0, t4);
        t5 = json.$index(0, "session_inactive");
        t6 = $.TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnumTypeTransformer__instance = B.C_TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnumTypeTransformer : t6).decode$1(0, t5);
        t6 = json.$index(0, "session_active");
        t7 = $.TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnumTypeTransformer__instance;
        t6 = (t7 == null ? $.TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnumTypeTransformer__instance = B.C_TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnumTypeTransformer : t7).decode$1(0, t6);
        t7 = json.$index(0, "session_terminated");
        t8 = $.TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnumTypeTransformer__instance;
        t7 = (t8 == null ? $.TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnumTypeTransformer__instance = B.C_TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnumTypeTransformer : t8).decode$1(0, t7);
        t8 = json.$index(0, "session_authenticated_with_sign_in");
        t9 = $.TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnumTypeTransformer__instance;
        t8 = (t9 == null ? $.TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnumTypeTransformer__instance = B.C_TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnumTypeTransformer : t9).decode$1(0, t8);
        t9 = json.$index(0, "session_unauthenticated_with_sign_out");
        t10 = $.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnumTypeTransformer__instance;
        t9 = (t10 == null ? $.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnumTypeTransformer__instance = B.C_TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnumTypeTransformer : t10).decode$1(0, t9);
        t10 = json.$index(0, "session_unauthenticated_with_dismiss");
        t11 = $.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnumTypeTransformer__instance;
        t10 = (t11 == null ? $.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnumTypeTransformer__instance = B.C_TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnumTypeTransformer : t11).decode$1(0, t10);
        t11 = json.$index(0, "session_unauthenticated_with_remind");
        t12 = $.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnumTypeTransformer__instance;
        t11 = (t12 == null ? $.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnumTypeTransformer__instance = B.C_TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnumTypeTransformer : t12).decode$1(0, t11);
        t12 = json.$index(0, "session_onboarding_initialized");
        t13 = $.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnumTypeTransformer__instance;
        t12 = (t13 == null ? $.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnumTypeTransformer__instance = B.C_TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnumTypeTransformer : t13).decode$1(0, t12);
        t13 = json.$index(0, "session_onboarding_completed");
        t14 = $.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnumTypeTransformer__instance;
        return new A.TrackedSessionEventIdentifierDescriptionPairs(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, (t14 == null ? $.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnumTypeTransformer__instance = B.C_TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnumTypeTransformer : t14).decode$1(0, t13));
      }
      return null;
    },
    TrackedSessionEventIdentifierDescriptionPairs: function TrackedSessionEventIdentifierDescriptionPairs(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.schema = t0;
      _.sessionInitialized = t1;
      _.sessionLocalConnectionSucceeded = t2;
      _.sessionLocalConnectionFailed = t3;
      _.sessionInactive = t4;
      _.sessionActive = t5;
      _.sessionTerminated = t6;
      _.sessionAuthenticatedWithSignIn = t7;
      _.sessionUnauthenticatedWithSignOut = t8;
      _.sessionUnauthenticatedWithDismiss = t9;
      _.sessionUnauthenticatedWithRemind = t10;
      _.sessionOnboardingInitialized = t11;
      _.sessionOnboardingCompleted = t12;
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnum: function TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnum() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnumTypeTransformer: function TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnumTypeTransformer() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnum: function TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnum() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnumTypeTransformer: function TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnumTypeTransformer() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnum: function TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnum() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnumTypeTransformer: function TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnumTypeTransformer() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnum: function TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnum() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnumTypeTransformer: function TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnumTypeTransformer() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnum: function TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnum() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnumTypeTransformer: function TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnumTypeTransformer() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnum: function TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnum() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnumTypeTransformer: function TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnumTypeTransformer() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnum: function TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnum() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnumTypeTransformer: function TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnumTypeTransformer() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnum: function TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnum() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnumTypeTransformer: function TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnumTypeTransformer() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnum: function TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnum() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnumTypeTransformer: function TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnumTypeTransformer() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnum: function TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnum() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnumTypeTransformer: function TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnumTypeTransformer() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnum: function TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnum() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnumTypeTransformer: function TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnumTypeTransformer() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnum: function TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnum() {
    },
    TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnumTypeTransformer: function TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnumTypeTransformer() {
    },
    TrackedUserProfile_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.mapValueOfType(json, "username", t1);
        t4.toString;
        t1 = A.mapValueOfType(json, "email", t1);
        t5 = json.$index(0, "granularity");
        t6 = $.TrackedUserProfileGranularityEnumTypeTransformer__instance;
        t5 = (t6 == null ? $.TrackedUserProfileGranularityEnumTypeTransformer__instance = B.C_TrackedUserProfileGranularityEnumTypeTransformer : t6).decode$1(0, t5);
        t5.toString;
        return new A.TrackedUserProfile(t2, t3, t4, t1, t5);
      }
      return null;
    },
    TrackedUserProfile: function TrackedUserProfile(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.username = t2;
      _.email = t3;
      _.granularity = t4;
    },
    TrackedUserProfileGranularityEnum: function TrackedUserProfileGranularityEnum(t0) {
      this.value = t0;
    },
    TrackedUserProfileGranularityEnumTypeTransformer: function TrackedUserProfileGranularityEnumTypeTransformer() {
    },
    TransferableBytes_fromJson(value) {
      var json, t1, t2, t3, t4, t5,
        _s10_ = "base64_url",
        _s8_ = "data_url";
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = type$.List_dynamic;
        t3 = t2._is(json.$index(0, "raw")) ? J.cast$1$0$ax(t2._as(json.$index(0, "raw")), type$.int) : B.List_empty0;
        t4 = t2._is(json.$index(0, "base64")) ? J.cast$1$0$ax(t2._as(json.$index(0, "base64")), type$.int) : B.List_empty0;
        t5 = t2._is(json.$index(0, _s10_)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s10_)), type$.int) : B.List_empty0;
        return new A.TransferableBytes(t1, t3, t4, t5, t2._is(json.$index(0, _s8_)) ? J.cast$1$0$ax(t2._as(json.$index(0, _s8_)), type$.int) : B.List_empty0);
      }
      return null;
    },
    TransferableBytes: function TransferableBytes(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.raw = t1;
      _.base64 = t2;
      _.base64Url = t3;
      _.dataUrl = t4;
    },
    TransferableString_fromJson(value) {
      var t1, json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        return new A.TransferableString(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.mapValueOfType(json, "raw", t1), A.mapValueOfType(json, "base64", t1), A.mapValueOfType(json, "base64_url", t1), A.mapValueOfType(json, "data_url", t1));
      }
      return null;
    },
    TransferableString: function TransferableString(t0, t1, t2, t3, t4) {
      var _ = this;
      _.schema = t0;
      _.raw = t1;
      _.base64 = t2;
      _.base64Url = t3;
      _.dataUrl = t4;
    },
    UserProfile_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "picture", t1);
        if (t3 == null)
          t3 = "https://picsum.photos/200";
        t4 = A.mapValueOfType(json, "email", t1);
        if (t4 == null)
          t4 = "user@pieces.app";
        t5 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t6 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t7 = A.mapValueOfType(json, "username", t1);
        t8 = A.mapValueOfType(json, "id", t1);
        t8.toString;
        t9 = A.mapValueOfType(json, "name", t1);
        t10 = A.Aesthetics_fromJson(json.$index(0, "aesthetics"));
        t10.toString;
        return new A.UserProfile(t2, t3, t4, t5, t6, t7, t8, t9, t10, A.mapValueOfType(json, "vanityname", t1), A.AllocationCloud_fromJson(json.$index(0, "allocation")), A.ExternalProviders_fromJson(json.$index(0, "providers")));
      }
      return null;
    },
    UserProfile_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_UserProfile);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.UserProfile_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.UserProfile);
      return t1;
    },
    UserProfile: function UserProfile(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.schema = t0;
      _.picture = t1;
      _.email = t2;
      _.created = t3;
      _.updated = t4;
      _.username = t5;
      _.id = t6;
      _.name = t7;
      _.aesthetics = t8;
      _.vanityname = t9;
      _.allocation = t10;
      _.providers = t11;
    },
    Users_fromJson(value) {
      var json, t1, t2;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        t1 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t2 = A.UserProfile_listFromJson(json.$index(0, "iterable"));
        return new A.Users(t1, t2);
      }
      return null;
    },
    Users: function Users(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Users_toJson_closure: function Users_toJson_closure() {
    },
    Website_fromJson(value) {
      var t1, json, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
      if (type$.Map_dynamic_dynamic._is(value)) {
        t1 = type$.String;
        json = value.cast$2$0(0, t1, type$.dynamic);
        t2 = A.EmbeddedModelSchema_fromJson(json.$index(0, "schema"));
        t3 = A.mapValueOfType(json, "id", t1);
        t3.toString;
        t4 = A.FlattenedAsset_fromJson(json.$index(0, "asset"));
        t4.toString;
        t5 = A.mapValueOfType(json, "url", t1);
        t5.toString;
        t1 = A.mapValueOfType(json, "name", t1);
        t1.toString;
        t6 = A.FlattenedFormat_fromJson(json.$index(0, "format"));
        t7 = A.GroupedTimestamp_fromJson(json.$index(0, "created"));
        t7.toString;
        t8 = A.GroupedTimestamp_fromJson(json.$index(0, "updated"));
        t8.toString;
        t9 = A.GroupedTimestamp_fromJson(json.$index(0, "deleted"));
        t10 = json.$index(0, "mechanism");
        t11 = $.MechanismEnumTypeTransformer__instance;
        t10 = (t11 == null ? $.MechanismEnumTypeTransformer__instance = B.C_MechanismEnumTypeTransformer : t11).decode$1(0, t10);
        t10.toString;
        return new A.Website(t2, t3, t4, t5, t1, t6, t7, t8, t9, t10, A.mapValueOfType(json, "interactions", type$.int));
      }
      return null;
    },
    Website_listFromJson(json) {
      var t1, value,
        result = A._setArrayType([], type$.JSArray_Website);
      if (type$.List_dynamic._is(json) && J.get$isNotEmpty$asx(json))
        for (t1 = J.get$iterator$ax(json); t1.moveNext$0();) {
          value = A.Website_fromJson(t1.get$current());
          if (value != null)
            B.JSArray_methods.add$1(result, value);
        }
      t1 = J.JSArray_JSArray$markFixed(result.slice(0), type$.Website);
      return t1;
    },
    Website: function Website(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.schema = t0;
      _.id = t1;
      _.asset = t2;
      _.url = t3;
      _.name = t4;
      _.format = t5;
      _.created = t6;
      _.updated = t7;
      _.deleted = t8;
      _.mechanism = t9;
      _.interactions = t10;
    },
    Websites_fromJson(value) {
      var json;
      if (type$.Map_dynamic_dynamic._is(value)) {
        json = value.cast$2$0(0, type$.String, type$.dynamic);
        return new A.Websites(A.EmbeddedModelSchema_fromJson(json.$index(0, "schema")), A.Website_listFromJson(json.$index(0, "iterable")));
      }
      return null;
    },
    Websites: function Websites(t0, t1) {
      this.schema = t0;
      this.iterable = t1;
    },
    Websites_toJson_closure: function Websites_toJson_closure() {
    },
    ClientReport: function ClientReport(t0, t1) {
      this.timestamp = t0;
      this.discardedEvents = t1;
    },
    ClientReport_toJson_closure: function ClientReport_toJson_closure() {
    },
    ClientReport_toJson_closure0: function ClientReport_toJson_closure0() {
    },
    ClientReportRecorder: function ClientReportRecorder(t0, t1) {
      this._client_report_recorder$_clock = t0;
      this._quantities = t1;
    },
    ClientReportRecorder_flush_closure: function ClientReportRecorder_flush_closure(t0) {
      this.$this = t0;
    },
    _QuantityKey: function _QuantityKey(t0, t1) {
      this.reason = t0;
      this.category = t1;
    },
    OutcomeExtension_toStringValue(_this) {
      switch (_this) {
        case B.DiscardReason_0:
          return "before_send";
        case B.DiscardReason_1:
          return "event_processor";
        case B.DiscardReason_2:
          return "sample_rate";
        case B.DiscardReason_3:
          return "network_error";
        case B.DiscardReason_4:
          return "queue_overflow";
        case B.DiscardReason_5:
          return "cache_overflow";
        case B.DiscardReason_6:
          return "ratelimit_backoff";
      }
    },
    DiscardReason: function DiscardReason(t0) {
      this._name = t0;
    },
    DiscardedEvent: function DiscardedEvent(t0, t1, t2) {
      this.reason = t0;
      this.category = t1;
      this.quantity = t2;
    },
    NoOpClientReportRecorder: function NoOpClientReportRecorder() {
    },
    WebEnvironmentVariables: function WebEnvironmentVariables() {
    },
    EnvironmentVariables: function EnvironmentVariables() {
    },
    EventProcessor: function EventProcessor() {
    },
    DeduplicationEventProcessor: function DeduplicationEventProcessor(t0, t1) {
      this._exceptionToDeduplicate = t0;
      this._deduplication_event_processor$_options = t1;
    },
    WebEnricherEventProcessor: function WebEnricherEventProcessor(t0, t1) {
      this._window = t0;
      this._web_enricher_event_processor$_options = t1;
    },
    WebEnricherEventProcessor__getRequest_closure: function WebEnricherEventProcessor__getRequest_closure(t0) {
      this.$this = t0;
    },
    WebExcptionEventProcessor: function WebExcptionEventProcessor() {
    },
    Hub: function Hub(t0, t1, t2) {
      var _ = this;
      _._stack = t0;
      _._hub$_options = t1;
      _.__Hub__throwableToSpan_F = $;
      _._isEnabled = false;
      _._lastEventId = t2;
    },
    _StackItem: function _StackItem(t0, t1) {
      this.client = t0;
      this.scope = t1;
    },
    _WeakMap: function _WeakMap(t0, t1) {
      this._expando = t0;
      this._hub$_options = t1;
    },
    HubAdapter: function HubAdapter() {
    },
    NoOpClient: function NoOpClient() {
    },
    NoOpHub_NoOpHub() {
      return $.$get$NoOpHub__instance();
    },
    NoOpHub: function NoOpHub(t0) {
      this._options = t0;
    },
    WebPlatform: function WebPlatform() {
    },
    Platform: function Platform() {
    },
    PlatformChecker: function PlatformChecker() {
    },
    Contexts: function Contexts(t0) {
      this._collection$_map = t0;
    },
    Contexts_toJson_closure: function Contexts_toJson_closure(t0, t1) {
      this.$this = t0;
      this.json = t1;
    },
    Contexts_clone_closure: function Contexts_clone_closure() {
    },
    Contexts_clone_closure0: function Contexts_clone_closure0() {
    },
    Contexts_copyWith_closure: function Contexts_copyWith_closure() {
    },
    Dsn_Dsn$parse(dsn) {
      var t1, t2,
        uri = A.Uri_parse(dsn),
        userInfo = uri.get$userInfo().split(":");
      if (uri.get$pathSegments().length === 0)
        throw A.wrapException(A.ArgumentError$("Project ID not found in the URI path of the DSN URI: " + dsn, null));
      t1 = userInfo.length;
      if (0 >= t1)
        return A.ioore(userInfo, 0);
      t2 = userInfo[0];
      t1 = t1 >= 2 ? userInfo[1] : null;
      return new A.Dsn(t2, t1, B.JSArray_methods.get$last(uri.get$pathSegments()), uri);
    },
    Dsn: function Dsn(t0, t1, t2, t3) {
      var _ = this;
      _.publicKey = t0;
      _.secretKey = t1;
      _.projectId = t2;
      _.uri = t3;
    },
    SdkVersion$($name, version) {
      var t1 = A.List_List$from([], true, type$.String);
      return new A.SdkVersion($name, version, t1, A.List_List$from([], true, type$.SentryPackage));
    },
    SdkVersion: function SdkVersion(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.version = t1;
      _._integrations = t2;
      _._packages = t3;
    },
    SdkVersion_toJson_closure: function SdkVersion_toJson_closure() {
    },
    SentryCulture: function SentryCulture(t0, t1, t2, t3, t4) {
      var _ = this;
      _.calendar = t0;
      _.displayName = t1;
      _.locale = t2;
      _.is24HourFormat = t3;
      _.timezone = t4;
    },
    SentryDevice$(arch, batteryLevel, batteryStatus, bootTime, brand, charging, cpuDescription, deviceType, deviceUniqueIdentifier, externalFreeStorage, externalStorageSize, family, freeMemory, freeStorage, language, lowMemory, manufacturer, memorySize, model, modelId, $name, online, orientation, processorCount, processorFrequency, screenDensity, screenDpi, screenHeightPixels, screenResolution, screenWidthPixels, simulator, storageSize, supportsAccelerometer, supportsAudio, supportsGyroscope, supportsLocationService, supportsVibration, theme, timezone, usableMemory) {
      return new A.SentryDevice($name, family, model, modelId, arch, batteryLevel, orientation, manufacturer, brand, screenResolution, screenHeightPixels, screenWidthPixels, screenDensity, screenDpi, online, charging, lowMemory, simulator, memorySize, freeMemory, usableMemory, storageSize, freeStorage, externalStorageSize, externalFreeStorage, bootTime, timezone, language, theme, processorCount, cpuDescription, processorFrequency, deviceType, batteryStatus, deviceUniqueIdentifier, supportsVibration, supportsAccelerometer, supportsGyroscope, supportsAudio, supportsLocationService);
    },
    SentryOrientation: function SentryOrientation(t0) {
      this._name = t0;
    },
    SentryDevice: function SentryDevice(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39) {
      var _ = this;
      _.name = t0;
      _.family = t1;
      _.model = t2;
      _.modelId = t3;
      _.arch = t4;
      _.batteryLevel = t5;
      _.orientation = t6;
      _.manufacturer = t7;
      _.brand = t8;
      _.screenResolution = t9;
      _.screenHeightPixels = t10;
      _.screenWidthPixels = t11;
      _.screenDensity = t12;
      _.screenDpi = t13;
      _.online = t14;
      _.charging = t15;
      _.lowMemory = t16;
      _.simulator = t17;
      _.memorySize = t18;
      _.freeMemory = t19;
      _.usableMemory = t20;
      _.storageSize = t21;
      _.freeStorage = t22;
      _.externalStorageSize = t23;
      _.externalFreeStorage = t24;
      _.bootTime = t25;
      _.timezone = t26;
      _.language = t27;
      _.theme = t28;
      _.processorCount = t29;
      _.cpuDescription = t30;
      _.processorFrequency = t31;
      _.deviceType = t32;
      _.batteryStatus = t33;
      _.deviceUniqueIdentifier = t34;
      _.supportsVibration = t35;
      _.supportsAccelerometer = t36;
      _.supportsGyroscope = t37;
      _.supportsAudio = t38;
      _.supportsLocationService = t39;
    },
    SentryEvent$(breadcrumbs, contexts, culprit, debugMeta, dist, environment, eventId, exceptions, extra, fingerprint, level, logger, message, modules, platform, release, request, sdk, serverName, tags, threads, throwable, timestamp, transaction, type, user) {
      var t1, options, rng, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, _null = null;
      if (eventId == null) {
        t1 = $.$get$SentryId__uuidGenerator();
        type$.nullable_Map_String_dynamic._as(null);
        options = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
        t1._initV4$0();
        options.$index(0, "positionalArgs");
        options.$index(0, "namedArgs");
        options.$index(0, "rng");
        t1 = t1.get$_uuid$_state().$index(0, "globalRNG");
        t1.toString;
        rng = type$.List_int._as(type$.dynamic_Function._as(t1).call$0());
        options.$index(0, "random");
        t1 = J.getInterceptor$asx(rng);
        t2 = t1.$index(rng, 6);
        if (typeof t2 !== "number")
          return t2.$and();
        t1.$indexSet(rng, 6, t2 & 15 | 64);
        t2 = t1.$index(rng, 8);
        if (typeof t2 !== "number")
          return t2.$and();
        t1.$indexSet(rng, 8, t2 & 63 | 128);
        if (t1.get$length(rng) !== 16)
          A.throwExpression(A.Exception_Exception(string$.The_pr));
        t2 = $.$get$Uuid__byteToHex();
        t3 = B.JSArray_methods.$index(t2, t1.$index(rng, 0));
        t4 = B.JSArray_methods.$index(t2, t1.$index(rng, 1));
        t5 = B.JSArray_methods.$index(t2, t1.$index(rng, 2));
        t6 = B.JSArray_methods.$index(t2, t1.$index(rng, 3));
        t7 = B.JSArray_methods.$index(t2, t1.$index(rng, 4));
        t8 = B.JSArray_methods.$index(t2, t1.$index(rng, 5));
        t9 = B.JSArray_methods.$index(t2, t1.$index(rng, 6));
        t10 = B.JSArray_methods.$index(t2, t1.$index(rng, 7));
        t11 = B.JSArray_methods.$index(t2, t1.$index(rng, 8));
        t12 = B.JSArray_methods.$index(t2, t1.$index(rng, 9));
        t13 = B.JSArray_methods.$index(t2, t1.$index(rng, 10));
        t14 = B.JSArray_methods.$index(t2, t1.$index(rng, 11));
        t15 = B.JSArray_methods.$index(t2, t1.$index(rng, 12));
        t16 = B.JSArray_methods.$index(t2, t1.$index(rng, 13));
        t17 = B.JSArray_methods.$index(t2, t1.$index(rng, 14));
        t1 = B.JSArray_methods.$index(t2, t1.$index(rng, 15));
        t1 = A.stringReplaceAllUnchecked(t3 + t4 + t5 + t6 + "-" + t7 + t8 + "-" + t9 + t10 + "-" + t11 + t12 + "-" + t13 + t14 + t15 + t16 + t17 + t1, "-", "");
        t1 = new A.SentryId(t1);
      } else
        t1 = eventId;
      if (contexts == null)
        t2 = new A.Contexts(A.LinkedHashMap_LinkedHashMap$_literal(["device", null, "os", null, "runtimes", [], "app", null, "browser", null, "gpu", null, "culture", null, "trace", null, "response", null], type$.String, type$.dynamic));
      else
        t2 = contexts;
      if (modules != null) {
        t3 = type$.String;
        t3 = A.LinkedHashMap_LinkedHashMap$from(modules, t3, t3);
      } else
        t3 = _null;
      if (tags != null) {
        t4 = type$.String;
        t4 = A.LinkedHashMap_LinkedHashMap$from(tags, t4, t4);
      } else
        t4 = _null;
      t5 = extra != null ? A.LinkedHashMap_LinkedHashMap$from(extra, type$.String, type$.dynamic) : _null;
      t6 = fingerprint != null ? A.List_List$from(fingerprint, true, type$.String) : _null;
      t7 = breadcrumbs != null ? A.List_List$from(breadcrumbs, true, type$.Breadcrumb) : _null;
      t8 = exceptions != null ? A.List_List$from(exceptions, true, type$.SentryException) : _null;
      return new A.SentryEvent(t1, timestamp, platform, logger, serverName, release, dist, environment, t3, message, throwable, t8, threads != null ? A.List_List$from(threads, true, type$.SentryThread) : _null, transaction, level, culprit, t4, t5, t7, user, t2, t6, sdk, request, debugMeta, type);
    },
    SentryEvent: function SentryEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.eventId = t0;
      _.timestamp = t1;
      _.platform = t2;
      _.logger = t3;
      _.serverName = t4;
      _.release = t5;
      _.dist = t6;
      _.environment = t7;
      _.modules = t8;
      _.message = t9;
      _._throwable = t10;
      _.exceptions = t11;
      _.threads = t12;
      _.transaction = t13;
      _.level = t14;
      _.culprit = t15;
      _.tags = t16;
      _.extra = t17;
      _.breadcrumbs = t18;
      _.user = t19;
      _.contexts = t20;
      _.fingerprint = t21;
      _.sdk = t22;
      _.request = t23;
      _.debugMeta = t24;
      _.type = t25;
    },
    SentryEvent_toJson_closure: function SentryEvent_toJson_closure() {
    },
    SentryEvent_toJson_closure0: function SentryEvent_toJson_closure0() {
    },
    SentryEvent_toJson_closure1: function SentryEvent_toJson_closure1() {
    },
    SentryEvent_toJson_closure2: function SentryEvent_toJson_closure2() {
    },
    SentryEvent_toJson_closure3: function SentryEvent_toJson_closure3(t0) {
      this.threadIds = t0;
    },
    SentryEvent_toJson_closure4: function SentryEvent_toJson_closure4() {
    },
    SentryEvent_toJson_closure5: function SentryEvent_toJson_closure5() {
    },
    _SentryEvent_Object_SentryEventLike: function _SentryEvent_Object_SentryEventLike() {
    },
    SentryException: function SentryException(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.type = t0;
      _.value = t1;
      _.module = t2;
      _.stackTrace = t3;
      _.mechanism = t4;
      _.threadId = t5;
    },
    SentryId$empty() {
      return new A.SentryId("00000000000000000000000000000000");
    },
    SentryId: function SentryId(t0) {
      this._id = t0;
    },
    SentryLevel: function SentryLevel(t0) {
      this.name = t0;
    },
    SentryPackage: function SentryPackage(t0, t1) {
      this.name = t0;
      this.version = t1;
    },
    SentryRequest$(cookies, data, env, fragment, headers, method, other, queryString, url) {
      var t2, t3, t4, _null = null,
        t1 = headers == null;
      if (!t1) {
        t2 = type$.String;
        t2 = A.LinkedHashMap_LinkedHashMap$from(headers, t2, t2);
      } else
        t2 = _null;
      if (cookies == null)
        if (t1)
          t1 = _null;
        else {
          t1 = A.IterableExtension_firstWhereOrNull(headers.get$entries(headers), new A.SentryRequest_closure(), type$.MapEntry_String_String);
          t1 = t1 == null ? _null : t1.value;
        }
      else
        t1 = cookies;
      if (env != null) {
        t3 = type$.String;
        t3 = A.LinkedHashMap_LinkedHashMap$from(env, t3, t3);
      } else
        t3 = _null;
      if (other != null) {
        t4 = type$.String;
        t4 = A.LinkedHashMap_LinkedHashMap$from(other, t4, t4);
      } else
        t4 = _null;
      return new A.SentryRequest(url, method, queryString, t1, data, t2, t3, t4, fragment);
    },
    SentryRequest: function SentryRequest(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.url = t0;
      _.method = t1;
      _.queryString = t2;
      _.cookies = t3;
      _._sentry_request$_data = t4;
      _._sentry_request$_headers = t5;
      _._env = t6;
      _._other = t7;
      _.fragment = t8;
    },
    SentryRequest_closure: function SentryRequest_closure() {
    },
    SentryStackFrame$(absPath, colNo, contextLine, fileName, framesOmitted, $function, imageAddr, inApp, instructionAddr, lineNo, module, native, $package, platform, postContext, preContext, rawFunction, stackStart, symbol, symbolAddr, vars) {
      var _null = null,
        t1 = framesOmitted != null ? A.List_List$from(framesOmitted, true, type$.int) : _null,
        t2 = preContext != null ? A.List_List$from(preContext, true, type$.String) : _null,
        t3 = postContext != null ? A.List_List$from(postContext, true, type$.String) : _null;
      return new A.SentryStackFrame(absPath, t2, t3, vars != null ? A.LinkedHashMap_LinkedHashMap$from(vars, type$.String, type$.dynamic) : _null, t1, fileName, $function, module, lineNo, colNo, contextLine, inApp, $package, native, platform, imageAddr, symbolAddr, instructionAddr, rawFunction, stackStart, symbol);
    },
    SentryStackFrame: function SentryStackFrame(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20) {
      var _ = this;
      _.absPath = t0;
      _._preContext = t1;
      _._postContext = t2;
      _._vars = t3;
      _._framesOmitted = t4;
      _.fileName = t5;
      _.$function = t6;
      _.module = t7;
      _.lineNo = t8;
      _.colNo = t9;
      _.contextLine = t10;
      _.inApp = t11;
      _.$package = t12;
      _.native = t13;
      _.platform = t14;
      _.imageAddr = t15;
      _.symbolAddr = t16;
      _.instructionAddr = t17;
      _.rawFunction = t18;
      _.stackStart = t19;
      _.symbol = t20;
    },
    SentryStackTrace$($frames, snapshot) {
      var t1 = type$.dynamic,
        t2 = type$.String;
      return new A.SentryStackTrace($frames, A.LinkedHashMap_LinkedHashMap$from(A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t2, t2), snapshot);
    },
    SentryStackTrace: function SentryStackTrace(t0, t1, t2) {
      this._frames = t0;
      this._registers = t1;
      this.snapshot = t2;
    },
    SentryStackTrace_toJson_closure: function SentryStackTrace_toJson_closure() {
    },
    Scope$(_options) {
      var t1 = A._setArrayType([], type$.JSArray_String),
        t2 = A.ListQueue$(type$.Breadcrumb),
        t3 = type$.String,
        t4 = type$.dynamic;
      return new A.Scope(t1, t2, A.LinkedHashMap_LinkedHashMap$_empty(t3, t3), A.LinkedHashMap_LinkedHashMap$_empty(t3, t4), new A.Contexts(A.LinkedHashMap_LinkedHashMap$_literal(["device", null, "os", null, "runtimes", [], "app", null, "browser", null, "gpu", null, "culture", null, "trace", null, "response", null], t3, t4)), A._setArrayType([], type$.JSArray_EventProcessor), _options, A._setArrayType([], type$.JSArray_SentryAttachment));
    },
    Scope: function Scope(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._user = _.span = _._transaction = _.level = null;
      _._fingerprint = t0;
      _._breadcrumbs = t1;
      _._tags = t2;
      _._extra = t3;
      _._contexts = t4;
      _._scope$_eventProcessors = t5;
      _._scope$_options = t6;
      _._attachments = t7;
    },
    Scope_applyToEvent_closure: function Scope_applyToEvent_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Scope__mergeEventTags_closure: function Scope__mergeEventTags_closure() {
    },
    Scope__mergeEventExtra_closure: function Scope__mergeEventExtra_closure() {
    },
    SentryClient: function SentryClient(t0, t1) {
      this._sentry_client$_options = t0;
      this._random = t1;
    },
    SentryClient__eventWithRemovedBreadcrumbsIfHandled_closure: function SentryClient__eventWithRemovedBreadcrumbsIfHandled_closure() {
    },
    SentryClient__eventWithRemovedBreadcrumbsIfHandled_closure0: function SentryClient__eventWithRemovedBreadcrumbsIfHandled_closure0() {
    },
    SentryClientAttachmentProcessor: function SentryClientAttachmentProcessor() {
    },
    SentryEnvelope_SentryEnvelope$fromEvent($event, sdkVersion, attachments, dsn, traceContext) {
      var t1 = A._setArrayType([A.SentryEnvelopeItem_SentryEnvelopeItem$fromEvent($event)], type$.JSArray_SentryEnvelopeItem);
      if (attachments != null)
        B.JSArray_methods.addAll$1(t1, J.map$1$1$ax(attachments, new A.SentryEnvelope_SentryEnvelope$fromEvent_closure(), type$.SentryEnvelopeItem));
      return new A.SentryEnvelope(new A.SentryEnvelopeHeader($event.eventId, sdkVersion, traceContext, dsn), t1);
    },
    SentryEnvelope: function SentryEnvelope(t0, t1) {
      this.header = t0;
      this.items = t1;
    },
    SentryEnvelope_SentryEnvelope$fromEvent_closure: function SentryEnvelope_SentryEnvelope$fromEvent_closure() {
    },
    SentryEnvelopeHeader: function SentryEnvelopeHeader(t0, t1, t2, t3) {
      var _ = this;
      _.eventId = t0;
      _.sdkVersion = t1;
      _.traceContext = t2;
      _.dsn = t3;
    },
    SentryEnvelopeItem_SentryEnvelopeItem$fromAttachment(attachment) {
      var cachedItem = new A._CachedItem(new A.SentryEnvelopeItem_SentryEnvelopeItem$fromAttachment_closure(attachment));
      return new A.SentryEnvelopeItem(new A.SentryEnvelopeItemHeader("attachment", cachedItem.get$getDataLength(), attachment.get$contentType(attachment), attachment.get$filename(attachment), attachment.get$attachmentType()), cachedItem.get$getData());
    },
    SentryEnvelopeItem_SentryEnvelopeItem$fromEvent($event) {
      var cachedItem = new A._CachedItem(new A.SentryEnvelopeItem_SentryEnvelopeItem$fromEvent_closure($event));
      return new A.SentryEnvelopeItem(new A.SentryEnvelopeItemHeader("event", cachedItem.get$getDataLength(), "application/json", null, null), cachedItem.get$getData());
    },
    SentryEnvelopeItem_SentryEnvelopeItem$fromClientReport(clientReport) {
      var cachedItem = new A._CachedItem(new A.SentryEnvelopeItem_SentryEnvelopeItem$fromClientReport_closure(clientReport));
      return new A.SentryEnvelopeItem(new A.SentryEnvelopeItemHeader("client_report", cachedItem.get$getDataLength(), "application/json", null, null), cachedItem.get$getData());
    },
    SentryEnvelopeItem: function SentryEnvelopeItem(t0, t1) {
      this.header = t0;
      this.dataFactory = t1;
    },
    SentryEnvelopeItem_SentryEnvelopeItem$fromAttachment_closure: function SentryEnvelopeItem_SentryEnvelopeItem$fromAttachment_closure(t0) {
      this.attachment = t0;
    },
    SentryEnvelopeItem_SentryEnvelopeItem$fromEvent_closure: function SentryEnvelopeItem_SentryEnvelopeItem$fromEvent_closure(t0) {
      this.event = t0;
    },
    SentryEnvelopeItem_SentryEnvelopeItem$fromClientReport_closure: function SentryEnvelopeItem_SentryEnvelopeItem$fromClientReport_closure(t0) {
      this.clientReport = t0;
    },
    _CachedItem: function _CachedItem(t0) {
      this._dataFactory = t0;
      this._sentry_envelope_item$_data = null;
    },
    SentryEnvelopeItemHeader: function SentryEnvelopeItemHeader(t0, t1, t2, t3, t4) {
      var _ = this;
      _.type = t0;
      _.length = t1;
      _.contentType = t2;
      _.fileName = t3;
      _.attachmentType = t4;
    },
    SentryEventLike: function SentryEventLike() {
    },
    SentryExceptionFactory: function SentryExceptionFactory(t0) {
      this._sentry_exception_factory$_options = t0;
    },
    noOpLogger(level, message, exception, logger, stackTrace) {
      type$.SentryLevel._as(level);
      A._asString(message);
      A._asStringQ(logger);
      type$.nullable_StackTrace._as(stackTrace);
    },
    SentryOptions: function SentryOptions(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.dsn = null;
      _.httpClient = t0;
      _._logger = t1;
      _._eventProcessors = t2;
      _._sentry_options$_integrations = t3;
      _._debug = false;
      _.diagnosticLevel = t4;
      _.environment = _.release = null;
      _._inAppExcludes = t5;
      _._inAppIncludes = t6;
      _.transport = t7;
      _.dist = null;
      _.__SentryOptions_sdk_A = $;
      _.platformChecker = t8;
      _.environmentVariables = t9;
      _._scopeObservers = t10;
      _.__SentryOptions_recorder_AI = $;
      _.tracePropagationTargets = t11;
      _.idleTimeout = t12;
      _.__SentryOptions_clientAttachmentProcessor_AI = _.__SentryOptions_stackTraceFactory_AI = _.__SentryOptions_exceptionFactory_AI = $;
    },
    SentryStackTraceFactory: function SentryStackTraceFactory(t0, t1, t2) {
      this._sentry_stack_trace_factory$_options = t0;
      this._absRegex = t1;
      this._frameRegex = t2;
    },
    SentryTracesSampler: function SentryTracesSampler() {
    },
    ThrowableMechanism: function ThrowableMechanism() {
    },
    DataCategoryExtension_fromStringValue(stringValue) {
      switch (stringValue) {
        case "__all__":
          return B.DataCategory_0;
        case "default":
          return B.DataCategory_1;
        case "error":
          return B.DataCategory_2;
        case "session":
          return B.DataCategory_3;
        case "transaction":
          return B.DataCategory_4;
        case "attachment":
          return B.DataCategory_5;
        case "security":
          return B.DataCategory_6;
      }
      return B.DataCategory_7;
    },
    DataCategoryExtension_toStringValue(_this) {
      switch (_this) {
        case B.DataCategory_0:
          return "__all__";
        case B.DataCategory_1:
          return "default";
        case B.DataCategory_2:
          return "error";
        case B.DataCategory_3:
          return "session";
        case B.DataCategory_4:
          return "transaction";
        case B.DataCategory_5:
          return "attachment";
        case B.DataCategory_6:
          return "security";
        case B.DataCategory_7:
          return "unknown";
      }
    },
    DataCategory: function DataCategory(t0) {
      this._name = t0;
    },
    HttpTransport: function HttpTransport(t0, t1, t2, t3, t4) {
      var _ = this;
      _._http_transport$_options = t0;
      _._dsn = t1;
      _._rateLimiter = t2;
      _._recorder = t3;
      _.__HttpTransport__credentialBuilder_A = $;
      _._headers = t4;
    },
    _CredentialBuilder: function _CredentialBuilder(t0, t1) {
      this._authHeader = t0;
      this._clock = t1;
    },
    NoOpTransport: function NoOpTransport() {
    },
    RateLimit: function RateLimit(t0, t1) {
      this.category = t0;
      this.duration = t1;
    },
    RateLimitParser__parseRetryAfterOrDefault(value) {
      var durationInSeconds = A.Primitives_parseInt(value == null ? "" : value, null);
      if (durationInSeconds != null)
        return A.Duration$(durationInSeconds);
      else
        return B.Duration_60000000;
    },
    RateLimitParser: function RateLimitParser(t0) {
      this._header = t0;
    },
    RateLimiter: function RateLimiter(t0, t1) {
      this._rate_limiter$_options = t0;
      this._rateLimitedUntil = t1;
    },
    FileLocation$_(file, offset) {
      if (offset < 0)
        A.throwExpression(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > file._decodedChars.length)
        A.throwExpression(A.RangeError$("Offset " + offset + string$.x20must_ + file.get$length(file) + "."));
      return new A.FileLocation(file, offset);
    },
    SourceFile: function SourceFile(t0, t1, t2) {
      var _ = this;
      _.url = t0;
      _._lineStarts = t1;
      _._decodedChars = t2;
      _._cachedLine = null;
    },
    FileLocation: function FileLocation(t0, t1) {
      this.file = t0;
      this.offset = t1;
    },
    _FileSpan: function _FileSpan(t0, t1, t2) {
      this.file = t0;
      this._file$_start = t1;
      this._end = t2;
    },
    Highlighter$(span, color) {
      var t1 = A.Highlighter__collateLines(A._setArrayType([A._Highlight$(span, true)], type$.JSArray__Highlight)),
        t2 = new A.Highlighter_closure(color).call$0(),
        t3 = B.JSInt_methods.toString$0(B.JSArray_methods.get$last(t1).number + 1),
        t4 = A.Highlighter__contiguous(t1) ? 0 : 3,
        t5 = A._arrayInstanceType(t1);
      return new A.Highlighter(t1, t2, null, 1 + Math.max(t3.length, t4), new A.MappedListIterable(t1, t5._eval$1("int(1)")._as(new A.Highlighter$__closure()), t5._eval$1("MappedListIterable<1,int>")).reduce$1(0, B.CONSTANT), !A.isAllTheSame(new A.MappedListIterable(t1, t5._eval$1("Object?(1)")._as(new A.Highlighter$__closure0()), t5._eval$1("MappedListIterable<1,Object?>"))), new A.StringBuffer(""));
    },
    Highlighter__contiguous(lines) {
      var i, thisLine, nextLine;
      for (i = 0; i < lines.length - 1;) {
        thisLine = lines[i];
        ++i;
        nextLine = lines[i];
        if (thisLine.number + 1 !== nextLine.number && J.$eq$(thisLine.url, nextLine.url))
          return false;
      }
      return true;
    },
    Highlighter__collateLines(highlights) {
      var t1, t2, t3,
        highlightsByUrl = A.groupBy(highlights, new A.Highlighter__collateLines_closure(), type$._Highlight, type$.Object);
      for (t1 = highlightsByUrl.get$values(highlightsByUrl), t2 = A._instanceType(t1), t2 = t2._eval$1("@<1>")._bind$1(t2._rest[1]), t1 = new A.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1]; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        J.sort$1$ax(t3, new A.Highlighter__collateLines_closure0());
      }
      t1 = highlightsByUrl.get$entries(highlightsByUrl);
      t2 = A._instanceType(t1);
      t3 = t2._eval$1("ExpandIterable<Iterable.E,_Line>");
      return A.List_List$of(new A.ExpandIterable(t1, t2._eval$1("Iterable<_Line>(Iterable.E)")._as(new A.Highlighter__collateLines_closure1()), t3), true, t3._eval$1("Iterable.E"));
    },
    _Highlight$(span, primary) {
      return new A._Highlight(new A._Highlight_closure(span).call$0(), true);
    },
    _Highlight__normalizeNewlines(span) {
      var t1, endOffset, i, t2, t3, t4,
        text = span.get$text(span);
      if (!B.JSString_methods.contains$1(text, "\r\n"))
        return span;
      t1 = span.get$end();
      endOffset = t1.get$offset(t1);
      for (t1 = text.length - 1, i = 0; i < t1; ++i)
        if (B.JSString_methods._codeUnitAt$1(text, i) === 13 && B.JSString_methods._codeUnitAt$1(text, i + 1) === 10)
          --endOffset;
      t1 = span.get$start(span);
      t2 = span.get$sourceUrl();
      t3 = span.get$end().get$line();
      t2 = A.SourceLocation$(endOffset, span.get$end().get$column(), t3, t2);
      t3 = A.stringReplaceAllUnchecked(text, "\r\n", "\n");
      t4 = span.get$context();
      return A.SourceSpanWithContext$(t1, t2, t3, A.stringReplaceAllUnchecked(t4, "\r\n", "\n"));
    },
    _Highlight__normalizeTrailingNewline(span) {
      var context, text, start, end, t1, t2, t3;
      if (!B.JSString_methods.endsWith$1(span.get$context(), "\n"))
        return span;
      if (B.JSString_methods.endsWith$1(span.get$text(span), "\n\n"))
        return span;
      context = B.JSString_methods.substring$2(span.get$context(), 0, span.get$context().length - 1);
      text = span.get$text(span);
      start = span.get$start(span);
      end = span.get$end();
      if (B.JSString_methods.endsWith$1(span.get$text(span), "\n")) {
        t1 = A.findLineStart(span.get$context(), span.get$text(span), span.get$start(span).get$column());
        t1.toString;
        t1 = t1 + span.get$start(span).get$column() + span.get$length(span) === span.get$context().length;
      } else
        t1 = false;
      if (t1) {
        text = B.JSString_methods.substring$2(span.get$text(span), 0, span.get$text(span).length - 1);
        if (text.length === 0)
          end = start;
        else {
          t1 = span.get$end();
          t1 = t1.get$offset(t1);
          t2 = span.get$sourceUrl();
          t3 = span.get$end().get$line();
          end = A.SourceLocation$(t1 - 1, A._Highlight__lastLineLength(context), t3 - 1, t2);
          t1 = span.get$start(span);
          t1 = t1.get$offset(t1);
          t2 = span.get$end();
          start = t1 === t2.get$offset(t2) ? end : span.get$start(span);
        }
      }
      return A.SourceSpanWithContext$(start, end, text, context);
    },
    _Highlight__normalizeEndOfLine(span) {
      var text, t1, t2, t3, t4;
      if (span.get$end().get$column() !== 0)
        return span;
      if (span.get$end().get$line() === span.get$start(span).get$line())
        return span;
      text = B.JSString_methods.substring$2(span.get$text(span), 0, span.get$text(span).length - 1);
      t1 = span.get$start(span);
      t2 = span.get$end();
      t2 = t2.get$offset(t2);
      t3 = span.get$sourceUrl();
      t4 = span.get$end().get$line();
      t3 = A.SourceLocation$(t2 - 1, text.length - B.JSString_methods.lastIndexOf$1(text, "\n") - 1, t4 - 1, t3);
      return A.SourceSpanWithContext$(t1, t3, text, B.JSString_methods.endsWith$1(span.get$context(), "\n") ? B.JSString_methods.substring$2(span.get$context(), 0, span.get$context().length - 1) : span.get$context());
    },
    _Highlight__lastLineLength(text) {
      var t1 = text.length;
      if (t1 === 0)
        return 0;
      else if (B.JSString_methods.codeUnitAt$1(text, t1 - 1) === 10)
        return t1 === 1 ? 0 : t1 - B.JSString_methods.lastIndexOf$2(text, "\n", t1 - 2) - 1;
      else
        return t1 - B.JSString_methods.lastIndexOf$1(text, "\n") - 1;
    },
    Highlighter: function Highlighter(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._lines = t0;
      _._primaryColor = t1;
      _._secondaryColor = t2;
      _._paddingBeforeSidebar = t3;
      _._maxMultilineSpans = t4;
      _._multipleFiles = t5;
      _._buffer = t6;
    },
    Highlighter_closure: function Highlighter_closure(t0) {
      this.color = t0;
    },
    Highlighter$__closure: function Highlighter$__closure() {
    },
    Highlighter$___closure: function Highlighter$___closure() {
    },
    Highlighter$__closure0: function Highlighter$__closure0() {
    },
    Highlighter__collateLines_closure: function Highlighter__collateLines_closure() {
    },
    Highlighter__collateLines_closure0: function Highlighter__collateLines_closure0() {
    },
    Highlighter__collateLines_closure1: function Highlighter__collateLines_closure1() {
    },
    Highlighter__collateLines__closure: function Highlighter__collateLines__closure(t0) {
      this.line = t0;
    },
    Highlighter_highlight_closure: function Highlighter_highlight_closure() {
    },
    Highlighter__writeFileStart_closure: function Highlighter__writeFileStart_closure(t0) {
      this.$this = t0;
    },
    Highlighter__writeMultilineHighlights_closure: function Highlighter__writeMultilineHighlights_closure(t0, t1, t2) {
      this.$this = t0;
      this.startLine = t1;
      this.line = t2;
    },
    Highlighter__writeMultilineHighlights_closure0: function Highlighter__writeMultilineHighlights_closure0(t0, t1) {
      this.$this = t0;
      this.highlight = t1;
    },
    Highlighter__writeMultilineHighlights_closure1: function Highlighter__writeMultilineHighlights_closure1(t0) {
      this.$this = t0;
    },
    Highlighter__writeMultilineHighlights_closure2: function Highlighter__writeMultilineHighlights_closure2(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.current = t2;
      _.startLine = t3;
      _.line = t4;
      _.highlight = t5;
      _.endLine = t6;
    },
    Highlighter__writeMultilineHighlights__closure: function Highlighter__writeMultilineHighlights__closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Highlighter__writeMultilineHighlights__closure0: function Highlighter__writeMultilineHighlights__closure0(t0, t1) {
      this.$this = t0;
      this.vertical = t1;
    },
    Highlighter__writeHighlightedText_closure: function Highlighter__writeHighlightedText_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.text = t1;
      _.startColumn = t2;
      _.endColumn = t3;
    },
    Highlighter__writeIndicator_closure: function Highlighter__writeIndicator_closure(t0, t1, t2) {
      this.$this = t0;
      this.line = t1;
      this.highlight = t2;
    },
    Highlighter__writeIndicator_closure0: function Highlighter__writeIndicator_closure0(t0, t1, t2) {
      this.$this = t0;
      this.line = t1;
      this.highlight = t2;
    },
    Highlighter__writeIndicator_closure1: function Highlighter__writeIndicator_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.coversWholeLine = t1;
      _.line = t2;
      _.highlight = t3;
    },
    Highlighter__writeSidebar_closure: function Highlighter__writeSidebar_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.end = t2;
    },
    _Highlight: function _Highlight(t0, t1) {
      this.span = t0;
      this.isPrimary = t1;
    },
    _Highlight_closure: function _Highlight_closure(t0) {
      this.span = t0;
    },
    _Line: function _Line(t0, t1, t2, t3) {
      var _ = this;
      _.text = t0;
      _.number = t1;
      _.url = t2;
      _.highlights = t3;
    },
    SourceLocation$(offset, column, line, sourceUrl) {
      if (offset < 0)
        A.throwExpression(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (line < 0)
        A.throwExpression(A.RangeError$("Line may not be negative, was " + line + "."));
      else if (column < 0)
        A.throwExpression(A.RangeError$("Column may not be negative, was " + column + "."));
      return new A.SourceLocation(sourceUrl, offset, line, column);
    },
    SourceLocation: function SourceLocation(t0, t1, t2, t3) {
      var _ = this;
      _.sourceUrl = t0;
      _.offset = t1;
      _.line = t2;
      _.column = t3;
    },
    SourceLocationMixin: function SourceLocationMixin() {
    },
    SourceSpanBase: function SourceSpanBase() {
    },
    SourceSpanFormatException$(message, span, source) {
      return new A.SourceSpanFormatException(source, message, span);
    },
    SourceSpanException: function SourceSpanException() {
    },
    SourceSpanFormatException: function SourceSpanFormatException(t0, t1, t2) {
      this.source = t0;
      this._span_exception$_message = t1;
      this._span = t2;
    },
    SourceSpanMixin: function SourceSpanMixin() {
    },
    SourceSpanWithContext$(start, end, text, _context) {
      var t1 = new A.SourceSpanWithContext(_context, start, end, text);
      t1.SourceSpanBase$3(start, end, text);
      if (!B.JSString_methods.contains$1(_context, text))
        A.throwExpression(A.ArgumentError$('The context line "' + _context + '" must contain "' + text + '".', null));
      if (A.findLineStart(_context, text, start.get$column()) == null)
        A.throwExpression(A.ArgumentError$('The span text "' + text + '" must start at column ' + (start.get$column() + 1) + ' in a line within "' + _context + '".', null));
      return t1;
    },
    SourceSpanWithContext: function SourceSpanWithContext(t0, t1, t2, t3) {
      var _ = this;
      _._context = t0;
      _.start = t1;
      _.end = t2;
      _.text = t3;
    },
    Chain_Chain$forTrace(trace) {
      var t1;
      if (type$.Chain._is(trace))
        return trace;
      type$.nullable_StackZoneSpecification._as($.Zone__current.$index(0, $.$get$_specKey()));
      t1 = type$.Trace;
      if (t1._is(trace))
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([trace], type$.JSArray_Trace), t1));
      return new A.LazyChain(new A.Chain_Chain$forTrace_closure(trace));
    },
    Chain_Chain$parse(chain) {
      var t1, t2,
        _s51_ = string$.x3d_____;
      if (chain.length === 0)
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([], type$.JSArray_Trace), type$.Trace));
      t1 = $.$get$vmChainGap();
      if (B.JSString_methods.contains$1(chain, t1)) {
        t1 = B.JSString_methods.split$1(chain, t1);
        t2 = A._arrayInstanceType(t1);
        return new A.Chain(A.List_List$unmodifiable(new A.MappedIterable(new A.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Chain_Chain$parse_closure()), t2._eval$1("WhereIterable<1>")), t2._eval$1("Trace(1)")._as(new A.Chain_Chain$parse_closure0()), t2._eval$1("MappedIterable<1,Trace>")), type$.Trace));
      }
      if (!B.JSString_methods.contains$1(chain, _s51_))
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([A.Trace_Trace$parse(chain)], type$.JSArray_Trace), type$.Trace));
      return new A.Chain(A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(chain.split(_s51_), type$.JSArray_String), type$.Trace_Function_String._as(new A.Chain_Chain$parse_closure1()), type$.MappedListIterable_String_Trace), type$.Trace));
    },
    Chain: function Chain(t0) {
      this.traces = t0;
    },
    Chain_Chain$forTrace_closure: function Chain_Chain$forTrace_closure(t0) {
      this.trace = t0;
    },
    Chain_Chain$parse_closure: function Chain_Chain$parse_closure() {
    },
    Chain_Chain$parse_closure0: function Chain_Chain$parse_closure0() {
    },
    Chain_Chain$parse_closure1: function Chain_Chain$parse_closure1() {
    },
    Chain_toTrace_closure: function Chain_toTrace_closure() {
    },
    Chain_toString_closure0: function Chain_toString_closure0() {
    },
    Chain_toString__closure0: function Chain_toString__closure0() {
    },
    Chain_toString_closure: function Chain_toString_closure(t0) {
      this.longest = t0;
    },
    Chain_toString__closure: function Chain_toString__closure(t0) {
      this.longest = t0;
    },
    Frame_Frame$parseVM(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseVM_closure(frame));
    },
    Frame_Frame$parseV8(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseV8_closure(frame));
    },
    Frame_Frame$_parseFirefoxEval(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$_parseFirefoxEval_closure(frame));
    },
    Frame_Frame$parseFirefox(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseFirefox_closure(frame));
    },
    Frame_Frame$parseFriendly(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseFriendly_closure(frame));
    },
    Frame__uriOrPathToUri(uriOrPath) {
      if (B.JSString_methods.contains$1(uriOrPath, $.$get$Frame__uriRegExp()))
        return A.Uri_parse(uriOrPath);
      else if (B.JSString_methods.contains$1(uriOrPath, $.$get$Frame__windowsRegExp()))
        return A._Uri__Uri$file(uriOrPath, true);
      else if (B.JSString_methods.startsWith$1(uriOrPath, "/"))
        return A._Uri__Uri$file(uriOrPath, false);
      if (B.JSString_methods.contains$1(uriOrPath, "\\"))
        return $.$get$windows().toUri$1(uriOrPath);
      return A.Uri_parse(uriOrPath);
    },
    Frame__catchFormatException(text, body) {
      var t1, exception;
      try {
        t1 = body.call$0();
        return t1;
      } catch (exception) {
        if (type$.FormatException._is(A.unwrapException(exception)))
          return new A.UnparsedFrame(A._Uri__Uri(null, "unparsed", null, null), text);
        else
          throw exception;
      }
    },
    Frame: function Frame(t0, t1, t2, t3) {
      var _ = this;
      _.uri = t0;
      _.line = t1;
      _.column = t2;
      _.member = t3;
    },
    Frame_Frame$parseVM_closure: function Frame_Frame$parseVM_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseV8_closure: function Frame_Frame$parseV8_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseV8_closure_parseLocation: function Frame_Frame$parseV8_closure_parseLocation(t0) {
      this.frame = t0;
    },
    Frame_Frame$_parseFirefoxEval_closure: function Frame_Frame$_parseFirefoxEval_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseFirefox_closure: function Frame_Frame$parseFirefox_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseFriendly_closure: function Frame_Frame$parseFriendly_closure(t0) {
      this.frame = t0;
    },
    LazyChain: function LazyChain(t0) {
      this._thunk = t0;
      this.__LazyChain__chain_FI = $;
    },
    Trace_Trace$parse(trace) {
      var error, t1, exception;
      try {
        if (trace.length === 0) {
          t1 = A.Trace$(A._setArrayType([], type$.JSArray_Frame), null);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, $.$get$_v8Trace())) {
          t1 = A.Trace$parseV8(trace);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, "\tat ")) {
          t1 = A.Trace$parseJSCore(trace);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, $.$get$_firefoxSafariTrace()) || B.JSString_methods.contains$1(trace, $.$get$_firefoxEvalTrace())) {
          t1 = A.Trace$parseFirefox(trace);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, string$.x3d_____)) {
          t1 = A.Chain_Chain$parse(trace).toTrace$0();
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, $.$get$_friendlyTrace())) {
          t1 = A.Trace$parseFriendly(trace);
          return t1;
        }
        t1 = A.Trace$parseVM(trace);
        return t1;
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (type$.FormatException._is(t1)) {
          error = t1;
          throw A.wrapException(A.FormatException$(J.get$message$z(error) + "\nStack trace:\n" + trace, null, null));
        } else
          throw exception;
      }
    },
    Trace$parseVM(trace) {
      var t1 = A.List_List$unmodifiable(A.Trace__parseVM(trace), type$.Frame);
      return new A.Trace(t1);
    },
    Trace__parseVM(trace) {
      var $frames,
        t1 = B.JSString_methods.trim$0(trace),
        t2 = type$.Pattern._as($.$get$vmChainGap()),
        t3 = type$.WhereIterable_String,
        lines = new A.WhereIterable(A._setArrayType(A.stringReplaceAllUnchecked(t1, t2, "").split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace__parseVM_closure()), t3);
      if (!lines.get$iterator(lines).moveNext$0())
        return A._setArrayType([], type$.JSArray_Frame);
      t1 = A.TakeIterable_TakeIterable(lines, lines.get$length(lines) - 1, t3._eval$1("Iterable.E"));
      t2 = A._instanceType(t1);
      t2 = A.MappedIterable_MappedIterable(t1, t2._eval$1("Frame(Iterable.E)")._as(new A.Trace__parseVM_closure0()), t2._eval$1("Iterable.E"), type$.Frame);
      $frames = A.List_List$of(t2, true, A._instanceType(t2)._eval$1("Iterable.E"));
      if (!J.endsWith$1$s(lines.get$last(lines), ".da"))
        B.JSArray_methods.add$1($frames, A.Frame_Frame$parseVM(lines.get$last(lines)));
      return $frames;
    },
    Trace$parseV8(trace) {
      var t2, t3,
        t1 = A.SubListIterable$(A._setArrayType(trace.split("\n"), type$.JSArray_String), 1, null, type$.String);
      t1 = t1.super$Iterable$skipWhile(0, t1.$ti._eval$1("bool(ListIterable.E)")._as(new A.Trace$parseV8_closure()));
      t2 = type$.Frame;
      t3 = t1.$ti;
      t2 = A.List_List$unmodifiable(A.MappedIterable_MappedIterable(t1, t3._eval$1("Frame(Iterable.E)")._as(new A.Trace$parseV8_closure0()), t3._eval$1("Iterable.E"), t2), t2);
      return new A.Trace(t2);
    },
    Trace$parseJSCore(trace) {
      var t1 = A.List_List$unmodifiable(new A.MappedIterable(new A.WhereIterable(A._setArrayType(trace.split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace$parseJSCore_closure()), type$.WhereIterable_String), type$.Frame_Function_String._as(new A.Trace$parseJSCore_closure0()), type$.MappedIterable_String_Frame), type$.Frame);
      return new A.Trace(t1);
    },
    Trace$parseFirefox(trace) {
      var t1 = A.List_List$unmodifiable(new A.MappedIterable(new A.WhereIterable(A._setArrayType(B.JSString_methods.trim$0(trace).split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace$parseFirefox_closure()), type$.WhereIterable_String), type$.Frame_Function_String._as(new A.Trace$parseFirefox_closure0()), type$.MappedIterable_String_Frame), type$.Frame);
      return new A.Trace(t1);
    },
    Trace$parseFriendly(trace) {
      var t1 = trace.length === 0 ? A._setArrayType([], type$.JSArray_Frame) : new A.MappedIterable(new A.WhereIterable(A._setArrayType(B.JSString_methods.trim$0(trace).split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace$parseFriendly_closure()), type$.WhereIterable_String), type$.Frame_Function_String._as(new A.Trace$parseFriendly_closure0()), type$.MappedIterable_String_Frame);
      t1 = A.List_List$unmodifiable(t1, type$.Frame);
      return new A.Trace(t1);
    },
    Trace$($frames, original) {
      var t1 = A.List_List$unmodifiable($frames, type$.Frame);
      return new A.Trace(t1);
    },
    Trace: function Trace(t0) {
      this.frames = t0;
    },
    Trace__parseVM_closure: function Trace__parseVM_closure() {
    },
    Trace__parseVM_closure0: function Trace__parseVM_closure0() {
    },
    Trace$parseV8_closure: function Trace$parseV8_closure() {
    },
    Trace$parseV8_closure0: function Trace$parseV8_closure0() {
    },
    Trace$parseJSCore_closure: function Trace$parseJSCore_closure() {
    },
    Trace$parseJSCore_closure0: function Trace$parseJSCore_closure0() {
    },
    Trace$parseFirefox_closure: function Trace$parseFirefox_closure() {
    },
    Trace$parseFirefox_closure0: function Trace$parseFirefox_closure0() {
    },
    Trace$parseFriendly_closure: function Trace$parseFriendly_closure() {
    },
    Trace$parseFriendly_closure0: function Trace$parseFriendly_closure0() {
    },
    Trace_toString_closure0: function Trace_toString_closure0() {
    },
    Trace_toString_closure: function Trace_toString_closure(t0) {
      this.longest = t0;
    },
    UnparsedFrame: function UnparsedFrame(t0, t1) {
      this.uri = t0;
      this.member = t1;
    },
    StringScannerException: function StringScannerException(t0, t1, t2) {
      this.source = t0;
      this._span_exception$_message = t1;
      this._span = t2;
    },
    StringScanner: function StringScanner(t0, t1) {
      var _ = this;
      _.sourceUrl = t0;
      _.string = t1;
      _._string_scanner$_position = 0;
      _._lastMatchPosition = _._lastMatch = null;
    },
    Uuid: function Uuid() {
    },
    Actions_save(metadata, snippet) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Asset),
        $async$returnValue, asset, created;
      var $async$Actions_save = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              asset = A.Actions_package(metadata, snippet);
              $async$goto = 3;
              return A._asyncAwait($.$get$PiecesApi_assetsApi().assetsCreateNewAsset$1$seed(new A.Seed(null, asset, B.SeedTypeEnum_SEEDED_ASSET)), $async$Actions_save);
            case 3:
              // returning from await.
              created = $async$result;
              A.Analytics_trackAssetCreated(created.id);
              $async$returnValue = created;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Actions_save, $async$completer);
    },
    Actions_package(metadata, snippet) {
      var t2, t3, t4, _null = null,
        t1 = $.$get$LocalState__singleton();
      if (t1.context == null)
        throw A.wrapException(A.Exception_Exception("Context is null when constructing seed asset. Something is wrong."));
      t2 = metadata.tags;
      t3 = A._arrayInstanceType(t2);
      t4 = t3._eval$1("MappedListIterable<1,SeededAssetTag>");
      return new A.SeededAsset(_null, new A.SeededAssetMetadata(_null, metadata.description, metadata.name + " Snippet", B.MechanismEnum_MANUAL, A.List_List$of(new A.MappedListIterable(t2, t3._eval$1("SeededAssetTag(1)")._as(new A.Actions_package_closure()), t4), true, t4._eval$1("ListIterable.E")), A._setArrayType([new A.SeededAssetWebsite(_null, metadata.url, "Origin Website", _null)], type$.JSArray_SeededAssetWebsite), B.List_empty3, B.List_empty4), t1.context.application, new A.SeededFormat(_null, _null, new A.SeededFragment(_null, new A.TransferableString(_null, B.JSString_methods.trim$0(snippet), _null, _null, _null), _null, _null), B.List_empty5, _null, B.List_empty6), _null, _null);
    },
    Actions_linkify(asset) {
      return A.Actions_linkify$body(asset);
    },
    Actions_linkify$body(asset) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Share),
        $async$returnValue, $async$handler = 2, $async$currentError, shares, t1, exception, share, $async$exception;
      var $async$Actions_linkify = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              share = null;
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait($.$get$PiecesApi_linkifyApi().linkify$1$linkify(new A.Linkify(null, null, asset, B.List_empty, B.AccessEnum_PUBLIC, null)), $async$Actions_linkify);
            case 7:
              // returning from await.
              shares = $async$result;
              share = B.JSArray_methods.firstWhere$1(shares.iterable, new A.Actions_linkify_closure());
              $async$goto = window.navigator.clipboard != null ? 8 : 9;
              break;
            case 8:
              // then
              t1 = window.navigator.clipboard;
              $async$goto = 10;
              return A._asyncAwait(t1 == null ? null : A.promiseToFuture(t1.writeText(share.link), type$.dynamic), $async$Actions_linkify);
            case 10:
              // returning from await.
            case 9:
              // join
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $async$returnValue = share;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$Actions_linkify, $async$completer);
    },
    Actions_package_closure: function Actions_package_closure() {
    },
    Actions_linkify_closure: function Actions_linkify_closure() {
    },
    Blocks_save(blocks) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        t1, t2, snippet, classification, description, t3, current, unique;
      var $async$Blocks_save = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              current = A._setArrayType([], type$.JSArray_ClientBlock);
              unique = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.bool);
              for (t1 = J.get$iterator$ax(blocks); t1.moveNext$0();) {
                t2 = t1.get$current();
                snippet = A.Scraper_getContent(t2, false);
                classification = A.Scraper_getLanguage(t2, false);
                description = A.Scraper_getDescription();
                if (snippet != null && unique.$index(0, snippet) == null && snippet.length < 50000) {
                  t2 = $.$get$LocalState__singleton();
                  t3 = t2.settings;
                  B.JSArray_methods.add$1(current, new A.ClientBlock(classification, description, snippet, t3.url, t3.host, new A.DateTime(Date.now(), false)));
                  unique.$indexSet(0, snippet, true);
                  t2 = t2.history._blocks;
                  t3 = A._arrayInstanceType(t2)._eval$1("bool(1)")._as(new A.Blocks_save_closure(snippet));
                  if (!!t2.fixed$length)
                    A.throwExpression(A.UnsupportedError$("removeWhere"));
                  B.JSArray_methods._removeWhere$2(t2, t3, true);
                }
              }
              t1 = $.$get$LocalState__singleton();
              t1.current.set$blocks(current);
              t1 = t1.history;
              t2 = A.List_List$of(current, true, type$.ClientBlock);
              B.JSArray_methods.addAll$1(t2, t1._blocks);
              t1.set$blocks(t2);
              A.Future_wait(A._setArrayType([A.Blocks_update(B.BlocksFeatureEnum_0), A.Blocks_update(B.BlocksFeatureEnum_1)], type$.JSArray_Future_void), type$.void);
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$Blocks_save, $async$completer);
    },
    Blocks_clear() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic);
      var $async$Blocks_clear = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $.$get$LocalState__singleton().current.set$blocks(A._setArrayType([], type$.JSArray_ClientBlock));
              A.Blocks_update(B.BlocksFeatureEnum_0);
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$Blocks_clear, $async$completer);
    },
    Blocks_update(feature) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        map, method;
      var $async$Blocks_update = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              switch (feature) {
                case B.BlocksFeatureEnum_0:
                  map = $.$get$LocalState__singleton().current.toJson$0();
                  method = "setCurrentBlocks";
                  break;
                case B.BlocksFeatureEnum_1:
                  map = $.$get$LocalState__singleton().history.toJson$0();
                  method = "setHistoryBlocks";
                  break;
                default:
                  throw A.wrapException(A.Exception_Exception("Unsupported feature " + feature.toString$0(0) + " in Blocks.update()"));
              }
              $async$goto = 2;
              return A._asyncAwait($.$get$_context().callMethod$2(method, [B.C_JsonCodec.encode$2$toEncodable(map, null)]), $async$Blocks_update);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$Blocks_update, $async$completer);
    },
    Blocks_save_closure: function Blocks_save_closure(t0) {
      this.snippet = t0;
    },
    Events_copy(element) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, t1, textSpan, snippet, $async$temp1;
      var $async$Events_copy = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = A;
              $async$goto = 3;
              return A._asyncAwait(A.OS_connected(), $async$Events_copy);
            case 3:
              // returning from await.
              if (!$async$temp1.boolConversionCheck($async$result)) {
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = J.get$children$x(element);
              textSpan = t1.firstWhere$1(t1, new A.Events_copy_closure());
              textSpan.innerText = "Copying...";
              snippet = A.Scraper_getContent(element, true);
              if (snippet == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = window.navigator.clipboard;
              if (t1 != null)
                A.promiseToFuture(t1.writeText(snippet), type$.dynamic);
              textSpan.innerText = "Copied!";
              A.Future_Future$delayed(A.Duration$(5), new A.Events_copy_closure0(textSpan), type$.Null);
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Events_copy, $async$completer);
    },
    Events_save(copy, element) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, t1, textSpan, snippet, $async$temp1;
      var $async$Events_save = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = A;
              $async$goto = 3;
              return A._asyncAwait(A.OS_connected(), $async$Events_save);
            case 3:
              // returning from await.
              if (!$async$temp1.boolConversionCheck($async$result)) {
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = J.get$children$x(element);
              textSpan = t1.firstWhere$1(t1, new A.Events_save_closure());
              textSpan.innerText = "Saving...";
              snippet = A.Scraper_getContent(element, true);
              if (snippet == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              if (copy) {
                t1 = window.navigator.clipboard;
                if (t1 != null)
                  A.promiseToFuture(t1.writeText(snippet), type$.dynamic);
              }
              $async$goto = 4;
              return A._asyncAwait(A.Events_sendToPieces(element, snippet), $async$Events_save);
            case 4:
              // returning from await.
              if ($async$result != null)
                textSpan.innerText = "Saved!";
              else
                textSpan.innerText = "Error!";
              A.Future_Future$delayed(A.Duration$(5), new A.Events_save_closure0(textSpan, copy), type$.Null);
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Events_save, $async$completer);
    },
    Events_sendToPieces(element, snippet) {
      return A.Events_sendToPieces$body(element, snippet);
    },
    Events_sendToPieces$body(element, snippet) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Asset),
        $async$returnValue, $async$handler = 2, $async$currentError, metadata, asset, selector, t2, t3, classification, url, host, website, title, tags, description, relatedLinks, exception, t1, $async$exception;
      var $async$Events_sendToPieces = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = element.parentElement;
              if (t1 == null)
                selector = null;
              else {
                t1 = t1.parentElement;
                if (t1 == null)
                  selector = null;
                else {
                  t1 = J.get$children$x(t1);
                  t1 = J.get$classes$x(t1.firstWhere$2$orElse(t1, new A.Events_sendToPieces_closure(), new A.Events_sendToPieces_closure0()));
                  t2 = type$.bool_Function_String._as(new A.Events_sendToPieces_closure1());
                  t3 = type$.nullable_String_Function._as(new A.Events_sendToPieces_closure2());
                  t3 = t1.readClasses$0().firstWhere$2$orElse(0, t2, t3);
                  selector = t3;
                }
              }
              classification = selector != null && selector.length !== 0 ? B.JSArray_methods.get$last(selector.split("-")) : null;
              url = type$.Location._as(window.location).href;
              t1 = A.Uri_parse(url);
              host = t1.get$host(t1);
              website = A.StringExtension_capitalize(B.JSArray_methods.get$last(host.split("www.")));
              t1 = window.document.getElementsByTagName("title");
              if (0 >= t1.length) {
                $async$returnValue = A.ioore(t1, 0);
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = t1[0].textContent;
              title = t1 == null ? "UNKNOWN TITLE" : t1;
              tags = A.Context__tags();
              description = A.Scraper_getDescription();
              relatedLinks = A._setArrayType([], type$.JSArray_String);
              metadata = new A.Metadata(host, url, classification != null && classification.length !== 0 ? A.StringExtension_capitalize(classification) + " " + website : website, title, tags, description, relatedLinks);
              asset = null;
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(A.Actions_save(metadata, snippet), $async$Events_sendToPieces);
            case 7:
              // returning from await.
              asset = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $async$returnValue = asset;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$Events_sendToPieces, $async$completer);
    },
    Events_generateLink(element) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, button, snippet, asset, t1, t2, $async$temp1;
      var $async$Events_generateLink = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.get$children$x(element);
              t2 = A._instanceType(t1);
              t2 = new A.WhereIterable(t1, t2._eval$1("bool(ListMixin.E)")._as(new A.Events_generateLink_closure()), t2._eval$1("WhereIterable<ListMixin.E>"));
              button = t2.get$first(t2);
              $async$goto = 3;
              return A._asyncAwait(A.OS_cloud(button), $async$Events_generateLink);
            case 3:
              // returning from await.
              if (!$async$result) {
                button.innerText = "Try again";
                A.Future_Future$delayed(A.Duration$(5), new A.Events_generateLink_closure0(button), type$.Null);
                // goto return
                $async$goto = 1;
                break;
              }
              snippet = A.Scraper_getContent(element, true);
              if (snippet == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              button.innerText = "Saving to Pieces...";
              $async$goto = 4;
              return A._asyncAwait(A.Events_sendToPieces(element, snippet), $async$Events_generateLink);
            case 4:
              // returning from await.
              asset = $async$result;
              $async$goto = asset != null ? 5 : 7;
              break;
            case 5:
              // then
              button.innerText = "Generating Link...";
              $async$temp1 = button;
              $async$goto = 8;
              return A._asyncAwait(A.Actions_linkify(asset), $async$Events_generateLink);
            case 8:
              // returning from await.
              $async$temp1.innerText = $async$result != null ? "Link Generated & Copied!" : "Failed to generate link.";
              // goto join
              $async$goto = 6;
              break;
            case 7:
              // else
              button.innerText = "Failed to save!";
            case 6:
              // join
              A.Future_Future$delayed(A.Duration$(5), new A.Events_generateLink_closure1(button), type$.Null);
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Events_generateLink, $async$completer);
    },
    Events_copy_closure: function Events_copy_closure() {
    },
    Events_copy_closure0: function Events_copy_closure0(t0) {
      this.textSpan = t0;
    },
    Events_save_closure: function Events_save_closure() {
    },
    Events_save_closure0: function Events_save_closure0(t0, t1) {
      this.textSpan = t0;
      this.copy = t1;
    },
    Events_sendToPieces_closure: function Events_sendToPieces_closure() {
    },
    Events_sendToPieces_closure0: function Events_sendToPieces_closure0() {
    },
    Events_sendToPieces_closure1: function Events_sendToPieces_closure1() {
    },
    Events_sendToPieces_closure2: function Events_sendToPieces_closure2() {
    },
    Events_generateLink_closure: function Events_generateLink_closure() {
    },
    Events_generateLink_closure0: function Events_generateLink_closure0(t0) {
      this.button = t0;
    },
    Events_generateLink_closure1: function Events_generateLink_closure1(t0) {
      this.button = t0;
    },
    ClientConfiguration_initialize() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        toZone, t1, config, platform;
      var $async$ClientConfiguration_initialize = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$LocalState__singleton();
              config = t1.config;
              platform = window.navigator.platform;
              if (platform == null)
                platform = "Unknown Platform";
              if (B.JSString_methods.contains$1(platform, "Win")) {
                config.platform = B.PlatformEnum_WINDOWS;
                config.set$keycodes(A._setArrayType([18, 16, 83], type$.JSArray_int));
              } else if (B.JSString_methods.contains$1(platform, "Mac")) {
                config.platform = B.PlatformEnum_MACOS;
                config.set$keycodes(A._setArrayType([224, 16, 83], type$.JSArray_int));
              } else if (B.JSString_methods.contains$1(platform, "Linux")) {
                config.platform = B.PlatformEnum_LINUX;
                config.port = 5323;
                config.set$keycodes(A._setArrayType([18, 16, 83], type$.JSArray_int));
              } else {
                toZone = $.printToZone;
                if (toZone == null)
                  A.printString("Unable to detect os");
                else
                  toZone.call$1("Unable to detect os");
              }
              t1.settings.toString;
              t1.config = config;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$ClientConfiguration_initialize, $async$completer);
    },
    ClientConfiguration: function ClientConfiguration() {
      this.port = 1000;
      this.platform = this.keycodes = null;
    },
    ClientSettings: function ClientSettings(t0, t1, t2, t3, t4) {
      var _ = this;
      _.placement = t0;
      _.theme = t1;
      _.mainBtn = t2;
      _.blacklist = t3;
      _.whitelist = t4;
      _.minChars = 0;
      _.backtrackLimit = 5;
      _.telemetry = true;
      _.host = _.url = "";
      _.enabled = true;
    },
    Context__tags() {
      var tags = A._setArrayType([], type$.JSArray_String),
        t1 = type$.Element,
        t2 = document;
      A.checkTypeBound(t1, t1, "T", "querySelectorAll");
      t2 = new A._FrozenElementList(t2.querySelectorAll("a"), type$._FrozenElementList_Element);
      t2.forEach$1(t2, new A.Context__tags_closure(tags));
      return tags;
    },
    Context__tags_closure: function Context__tags_closure(t0) {
      this.tags = t0;
    },
    CustomCodeExtraction_extract(host, $parent) {
      var t1;
      switch (host) {
        case B.CustomExtractionWebsitesEnum_0:
        case B.CustomExtractionWebsitesEnum_2:
        case B.CustomExtractionWebsitesEnum_4:
          return A.CustomCodeExtraction_accumulator($parent, ".CodeMirror-line");
        case B.CustomExtractionWebsitesEnum_1:
          return A.CustomCodeExtraction_accumulator($parent, ".blob-code-inner");
        case B.CustomExtractionWebsitesEnum_5:
          return A.CustomCodeExtraction_accumulator($parent, "code");
        case B.CustomExtractionWebsitesEnum_3:
          t1 = $parent.querySelector("code");
          t1 = t1 == null ? null : t1.textContent;
          return t1 == null ? "Unable to find code content." : t1;
        default:
          return "";
      }
    },
    CustomCodeExtraction_accumulator($parent, selector) {
      var lines, t2, $content, t3,
        t1 = type$.Element;
      A.checkTypeBound(t1, t1, "T", "querySelectorAll");
      t1 = type$._FrozenElementList_Element;
      lines = new A._FrozenElementList($parent.querySelectorAll(selector), t1);
      for (t2 = new A.ListIterator(lines, lines.get$length(lines), t1._eval$1("ListIterator<ListMixin.E>")), t1 = t1._eval$1("ListMixin.E"), $content = ""; t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        $content += (t3 == null ? t1._as(t3) : t3).innerText + "\n";
      }
      if ($content.length === 0) {
        t1 = J.get$children$x($parent);
        $content = t1.firstWhere$1(t1, new A.CustomCodeExtraction_accumulator_closure()).innerText;
      }
      return $content;
    },
    CustomCodeExtraction_accumulator_closure: function CustomCodeExtraction_accumulator_closure() {
    },
    LocalState_LocalState() {
      return $.$get$LocalState__singleton();
    },
    LocalState: function LocalState(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.controller = t0;
      _.settings = t1;
      _.config = t2;
      _.current = t3;
      _.history = t4;
      _.allocation = _.context = null;
      _.backtracked = t5;
    },
    Placement_run() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t1, host, _settings, blocks;
      var $async$Placement_run = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              blocks = A.Scraper_getBlocks();
              if (J.get$isEmpty$asx(blocks)) {
                A.Blocks_clear();
                // goto return
                $async$goto = 1;
                break;
              }
              A.Blocks_save(blocks);
              t1 = A.Uri_parse(type$.Location._as(window.location).href);
              host = t1.get$host(t1);
              _settings = $.$get$LocalState__singleton().settings;
              if (!(_settings.enabled && B.JSArray_methods.contains$1(_settings.blacklist, host)))
                t1 = !_settings.enabled && !B.JSArray_methods.contains$1(_settings.whitelist, host);
              else
                t1 = true;
              if (t1) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return A._asyncAwait(A.Placement_place(blocks), $async$Placement_run);
            case 3:
              // returning from await.
              if ($async$result) {
                A.Styles_setMainContainer();
                A.Styles_setButtonsContainer();
                A.Styles_setButtons();
                A.Styles_setLogo();
                A.Placement_listen();
                A.Backtracking_update();
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Placement_run, $async$completer);
    },
    Placement_place(blocks) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, t1, placed, t2, t3, t4, container, placement;
      var $async$Placement_place = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              for (t1 = J.get$iterator$ax(blocks), placed = false; t1.moveNext$0();) {
                t2 = t1.get$current();
                t3 = t2.innerText;
                t4 = $.$get$LocalState__singleton();
                if (t3.length > t4.settings.minChars) {
                  t3 = t2.parentElement;
                  if (t3 != null && J.get$classes$x(t3).contains$1(0, A.ClassesEnumExtension_get_selector(B.ClassesEnum_0)))
                    continue;
                  container = document.createElement("div");
                  container.className = A.ClassesEnumExtension_get_selector(B.ClassesEnum_0);
                  J.insertAdjacentElement$2$x(t2, "beforeBegin", container);
                  t3 = t2.style;
                  t3.marginBottom = "0";
                  t3 = t2.style;
                  t3.marginTop = "0";
                  placement = t4.settings.placement;
                  if (placement === B.ButtonPlacementOptionsEnum_3 || placement === B.ButtonPlacementOptionsEnum_2) {
                    container.appendChild(A.Buttons_create());
                    container.appendChild(t2);
                  } else {
                    container.appendChild(t2);
                    container.appendChild(A.Buttons_create());
                  }
                  placed = true;
                }
              }
              $async$returnValue = placed;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Placement_place, $async$completer);
    },
    Placement_listen() {
      var t4, selector,
        _s16_ = "querySelectorAll",
        _s20_ = "pieces-copy-and-save",
        t1 = A.ClassesEnumExtension_get_value(B.ClassesEnum_0),
        t2 = type$.Element,
        t3 = document;
      A.checkTypeBound(t2, t2, "T", _s16_);
      t4 = type$._FrozenElementList_Element;
      t1 = new A._FrozenElementList(t3.querySelectorAll(t1), t4);
      t1.forEach$1(t1, new A.Placement_listen_closure());
      switch ($.$get$LocalState__singleton().settings.mainBtn) {
        case B.MainButtonFunctionalityEnum_2:
          selector = _s20_;
          break;
        case B.MainButtonFunctionalityEnum_0:
          selector = "pieces-copy";
          break;
        case B.MainButtonFunctionalityEnum_1:
          selector = "pieces-save";
          break;
        default:
          selector = _s20_;
      }
      A.checkTypeBound(t2, t2, "T", _s16_);
      t1 = new A._FrozenElementList(t3.querySelectorAll("." + selector), t4);
      t1.forEach$1(t1, new A.Placement_listen_closure0());
      A.checkTypeBound(t2, t2, "T", _s16_);
      t4 = new A._FrozenElementList(t3.querySelectorAll(".pieces-share"), t4);
      t4.forEach$1(t4, new A.Placement_listen_closure1());
    },
    Placement_listen_closure: function Placement_listen_closure() {
    },
    Placement_listen__closure5: function Placement_listen__closure5(t0) {
      this.element = t0;
    },
    Placement_listen___closure0: function Placement_listen___closure0() {
    },
    Placement_listen__closure6: function Placement_listen__closure6(t0) {
      this.element = t0;
    },
    Placement_listen___closure: function Placement_listen___closure() {
    },
    Placement_listen_closure0: function Placement_listen_closure0() {
    },
    Placement_listen__closure2: function Placement_listen__closure2(t0) {
      this.element = t0;
    },
    Placement_listen__closure3: function Placement_listen__closure3(t0) {
      this.element = t0;
    },
    Placement_listen__closure4: function Placement_listen__closure4(t0) {
      this.element = t0;
    },
    Placement_listen_closure1: function Placement_listen_closure1() {
    },
    Placement_listen__closure: function Placement_listen__closure(t0) {
      this.element = t0;
    },
    Placement_listen__closure0: function Placement_listen__closure0(t0) {
      this.element = t0;
    },
    Placement_listen__closure1: function Placement_listen__closure1(t0) {
      this.element = t0;
    },
    Scraper_getBlocks() {
      var _i, _blocked, blocks, custom, clazz, t2, t3, known, t4, t5, t6, _pres,
        _s16_ = "querySelectorAll",
        t1 = $.$get$LocalState__singleton().settings,
        host = t1.host,
        url = t1.url;
      for (_i = 0; _i < 4; ++_i) {
        _blocked = $.Scraper_blocked[_i];
        if (A.stringContainsUnchecked(url, _blocked, 0))
          return A._setArrayType([], type$.JSArray_Element);
      }
      t1 = B.JSString_methods.contains$1(url, "github.com");
      if (t1 && B.JSString_methods.contains$1(url, "new") && B.JSString_methods.contains$1(url, "workflows"))
        return A._setArrayType([], type$.JSArray_Element);
      if (t1 && B.JSString_methods.contains$1(url, "edit"))
        return A._setArrayType([], type$.JSArray_Element);
      blocks = A._setArrayType([], type$.JSArray_Element);
      custom = $.CustomDetectionWebsitesEnumExtension_fromMap.$index(0, host);
      if (custom != null)
        return A.CustomCodeDetection_detect(custom);
      if ($.Scraper_customClassMap.$index(0, host) != null) {
        clazz = $.Scraper_customClassMap.$index(0, host);
        t1 = "." + (clazz == null ? A._asString(clazz) : clazz);
        t2 = document;
        if (t2.querySelector(t1) != null) {
          t3 = type$.Element;
          A.checkTypeBound(t3, t3, "T", _s16_);
          B.JSArray_methods.addAll$1(blocks, new A._FrozenElementList(t2.querySelectorAll(t1), type$._FrozenElementList_Element));
        }
      } else {
        known = ['[class^="language-"]', ".blob-code-content", ".CodeMirror-lines"];
        for (t1 = type$.Element, t2 = type$._FrozenElementList_Element, t3 = t2._eval$1("bool(ListMixin.E)"), t4 = t2._eval$1("WhereIterable<ListMixin.E>"), t5 = t4._eval$1("Iterable.E"), _i = 0; _i < 3; ++_i) {
          clazz = known[_i];
          t6 = document;
          if (t6.querySelector(clazz) == null)
            continue;
          A.checkTypeBound(t1, t1, "T", _s16_);
          B.JSArray_methods.addAll$1(blocks, A.List_List$of(new A.WhereIterable(new A._FrozenElementList(t6.querySelectorAll(clazz), t2), t3._as(new A.Scraper_getBlocks_closure()), t4), true, t5));
        }
        t5 = document;
        if (t5.querySelector("pre") != null) {
          A.checkTypeBound(t1, t1, "T", _s16_);
          _pres = new A._FrozenElementList(t5.querySelectorAll("pre"), t2);
          B.JSArray_methods.addAll$1(blocks, $.$get$LocalState__singleton().settings.host === "doc.rust-lang.org" ? new A.WhereIterable(_pres, t3._as(new A.Scraper_getBlocks_closure0()), t4) : _pres);
        }
      }
      return blocks;
    },
    Scraper_getContent(element, fromParent) {
      var t1, _parent, host, custom, pre, placement, t2, div, block, snippet, t3;
      if (fromParent) {
        t1 = element.parentElement;
        _parent = t1 == null ? null : t1.parentElement;
      } else
        _parent = element;
      if (_parent == null)
        return null;
      t1 = $.$get$LocalState__singleton();
      host = t1.settings.host;
      custom = $.CustomExtractionWebsitesEnumExtension_fromMap.$index(0, host);
      if (custom != null)
        return A.CustomCodeExtraction_extract(custom, _parent);
      pre = _parent.querySelector("pre");
      placement = t1.settings.placement;
      if (fromParent) {
        t1 = placement === B.ButtonPlacementOptionsEnum_1 || placement === B.ButtonPlacementOptionsEnum_0;
        t2 = J.getInterceptor$x(_parent);
        if (t1) {
          t1 = t2.get$children(_parent);
          t1 = t1.get$first(t1);
          div = t1;
        } else {
          t1 = t2.get$children(_parent);
          t1 = t1.get$last(t1);
          div = t1;
        }
      } else
        div = element;
      block = pre == null ? div : pre;
      snippet = block.innerText;
      for (t1 = J.get$children$x(block), t1 = t1.get$iterator(t1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t3 = t1._current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (J.get$classes$x(t3).contains$1(0, "material-icons") || t3.tagName.toLowerCase() === "button") {
          t3 = t3.innerText;
          snippet = A.stringReplaceAllUnchecked(snippet, t3, "");
        }
      }
      return snippet;
    },
    Scraper_getLanguage(element, fromParent) {
      var t2, title, ext, syntax, index, classification, t3, t4, code, _null = null,
        _s9_ = "language-",
        t1 = $.$get$LocalState__singleton();
      if (t1.settings.host === "gist.github.com") {
        t2 = document.querySelector(".file-info");
        title = t2 == null ? _null : t2.innerText;
        ext = title == null ? _null : B.JSArray_methods.get$last(title.split("."));
        if (ext != null)
          return ext;
      }
      if (t1.settings.host === "developer.apple.com") {
        syntax = element.getAttribute("data-syntax");
        if (syntax != null)
          return syntax;
      }
      t1 = J.getInterceptor$x(element);
      t2 = t1.get$classes(element);
      t2 = J.get$iterator$ax(t2 === null ? A._setArrayType([], type$.JSArray_String) : t2);
      index = 0;
      while (true) {
        if (!t2.moveNext$0()) {
          classification = _null;
          break;
        }
        t3 = t2.get$current();
        if (!A.stringContainsUnchecked(t3, "lang-", 0))
          t4 = A.stringContainsUnchecked(t3, _s9_, 0);
        else
          t4 = true;
        if (t4) {
          classification = B.JSArray_methods.get$last(t3.split("-"));
          break;
        }
        if (A.stringContainsUnchecked(t3, "brush:", 0)) {
          classification = t1.get$classes(element).readClasses$0().elementAt$1(0, index + 1);
          break;
        }
        if (A.stringContainsUnchecked(t3, "highlight", 0)) {
          t2 = index + 1;
          t3 = t1.get$classes(element);
          t3 = t3.get$length(t3);
          if (t2 < (t3 == null ? 1 : t3))
            classification = t1.get$classes(element).readClasses$0().elementAt$1(0, t2);
          else
            classification = _null;
          break;
        }
        if (A.stringContainsUnchecked(t3, "High", 0)) {
          classification = B.JSArray_methods.get$first(t3.split("High"));
          break;
        }
        ++index;
      }
      if (classification == null) {
        t1 = t1.get$children(element);
        t2 = A._instanceType(t1);
        t3 = t2._eval$1("WhereIterable<ListMixin.E>");
        code = A.List_List$of(new A.WhereIterable(t1, t2._eval$1("bool(ListMixin.E)")._as(new A.Scraper_getLanguage_closure()), t3), true, t3._eval$1("Iterable.E"));
        if (code != null && code.length !== 0)
          for (t1 = J.get$classes$x((code && B.JSArray_methods).get$first(code)).readClasses$0(), t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
            t3 = t1._collection$_current;
            if (t3 == null)
              t3 = t2._as(t3);
            if (!A.stringContainsUnchecked(t3, "lang-", 0))
              t4 = A.stringContainsUnchecked(t3, _s9_, 0);
            else
              t4 = true;
            if (t4) {
              classification = B.JSArray_methods.get$last(t3.split("-"));
              break;
            }
          }
      }
      return classification;
    },
    Scraper_getDescription() {
      var t1 = document,
        t2 = t1.querySelector("h1"),
        description = t2 == null ? null : t2.innerText;
      if (description == null)
        description = "";
      if (description.length !== 0)
        description += "\n\n";
      t2 = t1.querySelector('meta[name="twitter:description"]');
      t2 = t2 == null ? null : t2.getAttribute("content");
      if (t2 == null) {
        t1 = t1.querySelector('meta[name="description"]');
        t1 = t1 == null ? null : t1.getAttribute("content");
      } else
        t1 = t2;
      description += t1 == null ? "" : t1;
      if (B.JSString_methods.contains$1(description, "Pieces"))
        return "This is a snippet saved in the onboarding section of Pieces for Chrome. You can view relevant information about this snippet in the surrounding info boxes!";
      return description;
    },
    Scraper_getBlocks_closure: function Scraper_getBlocks_closure() {
    },
    Scraper_getBlocks_closure0: function Scraper_getBlocks_closure0() {
    },
    Scraper_getLanguage_closure: function Scraper_getLanguage_closure() {
    },
    Settings_migrate(settings, readOnly) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        string, t2, _blacklistOld, _placementOld, _telemetryOld, _mainBtnOld, _minCharsOld, _themeOld, _backtrackOld, local, _settingsOld, t1;
      var $async$Settings_migrate = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _settingsOld = type$.JsObject._as(settings.$index(0, "pce_settings"));
              t1 = J.toString$0$(J.$index$asx(_settingsOld.$index(0, "blacklist"), "o"));
              t1 = A.stringReplaceAllUnchecked(t1, "[", "");
              string = A.stringReplaceAllUnchecked(t1, "]", "");
              t1 = string.length !== 0 && string !== "null";
              t2 = type$.JSArray_String;
              if (t1) {
                t1 = type$.MappedListIterable_String_String;
                _blacklistOld = A.List_List$of(new A.MappedListIterable(A._setArrayType(string.split(","), t2), type$.String_Function_String._as(new A.Settings_migrate_closure()), t1), true, t1._eval$1("ListIterable.E"));
              } else
                _blacklistOld = A._setArrayType([], t2);
              _placementOld = A._asString(_settingsOld.$index(0, "button_location"));
              _telemetryOld = A._asString(_settingsOld.$index(0, "safe_detection"));
              _mainBtnOld = A._asString(_settingsOld.$index(0, "cas_btn"));
              _minCharsOld = A._asString(_settingsOld.$index(0, "min_chars"));
              _themeOld = A._asString(_settingsOld.$index(0, "button_color"));
              _backtrackOld = A._asString(_settingsOld.$index(0, "backtrack_limit"));
              t1 = $.$get$LocalState__singleton();
              local = t1.settings;
              t2 = $.Settings_placementOldToNew.$index(0, _placementOld);
              local.placement = t2 == null ? B.ButtonPlacementOptionsEnum_0 : t2;
              t2 = $.ElementThemeEnumExtension_fromMap.$index(0, _themeOld);
              local.theme = t2 == null ? B.ElementThemeEnum_0 : t2;
              t2 = $.Settings_mainBtnOldToNew.$index(0, _mainBtnOld);
              local.mainBtn = t2 == null ? B.MainButtonFunctionalityEnum_2 : t2;
              t2 = B.C_JsonCodec.decode$2$reviver(0, _telemetryOld, null);
              local.telemetry = A._asBool(t2 == null ? true : t2);
              t2 = A.Primitives_parseInt(_minCharsOld, null);
              local.minChars = t2 == null ? 0 : t2;
              t2 = A.Primitives_parseInt(_backtrackOld, null);
              local.backtrackLimit = t2 == null ? 5 : t2;
              local.blacklist = _blacklistOld;
              t2 = type$.Location;
              local.url = t2._as(window.location).href;
              t2 = A.Uri_parse(t2._as(window.location).href);
              local.host = t2.get$host(t2);
              t1.settings = local;
              $async$goto = 2;
              return A._asyncAwait(A.Settings_update(), $async$Settings_migrate);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$Settings_migrate, $async$completer);
    },
    Settings_populate(settings, readOnly) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        string, t2, _blacklist, list, _whitelist, _placement, _telemetry, _mainBtn, _backtrack, _theme, _minChars, _enabled, local, t3, _settings, t1;
      var $async$Settings_populate = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _settings = type$.JsObject._as(settings.$index(0, "pce_settings"));
              t1 = J.toString$0$(J.$index$asx(_settings.$index(0, "blacklist"), "o"));
              t1 = A.stringReplaceAllUnchecked(t1, "[", "");
              string = A.stringReplaceAllUnchecked(t1, "]", "");
              t1 = string.length !== 0 && string !== "null";
              t2 = type$.JSArray_String;
              if (t1) {
                t1 = type$.MappedListIterable_String_String;
                _blacklist = A.List_List$of(new A.MappedListIterable(A._setArrayType(string.split(","), t2), type$.String_Function_String._as(new A.Settings_populate_closure()), t1), true, t1._eval$1("ListIterable.E"));
              } else
                _blacklist = A._setArrayType([], t2);
              t1 = J.toString$0$(J.$index$asx(_settings.$index(0, "whitelist"), "o"));
              t1 = A.stringReplaceAllUnchecked(t1, "[", "");
              list = A.stringReplaceAllUnchecked(t1, "]", "");
              if (list.length !== 0 && list !== "null") {
                t1 = type$.MappedListIterable_String_String;
                _whitelist = A.List_List$of(new A.MappedListIterable(A._setArrayType(list.split(","), t2), type$.String_Function_String._as(new A.Settings_populate_closure0()), t1), true, t1._eval$1("ListIterable.E"));
              } else
                _whitelist = A._setArrayType([], t2);
              _placement = A._asString(_settings.$index(0, "placement"));
              _telemetry = A._asBool(_settings.$index(0, "telemetry"));
              _mainBtn = A._asString(_settings.$index(0, "mainBtn"));
              _backtrack = A._asInt(_settings.$index(0, "backtrackLimit"));
              _theme = A._asString(_settings.$index(0, "theme"));
              _minChars = A._asInt(_settings.$index(0, "minChars"));
              A._asString(_settings.$index(0, "url"));
              A._asString(_settings.$index(0, "host"));
              _enabled = A._asBool(_settings.$index(0, "enabled"));
              t1 = $.$get$LocalState__singleton();
              local = t1.settings;
              t2 = $.ButtonPlacementOptionsEnumExtension_fromMap.$index(0, _placement);
              local.placement = t2 == null ? B.ButtonPlacementOptionsEnum_0 : t2;
              t2 = $.ElementThemeEnumExtension_fromMap.$index(0, _theme);
              local.theme = t2 == null ? B.ElementThemeEnum_0 : t2;
              t2 = $.MainButtonFunctionalityEnumExtension_fromMap.$index(0, _mainBtn);
              local.mainBtn = t2 == null ? B.MainButtonFunctionalityEnum_2 : t2;
              local.telemetry = _telemetry;
              local.minChars = _minChars;
              local.backtrackLimit = _backtrack;
              local.blacklist = _blacklist;
              local.whitelist = _whitelist;
              t2 = type$.Location;
              t3 = t2._as(window.location).href;
              local.url = t3;
              t2 = A.Uri_parse(t2._as(window.location).href);
              t2 = t2.get$host(t2);
              local.host = t2;
              local.enabled = _enabled;
              t1.settings = local;
              $async$goto = 2;
              return A._asyncAwait(A.Settings_update(), $async$Settings_populate);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$Settings_populate, $async$completer);
    },
    Settings_initialize(settings) {
      var readOnly = false;
      return A.Settings_initialize$body(settings);
    },
    Settings_initialize$body(settings) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, exception, t1, t2, readOnly, migration, $async$exception, $async$exception1;
      var $async$Settings_initialize = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              readOnly = false;
              migration = false;
              $async$handler = 3;
              $async$goto = 6;
              return A._asyncAwait(A.Settings_populate(settings, readOnly), $async$Settings_initialize);
            case 6:
              // returning from await.
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              migration = true;
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              $async$goto = A.boolConversionCheck(migration) ? 7 : 8;
              break;
            case 7:
              // then
              $async$handler = 10;
              $async$goto = 13;
              return A._asyncAwait(A.Settings_migrate(settings, readOnly), $async$Settings_initialize);
            case 13:
              // returning from await.
              $async$handler = 1;
              // goto after finally
              $async$goto = 12;
              break;
            case 10:
              // catch
              $async$handler = 9;
              $async$exception1 = $async$currentError;
              t1 = $.$get$LocalState__singleton();
              t1 = t1.settings;
              t2 = type$.Location;
              t1.url = t2._as(window.location).href;
              t2 = A.Uri_parse(t2._as(window.location).href);
              t1.host = t2.get$host(t2);
              $async$goto = 14;
              return A._asyncAwait(A.Settings_update(), $async$Settings_initialize);
            case 14:
              // returning from await.
              // goto after finally
              $async$goto = 12;
              break;
            case 9:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 12:
              // after finally
            case 8:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$Settings_initialize, $async$completer);
    },
    Settings_update() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $arguments, json, exception, t1, t2, $async$exception;
      var $async$Settings_update = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$LocalState__singleton();
              t2 = t1.controller;
              t2.add$1(0, A._instanceType(t2)._precomputed1._as(t1.settings));
              json = t1.settings.toJson$0();
              $arguments = [json.$index(0, "placement"), json.$index(0, "theme"), json.$index(0, "mainBtn"), json.$index(0, "telemetry"), json.$index(0, "minChars"), json.$index(0, "backtrackLimit"), json.$index(0, "blacklist"), json.$index(0, "url"), json.$index(0, "host"), json.$index(0, "enabled"), json.$index(0, "whitelist")];
              $async$handler = 3;
              $async$goto = 6;
              return A._asyncAwait($.$get$_context().callMethod$2("setPiecesSettingsInterop", $arguments), $async$Settings_update);
            case 6:
              // returning from await.
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$Settings_update, $async$completer);
    },
    Settings_migrate_closure: function Settings_migrate_closure() {
    },
    Settings_populate_closure: function Settings_populate_closure() {
    },
    Settings_populate_closure0: function Settings_populate_closure0() {
    },
    BlocksFeatureEnum: function BlocksFeatureEnum(t0) {
      this._name = t0;
    },
    ButtonPlacementOptionsEnum: function ButtonPlacementOptionsEnum(t0) {
      this._name = t0;
    },
    ClassesEnumExtension_get_value(_this) {
      switch (_this) {
        case B.ClassesEnum_0:
          return ".pieces-code-wrapper";
        case B.ClassesEnum_1:
          return ".pieces-btn-wrapper";
        case B.ClassesEnum_2:
          return ".pieces-btn";
        case B.ClassesEnum_3:
          return ".pieces-logo";
        case B.ClassesEnum_4:
          return ".pieces-btn-span";
        default:
          return "";
      }
    },
    ClassesEnumExtension_get_selector(_this) {
      switch (_this) {
        case B.ClassesEnum_0:
          return "pieces-code-wrapper";
        case B.ClassesEnum_1:
          return "pieces-btn-wrapper";
        case B.ClassesEnum_2:
          return "pieces-btn";
        case B.ClassesEnum_3:
          return "pieces-logo";
        case B.ClassesEnum_4:
          return "pieces-btn-span";
        default:
          return "";
      }
    },
    ClassesEnum: function ClassesEnum(t0) {
      this._name = t0;
    },
    ClientBlock: function ClientBlock(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.classification = t0;
      _.description = t1;
      _.snippet = t2;
      _.url = t3;
      _.host = t4;
      _.encountered = t5;
    },
    ClientBlocks$() {
      return new A.ClientBlocks(A._setArrayType([], type$.JSArray_ClientBlock));
    },
    ClientBlocks: function ClientBlocks(t0) {
      this._blocks = t0;
    },
    ClientBlocks_toJson_closure: function ClientBlocks_toJson_closure() {
    },
    CustomDetectionWebsitesEnum: function CustomDetectionWebsitesEnum(t0) {
      this._name = t0;
    },
    CustomExtractionWebsitesEnum: function CustomExtractionWebsitesEnum(t0) {
      this._name = t0;
    },
    ElementThemeEnum: function ElementThemeEnum(t0) {
      this._name = t0;
    },
    MainButtonFunctionalityEnum: function MainButtonFunctionalityEnum(t0) {
      this._name = t0;
    },
    StringExtension_capitalize(_this) {
      if (0 >= _this.length)
        return A.ioore(_this, 0);
      return _this[0].toUpperCase() + B.JSString_methods.substring$1(_this, 1).toLowerCase();
    },
    Metadata: function Metadata(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.host = t0;
      _.url = t1;
      _.name = t2;
      _.title = t3;
      _.tags = t4;
      _.description = t5;
      _.relatedLinks = t6;
    },
    main() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        t1, t2;
      var $async$main = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(A.Sentry_init(new A.main_closure()), $async$main);
            case 2:
              // returning from await.
              t1 = $.$get$_context();
              t2 = type$.JsObject;
              t2._as(J.$index$asx(J.$index$asx(t1.$index(0, "chrome"), "storage"), "local")).callMethod$2("get", ["pce_history_blocks", A.content__initHistoryBlocks$closure()]);
              t2._as(J.$index$asx(J.$index$asx(t1.$index(0, "chrome"), "storage"), "sync")).callMethod$2("get", ["pce_settings", A.content__initialize$closure()]);
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$main, $async$completer);
    },
    initialize(settings) {
      return A.initialize$body(type$.JsObject._as(settings));
    },
    initialize$body(settings) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        observer, t1, observableNode;
      var $async$initialize = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(A.Settings_initialize(settings), $async$initialize);
            case 2:
              // returning from await.
              $async$goto = 3;
              return A._asyncAwait(A.ClientConfiguration_initialize(), $async$initialize);
            case 3:
              // returning from await.
              $async$goto = 4;
              return A._asyncAwait(A.Placement_run(), $async$initialize);
            case 4:
              // returning from await.
              observer = new (window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver)(A.convertDartClosureToJS(A._wrapBinaryZone(A.content___onMutation$closure(), type$.List_dynamic, type$.MutationObserver), 2));
              t1 = document.querySelector("body");
              observableNode = t1 == null ? null : t1.parentNode;
              if (observableNode != null && true)
                B.MutationObserver_methods.observe$3$childList$subtree(observer, observableNode, true, true);
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$initialize, $async$completer);
    },
    initHistoryBlocks(json) {
      var blocks, list, t1, block, t2, t3, t4, t5, t6;
      type$.JsObject._as(json);
      blocks = type$.Map_String_dynamic._as(B.C_JsonCodec.decode$2$reviver(0, A._asString($.$get$_context().$index(0, "JSON").callMethod$2("stringify", [json.$index(0, "pce_history_blocks")])), null));
      list = A._setArrayType([], type$.JSArray_ClientBlock);
      for (t1 = J.get$iterator$ax(type$.Iterable_dynamic._as(blocks.$index(0, "blocks"))); t1.moveNext$0();) {
        block = t1.get$current();
        t2 = J.getInterceptor$asx(block);
        t3 = A._asString(t2.$index(block, "snippet"));
        t4 = A.DateTime_tryParse(A._asString(t2.$index(block, "encountered")));
        if (t4 == null)
          t4 = new A.DateTime(Date.now(), false);
        t5 = A._asString(t2.$index(block, "host"));
        t6 = A._asString(t2.$index(block, "url"));
        B.JSArray_methods.add$1(list, new A.ClientBlock(A._asStringQ(t2.$index(block, "classification")), A._asStringQ(t2.$index(block, "description")), t3, t6, t5, t4));
      }
      $.$get$LocalState__singleton().history.set$blocks(list);
    },
    _onMutation(mutations, observer) {
      var t1, t2, t3;
      type$.List_dynamic._as(mutations);
      type$.MutationObserver._as(observer);
      t1 = A.ClassesEnumExtension_get_value(B.ClassesEnum_1);
      t2 = type$.Element;
      t3 = document;
      A.checkTypeBound(t2, t2, "T", "querySelectorAll");
      t1 = new A._FrozenElementList(t3.querySelectorAll(t1), type$._FrozenElementList_Element);
      if (t1.get$length(t1) === 0)
        A.Placement_run();
    },
    main_closure: function main_closure() {
    },
    Version$(major, minor, patch, build, preRelease) {
      var t1 = new A.Version(major, minor, patch, build, preRelease);
      t1.Version$5$build$preRelease(major, minor, patch, build, preRelease);
      return t1;
    },
    Version__compare(a, b) {
      var t3, preReleaseMax, i, t4, t5, aNumeric, bNumeric, aNumber,
        t1 = a.major,
        t2 = b.major;
      if (t1 > t2)
        return 1;
      if (t1 < t2)
        return -1;
      t1 = a.minor;
      t2 = b.minor;
      if (t1 > t2)
        return 1;
      if (t1 < t2)
        return -1;
      t1 = a.patch;
      t2 = b.patch;
      if (t1 > t2)
        return 1;
      if (t1 < t2)
        return -1;
      t1 = a._preRelease;
      t2 = type$.String;
      if (A.List_List$from(t1, true, t2).length === 0)
        if (A.List_List$from(b._preRelease, true, t2).length === 0)
          return 0;
        else
          return 1;
      else {
        t3 = b._preRelease;
        if (A.List_List$from(t3, true, t2).length === 0)
          return -1;
        else {
          preReleaseMax = A.List_List$from(t1, true, t2).length;
          if (A.List_List$from(t3, true, t2).length > A.List_List$from(t1, true, t2).length)
            preReleaseMax = A.List_List$from(t3, true, t2).length;
          for (i = 0; i < preReleaseMax; ++i) {
            if (A.List_List$from(t3, true, t2).length <= i)
              return 1;
            else if (A.List_List$from(t1, true, t2).length <= i)
              return -1;
            t4 = A.List_List$from(t1, true, t2);
            if (!(i < t4.length))
              return A.ioore(t4, i);
            t4 = t4[i];
            t5 = A.List_List$from(t3, true, t2);
            if (!(i < t5.length))
              return A.ioore(t5, i);
            if (J.$eq$(t4, t5[i]))
              continue;
            t4 = A.List_List$from(t1, true, t2);
            if (!(i < t4.length))
              return A.ioore(t4, i);
            aNumeric = A.Version__isNumeric(t4[i]);
            t4 = A.List_List$from(t3, true, t2);
            if (!(i < t4.length))
              return A.ioore(t4, i);
            bNumeric = A.Version__isNumeric(t4[i]);
            if (aNumeric && bNumeric) {
              t1 = A.List_List$from(t1, true, t2);
              if (!(i < t1.length))
                return A.ioore(t1, i);
              aNumber = A.double_parse(t1[i]);
              t2 = A.List_List$from(t3, true, t2);
              if (!(i < t2.length))
                return A.ioore(t2, i);
              if (aNumber > A.double_parse(t2[i]))
                return 1;
              else
                return -1;
            } else if (bNumeric)
              return 1;
            else if (aNumeric)
              return -1;
            else {
              t1 = A.List_List$from(t1, true, t2);
              if (!(i < t1.length))
                return A.ioore(t1, i);
              t1 = t1[i];
              t2 = A.List_List$from(t3, true, t2);
              if (!(i < t2.length))
                return A.ioore(t2, i);
              t2 = A._asString(t2[i]);
              if (J.$eq$(t1, t2))
                t1 = 0;
              else
                t1 = t1 < t2 ? -1 : 1;
              return t1;
            }
          }
        }
      }
      return 0;
    },
    Version__isNumeric(s) {
      return A.Primitives_parseDouble(s) != null;
    },
    Version: function Version(t0, t1, t2, t3, t4) {
      var _ = this;
      _.major = t0;
      _.minor = t1;
      _.patch = t2;
      _.build = t3;
      _._preRelease = t4;
    },
    zoneClient() {
      var client = $.Zone__current.$index(0, B.Symbol__clientToken);
      return client == null ? null : type$.Client_Function._as(client).call$0();
    },
    decodeBodyBytes(response) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, t1, contentType;
      var $async$decodeBodyBytes = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = response.headers;
              contentType = t1.$index(0, "content-type");
              if (contentType != null && B.JSString_methods.startsWith$1(contentType.toLowerCase(), "application/json")) {
                t1 = response.bodyBytes;
                t1 = t1.length === 0 ? "" : B.C_Utf8Codec.decode$1(0, t1);
              } else
                t1 = A.encodingForCharset(A._contentTypeForHeaders(t1).parameters._collection$_map.$index(0, "charset")).decode$1(0, response.bodyBytes);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$decodeBodyBytes, $async$completer);
    },
    mapValueOfType(map, key, $T) {
      var value = map.$index(0, key);
      return $T._is(value) ? value : null;
    },
    mapCastOfType(map, key, $K, $V) {
      var value = map.$index(0, key);
      return type$.Map_dynamic_dynamic._is(value) ? value.cast$2$0(0, $K, $V) : null;
    },
    mapDateTime(map, key, pattern) {
      var millis,
        value = map.$index(0, key);
      if (value != null) {
        if (A._isInt(value))
          millis = value;
        else if (typeof value == "string")
          if (pattern === "epoch")
            millis = A.Primitives_parseInt(value, null);
          else
            return A.DateTime_tryParse(value);
        else
          millis = null;
        if (millis != null)
          return A.DateTime$fromMillisecondsSinceEpoch(millis, true);
      }
      return null;
    },
    isBrowserObject(o) {
      return type$.Blob._is(o) || type$.Event._is(o) || type$.KeyRange._is(o) || type$.ImageData._is(o) || type$.Node._is(o) || type$.Window._is(o) || type$.WorkerGlobalScope._is(o);
    },
    printString(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    },
    groupBy(values, key, $S, $T) {
      var t1, _i, element, t2, t3,
        map = A.LinkedHashMap_LinkedHashMap$_empty($T, $S._eval$1("List<0>"));
      for (t1 = $S._eval$1("JSArray<0>"), _i = 0; _i < 1; ++_i) {
        element = values[_i];
        t2 = key.call$1(element);
        t3 = map.$index(0, t2);
        if (t3 == null) {
          t3 = A._setArrayType([], t1);
          map.$indexSet(0, t2, t3);
          t2 = t3;
        } else
          t2 = t3;
        J.add$1$ax(t2, element);
      }
      return map;
    },
    wrapFormatException($name, value, body, $T) {
      var error, error0, t1, exception;
      try {
        t1 = body.call$0();
        return t1;
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (t1 instanceof A.SourceSpanFormatException) {
          error = t1;
          throw A.wrapException(A.SourceSpanFormatException$("Invalid " + $name + ": " + error._span_exception$_message, error._span, J.get$source$z(error)));
        } else if (type$.FormatException._is(t1)) {
          error0 = t1;
          throw A.wrapException(A.FormatException$("Invalid " + $name + ' "' + value + '": ' + J.get$message$z(error0), J.get$source$z(error0), J.get$offset$z(error0)));
        } else
          throw exception;
      }
    },
    current() {
      var exception, t1, path, lastIndex, uri = null;
      try {
        uri = A.Uri_base();
      } catch (exception) {
        if (type$.Exception._is(A.unwrapException(exception))) {
          t1 = $._current;
          if (t1 != null)
            return t1;
          throw exception;
        } else
          throw exception;
      }
      if (J.$eq$(uri, $._currentUriBase)) {
        t1 = $._current;
        t1.toString;
        return t1;
      }
      $._currentUriBase = uri;
      if ($.$get$Style_platform() == $.$get$Style_url())
        t1 = $._current = uri.resolve$1(".").toString$0(0);
      else {
        path = uri.toFilePath$0();
        lastIndex = path.length - 1;
        t1 = $._current = lastIndex === 0 ? path : B.JSString_methods.substring$2(path, 0, lastIndex);
      }
      return t1;
    },
    isAlphabetic(char) {
      var t1;
      if (!(char >= 65 && char <= 90))
        t1 = char >= 97 && char <= 122;
      else
        t1 = true;
      return t1;
    },
    isDriveLetter(path, index) {
      var t1 = path.length,
        t2 = index + 2;
      if (t1 < t2)
        return false;
      if (!A.isAlphabetic(B.JSString_methods.codeUnitAt$1(path, index)))
        return false;
      if (B.JSString_methods.codeUnitAt$1(path, index + 1) !== 58)
        return false;
      if (t1 === t2)
        return true;
      return B.JSString_methods.codeUnitAt$1(path, t2) === 47;
    },
    Sentry_init(optionsConfiguration) {
      return A.Sentry_init$body(optionsConfiguration);
    },
    Sentry_init$body(optionsConfiguration) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, sentryOptions, exception, stackTrace, exception0, t1, t2, sentryOptions0, $async$exception0;
      var $async$Sentry_init = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$NoOpClient__instance();
              t2 = type$.JSArray_String;
              sentryOptions0 = new A.SentryOptions(t1, A.sentry_options__noOpLogger$closure(), A._setArrayType([], type$.JSArray_EventProcessor), A._setArrayType([], type$.JSArray_Integration_SentryOptions), B.SentryLevel_debug, A._setArrayType([], t2), A._setArrayType([], t2), new A.NoOpTransport(), new A.PlatformChecker(), $.$get$envs(), A._setArrayType([], type$.JSArray_ScopeObserver), A._setArrayType([".*"], t2), A.Duration$(3));
              t1 = A.SdkVersion$("sentry.dart.browser", "6.22.0");
              sentryOptions0.__SentryOptions_sdk_A = t1;
              B.JSArray_methods.add$1(t1._packages, new A.SentryPackage("pub:sentry", "6.22.0"));
              sentryOptions = sentryOptions0;
              $async$goto = 2;
              return A._asyncAwait(A.Sentry__initDefaultValues(sentryOptions), $async$Sentry_init);
            case 2:
              // returning from await.
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(optionsConfiguration.call$1(sentryOptions), $async$Sentry_init);
            case 7:
              // returning from await.
              $async$handler = 1;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception0 = $async$currentError;
              exception = A.unwrapException($async$exception0);
              stackTrace = A.getTraceFromException($async$exception0);
              sentryOptions.logger$4$exception$stackTrace(B.SentryLevel_error, "Error in options configuration.", exception, stackTrace);
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 6:
              // after finally
              if (sentryOptions.dsn == null)
                throw A.wrapException(A.ArgumentError$("DSN is required.", null));
              $async$goto = 8;
              return A._asyncAwait(A.Sentry__init(sentryOptions, null, true), $async$Sentry_init);
            case 8:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$Sentry_init, $async$completer);
    },
    Sentry__initDefaultValues(options) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        environment, t1;
      var $async$Sentry__initDefaultValues = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = options.dsn;
              options.dsn = t1 == null ? null : t1;
              if (options.environment == null) {
                environment = options.environmentVariables.environmentForMode$1(options.platformChecker);
                options.environment = environment;
              }
              options.release = null;
              options.dist = null;
              t1 = options._eventProcessors;
              B.JSArray_methods.add$1(t1, new A.WebEnricherEventProcessor(window, options));
              B.JSArray_methods.add$1(t1, new A.WebExcptionEventProcessor());
              B.JSArray_methods.add$1(t1, new A.DeduplicationEventProcessor(A.ListQueue$(type$.int), options));
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$Sentry__initDefaultValues, $async$completer);
    },
    Sentry__init(options, appRunner, callAppRunnerInRunZonedGuarded) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        hub, t1, t2, t3, t4, t5, headers, t6, header, $async$temp1;
      var $async$Sentry__init = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($.$get$Sentry__hub().get$isEnabled())
                options.logger$2(B.SentryLevel_warning, "Sentry has been already initialized. Previous configuration will be overwritten.");
              $async$temp1 = A;
              $async$goto = 4;
              return A._asyncAwait(A.Sentry__setDefaultConfiguration(options), $async$Sentry__init);
            case 4:
              // returning from await.
              $async$goto = $async$temp1.boolConversionCheck($async$result) ? 2 : 3;
              break;
            case 2:
              // then
              hub = $.$get$Sentry__hub();
              if (options.dsn == null)
                A.throwExpression(A.ArgumentError$("DSN is required.", null));
              t1 = A.ListQueue$(type$._StackItem);
              t2 = new A.Hub(t1, options, new A.SentryId("00000000000000000000000000000000"));
              options.__SentryOptions_recorder_AI = new A.ClientReportRecorder(A.utils__getUtcDateTime$closure(), A.LinkedHashMap_LinkedHashMap$_empty(type$._QuantityKey, type$.int));
              if (options.transport instanceof A.NoOpTransport) {
                if (options.httpClient instanceof A.NoOpClient) {
                  t3 = A.zoneClient();
                  options.httpClient = t3 == null ? new A.BrowserClient(A.LinkedHashSet_LinkedHashSet$_empty(type$.HttpRequest)) : t3;
                }
                t3 = options.dsn;
                t3.toString;
                t3 = A.Dsn_Dsn$parse(t3);
                t4 = options.get$recorder();
                options.__SentryOptions_sdk_A === $ && A.throwLateFieldNI("sdk");
                t5 = type$.String;
                headers = A.LinkedHashMap_LinkedHashMap$_literal(["Content-Type", "application/x-sentry-envelope"], t5, t5);
                t4 = new A.HttpTransport(options, t3, new A.RateLimiter(options, A.LinkedHashMap_LinkedHashMap$_empty(type$.DataCategory, type$.DateTime)), t4, headers);
                t5 = options.__SentryOptions_sdk_A;
                t6 = t3.secretKey;
                header = "Sentry sentry_version=7, sentry_client=" + (t5.name + "/" + t5.version) + ", sentry_key=" + t3.publicKey;
                t4.__HttpTransport__credentialBuilder_A = new A._CredentialBuilder(t6 != null ? header + (", sentry_secret=" + t6) : header, A.utils__getUtcDateTime$closure());
                options.transport = t4;
              }
              t1._add$1(0, t1.$ti._precomputed1._as(new A._StackItem(new A.SentryClient(options, null), A.Scope$(options))));
              t2._isEnabled = true;
              t2.__Hub__throwableToSpan_F = new A._WeakMap(new A.Expando(new WeakMap(), type$.Expando_Object), options);
              $.Sentry__hub = t2;
              $async$goto = 5;
              return A._asyncAwait(hub.close$0(0), $async$Sentry__init);
            case 5:
              // returning from await.
            case 3:
              // join
              $async$goto = 6;
              return A._asyncAwait(A.Sentry__callIntegrations(A.List_List$unmodifiable(options._sentry_options$_integrations, type$.Integration_SentryOptions), options), $async$Sentry__init);
            case 6:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$Sentry__init, $async$completer);
    },
    Sentry__callIntegrations(integrations, options) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        t1;
      var $async$Sentry__callIntegrations = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.get$iterator$ax(integrations);
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              $async$goto = 4;
              return A._asyncAwait(t1.get$current().call$2($.$get$HubAdapter__instance(), options), $async$Sentry__callIntegrations);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$Sentry__callIntegrations, $async$completer);
    },
    Sentry_close() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        hub;
      var $async$Sentry_close = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              hub = $.$get$Sentry__hub();
              $.Sentry__hub = $.$get$NoOpHub__instance();
              $async$goto = 2;
              return A._asyncAwait(hub.close$0(0), $async$Sentry_close);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$Sentry_close, $async$completer);
    },
    Sentry__setDefaultConfiguration(options) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, t1, t2;
      var $async$Sentry__setDefaultConfiguration = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = options.dsn;
              t2 = t1 == null ? null : t1.length === 0;
              $async$goto = t2 === true ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncAwait(A.Sentry_close(), $async$Sentry__setDefaultConfiguration);
            case 5:
              // returning from await.
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
              t1.toString;
              A.Dsn_Dsn$parse(t1);
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Sentry__setDefaultConfiguration, $async$completer);
    },
    getUtcDateTime() {
      return new A.DateTime(Date.now(), false).toUtc$0();
    },
    formatDateAsIso8601WithMillisPrecision(date) {
      var iso = date.toIso8601String$0(),
        millisecondSeparatorIndex = B.JSString_methods.lastIndexOf$1(iso, ".");
      return (millisecondSeparatorIndex !== -1 ? B.JSString_methods.substring$2(iso, 0, millisecondSeparatorIndex + 4) : iso) + "Z";
    },
    jsonSerializationFallback(nonEncodable) {
      if (nonEncodable == null)
        return null;
      return J.toString$0$(nonEncodable);
    },
    _combine(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    IterableExtension_firstWhereOrNull(_this, predicate, $T) {
      var t1, item;
      for (t1 = _this.get$iterator(_this); t1.moveNext$0();) {
        item = t1.get$current();
        if (A.boolConversionCheck(predicate.call$1(item)))
          return item;
      }
      return null;
    },
    isAllTheSame(iter) {
      var firstValue, t1, t2, value;
      if (iter.get$length(iter) === 0)
        return true;
      firstValue = iter.get$first(iter);
      for (t1 = A.SubListIterable$(iter, 1, null, iter.$ti._eval$1("ListIterable.E")), t2 = t1.$ti, t1 = new A.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        value = t1.__internal$_current;
        if (!J.$eq$(value == null ? t2._as(value) : value, firstValue))
          return false;
      }
      return true;
    },
    replaceFirstNull(list, element, $E) {
      var index = B.JSArray_methods.indexOf$1(list, null);
      if (index < 0)
        throw A.wrapException(A.ArgumentError$(A.S(list) + " contains no null elements.", null));
      B.JSArray_methods.$indexSet(list, index, element);
    },
    replaceWithNull(list, element, $E) {
      var index = B.JSArray_methods.indexOf$1(list, element);
      if (index < 0)
        throw A.wrapException(A.ArgumentError$(A.S(list) + " contains no elements matching " + element.toString$0(0) + ".", null));
      B.JSArray_methods.$indexSet(list, index, null);
    },
    countCodeUnits(string, codeUnit) {
      var t1, t2, count, t3;
      for (t1 = new A.CodeUnits(string), t2 = type$.CodeUnits, t1 = new A.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"), count = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if ((t3 == null ? t2._as(t3) : t3) === codeUnit)
          ++count;
      }
      return count;
    },
    findLineStart(context, text, column) {
      var beginningOfLine, index, lineStart;
      if (text.length === 0)
        for (beginningOfLine = 0; true;) {
          index = B.JSString_methods.indexOf$2(context, "\n", beginningOfLine);
          if (index === -1)
            return context.length - beginningOfLine >= column ? beginningOfLine : null;
          if (index - beginningOfLine >= column)
            return beginningOfLine;
          beginningOfLine = index + 1;
        }
      index = B.JSString_methods.indexOf$1(context, text);
      for (; index !== -1;) {
        lineStart = index === 0 ? 0 : B.JSString_methods.lastIndexOf$2(context, "\n", index - 1) + 1;
        if (column === index - lineStart)
          return lineStart;
        index = B.JSString_methods.indexOf$2(context, text, index + 1);
      }
      return null;
    },
    UuidUtil_mathRNG(seed) {
      var b, rand, i, t1;
      A._asInt(seed);
      b = new Uint8Array(16);
      if (seed === -1)
        rand = $.$get$UuidUtil__random();
      else {
        rand = new A._Random();
        rand._Random$1(seed);
      }
      for (i = 0; i < 16; ++i) {
        t1 = rand.nextInt$1(256);
        if (!(i < 16))
          return A.ioore(b, i);
        b[i] = t1;
      }
      return b;
    },
    Analytics_trackAssetCreated(asset) {
      var _null = null;
      if (!A.boolConversionCheck($.$get$Analytics_telemetry()) || $.$get$Analytics_application() == null)
        return;
      $.$get$Analytics_connectorApi().track$2$seededConnectorTracking(0, $.$get$Analytics_application().id, new A.SeededConnectorTracking(_null, _null, new A.SeededTrackedAssetEvent(_null, new A.ReferencedAsset(_null, asset, _null), A.TrackedAssetEventIdentifierDescriptionPairs$(_null, B.C_TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnum, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), _null), _null, _null, _null, _null, _null, _null));
    },
    Backtracking_update() {
      var local, error, stackTrace, exception;
      try {
        local = type$.JsObject._as(J.$index$asx(J.$index$asx($.$get$_context().$index(0, "chrome"), "storage"), "local"));
        local.callMethod$2("get", ["pce_backtrack_sites", A.backtracking_Backtracking_updateCallback$closure()]);
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        $.$get$Sentry__hub().captureException$4$hint$stackTrace$withScope(error, null, stackTrace, null);
      }
    },
    Backtracking_updateCallback(result) {
      var backtracked, href, t1, site, t2, t3,
        _s19_ = "pce_backtrack_sites";
      type$.JsObject._as(result);
      backtracked = A._setArrayType([], type$.JSArray_String);
      href = type$.Location._as(window.location).href;
      if (result.$index(0, _s19_) != null && !J.$eq$(result.$index(0, _s19_), "undefined"))
        for (t1 = J.get$iterator$ax(type$.Iterable_dynamic._as(result.$index(0, _s19_))); t1.moveNext$0();) {
          site = t1.get$current();
          if (!J.$eq$(site, href))
            B.JSArray_methods.add$1(backtracked, A._asString(site));
        }
      t1 = backtracked.length;
      t2 = $.$get$LocalState__singleton();
      t3 = t2.settings.backtrackLimit;
      if (t1 >= t3)
        backtracked = B.JSArray_methods.sublist$1(backtracked, t1 - 1 - (t3 - 2));
      B.JSArray_methods.add$1(backtracked, href);
      t1 = A._arrayInstanceType(backtracked)._eval$1("ReversedListIterable<1>");
      t2.set$backtracked(A.List_List$of(new A.ReversedListIterable(backtracked, t1), true, t1._eval$1("ListIterable.E")));
      $.$get$_context().callMethod$2("setBacktrackList", [B.C_JsonCodec.encode$2$toEncodable(t2.backtracked, null)]);
    },
    OS_connected() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, t1, t2, t3, exception, _context, $async$exception;
      var $async$OS_connected = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _context = null;
              $async$handler = 4;
              t1 = $.$get$PiecesApi_connectorApi();
              t2 = $.$get$LocalState__singleton();
              t3 = t2.config.platform;
              if (t3 == null)
                t3 = B.PlatformEnum_MACOS;
              $async$goto = 7;
              return A._asyncAwait(t1.connect$1$seededConnectorConnection(new A.SeededConnectorConnection(null, new A.SeededTrackedApplication(null, B.ApplicationNameEnum_GOOGLE_CHROME_EXTENSION_MV3, "2.6.1", t3, null, t2.settings.telemetry ? B.PrivacyEnum_OPEN : B.PrivacyEnum_CLOSED))), $async$OS_connected);
            case 7:
              // returning from await.
              _context = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              if (B.Window_methods.confirm$1(window, "Failed to connect to Pieces OS!\n\nWould you like to launch Pieces OS?"))
                $.$get$_context().callMethod$2("open", ["pieces://"]);
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $.$get$LocalState__singleton().set$context(_context);
              $async$goto = 8;
              return A._asyncAwait(A.OS_compatibility(), $async$OS_connected);
            case 8:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$OS_connected, $async$completer);
    },
    OS_cloud(button) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, t1, user, profile;
      var $async$OS_cloud = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(A.OS_connected(), $async$OS_cloud);
            case 3:
              // returning from await.
              if (!$async$result) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = $.$get$LocalState__singleton().context;
              user = t1 == null ? null : t1.user;
              $async$goto = user == null ? 4 : 6;
              break;
            case 4:
              // then
              $async$goto = B.Window_methods.confirm$1(window, "You are not signed in to Pieces. You need to be signed in to use this feature.\n\nSign in now?") ? 7 : 8;
              break;
            case 7:
              // then
              button.innerText = "Signing in...";
              $async$goto = 9;
              return A._asyncAwait($.$get$PiecesApi_osApi().signIntoOS$0(), $async$OS_cloud);
            case 9:
              // returning from await.
              profile = $async$result;
              if (profile == null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = profile.allocation;
              if (t1 != null)
                t1 = t1.status.cloud === B.AllocationStatusEnum_RUNNING;
              else
                t1 = false;
              if (t1) {
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              }
              button.innerText = "Connecting to cloud...";
              $async$goto = 10;
              return A._asyncAwait(A.OS_connectToCloud(profile), $async$OS_cloud);
            case 10:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              $async$goto = user.allocation == null ? 11 : 12;
              break;
            case 11:
              // then
              button.innerText = "Connecting to cloud...";
              $async$goto = 13;
              return A._asyncAwait(A.OS_connectToCloud(user), $async$OS_cloud);
            case 13:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 12:
              // join
            case 5:
              // join
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$OS_cloud, $async$completer);
    },
    OS_compatibility() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, t1, t2, parts, major, minor, patch, preReleaseString, preReleaseList, build, osVersion, minVersion, os;
      var $async$OS_compatibility = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($.$get$PiecesApi_wellKnownApi().getWellKnownVersion$0(), $async$OS_compatibility);
            case 3:
              // returning from await.
              os = $async$result;
              if (B.JSString_methods.contains$1(os, "debug") || B.JSString_methods.contains$1(os, "staging")) {
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              }
              if (B.JSString_methods.trim$0(os).length === 0)
                A.throwExpression(A.FormatException$("Cannot parse empty string into version", null, null));
              t1 = $.$get$Version__versionRegex();
              t2 = t1._nativeRegExp;
              if (!t2.test(os))
                A.throwExpression(A.FormatException$("Not a properly formatted version string", null, null));
              t1 = t1.firstMatch$1(os)._match;
              if (1 >= t1.length) {
                $async$returnValue = A.ioore(t1, 1);
                // goto return
                $async$goto = 1;
                break;
              }
              parts = t1[1].split(".");
              t2 = parts.length;
              if (0 >= t2) {
                $async$returnValue = A.ioore(parts, 0);
                // goto return
                $async$goto = 1;
                break;
              }
              major = A.int_parse(parts[0], null);
              if (t2 > 1) {
                minor = A.int_parse(parts[1], null);
                patch = t2 > 2 ? A.int_parse(parts[2], null) : null;
              } else {
                minor = null;
                patch = null;
              }
              if (3 >= t1.length) {
                $async$returnValue = A.ioore(t1, 3);
                // goto return
                $async$goto = 1;
                break;
              }
              preReleaseString = t1[3];
              if (preReleaseString == null)
                preReleaseString = "";
              t2 = type$.JSArray_String;
              preReleaseList = A._setArrayType([], t2);
              if (B.JSString_methods.trim$0(preReleaseString).length !== 0)
                preReleaseList = A._setArrayType(preReleaseString.split("."), t2);
              if (5 >= t1.length) {
                $async$returnValue = A.ioore(t1, 5);
                // goto return
                $async$goto = 1;
                break;
              }
              build = t1[5];
              if (build == null)
                build = "";
              t1 = minor == null ? 0 : minor;
              osVersion = A.Version$(major, t1, patch == null ? 0 : patch, build, preReleaseList);
              minVersion = A.Version$(5, 0, 0, "", B.List_empty1);
              t1 = A.Version__compare(osVersion, A.Version$(6, 0, 0, "", B.List_empty1));
              if (t1 >= 0) {
                B.Window_methods.alert$1(window, "This extension is out of date! Please upgrade to the latest version available.");
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = A.Version__compare(osVersion, minVersion);
              if (t1 < 0) {
                B.Window_methods.alert$1(window, "Pieces OS is out of date! Please upgrade to the latest version available.");
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$OS_compatibility, $async$completer);
    },
    OS_connectToCloud(user) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, t1, allocation, i;
      var $async$OS_connectToCloud = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.dynamic, allocation = null, i = 0;
            case 3:
              // for condition
              if (!(i < 10)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(A.Future_Future$delayed(A.Duration$(3), null, t1), $async$OS_connectToCloud);
            case 6:
              // returning from await.
              $async$goto = 7;
              return A._asyncAwait($.$get$PiecesApi_allocationsApi().allocationsConnectNewCloud$1$userProfile(user), $async$OS_connectToCloud);
            case 7:
              // returning from await.
              allocation = $async$result;
              if (allocation.status.cloud === B.AllocationStatusEnum_RUNNING) {
                // goto after for
                $async$goto = 5;
                break;
              }
            case 4:
              // for update
              ++i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $.$get$LocalState__singleton().allocation = allocation;
              if (allocation == null || allocation.status.cloud !== B.AllocationStatusEnum_RUNNING) {
                B.Window_methods.alert$1(window, "Unable to connect to Pieces Cloud!\nPlease try again in a few minutes.");
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$OS_connectToCloud, $async$completer);
    },
    CustomCodeDetection_detect(host) {
      var t1, t2,
        _s16_ = "querySelectorAll";
      switch (host) {
        case B.CustomDetectionWebsitesEnum_0:
        case B.CustomDetectionWebsitesEnum_2:
        case B.CustomDetectionWebsitesEnum_4:
          t1 = type$.Element;
          t2 = document;
          A.checkTypeBound(t1, t1, "T", _s16_);
          return new A._FrozenElementList(t2.querySelectorAll("pre"), type$._FrozenElementList_Element);
        case B.CustomDetectionWebsitesEnum_5:
          t1 = type$.Element;
          t2 = document;
          A.checkTypeBound(t1, t1, "T", _s16_);
          return new A._FrozenElementList(t2.querySelectorAll("figure"), type$._FrozenElementList_Element);
        case B.CustomDetectionWebsitesEnum_6:
          t1 = type$.Element;
          t2 = document;
          A.checkTypeBound(t1, t1, "T", _s16_);
          return new A._FrozenElementList(t2.querySelectorAll(".blob-content"), type$._FrozenElementList_Element);
        case B.CustomDetectionWebsitesEnum_1:
          t1 = type$.Element;
          t2 = document;
          A.checkTypeBound(t1, t1, "T", _s16_);
          return new A._FrozenElementList(t2.querySelectorAll(".CodeMirror-lines"), type$._FrozenElementList_Element);
        case B.CustomDetectionWebsitesEnum_3:
          t1 = type$.Element;
          t2 = document;
          A.checkTypeBound(t1, t1, "T", _s16_);
          return new A._FrozenElementList(t2.querySelectorAll(".code-listing"), type$._FrozenElementList_Element);
        default:
          return A._setArrayType([], type$.JSArray_Element);
      }
    },
    Button_create(text) {
      var span, src, t2, e,
        t1 = document,
        button = t1.createElement("button");
      button.className = "pieces-btn pieces-" + A.stringReplaceAllUnchecked(text, " ", "-").toLowerCase();
      span = t1.createElement("span");
      span.className = "pieces-btn-text";
      span.innerText = text;
      if ($.$get$LocalState__singleton().settings.theme === B.ElementThemeEnum_0)
        if (B.JSString_methods.contains$1(text.toLowerCase(), "save"))
          src = "https://storage.googleapis.com/pieces-web-extensions-cdn/pieces.png";
        else {
          t2 = B.JSString_methods.contains$1(text.toLowerCase(), "copy") ? "https://storage.googleapis.com/pieces-web-extensions-cdn/copy.png" : "https://storage.googleapis.com/pieces-web-extensions-cdn/link.png";
          src = t2;
        }
      else if (B.JSString_methods.contains$1(text.toLowerCase(), "save"))
        src = "https://storage.googleapis.com/pieces-web-extensions-cdn/pieces-light.png";
      else {
        t2 = B.JSString_methods.contains$1(text.toLowerCase(), "copy") ? "https://storage.googleapis.com/pieces-web-extensions-cdn/copy_light.png" : "https://storage.googleapis.com/pieces-web-extensions-cdn/link-light.png";
        src = t2;
      }
      e = t1.createElement("img");
      B.ImageElement_methods.set$src(e, src);
      e.className = A.ClassesEnumExtension_get_selector(B.ClassesEnum_3);
      button.appendChild(e);
      button.appendChild(span);
      return button;
    },
    Buttons_create() {
      var text,
        _s13_ = "Copy and Save",
        buttons = document.createElement("div");
      buttons.className = A.ClassesEnumExtension_get_selector(B.ClassesEnum_1);
      switch ($.$get$LocalState__singleton().settings.mainBtn) {
        case B.MainButtonFunctionalityEnum_2:
          text = _s13_;
          break;
        case B.MainButtonFunctionalityEnum_0:
          text = "Copy";
          break;
        case B.MainButtonFunctionalityEnum_1:
          text = "Save";
          break;
        default:
          text = _s13_;
      }
      buttons.appendChild(A.Button_create(text));
      buttons.appendChild(A.Button_create("Share"));
      return buttons;
    },
    Styles_setLogo() {
      var logos, t4,
        t1 = A.ClassesEnumExtension_get_value(B.ClassesEnum_3),
        t2 = type$.Element,
        t3 = document;
      A.checkTypeBound(t2, t2, "T", "querySelectorAll");
      t2 = type$._FrozenElementList_Element;
      logos = new A._FrozenElementList(t3.querySelectorAll(t1), t2);
      for (t1 = new A.ListIterator(logos, logos.get$length(logos), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        t3 = (t3 == null ? t2._as(t3) : t3).style;
        t3.marginBottom = "0";
        t3.marginTop = "0";
        t3.marginRight = "4px";
        t3.marginLeft = "0";
        t4 = B.CssStyleDeclaration_methods._browserPropertyName$1(t3, "border-radius");
        t3.setProperty(t4, "50%", "");
        t4 = B.CssStyleDeclaration_methods._browserPropertyName$1(t3, "filter");
        t3.setProperty(t4, "none", "");
        t4 = B.CssStyleDeclaration_methods._browserPropertyName$1(t3, "float");
        t3.setProperty(t4, "left", "");
        t3.width = "16px";
        t3.height = "16px";
      }
    },
    Styles_setButtonsContainer() {
      var buttonWrappers, t4, t5, placement,
        t1 = A.ClassesEnumExtension_get_value(B.ClassesEnum_1),
        t2 = type$.Element,
        t3 = document;
      A.checkTypeBound(t2, t2, "T", "querySelectorAll");
      t2 = type$._FrozenElementList_Element;
      buttonWrappers = new A._FrozenElementList(t3.querySelectorAll(t1), t2);
      for (t1 = new A.ListIterator(buttonWrappers, buttonWrappers.get$length(buttonWrappers), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        t4 = t3.style;
        t4.border = "none";
        t4.display = "flex";
        t5 = B.CssStyleDeclaration_methods._browserPropertyName$1(t4, "opacity");
        t4.setProperty(t5, "0", "");
        t4.width = "auto";
        t5 = B.CssStyleDeclaration_methods._browserPropertyName$1(t4, "transition");
        t4.setProperty(t5, "opacity .3s", "");
        t5 = B.CssStyleDeclaration_methods._browserPropertyName$1(t4, "transition-timing-function");
        t4.setProperty(t5, "ease-out", "");
        t4.height = "26px";
        t4.marginTop = "10px";
        t4.marginBottom = "10px";
        placement = $.$get$LocalState__singleton().settings.placement;
        if (placement === B.ButtonPlacementOptionsEnum_1 || placement === B.ButtonPlacementOptionsEnum_3) {
          t3 = t3.style;
          t4 = B.CssStyleDeclaration_methods._browserPropertyName$1(t3, "justify-content");
          t3.setProperty(t4, "right", "");
        }
      }
    },
    Styles_setMainContainer() {
      var codeWrappers, placement, t4, t5, t6, lines,
        t1 = A.ClassesEnumExtension_get_value(B.ClassesEnum_0),
        t2 = type$.Element,
        t3 = document;
      A.checkTypeBound(t2, t2, "T", "querySelectorAll");
      t2 = type$._FrozenElementList_Element;
      codeWrappers = new A._FrozenElementList(t3.querySelectorAll(t1), t2);
      placement = $.$get$LocalState__singleton().settings.placement;
      for (t1 = new A.ListIterator(codeWrappers, codeWrappers.get$length(codeWrappers), t2._eval$1("ListIterator<ListMixin.E>")), t3 = placement !== B.ButtonPlacementOptionsEnum_1, t2 = t2._eval$1("ListMixin.E"), t4 = placement === B.ButtonPlacementOptionsEnum_0; t1.moveNext$0();) {
        t5 = t1.__internal$_current;
        if (t5 == null)
          t5 = t2._as(t5);
        t6 = t5.style;
        t6.textAlign = "left";
        if (!t3 || t4) {
          if ($.$get$LocalState__singleton().settings.host === "codepen.io") {
            lines = t5.querySelector(".CodeMirror-lines");
            if (lines != null) {
              t6 = lines.style;
              t6.paddingBottom = "0";
            }
          }
          t5 = t5.style;
          t5.marginTop = "10px";
        }
      }
    },
    Styles_setButtons() {
      var buttons, t4, t5, _s3_ = "4px",
        t1 = A.ClassesEnumExtension_get_value(B.ClassesEnum_2),
        t2 = type$.Element,
        t3 = document;
      A.checkTypeBound(t2, t2, "T", "querySelectorAll");
      t2 = type$._FrozenElementList_Element;
      buttons = new A._FrozenElementList(t3.querySelectorAll(t1), t2);
      for (t1 = new A.ListIterator(buttons, buttons.get$length(buttons), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        t3 = (t3 == null ? t2._as(t3) : t3).style;
        t3.width = "auto";
        t3.fontSize = "12px";
        t3.border = "1px solid #212121";
        t4 = B.CssStyleDeclaration_methods._browserPropertyName$1(t3, "border-radius");
        t3.setProperty(t4, "16px", "");
        t3.marginRight = _s3_;
        t3.paddingLeft = _s3_;
        t3.paddingRight = "6px";
        t3.paddingTop = _s3_;
        t3.paddingBottom = _s3_;
        t3.lineHeight = "normal";
        t3.height = "fit-content";
        t3.cursor = "pointer";
        t4 = B.CssStyleDeclaration_methods._browserPropertyName$1(t3, "user-select");
        t3.setProperty(t4, "none", "");
        t3.display = "flex";
        t4 = B.CssStyleDeclaration_methods._browserPropertyName$1(t3, "align-items");
        t3.setProperty(t4, "center", "");
        t4 = $.$get$LocalState__singleton();
        t5 = t4.settings.theme === B.ElementThemeEnum_0 ? "#212121" : "#ffffff";
        t3.backgroundColor = t5;
        t4 = t4.settings.theme === B.ElementThemeEnum_0 ? "#ffffff" : "#212121";
        t3.color = t4;
      }
    },
    Styles_opacity(element, opacity) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        t1;
      var $async$Styles_opacity = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (element.className === A.ClassesEnumExtension_get_selector(B.ClassesEnum_1)) {
                t1 = element.style;
                B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), opacity, "");
              }
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$Styles_opacity, $async$completer);
    }
  },
  J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$allocateGrowable($length, $E) {
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed(allocation, $E) {
      return J.JSArray_markFixedList(A._setArrayType(allocation, $E._eval$1("JSArray<0>")), $E);
    },
    JSArray_markFixedList(list, $T) {
      list.fixed$length = Array;
      return list;
    },
    JSArray_markUnmodifiableList(list) {
      list.fixed$length = Array;
      list.immutable$list = Array;
      return list;
    },
    JSArray__compareAny(a, b) {
      var t1 = type$.Comparable_dynamic;
      return J.compareTo$1$ns(t1._as(a), t1._as(b));
    },
    JSString__isWhitespace(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = B.JSString_methods._codeUnitAt$1(string, index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace(string, index) {
      var index0, codeUnit;
      for (; index > 0; index = index0) {
        index0 = index - 1;
        codeUnit = B.JSString_methods.codeUnitAt$1(string, index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$n(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$ns(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$z(receiver) {
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    set$length$asx(receiver, value) {
      return J.getInterceptor$asx(receiver).set$length(receiver, value);
    },
    get$children$x(receiver) {
      return J.getInterceptor$x(receiver).get$children(receiver);
    },
    get$classes$x(receiver) {
      return J.getInterceptor$x(receiver).get$classes(receiver);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$key$z(receiver) {
      return J.getInterceptor$z(receiver).get$key(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$message$z(receiver) {
      return J.getInterceptor$z(receiver).get$message(receiver);
    },
    get$offset$z(receiver) {
      return J.getInterceptor$z(receiver).get$offset(receiver);
    },
    get$setRequestHeader$x(receiver) {
      return J.getInterceptor$x(receiver).get$setRequestHeader(receiver);
    },
    get$source$z(receiver) {
      return J.getInterceptor$z(receiver).get$source(receiver);
    },
    get$values$z(receiver) {
      return J.getInterceptor$z(receiver).get$values(receiver);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (receiver.constructor == Array || typeof receiver == "string" || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    _addEventListener$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver)._addEventListener$3(receiver, a0, a1, a2);
    },
    _removeEventListener$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver)._removeEventListener$3(receiver, a0, a1, a2);
    },
    _replaceChild$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
    },
    add$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    addAll$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).addAll$1(receiver, a0);
    },
    allMatches$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
    },
    allMatches$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).allMatches$2(receiver, a0, a1);
    },
    cast$1$0$ax(receiver, $T1) {
      return J.getInterceptor$ax(receiver).cast$1$0(receiver, $T1);
    },
    codeUnitAt$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
    },
    compareTo$1$ns(receiver, a0) {
      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
    },
    contains$1$asx(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    endsWith$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).endsWith$1(receiver, a0);
    },
    insertAdjacentElement$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).insertAdjacentElement$2(receiver, a0, a1);
    },
    insertBefore$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).insertBefore$2(receiver, a0, a1);
    },
    map$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    matchAsPrefix$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
    },
    noSuchMethod$1$(receiver, a0) {
      return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);
    },
    remove$0$x(receiver) {
      return J.getInterceptor$x(receiver).remove$0(receiver);
    },
    replaceWith$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
    },
    send$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).send$1(receiver, a0);
    },
    skip$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    sort$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).sort$1(receiver, a0);
    },
    toList$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).toList$0(receiver);
    },
    toRadixString$1$n(receiver, a0) {
      return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    trim$0$s(receiver) {
      return J.getInterceptor$s(receiver).trim$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _._length = t1;
      _._index = 0;
      _._current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    },
    noSuchMethod$1(receiver, invocation) {
      type$.Invocation._as(invocation);
      throw A.wrapException(A.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    },
    get$runtimeType(receiver) {
      return A.getRuntimeType(receiver);
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType(receiver) {
      return B.Type_bool_lhE;
    },
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return B.Type_JSObject_8k0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + A.S(J.toString$0$(dartClosure));
    },
    $isFunction: 1
  };
  J.JSArray.prototype = {
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    add$1(receiver, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("add"));
      receiver.push(value);
    },
    removeAt$1(receiver, index) {
      var t1;
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("removeAt"));
      t1 = receiver.length;
      if (index >= t1)
        throw A.wrapException(A.RangeError$value(index, null));
      return receiver.splice(index, 1)[0];
    },
    insert$2(receiver, index, value) {
      var t1;
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("insert"));
      t1 = receiver.length;
      if (index > t1)
        throw A.wrapException(A.RangeError$value(index, null));
      receiver.splice(index, 0, value);
    },
    insertAll$2(receiver, index, iterable) {
      var insertionLength, end;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(iterable);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("insertAll"));
      A.RangeError_checkValueInInterval(index, 0, receiver.length, "index");
      if (!type$.EfficientLengthIterable_dynamic._is(iterable))
        iterable = J.toList$0$ax(iterable);
      insertionLength = J.get$length$asx(iterable);
      receiver.length = receiver.length + insertionLength;
      end = index + insertionLength;
      this.setRange$4(receiver, end, receiver.length, receiver, index);
      this.setRange$3(receiver, index, end, iterable);
    },
    removeLast$0(receiver) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("removeLast"));
      if (receiver.length === 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, -1));
      return receiver.pop();
    },
    _removeWhere$2(receiver, test, removeMatching) {
      var retained, end, i, element, t1;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      retained = [];
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (!A.boolConversionCheck(test.call$1(element)))
          retained.push(element);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      t1 = retained.length;
      if (t1 === end)
        return;
      this.set$length(receiver, t1);
      for (i = 0; i < retained.length; ++i)
        receiver[i] = retained[i];
    },
    addAll$1(receiver, collection) {
      var t1;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(collection);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("addAll"));
      if (Array.isArray(collection)) {
        this._addAllFromArray$1(receiver, collection);
        return;
      }
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current());
    },
    _addAllFromArray$1(receiver, array) {
      var len, i;
      type$.JSArray_dynamic._as(array);
      len = array.length;
      if (len === 0)
        return;
      if (receiver === array)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
      for (i = 0; i < len; ++i)
        receiver.push(array[i]);
    },
    clear$0(receiver) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("clear"));
      receiver.length = 0;
    },
    forEach$1(receiver, f) {
      var end, i;
      A._arrayInstanceType(receiver)._eval$1("~(1)")._as(f);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1(receiver, f, $T) {
      var t1 = A._arrayInstanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    join$1(receiver, separator) {
      var i,
        list = A.List_List$filled(receiver.length, "", false, type$.String);
      for (i = 0; i < receiver.length; ++i)
        this.$indexSet(list, i, A.S(receiver[i]));
      return list.join(separator);
    },
    join$0($receiver) {
      return this.join$1($receiver, "");
    },
    skip$1(receiver, n) {
      return A.SubListIterable$(receiver, n, null, A._arrayInstanceType(receiver)._precomputed1);
    },
    firstWhere$2$orElse(receiver, test, orElse) {
      var end, i, element,
        t1 = A._arrayInstanceType(receiver);
      t1._eval$1("bool(1)")._as(test);
      t1._eval$1("1()?")._as(orElse);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (A.boolConversionCheck(test.call$1(element)))
          return element;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      throw A.wrapException(A.IterableElementError_noElement());
    },
    firstWhere$1($receiver, test) {
      return this.firstWhere$2$orElse($receiver, test, null);
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, "start", null));
      if (end == null)
        end = receiver.length;
      else if (end < start || end > receiver.length)
        throw A.wrapException(A.RangeError$range(end, start, receiver.length, "end", null));
      if (start === end)
        return A._setArrayType([], A._arrayInstanceType(receiver));
      return A._setArrayType(receiver.slice(start, end), A._arrayInstanceType(receiver));
    },
    sublist$1($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$last(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherList, otherStart, t1, i;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(iterable);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("setRange"));
      A.RangeError_checkValidRange(start, end, receiver.length);
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherList = iterable;
        otherStart = skipCount;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
    },
    setRange$3($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    sort$1(receiver, compare) {
      var t2,
        t1 = A._arrayInstanceType(receiver);
      t1._eval$1("int(1,1)?")._as(compare);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("sort"));
      t2 = compare == null ? J._interceptors_JSArray__compareAny$closure() : compare;
      A.Sort_sort(receiver, t2, t1._precomputed1);
    },
    indexOf$1(receiver, element) {
      var i,
        $length = receiver.length;
      if (0 >= $length)
        return -1;
      for (i = 0; i < $length; ++i) {
        if (!(i < receiver.length))
          return A.ioore(receiver, i);
        if (J.$eq$(receiver[i], element))
          return i;
      }
      return -1;
    },
    contains$1(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty(receiver) {
      return receiver.length !== 0;
    },
    toString$0(receiver) {
      return A.IterableBase_iterableToFullString(receiver, "[", "]");
    },
    toList$1$growable(receiver, growable) {
      var t1 = A._arrayInstanceType(receiver);
      return growable ? A._setArrayType(receiver.slice(0), t1) : J.JSArray_JSArray$markFixed(receiver.slice(0), t1._precomputed1);
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    set$length(receiver, newLength) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("set length"));
      if (newLength < 0)
        throw A.wrapException(A.RangeError$range(newLength, 0, null, "newLength", null));
      if (newLength > receiver.length)
        A._arrayInstanceType(receiver)._precomputed1._as(null);
      receiver.length = newLength;
    },
    $index(receiver, index) {
      A._asInt(index);
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._asInt(index);
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("indexed set"));
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $add(receiver, other) {
      var t1 = A._arrayInstanceType(receiver);
      t1._eval$1("List<1>")._as(other);
      t1 = A.List_List$of(receiver, true, t1._precomputed1);
      this.addAll$1(t1, other);
      return t1;
    },
    indexWhere$1(receiver, test) {
      var i;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      if (0 >= receiver.length)
        return -1;
      for (i = 0; i < receiver.length; ++i)
        if (A.boolConversionCheck(test.call$1(receiver[i])))
          return i;
      return -1;
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this._length !== $length)
        throw A.wrapException(A.throwConcurrentModificationError(t1));
      t2 = _this._index;
      if (t2 >= $length) {
        _this.set$_current(null);
        return false;
      }
      _this.set$_current(t1[t2]);
      ++_this._index;
      return true;
    },
    set$_current(_current) {
      this._current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  J.JSNumber.prototype = {
    compareTo$1(receiver, b) {
      var bIsNegative;
      A._asNum(b);
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    toInt$0(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".toInt()"));
    },
    round$0(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".round()"));
    },
    toRadixString$1(receiver, radix) {
      var result, match, t1, exponent;
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (B.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        A.throwExpression(A.UnsupportedError$("Unexpected toString result: " + result));
      t1 = match.length;
      if (1 >= t1)
        return A.ioore(match, 1);
      result = match[1];
      if (3 >= t1)
        return A.ioore(match, 3);
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + B.JSString_methods.$mul("0", exponent);
    },
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $add(receiver, other) {
      return receiver + other;
    },
    $mod(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      return result + other;
    },
    _tdivFast$1(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + other));
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1(receiver, other) {
      if (0 > other)
        throw A.wrapException(A.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    get$runtimeType(receiver) {
      return B.Type_num_cv7;
    },
    $isComparable: 1,
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {
    get$runtimeType(receiver) {
      return B.Type_int_tHn;
    },
    $isint: 1
  };
  J.JSNumNotInt.prototype = {
    get$runtimeType(receiver) {
      return B.Type_double_K1J;
    }
  };
  J.JSString.prototype = {
    codeUnitAt$1(receiver, index) {
      if (index < 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        A.throwExpression(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    _codeUnitAt$1(receiver, index) {
      if (index >= receiver.length)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    allMatches$2(receiver, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._StringAllMatchesIterable(string, receiver, start);
    },
    allMatches$1($receiver, string) {
      return this.allMatches$2($receiver, string, 0);
    },
    matchAsPrefix$2(receiver, string, start) {
      var t1, i, _null = null;
      if (start < 0 || start > string.length)
        throw A.wrapException(A.RangeError$range(start, 0, string.length, _null, _null));
      t1 = receiver.length;
      if (start + t1 > string.length)
        return _null;
      for (i = 0; i < t1; ++i)
        if (this.codeUnitAt$1(string, start + i) !== this._codeUnitAt$1(receiver, i))
          return _null;
      return new A.StringMatch(start, receiver);
    },
    $add(receiver, other) {
      return receiver + other;
    },
    endsWith$1(receiver, other) {
      var otherLength = other.length,
        t1 = receiver.length;
      if (otherLength > t1)
        return false;
      return other === this.substring$1(receiver, t1 - otherLength);
    },
    replaceFirst$2(receiver, from, to) {
      type$.Pattern._as(from);
      A.RangeError_checkValueInInterval(0, 0, receiver.length, "startIndex");
      return A.stringReplaceFirstUnchecked(receiver, from, to, 0);
    },
    split$1(receiver, pattern) {
      type$.Pattern._as(pattern);
      if (typeof pattern == "string")
        return A._setArrayType(receiver.split(pattern), type$.JSArray_String);
      else if (pattern instanceof A.JSSyntaxRegExp && pattern.get$_nativeAnchoredVersion().exec("").length - 2 === 0)
        return A._setArrayType(receiver.split(pattern._nativeRegExp), type$.JSArray_String);
      else
        return this._defaultSplit$1(receiver, pattern);
    },
    replaceRange$3(receiver, start, end, replacement) {
      var e = A.RangeError_checkValidRange(start, end, receiver.length);
      return A.stringReplaceRangeUnchecked(receiver, start, e, replacement);
    },
    _defaultSplit$1(receiver, pattern) {
      var t1, start, $length, match, matchStart, matchEnd,
        result = A._setArrayType([], type$.JSArray_String);
      for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), start = 0, $length = 1; t1.moveNext$0();) {
        match = t1.get$current();
        matchStart = match.get$start(match);
        matchEnd = match.get$end();
        $length = matchEnd - matchStart;
        if ($length === 0 && start === matchStart)
          continue;
        B.JSArray_methods.add$1(result, this.substring$2(receiver, start, matchStart));
        start = matchEnd;
      }
      if (start < receiver.length || $length > 0)
        B.JSArray_methods.add$1(result, this.substring$1(receiver, start));
      return result;
    },
    startsWith$2(receiver, pattern, index) {
      var endIndex;
      type$.Pattern._as(pattern);
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$range(index, 0, receiver.length, null, null));
      if (typeof pattern == "string") {
        endIndex = index + pattern.length;
        if (endIndex > receiver.length)
          return false;
        return pattern === receiver.substring(index, endIndex);
      }
      return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
    },
    startsWith$1($receiver, pattern) {
      return this.startsWith$2($receiver, pattern, 0);
    },
    substring$2(receiver, start, end) {
      return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length));
    },
    substring$1($receiver, start) {
      return this.substring$2($receiver, start, null);
    },
    trim$0(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (this._codeUnitAt$1(result, 0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    $mul(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw A.wrapException(B.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    padRight$1(receiver, width) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return receiver + this.$mul(" ", delta);
    },
    indexOf$2(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1($receiver, pattern) {
      return this.indexOf$2($receiver, pattern, 0);
    },
    lastIndexOf$2(receiver, pattern, start) {
      var t1, t2;
      if (start == null)
        start = receiver.length;
      else if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = pattern.length;
      t2 = receiver.length;
      if (start + t1 > t2)
        start = t2 - t1;
      return receiver.lastIndexOf(pattern, start);
    },
    lastIndexOf$1($receiver, pattern) {
      return this.lastIndexOf$2($receiver, pattern, null);
    },
    contains$2(receiver, other, startIndex) {
      var t1;
      type$.Pattern._as(other);
      t1 = receiver.length;
      if (startIndex > t1)
        throw A.wrapException(A.RangeError$range(startIndex, 0, t1, null, null));
      return A.stringContainsUnchecked(receiver, other, startIndex);
    },
    contains$1($receiver, other) {
      return this.contains$2($receiver, other, 0);
    },
    compareTo$1(receiver, other) {
      var t1;
      A._asString(other);
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$runtimeType(receiver) {
      return B.Type_String_k8F;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      if (index >= receiver.length)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isComparable: 1,
    $isPattern: 1,
    $isString: 1
  };
  A._CastIterableBase.prototype = {
    get$iterator(_) {
      var t1 = A._instanceType(this);
      return new A.CastIterator(J.get$iterator$ax(this.get$_source()), t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("CastIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.get$_source());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$_source());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$_source());
    },
    skip$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    elementAt$1(_, index) {
      return A._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));
    },
    contains$1(_, other) {
      return J.contains$1$asx(this.get$_source(), other);
    },
    toString$0(_) {
      return J.toString$0$(this.get$_source());
    }
  };
  A.CastIterator.prototype = {
    moveNext$0() {
      return this._source.moveNext$0();
    },
    get$current() {
      return this.$ti._rest[1]._as(this._source.get$current());
    },
    $isIterator: 1
  };
  A.CastIterable.prototype = {
    cast$1$0(_, $R) {
      return A.CastIterable_CastIterable(this._source, A._instanceType(this)._precomputed1, $R);
    },
    get$_source() {
      return this._source;
    }
  };
  A._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};
  A._CastListBase.prototype = {
    $index(_, index) {
      return this.$ti._rest[1]._as(J.$index$asx(this._source, A._asInt(index)));
    },
    $indexSet(_, index, value) {
      var t1 = this.$ti;
      J.$indexSet$ax(this._source, A._asInt(index), t1._precomputed1._as(t1._rest[1]._as(value)));
    },
    set$length(_, $length) {
      J.set$length$asx(this._source, $length);
    },
    add$1(_, value) {
      var t1 = this.$ti;
      J.add$1$ax(this._source, t1._precomputed1._as(t1._rest[1]._as(value)));
    },
    sort$1(_, compare) {
      var t1;
      this.$ti._eval$1("int(2,2)?")._as(compare);
      t1 = compare == null ? null : new A._CastListBase_sort_closure(this, compare);
      J.sort$1$ax(this._source, t1);
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  A._CastListBase_sort_closure.prototype = {
    call$2(v1, v2) {
      var t1 = this.$this.$ti,
        t2 = t1._precomputed1;
      t2._as(v1);
      t2._as(v2);
      t1 = t1._rest[1];
      return this.compare.call$2(t1._as(v1), t1._as(v2));
    },
    $signature() {
      return this.$this.$ti._eval$1("int(1,1)");
    }
  };
  A.CastList.prototype = {
    cast$1$0(_, $R) {
      return new A.CastList(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    get$_source() {
      return this._source;
    }
  };
  A.CastSet.prototype = {
    cast$1$0(_, $R) {
      return new A.CastSet(this._source, this._emptySet, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastSet<1,2>"));
    },
    add$1(_, value) {
      var t1 = this.$ti;
      return this._source.add$1(0, t1._precomputed1._as(t1._rest[1]._as(value)));
    },
    $isEfficientLengthIterable: 1,
    $isSet: 1,
    get$_source() {
      return this._source;
    }
  };
  A.CastMap.prototype = {
    cast$2$0(_, RK, RV) {
      var t1 = this.$ti;
      return new A.CastMap(this._source, t1._eval$1("@<1>")._bind$1(t1._rest[1])._bind$1(RK)._bind$1(RV)._eval$1("CastMap<1,2,3,4>"));
    },
    containsKey$1(key) {
      return this._source.containsKey$1(key);
    },
    $index(_, key) {
      return this.$ti._eval$1("4?")._as(this._source.$index(0, key));
    },
    $indexSet(_, key, value) {
      var t1 = this.$ti;
      t1._rest[2]._as(key);
      t1._rest[3]._as(value);
      this._source.$indexSet(0, t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    forEach$1(_, f) {
      this._source.forEach$1(0, new A.CastMap_forEach_closure(this, this.$ti._eval$1("~(3,4)")._as(f)));
    },
    get$keys() {
      var t1 = this.$ti;
      return A.CastIterable_CastIterable(this._source.get$keys(), t1._precomputed1, t1._rest[2]);
    },
    get$values(_) {
      var t1 = this._source,
        t2 = this.$ti;
      return A.CastIterable_CastIterable(t1.get$values(t1), t2._rest[1], t2._rest[3]);
    },
    get$length(_) {
      var t1 = this._source;
      return t1.get$length(t1);
    },
    get$isEmpty(_) {
      var t1 = this._source;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty(_) {
      var t1 = this._source;
      return t1.get$isNotEmpty(t1);
    },
    get$entries(_) {
      var t1 = this._source;
      return t1.get$entries(t1).map$1$1(0, new A.CastMap_entries_closure(this), this.$ti._eval$1("MapEntry<3,4>"));
    }
  };
  A.CastMap_forEach_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this.$ti;
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      this.f.call$2(t1._rest[2]._as(key), t1._rest[3]._as(value));
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1,2)");
    }
  };
  A.CastMap_entries_closure.prototype = {
    call$1(e) {
      var t2,
        t1 = this.$this.$ti;
      t1._eval$1("MapEntry<1,2>")._as(e);
      t2 = t1._rest[3];
      return new A.MapEntry(t1._rest[2]._as(e.key), t2._as(e.value), t1._eval$1("@<3>")._bind$1(t2)._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("MapEntry<3,4>(MapEntry<1,2>)");
    }
  };
  A.CastQueue.prototype = {
    cast$1$0(_, $R) {
      return new A.CastQueue(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastQueue<1,2>"));
    },
    add$1(_, value) {
      var t1 = this.$ti,
        t2 = this._source;
      t2._add$1(0, t2.$ti._precomputed1._as(t1._precomputed1._as(t1._rest[1]._as(value))));
    },
    $isEfficientLengthIterable: 1,
    $isQueue: 1,
    get$_source() {
      return this._source;
    }
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this._message;
    }
  };
  A.CodeUnits.prototype = {
    get$length(_) {
      return this.__internal$_string.length;
    },
    $index(_, i) {
      return B.JSString_methods.codeUnitAt$1(this.__internal$_string, A._asInt(i));
    }
  };
  A.nullFuture_closure.prototype = {
    call$0() {
      return A.Future_Future$value(null, type$.Null);
    },
    $signature: 58
  };
  A.SentinelValue.prototype = {};
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.ListIterator(_this, _this.get$length(_this), A._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$first(_) {
      if (this.get$length(this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.elementAt$1(0, 0);
    },
    contains$1(_, element) {
      var i, _this = this,
        $length = _this.get$length(_this);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(_this.elementAt$1(0, i), element))
          return true;
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return false;
    },
    join$1(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = A.S(_this.elementAt$1(0, 0));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        for (t1 = first, i = 1; i < $length; ++i) {
          t1 = t1 + separator + A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        for (i = 0, t1 = ""; i < $length; ++i) {
          t1 += A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    join$0($receiver) {
      return this.join$1($receiver, "");
    },
    where$1(_, test) {
      return this.super$Iterable$where(0, A._instanceType(this)._eval$1("bool(ListIterable.E)")._as(test));
    },
    map$1$1(_, toElement, $T) {
      var t1 = A._instanceType(this);
      return new A.MappedListIterable(this, t1._bind$1($T)._eval$1("1(ListIterable.E)")._as(toElement), t1._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    reduce$1(_, combine) {
      var $length, value, i, _this = this;
      A._instanceType(_this)._eval$1("ListIterable.E(ListIterable.E,ListIterable.E)")._as(combine);
      $length = _this.get$length(_this);
      if ($length === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      value = _this.elementAt$1(0, 0);
      for (i = 1; i < $length; ++i) {
        value = combine.call$2(value, _this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return value;
    },
    fold$1$2(_, initialValue, combine, $T) {
      var $length, value, i, _this = this;
      $T._as(initialValue);
      A._instanceType(_this)._bind$1($T)._eval$1("1(1,ListIterable.E)")._as(combine);
      $length = _this.get$length(_this);
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, _this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return value;
    },
    skip$1(_, count) {
      return A.SubListIterable$(this, count, null, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, growable, A._instanceType(this)._eval$1("ListIterable.E"));
    }
  };
  A.SubListIterable.prototype = {
    SubListIterable$3(_iterable, _start, _endOrLength, $E) {
      var endOrLength,
        t1 = this.__internal$_start;
      A.RangeError_checkNotNegative(t1, "start");
      endOrLength = this._endOrLength;
      if (endOrLength != null) {
        A.RangeError_checkNotNegative(endOrLength, "end");
        if (t1 > endOrLength)
          throw A.wrapException(A.RangeError$range(t1, 0, endOrLength, "start", null));
      }
    },
    get$_endIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this.__internal$_start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length(_) {
      var endOrLength,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this.__internal$_start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      if (typeof endOrLength !== "number")
        return endOrLength.$sub();
      return endOrLength - t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw A.wrapException(A.IndexError$(index, _this, "index", null, null));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    skip$1(_, count) {
      var newStart, endOrLength, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      newStart = _this.__internal$_start + count;
      endOrLength = _this._endOrLength;
      if (endOrLength != null && newStart >= endOrLength)
        return new A.EmptyIterable(_this.$ti._eval$1("EmptyIterable<1>"));
      return A.SubListIterable$(_this.__internal$_iterable, newStart, endOrLength, _this.$ti._precomputed1);
    },
    toList$1$growable(_, growable) {
      var $length, result, i, _this = this,
        start = _this.__internal$_start,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = J.JSArray_JSArray$fixed(0, _this.$ti._precomputed1);
        return t1;
      }
      result = A.List_List$filled($length, t2.elementAt$1(t1, start), false, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        B.JSArray_methods.$indexSet(result, i, t2.elementAt$1(t1, start + i));
        if (t2.get$length(t1) < end)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return result;
    }
  };
  A.ListIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.set$__internal$_current(null);
        return false;
      }
      _this.set$__internal$_current(t2.elementAt$1(t1, t3));
      ++_this.__internal$_index;
      return true;
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.MappedIterable.prototype = {
    get$iterator(_) {
      var t1 = A._instanceType(this);
      return new A.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("MappedIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.__internal$_iterable);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    }
  };
  A.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  A.MappedIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.set$__internal$_current(_this._f.call$1(t1.get$current()));
        return true;
      }
      _this.set$__internal$_current(null);
      return false;
    },
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("2?")._as(_current);
    }
  };
  A.MappedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  A.WhereIterable.prototype = {
    get$iterator(_) {
      return new A.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("WhereIterator<1>"));
    },
    map$1$1(_, toElement, $T) {
      var t1 = this.$ti;
      return new A.MappedIterable(this, t1._bind$1($T)._eval$1("1(2)")._as(toElement), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    }
  };
  A.WhereIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (A.boolConversionCheck(t2.call$1(t1.get$current())))
          return true;
      return false;
    },
    get$current() {
      return this._iterator.get$current();
    }
  };
  A.ExpandIterable.prototype = {
    get$iterator(_) {
      var t1 = this.$ti;
      return new A.ExpandIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, B.C_EmptyIterator, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("ExpandIterator<1,2>"));
    }
  };
  A.ExpandIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    moveNext$0() {
      var t1, t2, _this = this;
      if (_this._currentExpansion == null)
        return false;
      for (t1 = _this._iterator, t2 = _this._f; !_this._currentExpansion.moveNext$0();) {
        _this.set$__internal$_current(null);
        if (t1.moveNext$0()) {
          _this.set$_currentExpansion(null);
          _this.set$_currentExpansion(J.get$iterator$ax(t2.call$1(t1.get$current())));
        } else
          return false;
      }
      _this.set$__internal$_current(_this._currentExpansion.get$current());
      return true;
    },
    set$_currentExpansion(_currentExpansion) {
      this._currentExpansion = this.$ti._eval$1("Iterator<2>?")._as(_currentExpansion);
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("2?")._as(_current);
    },
    $isIterator: 1
  };
  A.TakeIterable.prototype = {
    get$iterator(_) {
      return new A.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount, A._instanceType(this)._eval$1("TakeIterator<1>"));
    }
  };
  A.EfficientLengthTakeIterable.prototype = {
    get$length(_) {
      var iterableLength = J.get$length$asx(this.__internal$_iterable),
        t1 = this._takeCount;
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  A.TakeIterator.prototype = {
    moveNext$0() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current() {
      if (this._remaining < 0) {
        this.$ti._precomputed1._as(null);
        return null;
      }
      return this._iterator.get$current();
    }
  };
  A.SkipIterable.prototype = {
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count", type$.int);
      A.RangeError_checkNotNegative(count, "count");
      return new A.SkipIterable(this.__internal$_iterable, this._skipCount + count, A._instanceType(this)._eval$1("SkipIterable<1>"));
    },
    get$iterator(_) {
      return new A.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount, A._instanceType(this)._eval$1("SkipIterator<1>"));
    }
  };
  A.EfficientLengthSkipIterable.prototype = {
    get$length(_) {
      var $length = J.get$length$asx(this.__internal$_iterable) - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count", type$.int);
      A.RangeError_checkNotNegative(count, "count");
      return new A.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + count, this.$ti);
    },
    $isEfficientLengthIterable: 1
  };
  A.SkipIterator.prototype = {
    moveNext$0() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current() {
      return this._iterator.get$current();
    }
  };
  A.SkipWhileIterable.prototype = {
    get$iterator(_) {
      return new A.SkipWhileIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("SkipWhileIterator<1>"));
    }
  };
  A.SkipWhileIterator.prototype = {
    moveNext$0() {
      var t1, t2, _this = this;
      if (!_this._hasSkipped) {
        _this._hasSkipped = true;
        for (t1 = _this._iterator, t2 = _this._f; t1.moveNext$0();)
          if (!A.boolConversionCheck(t2.call$1(t1.get$current())))
            return true;
      }
      return _this._iterator.moveNext$0();
    },
    get$current() {
      return this._iterator.get$current();
    }
  };
  A.EmptyIterable.prototype = {
    get$iterator(_) {
      return B.C_EmptyIterator;
    },
    get$isEmpty(_) {
      return true;
    },
    get$length(_) {
      return 0;
    },
    elementAt$1(_, index) {
      throw A.wrapException(A.RangeError$range(index, 0, 0, "index", null));
    },
    contains$1(_, element) {
      return false;
    },
    where$1(_, test) {
      this.$ti._eval$1("bool(1)")._as(test);
      return this;
    },
    map$1$1(_, toElement, $T) {
      this.$ti._bind$1($T)._eval$1("1(2)")._as(toElement);
      return new A.EmptyIterable($T._eval$1("EmptyIterable<0>"));
    },
    skip$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    },
    toList$1$growable(_, growable) {
      var t1 = J.JSArray_JSArray$fixed(0, this.$ti._precomputed1);
      return t1;
    }
  };
  A.EmptyIterator.prototype = {
    moveNext$0() {
      return false;
    },
    get$current() {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    $isIterator: 1
  };
  A.WhereTypeIterable.prototype = {
    get$iterator(_) {
      return new A.WhereTypeIterator(J.get$iterator$ax(this._source), this.$ti._eval$1("WhereTypeIterator<1>"));
    }
  };
  A.WhereTypeIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._source, t2 = this.$ti._precomputed1; t1.moveNext$0();)
        if (t2._is(t1.get$current()))
          return true;
      return false;
    },
    get$current() {
      return this.$ti._precomputed1._as(this._source.get$current());
    },
    $isIterator: 1
  };
  A.FixedLengthListMixin.prototype = {
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1(receiver, value) {
      A.instanceType(receiver)._eval$1("FixedLengthListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot add to a fixed-length list"));
    }
  };
  A.UnmodifiableListMixin.prototype = {
    $indexSet(_, index, value) {
      A._asInt(index);
      A._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    },
    add$1(_, value) {
      A._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot add to an unmodifiable list"));
    },
    sort$1(_, compare) {
      A._instanceType(this)._eval$1("int(UnmodifiableListMixin.E,UnmodifiableListMixin.E)?")._as(compare);
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    }
  };
  A.UnmodifiableListBase.prototype = {};
  A.ReversedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      var t1 = this._source,
        t2 = J.getInterceptor$asx(t1);
      return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
    }
  };
  A.Symbol.prototype = {
    get$hashCode(_) {
      var hash = this._hashCode;
      if (hash != null)
        return hash;
      hash = 664597 * J.get$hashCode$(this.__internal$_name) & 536870911;
      this._hashCode = hash;
      return hash;
    },
    toString$0(_) {
      return 'Symbol("' + A.S(this.__internal$_name) + '")';
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Symbol && this.__internal$_name == other.__internal$_name;
    },
    $isSymbol0: 1
  };
  A.__CastListBase__CastIterableBase_ListMixin.prototype = {};
  A.ConstantMapView.prototype = {};
  A.ConstantMap.prototype = {
    cast$2$0(_, RK, RV) {
      var t1 = A._instanceType(this);
      return A.Map_castFrom(this, t1._precomputed1, t1._rest[1], RK, RV);
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $indexSet(_, key, val) {
      var t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(val);
      A.ConstantMap__throwUnmodifiable();
    },
    get$entries(_) {
      return this.entries$body$ConstantMap(0, A._instanceType(this)._eval$1("MapEntry<1,2>"));
    },
    entries$body$ConstantMap($async$_, $async$type) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var _ = $async$_;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, key, t4;
        return function $async$get$entries($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.get$keys(), t1 = t1.get$iterator(t1), t2 = A._instanceType($async$self), t3 = t2._rest[1], t2 = t2._eval$1("@<1>")._bind$1(t3)._eval$1("MapEntry<1,2>");
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                key = t1.get$current();
                t4 = $async$self.$index(0, key);
                $async$goto = 4;
                return new A.MapEntry(key, t4 == null ? t3._as(t4) : t4, t2);
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, $async$type);
    },
    map$2$1(_, transform, K2, V2) {
      var result = A.LinkedHashMap_LinkedHashMap$_empty(K2, V2);
      this.forEach$1(0, new A.ConstantMap_map_closure(this, A._instanceType(this)._bind$1(K2)._bind$1(V2)._eval$1("MapEntry<1,2>(3,4)")._as(transform), result));
      return result;
    },
    $isMap: 1
  };
  A.ConstantMap_map_closure.prototype = {
    call$2(key, value) {
      var t1 = A._instanceType(this.$this),
        entry = this.transform.call$2(t1._precomputed1._as(key), t1._rest[1]._as(value));
      this.result.$indexSet(0, entry.key, entry.value);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A.ConstantStringMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    containsKey$1(key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsObject.hasOwnProperty(key);
    },
    $index(_, key) {
      if (!this.containsKey$1(key))
        return null;
      return this._jsObject[A._asString(key)];
    },
    forEach$1(_, f) {
      var keys, t2, t3, i, t4,
        t1 = this.$ti;
      t1._eval$1("~(1,2)")._as(f);
      keys = this.__js_helper$_keys;
      for (t2 = keys.length, t3 = this._jsObject, t1 = t1._rest[1], i = 0; i < t2; ++i) {
        t4 = A._asString(keys[i]);
        f.call$2(t4, t1._as(t3[t4]));
      }
    },
    get$keys() {
      return new A._ConstantMapKeyIterable(this, this.$ti._eval$1("_ConstantMapKeyIterable<1>"));
    },
    get$values(_) {
      var t1 = this.$ti;
      return A.MappedIterable_MappedIterable(this.__js_helper$_keys, new A.ConstantStringMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    }
  };
  A.ConstantStringMap_values_closure.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = t1.$ti;
      return t2._rest[1]._as(t1._jsObject[A._asString(t2._precomputed1._as(key))]);
    },
    $signature() {
      return this.$this.$ti._eval$1("2(1)");
    }
  };
  A._ConstantMapKeyIterable.prototype = {
    get$iterator(_) {
      var t1 = this._map.__js_helper$_keys;
      return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    get$length(_) {
      return this._map.__js_helper$_keys.length;
    }
  };
  A.Instantiation.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Instantiation && this._genericClosure.$eq(0, other._genericClosure) && A.getRuntimeType(this) === A.getRuntimeType(other);
    },
    get$hashCode(_) {
      return A.Object_hash(this._genericClosure, A.getRuntimeType(this), B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = B.JSArray_methods.join$1([A.createRuntimeType(this.$ti._precomputed1)], ", ");
      return this._genericClosure.toString$0(0) + " with " + ("<" + t1 + ">");
    }
  };
  A.Instantiation1.prototype = {
    call$0() {
      return this._genericClosure.call$1$0(this.$ti._rest[0]);
    },
    call$2(a0, a1) {
      return this._genericClosure.call$1$2(a0, a1, this.$ti._rest[0]);
    },
    $signature() {
      return A.instantiatedGenericFunctionType(A.closureFunctionType(this._genericClosure), this.$ti);
    }
  };
  A.JSInvocationMirror.prototype = {
    get$memberName() {
      var t1 = this._memberName;
      return t1;
    },
    get$positionalArguments() {
      var t1, argumentCount, list, index, _this = this;
      if (_this.__js_helper$_kind === 1)
        return B.List_empty7;
      t1 = _this._arguments;
      argumentCount = t1.length - _this._namedArgumentNames.length - _this._typeArgumentCount;
      if (argumentCount === 0)
        return B.List_empty7;
      list = [];
      for (index = 0; index < argumentCount; ++index) {
        if (!(index < t1.length))
          return A.ioore(t1, index);
        list.push(t1[index]);
      }
      return J.JSArray_markUnmodifiableList(list);
    },
    get$namedArguments() {
      var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, t3, t4, _this = this;
      if (_this.__js_helper$_kind !== 0)
        return B.Map_empty1;
      t1 = _this._namedArgumentNames;
      namedArgumentCount = t1.length;
      t2 = _this._arguments;
      namedArgumentsStartIndex = t2.length - namedArgumentCount - _this._typeArgumentCount;
      if (namedArgumentCount === 0)
        return B.Map_empty1;
      map = new A.JsLinkedHashMap(type$.JsLinkedHashMap_Symbol_dynamic);
      for (i = 0; i < namedArgumentCount; ++i) {
        if (!(i < t1.length))
          return A.ioore(t1, i);
        t3 = t1[i];
        t4 = namedArgumentsStartIndex + i;
        if (!(t4 >= 0 && t4 < t2.length))
          return A.ioore(t2, t4);
        map.$indexSet(0, new A.Symbol(t3), t2[t4]);
      }
      return new A.ConstantMapView(map, type$.ConstantMapView_Symbol_dynamic);
    },
    $isInvocation: 1
  };
  A.Primitives_functionNoSuchMethod_closure.prototype = {
    call$2($name, argument) {
      var t1;
      A._asString($name);
      t1 = this._box_0;
      t1.names = t1.names + "$" + $name;
      B.JSArray_methods.add$1(this.namedArgumentList, $name);
      B.JSArray_methods.add$1(this.$arguments, argument);
      ++t1.argumentCount;
    },
    $signature: 13
  };
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + this.__js_helper$_message;
      return "NoSuchMethodError: method not found: '" + t1 + "' on null";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    },
    $isException: 1
  };
  A.ExceptionAndStackTrace.prototype = {};
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    $isFunction: 1,
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A._AssertionError.prototype = {
    toString$0(_) {
      return "Assertion failed: " + A.Error_safeToString(this.message);
    }
  };
  A._Required.prototype = {};
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$isNotEmpty(_) {
      return this.__js_helper$_length !== 0;
    },
    get$keys() {
      return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$values(_) {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(new A.LinkedHashMapKeyIterable(this, t1._eval$1("LinkedHashMapKeyIterable<1>")), new A.JsLinkedHashMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1(key) {
      var strings, nums;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else
        return this.internalContainsKey$1(key);
    },
    internalContainsKey$1(key) {
      var rest = this.__js_helper$_rest;
      if (rest == null)
        return false;
      return this.internalFindBucketIndex$2(rest[this.internalComputeHashCode$1(key)], key) >= 0;
    },
    addAll$1(_, other) {
      A._instanceType(this)._eval$1("Map<1,2>")._as(other).forEach$1(0, new A.JsLinkedHashMap_addAll_closure(this));
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[this.internalComputeHashCode$1(key)];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$2(key, value)];
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    putIfAbsent$2(key, ifAbsent) {
      var t2, value, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._eval$1("2()")._as(ifAbsent);
      if (_this.containsKey$1(key)) {
        t2 = _this.$index(0, key);
        return t2 == null ? t1._rest[1]._as(t2) : t2;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string")
        return _this.__js_helper$_removeHashTableEntry$2(_this._strings, key);
      else if (typeof key == "number" && (key & 0x3fffffff) === key)
        return _this.__js_helper$_removeHashTableEntry$2(_this._nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this.__js_helper$_unlinkCell$1(cell);
      if (bucket.length === 0)
        delete rest[hash];
      return cell.hashMapCellValue;
    },
    clear$0(_) {
      var _this = this;
      if (_this.__js_helper$_length > 0) {
        _this._strings = _this._nums = _this.__js_helper$_rest = _this._first = _this._last = null;
        _this.__js_helper$_length = 0;
        _this._modified$0();
      }
    },
    forEach$1(_, action) {
      var cell, modifications, _this = this;
      A._instanceType(_this)._eval$1("~(1,2)")._as(action);
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3(table, key, value) {
      var cell,
        t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    __js_helper$_removeHashTableEntry$2(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = table[key];
      if (cell == null)
        return null;
      this.__js_helper$_unlinkCell$1(cell);
      delete table[key];
      return cell.hashMapCellValue;
    },
    _modified$0() {
      this._modifications = this._modifications + 1 & 1073741823;
    },
    _newLinkedCell$2(key, value) {
      var _this = this,
        t1 = A._instanceType(_this),
        cell = new A.LinkedHashMapCell(t1._precomputed1._as(key), t1._rest[1]._as(value));
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        t1 = _this._last;
        t1.toString;
        cell._previous = t1;
        _this._last = t1._next = cell;
      }
      ++_this.__js_helper$_length;
      _this._modified$0();
      return cell;
    },
    __js_helper$_unlinkCell$1(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this.__js_helper$_length;
      _this._modified$0();
    },
    internalComputeHashCode$1(key) {
      return J.get$hashCode$(key) & 0x3fffffff;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    $isLinkedHashMap: 1
  };
  A.JsLinkedHashMap_values_closure.prototype = {
    call$1(each) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t1 = t1.$index(0, t2._precomputed1._as(each));
      return t1 == null ? t2._rest[1]._as(t1) : t1;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  A.JsLinkedHashMap_addAll_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t1.$indexSet(0, t2._precomputed1._as(key), t2._rest[1]._as(value));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeyIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._map,
        t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
      t2._cell = t1._first;
      return t2;
    },
    contains$1(_, element) {
      return this._map.containsKey$1(element);
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current() {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.set$__js_helper$_current(null);
        return false;
      } else {
        _this.set$__js_helper$_current(cell.hashMapCellKey);
        _this._cell = cell._next;
        return true;
      }
    },
    set$__js_helper$_current(_current) {
      this.__js_helper$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 1
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 149
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(A._asString(tag));
    },
    $signature: 40
  };
  A.JSSyntaxRegExp.prototype = {
    toString$0(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    get$_nativeGlobalVersion() {
      var _this = this,
        t1 = _this._nativeGlobalRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeGlobalRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);
    },
    get$_nativeAnchoredVersion() {
      var _this = this,
        t1 = _this._nativeAnchoredRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeAnchoredRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern + "|()", t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);
    },
    firstMatch$1(string) {
      var m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new A._MatchImplementation(m);
    },
    allMatches$2(_, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._AllMatchesIterable(this, string, start);
    },
    allMatches$1($receiver, string) {
      return this.allMatches$2($receiver, string, 0);
    },
    _execGlobal$2(string, start) {
      var match,
        regexp = this.get$_nativeGlobalVersion();
      if (regexp == null)
        regexp = type$.Object._as(regexp);
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      return new A._MatchImplementation(match);
    },
    _execAnchored$2(string, start) {
      var match,
        regexp = this.get$_nativeAnchoredVersion();
      if (regexp == null)
        regexp = type$.Object._as(regexp);
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      if (0 >= match.length)
        return A.ioore(match, -1);
      if (match.pop() != null)
        return null;
      return new A._MatchImplementation(match);
    },
    matchAsPrefix$2(_, string, start) {
      if (start < 0 || start > string.length)
        throw A.wrapException(A.RangeError$range(start, 0, string.length, null, null));
      return this._execAnchored$2(string, start);
    },
    $isPattern: 1,
    $isRegExp: 1
  };
  A._MatchImplementation.prototype = {
    get$start(_) {
      return this._match.index;
    },
    get$end() {
      var t1 = this._match;
      return t1.index + t1[0].length;
    },
    $index(_, index) {
      var t1;
      A._asInt(index);
      t1 = this._match;
      if (!(index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    },
    $isMatch: 1,
    $isRegExpMatch: 1
  };
  A._AllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._AllMatchesIterator(this._re, this._string, this._start);
    }
  };
  A._AllMatchesIterator.prototype = {
    get$current() {
      var t1 = this.__js_helper$_current;
      return t1 == null ? type$.RegExpMatch._as(t1) : t1;
    },
    moveNext$0() {
      var t1, t2, t3, match, nextIndex, _this = this,
        string = _this._string;
      if (string == null)
        return false;
      t1 = _this._nextIndex;
      t2 = string.length;
      if (t1 <= t2) {
        t3 = _this._regExp;
        match = t3._execGlobal$2(string, t1);
        if (match != null) {
          _this.__js_helper$_current = match;
          nextIndex = match.get$end();
          if (match._match.index === nextIndex) {
            if (t3._nativeRegExp.unicode) {
              t1 = _this._nextIndex;
              t3 = t1 + 1;
              if (t3 < t2) {
                t1 = B.JSString_methods.codeUnitAt$1(string, t1);
                if (t1 >= 55296 && t1 <= 56319) {
                  t1 = B.JSString_methods.codeUnitAt$1(string, t3);
                  t1 = t1 >= 56320 && t1 <= 57343;
                } else
                  t1 = false;
              } else
                t1 = false;
            } else
              t1 = false;
            nextIndex = (t1 ? nextIndex + 1 : nextIndex) + 1;
          }
          _this._nextIndex = nextIndex;
          return true;
        }
      }
      _this._string = _this.__js_helper$_current = null;
      return false;
    },
    $isIterator: 1
  };
  A.StringMatch.prototype = {
    get$end() {
      return this.start + this.pattern.length;
    },
    $index(_, g) {
      A._asInt(g);
      if (g !== 0)
        A.throwExpression(A.RangeError$value(g, null));
      return this.pattern;
    },
    $isMatch: 1,
    get$start(receiver) {
      return this.start;
    }
  };
  A._StringAllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._StringAllMatchesIterator(this._input, this._pattern, this.__js_helper$_index);
    }
  };
  A._StringAllMatchesIterator.prototype = {
    moveNext$0() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new A.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current() {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    },
    $isIterator: 1
  };
  A._Cell.prototype = {
    _readLocal$0() {
      var t1 = this.__late_helper$_value;
      if (t1 === this)
        throw A.wrapException(new A.LateError("Local '" + this.__late_helper$_name + "' has not been initialized."));
      return t1;
    }
  };
  A.NativeByteBuffer.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteBuffer_RkP;
    },
    $isByteBuffer: 1
  };
  A.NativeTypedData.prototype = {
    _invalidPosition$3(receiver, position, $length, $name) {
      var t1 = A.RangeError$range(position, 0, $length, $name, null);
      throw A.wrapException(t1);
    },
    _checkPosition$3(receiver, position, $length, $name) {
      if (position >>> 0 !== position || position > $length)
        this._invalidPosition$3(receiver, position, $length, $name);
    },
    $isTypedData: 1
  };
  A.NativeByteData.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteData_zNC;
    }
  };
  A.NativeTypedArray.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    _setRangeFast$4(receiver, start, end, source, skipCount) {
      var count, sourceLength,
        targetLength = receiver.length;
      this._checkPosition$3(receiver, start, targetLength, "start");
      this._checkPosition$3(receiver, end, targetLength, "end");
      if (start > end)
        throw A.wrapException(A.RangeError$range(start, 0, end, null, null));
      count = end - start;
      sourceLength = source.length;
      if (sourceLength - skipCount < count)
        throw A.wrapException(A.StateError$("Not enough elements"));
      if (skipCount !== 0 || sourceLength !== count)
        source = source.subarray(skipCount, skipCount + count);
      receiver.set(source, start);
    },
    $isJSIndexable: 1,
    $isJavaScriptIndexingBehavior: 1
  };
  A.NativeTypedArrayOfDouble.prototype = {
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._asInt(index);
      A._asDouble(value);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeTypedArrayOfInt.prototype = {
    $indexSet(receiver, index, value) {
      A._asInt(index);
      A._asInt(value);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      type$.Iterable_int._as(iterable);
      if (type$.NativeTypedArrayOfInt._is(iterable)) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      this.super$ListMixin$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeFloat32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float32List_LB7;
    }
  };
  A.NativeFloat64List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float64List_LB7;
    }
  };
  A.NativeInt16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int16List_uXf;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeInt32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int32List_O50;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeInt8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int8List_ekJ;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint16List_2bx;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint32List_2bx;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint32Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    $isUint32List: 1
  };
  A.NativeUint8ClampedList.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8ClampedList_Jik;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8List_WLA;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    $isNativeUint8List: 1,
    $isUint8List: 1
  };
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Type.prototype = {
    toString$0(_) {
      return A._rtiToString(this._rti, null);
    }
  };
  A._Error.prototype = {
    toString$0(_) {
      return this.__rti$_message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 14
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = type$.void_Function._as(callback);
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 163
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 3
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 3
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    }
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      this.$this._tick = 1;
      this.callback.call$0();
    },
    $signature: 0
  };
  A._AsyncAwaitCompleter.prototype = {
    complete$1(_, value) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/?")._as(value);
      if (value == null)
        t1._precomputed1._as(value);
      if (!_this.isSync)
        _this._future._asyncComplete$1(value);
      else {
        t2 = _this._future;
        if (t1._eval$1("Future<1>")._is(value))
          t2._chainFuture$1(value);
        else
          t2._completeWithValue$1(t1._precomputed1._as(value));
      }
    },
    completeError$2(e, st) {
      var t1 = this._future;
      if (this.isSync)
        t1._completeError$2(e, st);
      else
        t1._asyncCompleteError$2(e, st);
    }
  };
  A._awaitOnObject_closure.prototype = {
    call$1(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 8
  };
  A._awaitOnObject_closure0.prototype = {
    call$2(error, stackTrace) {
      this.bodyFunction.call$2(1, new A.ExceptionAndStackTrace(error, type$.StackTrace._as(stackTrace)));
    },
    $signature: 165
  };
  A._wrapJsFunctionForAsync_closure.prototype = {
    call$2(errorCode, result) {
      this.$protected(A._asInt(errorCode), result);
    },
    $signature: 148
  };
  A._asyncStarHelper_closure.prototype = {
    call$0() {
      var t3,
        t1 = this.controller,
        t2 = t1.___AsyncStarStreamController_controller_A;
      t2 === $ && A.throwLateFieldNI("controller");
      t3 = t2._state;
      if ((t3 & 1) !== 0 ? (t2.get$_subscription()._state & 4) !== 0 : (t3 & 2) === 0) {
        t1.isSuspended = true;
        return;
      }
      this.bodyFunction.call$2(0, null);
    },
    $signature: 0
  };
  A._asyncStarHelper_closure0.prototype = {
    call$1(_) {
      var errorCode = this.controller.cancelationFuture != null ? 2 : 0;
      this.bodyFunction.call$2(errorCode, null);
    },
    $signature: 14
  };
  A._AsyncStarStreamController.prototype = {
    add$1(_, $event) {
      var t1 = this.___AsyncStarStreamController_controller_A;
      t1 === $ && A.throwLateFieldNI("controller");
      return t1.add$1(0, this.$ti._precomputed1._as($event));
    },
    _AsyncStarStreamController$1(body, $T) {
      var _this = this,
        t1 = new A._AsyncStarStreamController__resumeBody(body);
      _this.set$___AsyncStarStreamController_controller_A(_this.$ti._eval$1("StreamController<1>")._as(A.StreamController_StreamController(new A._AsyncStarStreamController_closure(_this, body), new A._AsyncStarStreamController_closure0(t1), new A._AsyncStarStreamController_closure1(_this, t1), false, $T)));
    },
    set$___AsyncStarStreamController_controller_A(___AsyncStarStreamController_controller_A) {
      this.___AsyncStarStreamController_controller_A = this.$ti._eval$1("StreamController<1>")._as(___AsyncStarStreamController_controller_A);
    }
  };
  A._AsyncStarStreamController__resumeBody.prototype = {
    call$0() {
      A.scheduleMicrotask(new A._AsyncStarStreamController__resumeBody_closure(this.body));
    },
    $signature: 3
  };
  A._AsyncStarStreamController__resumeBody_closure.prototype = {
    call$0() {
      this.body.call$2(0, null);
    },
    $signature: 0
  };
  A._AsyncStarStreamController_closure0.prototype = {
    call$0() {
      this._resumeBody.call$0();
    },
    $signature: 0
  };
  A._AsyncStarStreamController_closure1.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.isSuspended) {
        t1.isSuspended = false;
        this._resumeBody.call$0();
      }
    },
    $signature: 0
  };
  A._AsyncStarStreamController_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___AsyncStarStreamController_controller_A;
      t2 === $ && A.throwLateFieldNI("controller");
      if ((t2._state & 4) === 0) {
        t1.cancelationFuture = new A._Future($.Zone__current, type$._Future_dynamic);
        if (t1.isSuspended) {
          t1.isSuspended = false;
          A.scheduleMicrotask(new A._AsyncStarStreamController__closure(this.body));
        }
        return t1.cancelationFuture;
      }
    },
    $signature: 51
  };
  A._AsyncStarStreamController__closure.prototype = {
    call$0() {
      this.body.call$2(2, null);
    },
    $signature: 0
  };
  A._IterationMarker.prototype = {
    toString$0(_) {
      return "IterationMarker(" + this.state + ", " + A.S(this.value) + ")";
    }
  };
  A._SyncStarIterator.prototype = {
    get$current() {
      var t1,
        nested = this._nestedIterator;
      if (nested == null) {
        t1 = this._async$_current;
        return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
      }
      return nested.get$current();
    },
    moveNext$0() {
      var t1, t2, value, state, suspendedBodies, inner, _this = this;
      for (t1 = _this.$ti._eval$1("Iterator<1>"); true;) {
        t2 = _this._nestedIterator;
        if (t2 != null)
          if (t2.moveNext$0())
            return true;
          else
            _this.set$_nestedIterator(null);
        value = function(body, SUCCESS, ERROR) {
          var errorValue,
            errorCode = SUCCESS;
          while (true)
            try {
              return body(errorCode, errorValue);
            } catch (error) {
              errorValue = error;
              errorCode = ERROR;
            }
        }(_this._body, 0, 1);
        if (value instanceof A._IterationMarker) {
          state = value.state;
          if (state === 2) {
            suspendedBodies = _this._suspendedBodies;
            if (suspendedBodies == null || suspendedBodies.length === 0) {
              _this.set$_async$_current(null);
              return false;
            }
            if (0 >= suspendedBodies.length)
              return A.ioore(suspendedBodies, -1);
            _this._body = suspendedBodies.pop();
            continue;
          } else {
            t2 = value.value;
            if (state === 3)
              throw t2;
            else {
              inner = t1._as(J.get$iterator$ax(t2));
              if (inner instanceof A._SyncStarIterator) {
                t2 = _this._suspendedBodies;
                if (t2 == null)
                  t2 = _this._suspendedBodies = [];
                B.JSArray_methods.add$1(t2, _this._body);
                _this._body = inner._body;
                continue;
              } else {
                _this.set$_nestedIterator(inner);
                continue;
              }
            }
          }
        } else {
          _this.set$_async$_current(value);
          return true;
        }
      }
      return false;
    },
    set$_async$_current(_current) {
      this._async$_current = this.$ti._eval$1("1?")._as(_current);
    },
    set$_nestedIterator(_nestedIterator) {
      this._nestedIterator = this.$ti._eval$1("Iterator<1>?")._as(_nestedIterator);
    },
    $isIterator: 1
  };
  A._SyncStarIterable.prototype = {
    get$iterator(_) {
      return new A._SyncStarIterator(this._outerHelper(), this.$ti._eval$1("_SyncStarIterator<1>"));
    }
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A._BroadcastSubscription.prototype = {
    _onPause$0() {
    },
    _onResume$0() {
    },
    set$_async$_next(_next) {
      this._async$_next = this.$ti._eval$1("_BroadcastSubscription<1>?")._as(_next);
    },
    set$_async$_previous(_previous) {
      this._async$_previous = this.$ti._eval$1("_BroadcastSubscription<1>?")._as(_previous);
    }
  };
  A._BroadcastStreamController.prototype = {
    get$_mayAddEvent() {
      return this._state < 4;
    },
    _removeListener$1(subscription) {
      var previous, next;
      A._instanceType(this)._eval$1("_BroadcastSubscription<1>")._as(subscription);
      previous = subscription._async$_previous;
      next = subscription._async$_next;
      if (previous == null)
        this.set$_firstSubscription(next);
      else
        previous.set$_async$_next(next);
      if (next == null)
        this.set$_lastSubscription(previous);
      else
        next.set$_async$_previous(previous);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var t2, t3, t4, subscription, oldLast, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      if ((_this._state & 4) !== 0)
        return A._DoneStreamSubscription$(onDone, t1._precomputed1);
      t2 = $.Zone__current;
      t3 = cancelOnError ? 1 : 0;
      t4 = t1._eval$1("_BroadcastSubscription<1>");
      subscription = new A._BroadcastSubscription(_this, A._BufferingStreamSubscription__registerDataHandler(t2, onData, t1._precomputed1), A._BufferingStreamSubscription__registerErrorHandler(t2, onError), A._BufferingStreamSubscription__registerDoneHandler(t2, onDone), t2, t3, t4);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
      t4._as(subscription);
      subscription._eventState = _this._state & 1;
      oldLast = _this._lastSubscription;
      _this.set$_lastSubscription(subscription);
      subscription.set$_async$_next(null);
      subscription.set$_async$_previous(oldLast);
      if (oldLast == null)
        _this.set$_firstSubscription(subscription);
      else
        oldLast.set$_async$_next(subscription);
      if (_this._firstSubscription == _this._lastSubscription)
        A._runGuarded(_this.onListen);
      return subscription;
    },
    _recordCancel$1(sub) {
      var _this = this,
        t1 = A._instanceType(_this);
      sub = t1._eval$1("_BroadcastSubscription<1>")._as(t1._eval$1("StreamSubscription<1>")._as(sub));
      if (sub._async$_next === sub)
        return null;
      t1 = sub._eventState;
      if ((t1 & 2) !== 0)
        sub._eventState = t1 | 4;
      else {
        _this._removeListener$1(sub);
        if ((_this._state & 2) === 0 && _this._firstSubscription == null)
          _this._callOnCancel$0();
      }
      return null;
    },
    _recordPause$1(subscription) {
      A._instanceType(this)._eval$1("StreamSubscription<1>")._as(subscription);
    },
    _recordResume$1(subscription) {
      A._instanceType(this)._eval$1("StreamSubscription<1>")._as(subscription);
    },
    _addEventError$0() {
      if ((this._state & 4) !== 0)
        return new A.StateError("Cannot add new events after calling close");
      return new A.StateError("Cannot add new events while doing an addStream");
    },
    add$1(_, data) {
      var _this = this;
      A._instanceType(_this)._precomputed1._as(data);
      if (!_this.get$_mayAddEvent())
        throw A.wrapException(_this._addEventError$0());
      _this._sendData$1(data);
    },
    close$0(_) {
      var t1, doneFuture, _this = this;
      if ((_this._state & 4) !== 0) {
        t1 = _this._doneFuture;
        t1.toString;
        return t1;
      }
      if (!_this.get$_mayAddEvent())
        throw A.wrapException(_this._addEventError$0());
      _this._state |= 4;
      doneFuture = _this._doneFuture;
      if (doneFuture == null)
        doneFuture = _this._doneFuture = new A._Future($.Zone__current, type$._Future_void);
      _this._sendDone$0();
      return doneFuture;
    },
    _callOnCancel$0() {
      if ((this._state & 4) !== 0) {
        var doneFuture = this._doneFuture;
        if ((doneFuture._state & 30) === 0)
          doneFuture._asyncComplete$1(null);
      }
      A._runGuarded(this.onCancel);
    },
    set$_firstSubscription(_firstSubscription) {
      this._firstSubscription = A._instanceType(this)._eval$1("_BroadcastSubscription<1>?")._as(_firstSubscription);
    },
    set$_lastSubscription(_lastSubscription) {
      this._lastSubscription = A._instanceType(this)._eval$1("_BroadcastSubscription<1>?")._as(_lastSubscription);
    },
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_EventDispatch: 1
  };
  A._AsyncBroadcastStreamController.prototype = {
    _sendData$1(data) {
      var subscription,
        t1 = this.$ti;
      t1._precomputed1._as(data);
      for (subscription = this._firstSubscription, t1 = t1._eval$1("_DelayedData<1>"); subscription != null; subscription = subscription._async$_next)
        subscription._addPending$1(new A._DelayedData(data, t1));
    },
    _sendDone$0() {
      var subscription = this._firstSubscription;
      if (subscription != null)
        for (; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(B.C__DelayedDone);
      else
        this._doneFuture._asyncComplete$1(null);
    }
  };
  A.Future_Future$delayed_closure.prototype = {
    call$0() {
      var e, s, exception, _this = this,
        t1 = _this.computation;
      if (t1 == null) {
        _this.T._as(null);
        _this.result._complete$1(null);
      } else
        try {
          _this.result._complete$1(t1.call$0());
        } catch (exception) {
          e = A.unwrapException(exception);
          s = A.getTraceFromException(exception);
          A._completeWithErrorCallback(_this.result, e, s);
        }
    },
    $signature: 0
  };
  A.Future_wait_handleError.prototype = {
    call$2(theError, theStackTrace) {
      var t1, t2, _this = this;
      type$.Object._as(theError);
      type$.StackTrace._as(theStackTrace);
      t1 = _this._box_0;
      t2 = --t1.remaining;
      if (t1.values != null) {
        t1.values = null;
        if (t1.remaining === 0 || _this.eagerError)
          _this._future._completeError$2(theError, theStackTrace);
        else {
          _this.error.__late_helper$_value = theError;
          _this.stackTrace.__late_helper$_value = theStackTrace;
        }
      } else if (t2 === 0 && !_this.eagerError)
        _this._future._completeError$2(_this.error._readLocal$0(), _this.stackTrace._readLocal$0());
    },
    $signature: 11
  };
  A.Future_wait_closure.prototype = {
    call$1(value) {
      var valueList, t2, _this = this,
        t1 = _this.T;
      t1._as(value);
      t2 = _this._box_0;
      --t2.remaining;
      valueList = t2.values;
      if (valueList != null) {
        J.$indexSet$ax(valueList, _this.pos, value);
        if (t2.remaining === 0)
          _this._future._completeWithValue$1(A.List_List$from(valueList, true, t1));
      } else if (t2.remaining === 0 && !_this.eagerError)
        _this._future._completeError$2(_this.error._readLocal$0(), _this.stackTrace._readLocal$0());
    },
    $signature() {
      return this.T._eval$1("Null(0)");
    }
  };
  A._Completer.prototype = {
    completeError$2(error, stackTrace) {
      var replacement,
        t1 = type$.Object;
      t1._as(error);
      type$.nullable_StackTrace._as(stackTrace);
      A.checkNotNullable(error, "error", t1);
      t1 = this.future;
      if ((t1._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      replacement = $.Zone__current.errorCallback$2(error, stackTrace);
      if (replacement != null) {
        error = replacement.error;
        stackTrace = replacement.stackTrace;
      } else if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      t1._asyncCompleteError$2(error, stackTrace);
    },
    completeError$1(error) {
      return this.completeError$2(error, null);
    }
  };
  A._AsyncCompleter.prototype = {
    complete$1(_, value) {
      var t2,
        t1 = this.$ti;
      t1._eval$1("1/?")._as(value);
      t2 = this.future;
      if ((t2._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t2._asyncComplete$1(t1._eval$1("1/")._as(value));
    }
  };
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2$2(type$.bool_Function_Object._as(this.callback), asyncError.error, type$.bool, type$.Object);
    },
    handleError$1(asyncError) {
      var exception, _this = this,
        errorCallback = _this.errorCallback,
        result = null,
        t1 = type$.dynamic,
        t2 = type$.Object,
        t3 = asyncError.error,
        t4 = _this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t4.runBinary$3$3(errorCallback, t3, asyncError.stackTrace, t1, t2, type$.StackTrace);
      else
        result = t4.runUnary$2$2(type$.dynamic_Function_Object._as(errorCallback), t3, t1, t2);
      try {
        t1 = _this.$ti._eval$1("2/")._as(result);
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((_this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    then$1$2$onError(f, onError, $R) {
      var currentZone, result, t2,
        t1 = this.$ti;
      t1._bind$1($R)._eval$1("1/(2)")._as(f);
      currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else {
        f = currentZone.registerUnaryCallback$2$1(f, $R._eval$1("0/"), t1._precomputed1);
        if (onError != null)
          onError = A._registerErrorHandler(onError, currentZone);
      }
      result = new A._Future($.Zone__current, $R._eval$1("_Future<0>"));
      t2 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t2, f, onError, t1._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2(f, onError, $E) {
      var result,
        t1 = this.$ti;
      t1._bind$1($E)._eval$1("1/(2)")._as(f);
      result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new A._FutureListener(result, 3, f, onError, t1._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    whenComplete$1(action) {
      var t1, t2, result;
      type$.dynamic_Function._as(action);
      t1 = this.$ti;
      t2 = $.Zone__current;
      result = new A._Future(t2, t1);
      if (t2 !== B.C__RootZone)
        action = t2.registerCallback$1$1(action, type$.dynamic);
      this._addListener$1(new A._FutureListener(result, 8, action, null, t1._eval$1("@<1>")._bind$1(t1._precomputed1)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var source, _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(source);
        }
        _this._zone.scheduleMicrotask$1(new A._Future__addListener_closure(_this, listener));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(source);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        _this._zone.scheduleMicrotask$1(new A._Future__prependListeners_closure(_box_0, _this));
      }
    },
    _removeListeners$0() {
      var current = type$.nullable__FutureListener_dynamic_dynamic._as(this._resultOrListeners);
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _chainForeignFuture$1(source) {
      var e, s, exception, _this = this;
      _this._state ^= 2;
      try {
        source.then$1$2$onError(new A._Future__chainForeignFuture_closure(_this), new A._Future__chainForeignFuture_closure0(_this), type$.Null);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A.scheduleMicrotask(new A._Future__chainForeignFuture_closure1(_this, e, s));
      }
    },
    _complete$1(value) {
      var listeners, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value))
        if (t1._is(value))
          A._Future__chainCoreFuture(value, _this);
        else
          _this._chainForeignFuture$1(value);
      else {
        listeners = _this._removeListeners$0();
        t1._precomputed1._as(value);
        _this._state = 8;
        _this._resultOrListeners = value;
        A._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1(value) {
      var listeners, _this = this;
      _this.$ti._precomputed1._as(value);
      listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2(error, stackTrace) {
      var listeners;
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      listeners = this._removeListeners$0();
      this._setErrorObject$1(A.AsyncError$(error, stackTrace));
      A._Future__propagateToListeners(this, listeners);
    },
    _asyncComplete$1(value) {
      var t1 = this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(t1._precomputed1._as(value));
    },
    _asyncCompleteWithValue$1(value) {
      var _this = this;
      _this.$ti._precomputed1._as(value);
      _this._state ^= 2;
      _this._zone.scheduleMicrotask$1(new A._Future__asyncCompleteWithValue_closure(_this, value));
    },
    _chainFuture$1(value) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("Future<1>")._as(value);
      if (t1._is(value)) {
        if ((value._state & 16) !== 0) {
          _this._state ^= 2;
          _this._zone.scheduleMicrotask$1(new A._Future__chainFuture_closure(_this, value));
        } else
          A._Future__chainCoreFuture(value, _this);
        return;
      }
      _this._chainForeignFuture$1(value);
    },
    _asyncCompleteError$2(error, stackTrace) {
      type$.StackTrace._as(stackTrace);
      this._state ^= 2;
      this._zone.scheduleMicrotask$1(new A._Future__asyncCompleteError_closure(this, error, stackTrace));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  A._Future__chainForeignFuture_closure.prototype = {
    call$1(value) {
      var error, stackTrace, exception,
        t1 = this.$this;
      t1._state ^= 2;
      try {
        t1._completeWithValue$1(t1.$ti._precomputed1._as(value));
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        t1._completeError$2(error, stackTrace);
      }
    },
    $signature: 14
  };
  A._Future__chainForeignFuture_closure0.prototype = {
    call$2(error, stackTrace) {
      this.$this._completeError$2(type$.Object._as(error), type$.StackTrace._as(stackTrace));
    },
    $signature: 131
  };
  A._Future__chainForeignFuture_closure1.prototype = {
    call$0() {
      this.$this._completeError$2(this.e, this.s);
    },
    $signature: 0
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  A._Future__chainFuture_closure.prototype = {
    call$0() {
      A._Future__chainCoreFuture(this.value, this.$this);
    },
    $signature: 0
  };
  A._Future__asyncCompleteError_closure.prototype = {
    call$0() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1$1(type$.dynamic_Function._as(t1.callback), type$.dynamic);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this.hasError && type$.AsyncError._as(_this._box_1.source._resultOrListeners).error === e;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = type$.AsyncError._as(completeResult._resultOrListeners);
          t1.listenerHasError = true;
        }
        return;
      }
      if (type$.Future_dynamic._is(completeResult)) {
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(_) {
      return this.originalSource;
    },
    $signature: 136
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, t3, t4, t5, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t3 = t2.$ti;
        t4 = t3._precomputed1;
        t5 = t4._as(this.sourceResult);
        t1.listenerValueOrError = t2.result._zone.runUnary$2$2(t3._eval$1("2/(1)")._as(t2.callback), t5, t3._eval$1("2/"), t4);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = this._box_0;
        t1.listenerValueOrError = A.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, _this = this;
      try {
        asyncError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t2 = _this._box_0;
        if (t1.error === e)
          t2.listenerValueOrError = t1;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._AsyncCallbackEntry.prototype = {};
  A.Stream.prototype = {
    get$length(_) {
      var t1 = {},
        future = new A._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new A.Stream_length_closure(t1, this), true, new A.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    },
    get$first(_) {
      var future = new A._Future($.Zone__current, A._instanceType(this)._eval$1("_Future<Stream.T>")),
        subscription = this.listen$4$cancelOnError$onDone$onError(null, true, new A.Stream_first_closure(future), future.get$_completeError());
      subscription.onData$1(new A.Stream_first_closure0(this, subscription, future));
      return future;
    }
  };
  A.Stream_length_closure.prototype = {
    call$1(_) {
      A._instanceType(this.$this)._eval$1("Stream.T")._as(_);
      ++this._box_0.count;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(Stream.T)");
    }
  };
  A.Stream_length_closure0.prototype = {
    call$0() {
      this.future._complete$1(this._box_0.count);
    },
    $signature: 0
  };
  A.Stream_first_closure.prototype = {
    call$0() {
      var e, s, t1, exception;
      try {
        t1 = A.IterableElementError_noElement();
        throw A.wrapException(t1);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._completeWithErrorCallback(this.future, e, s);
      }
    },
    $signature: 0
  };
  A.Stream_first_closure0.prototype = {
    call$1(value) {
      A._cancelAndValue(this.subscription, this.future, A._instanceType(this.$this)._eval$1("Stream.T")._as(value));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(Stream.T)");
    }
  };
  A.StreamSubscription.prototype = {};
  A.StreamView.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      return this._stream.listen$4$cancelOnError$onDone$onError(A._instanceType(this)._eval$1("~(StreamView.T)?")._as(onData), cancelOnError, type$.nullable_void_Function._as(onDone), onError);
    }
  };
  A.StreamTransformerBase.prototype = {};
  A._StreamController.prototype = {
    get$_pendingEvents() {
      var t1, _this = this;
      if ((_this._state & 8) === 0)
        return A._instanceType(_this)._eval$1("_PendingEvents<1>?")._as(_this._varData);
      t1 = A._instanceType(_this);
      return t1._eval$1("_PendingEvents<1>?")._as(t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).varData);
    },
    _ensurePendingEvents$0() {
      var events, t1, state, _this = this;
      if ((_this._state & 8) === 0) {
        events = _this._varData;
        if (events == null)
          events = _this._varData = new A._PendingEvents(A._instanceType(_this)._eval$1("_PendingEvents<1>"));
        return A._instanceType(_this)._eval$1("_PendingEvents<1>")._as(events);
      }
      t1 = A._instanceType(_this);
      state = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
      events = state.varData;
      if (events == null)
        events = state.varData = new A._PendingEvents(t1._eval$1("_PendingEvents<1>"));
      return t1._eval$1("_PendingEvents<1>")._as(events);
    },
    get$_subscription() {
      var varData = this._varData;
      if ((this._state & 8) !== 0)
        varData = type$._StreamControllerAddStreamState_nullable_Object._as(varData).varData;
      return A._instanceType(this)._eval$1("_ControllerSubscription<1>")._as(varData);
    },
    _badEventState$0() {
      if ((this._state & 4) !== 0)
        return new A.StateError("Cannot add event after closing");
      return new A.StateError("Cannot add event while adding a stream");
    },
    addStream$2$cancelOnError(source, cancelOnError) {
      var t2, t3, t4, t5, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("Stream<1>")._as(source);
      t2 = _this._state;
      if (t2 >= 4)
        throw A.wrapException(_this._badEventState$0());
      if ((t2 & 2) !== 0) {
        t1 = new A._Future($.Zone__current, type$._Future_dynamic);
        t1._asyncComplete$1(null);
        return t1;
      }
      t2 = _this._varData;
      t3 = new A._Future($.Zone__current, type$._Future_dynamic);
      t4 = t1._eval$1("~(1)")._as(_this.get$_async$_add(_this));
      t4 = source.listen$4$cancelOnError$onDone$onError(t4, false, _this.get$_close(), _this.get$_addError());
      t5 = _this._state;
      if ((t5 & 1) !== 0 ? (_this.get$_subscription()._state & 4) !== 0 : (t5 & 2) === 0)
        t4.pause$0(0);
      _this._varData = new A._StreamControllerAddStreamState(t2, t3, t4, t1._eval$1("_StreamControllerAddStreamState<1>"));
      _this._state |= 8;
      return t3;
    },
    _ensureDoneFuture$0() {
      var t1 = this._doneFuture;
      if (t1 == null)
        t1 = this._doneFuture = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : new A._Future($.Zone__current, type$._Future_void);
      return t1;
    },
    add$1(_, value) {
      var _this = this;
      A._instanceType(_this)._precomputed1._as(value);
      if (_this._state >= 4)
        throw A.wrapException(_this._badEventState$0());
      _this._async$_add$1(0, value);
    },
    close$0(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 4) !== 0)
        return _this._ensureDoneFuture$0();
      if (t1 >= 4)
        throw A.wrapException(_this._badEventState$0());
      _this._closeUnchecked$0();
      return _this._ensureDoneFuture$0();
    },
    _closeUnchecked$0() {
      var t1 = this._state |= 4;
      if ((t1 & 1) !== 0)
        this._sendDone$0();
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, B.C__DelayedDone);
    },
    _async$_add$1(_, value) {
      var t2, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(value);
      t2 = _this._state;
      if ((t2 & 1) !== 0)
        _this._sendData$1(value);
      else if ((t2 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, new A._DelayedData(value, t1._eval$1("_DelayedData<1>")));
    },
    _addError$2(error, stackTrace) {
      var t1;
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendError$2(error, stackTrace);
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, new A._DelayedError(error, stackTrace));
    },
    _close$0() {
      var _this = this,
        addState = A._instanceType(_this)._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
      _this._varData = addState.varData;
      _this._state &= 4294967287;
      addState.addStreamFuture._asyncComplete$1(null);
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var subscription, pendingEvents, t2, addState, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      if ((_this._state & 3) !== 0)
        throw A.wrapException(A.StateError$("Stream has already been listened to."));
      subscription = A._ControllerSubscription$(_this, onData, onError, onDone, cancelOnError, t1._precomputed1);
      pendingEvents = _this.get$_pendingEvents();
      t2 = _this._state |= 1;
      if ((t2 & 8) !== 0) {
        addState = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
        addState.varData = subscription;
        addState.addSubscription.resume$0();
      } else
        _this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new A._StreamController__subscribe_closure(_this));
      return subscription;
    },
    _recordCancel$1(subscription) {
      var result, onCancel, cancelResult, e, s, exception, result0, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("StreamSubscription<1>")._as(subscription);
      result = null;
      if ((_this._state & 8) !== 0)
        result = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).cancel$0();
      _this._varData = null;
      _this._state = _this._state & 4294967286 | 2;
      onCancel = _this.onCancel;
      if (onCancel != null)
        if (result == null)
          try {
            cancelResult = onCancel.call$0();
            if (type$.Future_void._is(cancelResult))
              result = cancelResult;
          } catch (exception) {
            e = A.unwrapException(exception);
            s = A.getTraceFromException(exception);
            result0 = new A._Future($.Zone__current, type$._Future_void);
            result0._asyncCompleteError$2(e, s);
            result = result0;
          }
        else
          result = result.whenComplete$1(onCancel);
      t1 = new A._StreamController__recordCancel_complete(_this);
      if (result != null)
        result = result.whenComplete$1(t1);
      else
        t1.call$0();
      return result;
    },
    _recordPause$1(subscription) {
      var _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("StreamSubscription<1>")._as(subscription);
      if ((_this._state & 8) !== 0)
        t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).addSubscription.pause$0(0);
      A._runGuarded(_this.onPause);
    },
    _recordResume$1(subscription) {
      var _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("StreamSubscription<1>")._as(subscription);
      if ((_this._state & 8) !== 0)
        t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).addSubscription.resume$0();
      A._runGuarded(_this.onResume);
    },
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_EventDispatch: 1
  };
  A._StreamController__subscribe_closure.prototype = {
    call$0() {
      A._runGuarded(this.$this.onListen);
    },
    $signature: 0
  };
  A._StreamController__recordCancel_complete.prototype = {
    call$0() {
      var doneFuture = this.$this._doneFuture;
      if (doneFuture != null && (doneFuture._state & 30) === 0)
        doneFuture._asyncComplete$1(null);
    },
    $signature: 0
  };
  A._SyncStreamControllerDispatch.prototype = {
    _sendData$1(data) {
      this.$ti._precomputed1._as(data);
      this.get$_subscription()._async$_add$1(0, data);
    },
    _sendError$2(error, stackTrace) {
      this.get$_subscription()._addError$2(error, stackTrace);
    },
    _sendDone$0() {
      this.get$_subscription()._close$0();
    }
  };
  A._AsyncStreamControllerDispatch.prototype = {
    _sendData$1(data) {
      var t1 = this.$ti;
      t1._precomputed1._as(data);
      this.get$_subscription()._addPending$1(new A._DelayedData(data, t1._eval$1("_DelayedData<1>")));
    },
    _sendError$2(error, stackTrace) {
      this.get$_subscription()._addPending$1(new A._DelayedError(error, stackTrace));
    },
    _sendDone$0() {
      this.get$_subscription()._addPending$1(B.C__DelayedDone);
    }
  };
  A._AsyncStreamController.prototype = {};
  A._SyncStreamController.prototype = {};
  A._ControllerStream.prototype = {
    get$hashCode(_) {
      return (A.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A._ControllerStream && other._controller === this._controller;
    }
  };
  A._ControllerSubscription.prototype = {
    _onCancel$0() {
      return this._controller._recordCancel$1(this);
    },
    _onPause$0() {
      this._controller._recordPause$1(this);
    },
    _onResume$0() {
      this._controller._recordResume$1(this);
    }
  };
  A._StreamSinkWrapper.prototype = {
    add$1(_, data) {
      this._async$_target.add$1(0, this.$ti._precomputed1._as(data));
    },
    close$0(_) {
      return this._async$_target.close$0(0);
    }
  };
  A._AddStreamState.prototype = {
    cancel$0() {
      var cancel = this.addSubscription.cancel$0();
      return cancel.whenComplete$1(new A._AddStreamState_cancel_closure(this));
    }
  };
  A._AddStreamState_cancel_closure.prototype = {
    call$0() {
      this.$this.addStreamFuture._asyncComplete$1(null);
    },
    $signature: 3
  };
  A._StreamControllerAddStreamState.prototype = {};
  A._BufferingStreamSubscription.prototype = {
    _setPendingEvents$1(pendingEvents) {
      var _this = this;
      A._instanceType(_this)._eval$1("_PendingEvents<1>?")._as(pendingEvents);
      if (pendingEvents == null)
        return;
      _this.set$_pending(pendingEvents);
      if (pendingEvents.lastPendingEvent != null) {
        _this._state = (_this._state | 64) >>> 0;
        pendingEvents.schedule$1(_this);
      }
    },
    onData$1(handleData) {
      var t1 = A._instanceType(this);
      this.set$_async$_onData(A._BufferingStreamSubscription__registerDataHandler(this._zone, t1._eval$1("~(1)?")._as(handleData), t1._precomputed1));
    },
    onDone$1(handleDone) {
      this.set$_onDone(A._BufferingStreamSubscription__registerDoneHandler(this._zone, type$.nullable_void_Function._as(handleDone)));
    },
    pause$0(_) {
      var t2, t3, _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t2 = (t1 + 128 | 4) >>> 0;
      _this._state = t2;
      if (t1 < 128) {
        t3 = _this._pending;
        if (t3 != null)
          if (t3._state === 1)
            t3._state = 3;
      }
      if ((t1 & 4) === 0 && (t2 & 32) === 0)
        _this._guardCallback$1(_this.get$_onPause());
    },
    resume$0() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 128) {
        t1 = _this._state = t1 - 128;
        if (t1 < 128)
          if ((t1 & 64) !== 0 && _this._pending.lastPendingEvent != null)
            _this._pending.schedule$1(_this);
          else {
            t1 = (t1 & 4294967291) >>> 0;
            _this._state = t1;
            if ((t1 & 32) === 0)
              _this._guardCallback$1(_this.get$_onResume());
          }
      }
    },
    cancel$0() {
      var _this = this,
        t1 = (_this._state & 4294967279) >>> 0;
      _this._state = t1;
      if ((t1 & 8) === 0)
        _this._cancel$0();
      t1 = _this._cancelFuture;
      return t1 == null ? $.$get$Future__nullFuture() : t1;
    },
    _cancel$0() {
      var t2, _this = this,
        t1 = _this._state = (_this._state | 8) >>> 0;
      if ((t1 & 64) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 32) === 0)
        _this.set$_pending(null);
      _this._cancelFuture = _this._onCancel$0();
    },
    _async$_add$1(_, data) {
      var t2, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(data);
      t2 = _this._state;
      if ((t2 & 8) !== 0)
        return;
      if (t2 < 32)
        _this._sendData$1(data);
      else
        _this._addPending$1(new A._DelayedData(data, t1._eval$1("_DelayedData<1>")));
    },
    _addError$2(error, stackTrace) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 32)
        this._sendError$2(error, stackTrace);
      else
        this._addPending$1(new A._DelayedError(error, stackTrace));
    },
    _close$0() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 = (t1 | 2) >>> 0;
      _this._state = t1;
      if (t1 < 32)
        _this._sendDone$0();
      else
        _this._addPending$1(B.C__DelayedDone);
    },
    _onPause$0() {
    },
    _onResume$0() {
    },
    _onCancel$0() {
      return null;
    },
    _addPending$1($event) {
      var t1, _this = this,
        pending = _this._pending;
      if (pending == null) {
        pending = new A._PendingEvents(A._instanceType(_this)._eval$1("_PendingEvents<1>"));
        _this.set$_pending(pending);
      }
      pending.add$1(0, $event);
      t1 = _this._state;
      if ((t1 & 64) === 0) {
        t1 = (t1 | 64) >>> 0;
        _this._state = t1;
        if (t1 < 128)
          pending.schedule$1(_this);
      }
    },
    _sendData$1(data) {
      var t2, _this = this,
        t1 = A._instanceType(_this)._precomputed1;
      t1._as(data);
      t2 = _this._state;
      _this._state = (t2 | 32) >>> 0;
      _this._zone.runUnaryGuarded$1$2(_this._async$_onData, data, t1);
      _this._state = (_this._state & 4294967263) >>> 0;
      _this._checkState$1((t2 & 4) !== 0);
    },
    _sendError$2(error, stackTrace) {
      var cancelFuture, _this = this,
        t1 = _this._state,
        t2 = new A._BufferingStreamSubscription__sendError_sendError(_this, error, stackTrace);
      if ((t1 & 1) !== 0) {
        _this._state = (t1 | 16) >>> 0;
        _this._cancel$0();
        cancelFuture = _this._cancelFuture;
        if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
          cancelFuture.whenComplete$1(t2);
        else
          t2.call$0();
      } else {
        t2.call$0();
        _this._checkState$1((t1 & 4) !== 0);
      }
    },
    _sendDone$0() {
      var cancelFuture, _this = this,
        t1 = new A._BufferingStreamSubscription__sendDone_sendDone(_this);
      _this._cancel$0();
      _this._state = (_this._state | 16) >>> 0;
      cancelFuture = _this._cancelFuture;
      if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
        cancelFuture.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _guardCallback$1(callback) {
      var t1, _this = this;
      type$.void_Function._as(callback);
      t1 = _this._state;
      _this._state = (t1 | 32) >>> 0;
      callback.call$0();
      _this._state = (_this._state & 4294967263) >>> 0;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _checkState$1(wasInputPaused) {
      var t2, isInputPaused, _this = this,
        t1 = _this._state;
      if ((t1 & 64) !== 0 && _this._pending.lastPendingEvent == null) {
        t1 = _this._state = (t1 & 4294967231) >>> 0;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t2 = _this._pending;
            t2 = t2 == null ? null : t2.lastPendingEvent == null;
            t2 = t2 !== false;
          } else
            t2 = false;
        else
          t2 = false;
        if (t2) {
          t1 = (t1 & 4294967291) >>> 0;
          _this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          _this.set$_pending(null);
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = (t1 ^ 32) >>> 0;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        t1 = (_this._state & 4294967263) >>> 0;
        _this._state = t1;
      }
      if ((t1 & 64) !== 0 && t1 < 128)
        _this._pending.schedule$1(_this);
    },
    set$_async$_onData(_onData) {
      this._async$_onData = A._instanceType(this)._eval$1("~(1)")._as(_onData);
    },
    set$_onDone(_onDone) {
      this._onDone = type$.void_Function._as(_onDone);
    },
    set$_pending(_pending) {
      this._pending = A._instanceType(this)._eval$1("_PendingEvents<1>?")._as(_pending);
    },
    $isStreamSubscription: 1,
    $is_EventDispatch: 1
  };
  A._BufferingStreamSubscription__sendError_sendError.prototype = {
    call$0() {
      var onError, t3, t4,
        t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 8) !== 0 && (t2 & 16) === 0)
        return;
      t1._state = (t2 | 32) >>> 0;
      onError = t1._onError;
      t2 = this.error;
      t3 = type$.Object;
      t4 = t1._zone;
      if (type$.void_Function_Object_StackTrace._is(onError))
        t4.runBinaryGuarded$2$3(onError, t2, this.stackTrace, t3, type$.StackTrace);
      else
        t4.runUnaryGuarded$1$2(type$.void_Function_Object._as(onError), t2, t3);
      t1._state = (t1._state & 4294967263) >>> 0;
    },
    $signature: 0
  };
  A._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 42) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967263) >>> 0;
    },
    $signature: 0
  };
  A._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t1 = A._instanceType(this);
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      return this._controller._subscribe$4(t1._eval$1("~(1)?")._as(onData), onError, onDone, cancelOnError === true);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }
  };
  A._DelayedEvent.prototype = {
    set$next(next) {
      this.next = type$.nullable__DelayedEvent_dynamic._as(next);
    },
    get$next() {
      return this.next;
    }
  };
  A._DelayedData.prototype = {
    perform$1(dispatch) {
      this.$ti._eval$1("_EventDispatch<1>")._as(dispatch)._sendData$1(this.value);
    }
  };
  A._DelayedError.prototype = {
    perform$1(dispatch) {
      dispatch._sendError$2(this.error, this.stackTrace);
    }
  };
  A._DelayedDone.prototype = {
    perform$1(dispatch) {
      dispatch._sendDone$0();
    },
    get$next() {
      return null;
    },
    set$next(_) {
      throw A.wrapException(A.StateError$("No events after a done."));
    },
    $is_DelayedEvent: 1
  };
  A._PendingEvents.prototype = {
    schedule$1(dispatch) {
      var t1, _this = this;
      _this.$ti._eval$1("_EventDispatch<1>")._as(dispatch);
      t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      A.scheduleMicrotask(new A._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    },
    add$1(_, $event) {
      var _this = this,
        lastEvent = _this.lastPendingEvent;
      if (lastEvent == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        lastEvent.set$next($event);
        _this.lastPendingEvent = $event;
      }
    }
  };
  A._PendingEvents_schedule_closure.prototype = {
    call$0() {
      var t2, $event, nextEvent,
        t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t2 = t1.$ti._eval$1("_EventDispatch<1>")._as(this.dispatch);
      $event = t1.firstPendingEvent;
      nextEvent = $event.get$next();
      t1.firstPendingEvent = nextEvent;
      if (nextEvent == null)
        t1.lastPendingEvent = null;
      $event.perform$1(t2);
    },
    $signature: 0
  };
  A._DoneStreamSubscription.prototype = {
    _schedule$0() {
      var _this = this;
      if ((_this._state & 2) !== 0)
        return;
      _this._zone.scheduleMicrotask$1(_this.get$_sendDone());
      _this._state = (_this._state | 2) >>> 0;
    },
    onData$1(handleData) {
      this.$ti._eval$1("~(1)?")._as(handleData);
    },
    onDone$1(handleDone) {
      this.set$_onDone(type$.nullable_void_Function._as(handleDone));
    },
    pause$0(_) {
      this._state += 4;
    },
    resume$0() {
      var t1 = this._state;
      if (t1 >= 4) {
        t1 = this._state = t1 - 4;
        if (t1 < 4 && (t1 & 1) === 0)
          this._schedule$0();
      }
    },
    cancel$0() {
      return $.$get$Future__nullFuture();
    },
    _sendDone$0() {
      var doneHandler, _this = this,
        t1 = _this._state = (_this._state & 4294967293) >>> 0;
      if (t1 >= 4)
        return;
      _this._state = (t1 | 1) >>> 0;
      doneHandler = _this._onDone;
      if (doneHandler != null)
        _this._zone.runGuarded$1(doneHandler);
    },
    set$_onDone(_onDone) {
      this._onDone = type$.nullable_void_Function._as(_onDone);
    },
    $isStreamSubscription: 1
  };
  A._StreamIterator.prototype = {};
  A._EmptyStream.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t1 = this.$ti;
      t1._eval$1("~(1)?")._as(onData);
      return A._DoneStreamSubscription$(type$.nullable_void_Function._as(onDone), t1._precomputed1);
    }
  };
  A._cancelAndValue_closure.prototype = {
    call$0() {
      return this.future._complete$1(this.value);
    },
    $signature: 0
  };
  A._ZoneFunction.prototype = {};
  A._Zone.prototype = {$isZone: 1};
  A._rootHandleError_closure.prototype = {
    call$0() {
      var t1 = this.error,
        t2 = this.stackTrace;
      A.checkNotNullable(t1, "error", type$.Object);
      A.checkNotNullable(t2, "stackTrace", type$.StackTrace);
      A.Error__throw(t1, t2);
    },
    $signature: 0
  };
  A._RootZone.prototype = {
    get$_scheduleMicrotask() {
      return B._ZoneFunction__RootZone__rootScheduleMicrotask;
    },
    get$errorZone() {
      return this;
    },
    runGuarded$1(f) {
      var e, s, exception;
      type$.void_Function._as(f);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f, type$.void);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runUnaryGuarded$1$2(f, arg, $T) {
      var e, s, exception;
      $T._eval$1("~(0)")._as(f);
      $T._as(arg);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        A._rootRunUnary(null, null, this, f, arg, type$.void, $T);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runBinaryGuarded$2$3(f, arg1, arg2, T1, T2) {
      var e, s, exception;
      T1._eval$1("@<0>")._bind$1(T2)._eval$1("~(1,2)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$2(arg1, arg2);
          return;
        }
        A._rootRunBinary(null, null, this, f, arg1, arg2, type$.void, T1, T2);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    bindCallback$1$1(f, $R) {
      return new A._RootZone_bindCallback_closure(this, $R._eval$1("0()")._as(f), $R);
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, type$.void_Function._as(f));
    },
    bindUnaryCallbackGuarded$1$1(f, $T) {
      return new A._RootZone_bindUnaryCallbackGuarded_closure(this, $T._eval$1("~(0)")._as(f), $T);
    },
    bindBinaryCallbackGuarded$2$1(f, T1, T2) {
      return new A._RootZone_bindBinaryCallbackGuarded_closure(this, T1._eval$1("@<0>")._bind$1(T2)._eval$1("~(1,2)")._as(f), T1, T2);
    },
    $index(_, key) {
      return null;
    },
    handleUncaughtError$2(error, stackTrace) {
      A._rootHandleError(error, type$.StackTrace._as(stackTrace));
    },
    run$1$1(f, $R) {
      $R._eval$1("0()")._as(f);
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f, $R);
    },
    runUnary$2$2(f, arg, $R, $T) {
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runBinary$3$3(f, arg1, arg2, $R, T1, T2) {
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
    },
    registerCallback$1$1(f, $R) {
      return $R._eval$1("0()")._as(f);
    },
    registerUnaryCallback$2$1(f, $R, $T) {
      return $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
    },
    registerBinaryCallback$3$1(f, $R, T1, T2) {
      return $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
    },
    errorCallback$2(error, stackTrace) {
      type$.nullable_StackTrace._as(stackTrace);
      return null;
    },
    scheduleMicrotask$1(f) {
      A._rootScheduleMicrotask(null, null, this, type$.void_Function._as(f));
    },
    createTimer$2(duration, f) {
      return A.Timer__createTimer(duration, type$.void_Function._as(f));
    }
  };
  A._RootZone_bindCallback_closure.prototype = {
    call$0() {
      return this.$this.run$1$1(this.f, this.R);
    },
    $signature() {
      return this.R._eval$1("0()");
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  A._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.f, t1._as(arg), t1);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A._RootZone_bindBinaryCallbackGuarded_closure.prototype = {
    call$2(arg1, arg2) {
      var _this = this,
        t1 = _this.T1,
        t2 = _this.T2;
      return _this.$this.runBinaryGuarded$2$3(_this.f, t1._as(arg1), t2._as(arg2), t1, t2);
    },
    $signature() {
      return this.T1._eval$1("@<0>")._bind$1(this.T2)._eval$1("~(1,2)");
    }
  };
  A._LinkedIdentityHashMap.prototype = {
    internalComputeHashCode$1(key) {
      return A.objectHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i].hashMapCellKey;
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  A._LinkedCustomHashMap.prototype = {
    $index(_, key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return null;
      return this.super$JsLinkedHashMap$internalGet(key);
    },
    $indexSet(_, key, value) {
      var t1 = this.$ti;
      this.super$JsLinkedHashMap$internalSet(t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    containsKey$1(key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return false;
      return this.super$JsLinkedHashMap$internalContainsKey(key);
    },
    remove$1(_, key) {
      if (!A.boolConversionCheck(this._validKey.call$1(key)))
        return null;
      return this.super$JsLinkedHashMap$internalRemove(key);
    },
    internalComputeHashCode$1(key) {
      return this._hashCode.call$1(this.$ti._precomputed1._as(key)) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, t1, t2, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (t1 = this.$ti._precomputed1, t2 = this._equals, i = 0; i < $length; ++i)
        if (A.boolConversionCheck(t2.call$2(t1._as(bucket[i].hashMapCellKey), t1._as(key))))
          return i;
      return -1;
    }
  };
  A._LinkedCustomHashMap_closure.prototype = {
    call$1(v) {
      return this.K._is(v);
    },
    $signature: 155
  };
  A._LinkedHashSet.prototype = {
    _newSimilarSet$1$0($R) {
      return new A._LinkedHashSet($R._eval$1("_LinkedHashSet<0>"));
    },
    _newSimilarSet$0() {
      return this._newSimilarSet$1$0(type$.dynamic);
    },
    get$iterator(_) {
      var _this = this,
        t1 = new A._LinkedHashSetIterator(_this, _this._collection$_modifications, A._instanceType(_this)._eval$1("_LinkedHashSetIterator<1>"));
      t1._collection$_cell = _this._collection$_first;
      return t1;
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, t1;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        if (strings == null)
          return false;
        return type$.nullable__LinkedHashSetCell._as(strings[object]) != null;
      } else {
        t1 = this._contains$1(object);
        return t1;
      }
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = A._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = A._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(0, element);
    },
    _add$1(_, element) {
      var rest, hash, bucket, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._collection$_newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._collection$_newLinkedCell$1(element));
      }
      return true;
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(object);
    },
    _remove$1(object) {
      var hash, bucket, index, cell, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      cell = bucket.splice(index, 1)[0];
      if (0 === bucket.length)
        delete rest[hash];
      _this._unlinkCell$1(cell);
      return true;
    },
    _collection$_addHashTableEntry$2(table, element) {
      A._instanceType(this)._precomputed1._as(element);
      if (type$.nullable__LinkedHashSetCell._as(table[element]) != null)
        return false;
      table[element] = this._collection$_newLinkedCell$1(element);
      return true;
    },
    _removeHashTableEntry$2(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = type$.nullable__LinkedHashSetCell._as(table[element]);
      if (cell == null)
        return false;
      this._unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _collection$_modified$0() {
      this._collection$_modifications = this._collection$_modifications + 1 & 1073741823;
    },
    _collection$_newLinkedCell$1(element) {
      var t1, _this = this,
        cell = new A._LinkedHashSetCell(A._instanceType(_this)._precomputed1._as(element));
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        t1 = _this._collection$_last;
        t1.toString;
        cell._collection$_previous = t1;
        _this._collection$_last = t1._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _unlinkCell$1(cell) {
      var _this = this,
        previous = cell._collection$_previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._collection$_last = previous;
      else
        next._collection$_previous = previous;
      --_this._collection$_length;
      _this._collection$_modified$0();
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._collection$_element, element))
          return i;
      return -1;
    }
  };
  A._LinkedHashSetCell.prototype = {};
  A._LinkedHashSetIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        cell = _this._collection$_cell,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (cell == null) {
        _this.set$_collection$_current(null);
        return false;
      } else {
        _this.set$_collection$_current(_this.$ti._eval$1("1?")._as(cell._collection$_element));
        _this._collection$_cell = cell._collection$_next;
        return true;
      }
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.IterableBase.prototype = {};
  A.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 158
  };
  A.ListBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1};
  A.ListMixin.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListMixin.E>"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    forEach$1(receiver, action) {
      var $length, i;
      A.instanceType(receiver)._eval$1("~(ListMixin.E)")._as(action);
      $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        action.call$1(this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    get$isEmpty(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty(receiver) {
      return !this.get$isEmpty(receiver);
    },
    get$first(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.$index(receiver, 0);
    },
    get$last(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.$index(receiver, this.get$length(receiver) - 1);
    },
    contains$1(receiver, element) {
      var i,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(this.$index(receiver, i), element))
          return true;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    firstWhere$2$orElse(receiver, test, orElse) {
      var $length, i, element,
        t1 = A.instanceType(receiver);
      t1._eval$1("bool(ListMixin.E)")._as(test);
      t1._eval$1("ListMixin.E()?")._as(orElse);
      $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        element = this.$index(receiver, i);
        if (A.boolConversionCheck(test.call$1(element)))
          return element;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      if (orElse != null)
        return orElse.call$0();
      throw A.wrapException(A.IterableElementError_noElement());
    },
    firstWhere$1($receiver, test) {
      return this.firstWhere$2$orElse($receiver, test, null);
    },
    map$1$1(receiver, f, $T) {
      var t1 = A.instanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(ListMixin.E)")._as(f), t1._eval$1("@<ListMixin.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(receiver, count) {
      return A.SubListIterable$(receiver, count, null, A.instanceType(receiver)._eval$1("ListMixin.E"));
    },
    toList$1$growable(receiver, growable) {
      var t1, first, result, i, _this = this;
      if (_this.get$isEmpty(receiver)) {
        t1 = J.JSArray_JSArray$growable(0, A.instanceType(receiver)._eval$1("ListMixin.E"));
        return t1;
      }
      first = _this.$index(receiver, 0);
      result = A.List_List$filled(_this.get$length(receiver), first, true, A.instanceType(receiver)._eval$1("ListMixin.E"));
      for (i = 1; i < _this.get$length(receiver); ++i)
        B.JSArray_methods.$indexSet(result, i, _this.$index(receiver, i));
      return result;
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    add$1(receiver, element) {
      var t1;
      A.instanceType(receiver)._eval$1("ListMixin.E")._as(element);
      t1 = this.get$length(receiver);
      this.set$length(receiver, t1 + 1);
      this.$indexSet(receiver, t1, element);
    },
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A.instanceType(receiver)._eval$1("@<ListMixin.E>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    sort$1(receiver, compare) {
      var t2,
        t1 = A.instanceType(receiver);
      t1._eval$1("int(ListMixin.E,ListMixin.E)?")._as(compare);
      t2 = compare == null ? A.collection_ListMixin__compareAny$closure() : compare;
      A.Sort_sort(receiver, t2, t1._eval$1("ListMixin.E"));
    },
    fillRange$3(receiver, start, end, fill) {
      var i;
      A.instanceType(receiver)._eval$1("ListMixin.E?")._as(fill);
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      for (i = start; i < end; ++i)
        this.$indexSet(receiver, i, fill);
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherStart, otherList, i,
        t1 = A.instanceType(receiver);
      t1._eval$1("Iterable<ListMixin.E>")._as(iterable);
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (t1._eval$1("List<ListMixin.E>")._is(iterable)) {
        otherStart = skipCount;
        otherList = iterable;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
      else
        for (i = 0; i < $length; ++i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
    },
    toString$0(receiver) {
      return A.IterableBase_iterableToFullString(receiver, "[", "]");
    }
  };
  A.MapBase.prototype = {};
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += A.S(k);
      t1._contents = t2 + ": ";
      t1._contents += A.S(v);
    },
    $signature: 16
  };
  A.MapMixin.prototype = {
    cast$2$0(_, RK, RV) {
      var t1 = A._instanceType(this);
      return A.Map_castFrom(this, t1._eval$1("MapMixin.K"), t1._eval$1("MapMixin.V"), RK, RV);
    },
    forEach$1(_, action) {
      var t2, key, t3,
        t1 = A._instanceType(this);
      t1._eval$1("~(MapMixin.K,MapMixin.V)")._as(action);
      for (t2 = J.get$iterator$ax(this.get$keys()), t1 = t1._eval$1("MapMixin.V"); t2.moveNext$0();) {
        key = t2.get$current();
        t3 = this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
      }
    },
    get$entries(_) {
      return J.map$1$1$ax(this.get$keys(), new A.MapMixin_entries_closure(this), A._instanceType(this)._eval$1("MapEntry<MapMixin.K,MapMixin.V>"));
    },
    map$2$1(_, transform, K2, V2) {
      var result, t2, key, t3, entry,
        t1 = A._instanceType(this);
      t1._bind$1(K2)._bind$1(V2)._eval$1("MapEntry<1,2>(MapMixin.K,MapMixin.V)")._as(transform);
      result = A.LinkedHashMap_LinkedHashMap$_empty(K2, V2);
      for (t2 = J.get$iterator$ax(this.get$keys()), t1 = t1._eval$1("MapMixin.V"); t2.moveNext$0();) {
        key = t2.get$current();
        t3 = this.$index(0, key);
        entry = transform.call$2(key, t3 == null ? t1._as(t3) : t3);
        result.$indexSet(0, entry.key, entry.value);
      }
      return result;
    },
    addEntries$1(newEntries) {
      var t1, t2;
      A._instanceType(this)._eval$1("Iterable<MapEntry<MapMixin.K,MapMixin.V>>")._as(newEntries);
      for (t1 = newEntries.get$iterator(newEntries); t1.moveNext$0();) {
        t2 = t1.get$current();
        this.$indexSet(0, t2.key, t2.value);
      }
    },
    containsKey$1(key) {
      return J.contains$1$asx(this.get$keys(), key);
    },
    get$length(_) {
      return J.get$length$asx(this.get$keys());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$keys());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$keys());
    },
    get$values(_) {
      var t1 = A._instanceType(this);
      return new A._MapBaseValueIterable(this, t1._eval$1("@<MapMixin.K>")._bind$1(t1._eval$1("MapMixin.V"))._eval$1("_MapBaseValueIterable<1,2>"));
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $isMap: 1
  };
  A.MapMixin_entries_closure.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t2._eval$1("MapMixin.K")._as(key);
      t1 = t1.$index(0, key);
      if (t1 == null)
        t1 = t2._eval$1("MapMixin.V")._as(t1);
      return new A.MapEntry(key, t1, t2._eval$1("@<MapMixin.K>")._bind$1(t2._eval$1("MapMixin.V"))._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("MapEntry<MapMixin.K,MapMixin.V>(MapMixin.K)");
    }
  };
  A._MapBaseValueIterable.prototype = {
    get$length(_) {
      var t1 = this._collection$_map;
      return t1.get$length(t1);
    },
    get$isEmpty(_) {
      var t1 = this._collection$_map;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty(_) {
      var t1 = this._collection$_map;
      return t1.get$isNotEmpty(t1);
    },
    get$iterator(_) {
      var t1 = this._collection$_map,
        t2 = this.$ti;
      return new A._MapBaseValueIterator(J.get$iterator$ax(t1.get$keys()), t1, t2._eval$1("@<1>")._bind$1(t2._rest[1])._eval$1("_MapBaseValueIterator<1,2>"));
    }
  };
  A._MapBaseValueIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._keys;
      if (t1.moveNext$0()) {
        _this.set$_collection$_current(_this._collection$_map.$index(0, t1.get$current()));
        return true;
      }
      _this.set$_collection$_current(null);
      return false;
    },
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("2?")._as(_current);
    },
    $isIterator: 1
  };
  A._UnmodifiableMapMixin.prototype = {
    $indexSet(_, key, value) {
      var t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable map"));
    }
  };
  A.MapView.prototype = {
    cast$2$0(_, RK, RV) {
      return this._collection$_map.cast$2$0(0, RK, RV);
    },
    $index(_, key) {
      return this._collection$_map.$index(0, key);
    },
    $indexSet(_, key, value) {
      var t1 = A._instanceType(this);
      this._collection$_map.$indexSet(0, t1._eval$1("MapView.K")._as(key), t1._eval$1("MapView.V")._as(value));
    },
    forEach$1(_, action) {
      this._collection$_map.forEach$1(0, A._instanceType(this)._eval$1("~(MapView.K,MapView.V)")._as(action));
    },
    get$isEmpty(_) {
      var t1 = this._collection$_map;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty(_) {
      var t1 = this._collection$_map;
      return t1.get$isNotEmpty(t1);
    },
    get$length(_) {
      var t1 = this._collection$_map;
      return t1.get$length(t1);
    },
    get$keys() {
      return this._collection$_map.get$keys();
    },
    toString$0(_) {
      return this._collection$_map.toString$0(0);
    },
    get$values(_) {
      var t1 = this._collection$_map;
      return t1.get$values(t1);
    },
    map$2$1(_, transform, K2, V2) {
      return this._collection$_map.map$2$1(0, A._instanceType(this)._bind$1(K2)._bind$1(V2)._eval$1("MapEntry<1,2>(MapView.K,MapView.V)")._as(transform), K2, V2);
    },
    $isMap: 1
  };
  A.UnmodifiableMapView.prototype = {
    cast$2$0(_, RK, RV) {
      return new A.UnmodifiableMapView(this._collection$_map.cast$2$0(0, RK, RV), RK._eval$1("@<0>")._bind$1(RV)._eval$1("UnmodifiableMapView<1,2>"));
    }
  };
  A.ListQueue.prototype = {
    cast$1$0(_, $R) {
      return new A.CastQueue(this, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastQueue<1,2>"));
    },
    get$iterator(_) {
      var _this = this;
      return new A._ListQueueIterator(_this, _this._tail, _this._modificationCount, _this._head, _this.$ti._eval$1("_ListQueueIterator<1>"));
    },
    get$isEmpty(_) {
      return this._head === this._tail;
    },
    get$length(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    get$first(_) {
      var t2, _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      t2 = _this._table;
      if (!(t1 < t2.length))
        return A.ioore(t2, t1);
      t1 = t2[t1];
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    elementAt$1(_, index) {
      var t1, t2, t3, _this = this,
        $length = _this.get$length(_this);
      if (0 > index || index >= $length)
        A.throwExpression(A.IndexError$(index, _this, "index", null, $length));
      t1 = _this._table;
      t2 = t1.length;
      t3 = (_this._head + index & t2 - 1) >>> 0;
      if (!(t3 >= 0 && t3 < t2))
        return A.ioore(t1, t3);
      t3 = t1[t3];
      return t3 == null ? _this.$ti._precomputed1._as(t3) : t3;
    },
    add$1(_, value) {
      var t2, t3, newTable, split, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(value);
      B.JSArray_methods.$indexSet(_this._table, _this._tail, value);
      t2 = _this._tail;
      t3 = _this._table.length;
      t2 = (t2 + 1 & t3 - 1) >>> 0;
      _this._tail = t2;
      if (_this._head === t2) {
        newTable = A.List_List$filled(t3 * 2, null, false, t1._eval$1("1?"));
        t1 = _this._table;
        t2 = _this._head;
        split = t1.length - t2;
        B.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
        B.JSArray_methods.setRange$4(newTable, split, split + _this._head, _this._table, 0);
        _this._head = 0;
        _this._tail = _this._table.length;
        _this.set$_table(newTable);
      }
      ++_this._modificationCount;
    },
    toString$0(_) {
      return A.IterableBase_iterableToFullString(this, "{", "}");
    },
    removeFirst$0() {
      var t2, result, _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      ++_this._modificationCount;
      t2 = _this._table;
      if (!(t1 < t2.length))
        return A.ioore(t2, t1);
      result = t2[t1];
      if (result == null)
        result = _this.$ti._precomputed1._as(result);
      B.JSArray_methods.$indexSet(t2, t1, null);
      _this._head = (_this._head + 1 & _this._table.length - 1) >>> 0;
      return result;
    },
    _add$1(_, element) {
      var t2, t3, newTable, split, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(element);
      B.JSArray_methods.$indexSet(_this._table, _this._tail, element);
      t2 = _this._tail;
      t3 = _this._table.length;
      t2 = (t2 + 1 & t3 - 1) >>> 0;
      _this._tail = t2;
      if (_this._head === t2) {
        newTable = A.List_List$filled(t3 * 2, null, false, t1._eval$1("1?"));
        t1 = _this._table;
        t2 = _this._head;
        split = t1.length - t2;
        B.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
        B.JSArray_methods.setRange$4(newTable, split, split + _this._head, _this._table, 0);
        _this._head = 0;
        _this._tail = _this._table.length;
        _this.set$_table(newTable);
      }
      ++_this._modificationCount;
    },
    set$_table(_table) {
      this._table = this.$ti._eval$1("List<1?>")._as(_table);
    },
    $isQueue: 1
  };
  A._ListQueueIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, t3, _this = this,
        t1 = _this._queue;
      if (_this._modificationCount !== t1._modificationCount)
        A.throwExpression(A.ConcurrentModificationError$(t1));
      t2 = _this._collection$_position;
      if (t2 === _this._collection$_end) {
        _this.set$_collection$_current(null);
        return false;
      }
      t3 = t1._table;
      if (!(t2 < t3.length))
        return A.ioore(t3, t2);
      _this.set$_collection$_current(t3[t2]);
      _this._collection$_position = (_this._collection$_position + 1 & t1._table.length - 1) >>> 0;
      return true;
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.SetMixin.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    cast$1$0(_, $R) {
      return A.Set_castFrom(this, null, A._instanceType(this)._eval$1("SetMixin.E"), $R);
    },
    addAll$1(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(A._instanceType(this)._eval$1("Iterable<SetMixin.E>")._as(elements)); t1.moveNext$0();)
        this.add$1(0, t1.get$current());
    },
    map$1$1(_, f, $T) {
      var t1 = A._instanceType(this);
      return new A.EfficientLengthMappedIterable(this, t1._bind$1($T)._eval$1("1(SetMixin.E)")._as(f), t1._eval$1("@<SetMixin.E>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    toString$0(_) {
      return A.IterableBase_iterableToFullString(this, "{", "}");
    },
    join$1(_, separator) {
      var t1,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      if (separator === "") {
        t1 = "";
        do
          t1 += A.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        t1 = "" + A.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          t1 = t1 + separator + A.S(iterator.get$current());
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    skip$1(_, n) {
      return A.SkipIterable_SkipIterable(this, n, A._instanceType(this)._eval$1("SetMixin.E"));
    },
    firstWhere$2$orElse(_, test, orElse) {
      var element,
        t1 = A._instanceType(this);
      t1._eval$1("bool(SetMixin.E)")._as(test);
      t1._eval$1("SetMixin.E()?")._as(orElse);
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current();
        if (A.boolConversionCheck(test.call$1(element)))
          return element;
      }
      return orElse.call$0();
    },
    elementAt$1(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      A.checkNotNullable(index, _s5_, type$.int);
      A.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current();
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw A.wrapException(A.IndexError$(index, this, _s5_, null, elementIndex));
    }
  };
  A.SetBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isSet: 1};
  A._SetBase.prototype = {
    cast$1$0(_, $R) {
      return A.Set_castFrom(this, this.get$_newSimilarSet(), A._instanceType(this)._precomputed1, $R);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isSet: 1
  };
  A._ListBase_Object_ListMixin.prototype = {};
  A._SetBase_Object_SetMixin.prototype = {};
  A._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
  A.__SetBase_Object_SetMixin.prototype = {};
  A._JsonMap.prototype = {
    $index(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length(_) {
      return this._processed == null ? this._data.__js_helper$_length : this._computeKeys$0().length;
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) > 0;
    },
    get$keys() {
      if (this._processed == null) {
        var t1 = this._data;
        return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
      }
      return new A._JsonMapKeyIterable(this);
    },
    get$values(_) {
      var t1, _this = this;
      if (_this._processed == null) {
        t1 = _this._data;
        return t1.get$values(t1);
      }
      return A.MappedIterable_MappedIterable(_this._computeKeys$0(), new A._JsonMap_values_closure(_this), type$.String, type$.dynamic);
    },
    $indexSet(_, key, value) {
      var processed, original, _this = this;
      A._asString(key);
      if (_this._processed == null)
        _this._data.$indexSet(0, key, value);
      else if (_this.containsKey$1(key)) {
        processed = _this._processed;
        processed[key] = value;
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          original[key] = null;
      } else
        _this._upgrade$0().$indexSet(0, key, value);
    },
    containsKey$1(key) {
      if (this._processed == null)
        return this._data.containsKey$1(key);
      return Object.prototype.hasOwnProperty.call(this._original, key);
    },
    forEach$1(_, f) {
      var keys, i, key, value, _this = this;
      type$.void_Function_String_dynamic._as(f);
      if (_this._processed == null)
        return _this._data.forEach$1(0, f);
      keys = _this._computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = A._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._data)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0() {
      var keys = type$.nullable_List_dynamic._as(this._data);
      if (keys == null)
        keys = this._data = A._setArrayType(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _upgrade$0() {
      var result, keys, i, t1, key, _this = this;
      if (_this._processed == null)
        return _this._data;
      result = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = _this._computeKeys$0();
      for (i = 0; t1 = keys.length, i < t1; ++i) {
        key = keys[i];
        result.$indexSet(0, key, _this.$index(0, key));
      }
      if (t1 === 0)
        B.JSArray_methods.add$1(keys, "");
      else
        B.JSArray_methods.clear$0(keys);
      _this._original = _this._processed = null;
      return _this._data = result;
    },
    _process$1(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = A._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  A._JsonMap_values_closure.prototype = {
    call$1(each) {
      return this.$this.$index(0, A._asString(each));
    },
    $signature: 40
  };
  A._JsonMapKeyIterable.prototype = {
    get$length(_) {
      var t1 = this._parent;
      return t1.get$length(t1);
    },
    elementAt$1(_, index) {
      var t1 = this._parent;
      if (t1._processed == null)
        t1 = t1.get$keys().elementAt$1(0, index);
      else {
        t1 = t1._computeKeys$0();
        if (!(index >= 0 && index < t1.length))
          return A.ioore(t1, index);
        t1 = t1[index];
      }
      return t1;
    },
    get$iterator(_) {
      var t1 = this._parent;
      if (t1._processed == null) {
        t1 = t1.get$keys();
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
      }
      return t1;
    },
    contains$1(_, key) {
      return this._parent.containsKey$1(key);
    }
  };
  A.Utf8Decoder__decoder_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: true});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 43
  };
  A.Utf8Decoder__decoderNonfatal_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: false});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 43
  };
  A.AsciiCodec.prototype = {
    get$name(_) {
      return "us-ascii";
    },
    encode$1(source) {
      return B.AsciiEncoder_127.convert$1(source);
    },
    decode$1(_, bytes) {
      var t1;
      type$.List_int._as(bytes);
      t1 = B.AsciiDecoder_false_127.convert$1(bytes);
      return t1;
    },
    get$encoder() {
      return B.AsciiEncoder_127;
    }
  };
  A._UnicodeSubsetEncoder.prototype = {
    convert$1(string) {
      var $length, result, t1, i, codeUnit;
      A._asString(string);
      $length = A.RangeError_checkValidRange(0, null, string.length) - 0;
      result = new Uint8Array($length);
      for (t1 = ~this._subsetMask, i = 0; i < $length; ++i) {
        codeUnit = B.JSString_methods._codeUnitAt$1(string, i);
        if ((codeUnit & t1) !== 0)
          throw A.wrapException(A.ArgumentError$value(string, "string", "Contains invalid characters."));
        if (!(i < $length))
          return A.ioore(result, i);
        result[i] = codeUnit;
      }
      return result;
    }
  };
  A.AsciiEncoder.prototype = {};
  A._UnicodeSubsetDecoder.prototype = {
    convert$1(bytes) {
      var t1, end, t2, i, byte;
      type$.List_int._as(bytes);
      t1 = J.getInterceptor$asx(bytes);
      end = A.RangeError_checkValidRange(0, null, t1.get$length(bytes));
      for (t2 = ~this._subsetMask, i = 0; i < end; ++i) {
        byte = t1.$index(bytes, i);
        if ((byte & t2) >>> 0 !== 0) {
          if (!this._allowInvalid)
            throw A.wrapException(A.FormatException$("Invalid value in input: " + A.S(byte), null, null));
          return this._convertInvalid$3(bytes, 0, end);
        }
      }
      return A.String_String$fromCharCodes(bytes, 0, end);
    },
    _convertInvalid$3(bytes, start, end) {
      var t1, t2, i, t3, value;
      type$.List_int._as(bytes);
      for (t1 = ~this._subsetMask, t2 = J.getInterceptor$asx(bytes), i = start, t3 = ""; i < end; ++i) {
        value = t2.$index(bytes, i);
        t3 += A.Primitives_stringFromCharCode((value & t1) >>> 0 !== 0 ? 65533 : value);
      }
      return t3.charCodeAt(0) == 0 ? t3 : t3;
    }
  };
  A.AsciiDecoder.prototype = {};
  A.Base64Codec.prototype = {
    get$encoder() {
      return B.C_Base64Encoder;
    },
    normalize$3(source, start, end) {
      var inverseAlphabet, t1, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, digit2, char0, value, t2, t3, endLength, $length,
        _s31_ = "Invalid base64 encoding length ";
      end = A.RangeError_checkValidRange(start, end, source.length);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (t1 = inverseAlphabet.length, i = start, sliceStart = i, buffer = null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {
        i0 = i + 1;
        char = B.JSString_methods._codeUnitAt$1(source, i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            digit1 = A.hexDigitValue(B.JSString_methods._codeUnitAt$1(source, i0));
            digit2 = A.hexDigitValue(B.JSString_methods._codeUnitAt$1(source, i0 + 1));
            char0 = digit1 * 16 + digit2 - (digit2 & 256);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          if (!(char0 >= 0 && char0 < t1))
            return A.ioore(inverseAlphabet, char0);
          value = inverseAlphabet[char0];
          if (value >= 0) {
            char0 = B.JSString_methods.codeUnitAt$1(string$.ABCDEF, value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t2 = buffer == null ? null : buffer._contents.length;
                if (t2 == null)
                  t2 = 0;
                firstPadding = t2 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t2 = buffer;
            } else
              t2 = buffer;
            t3 = t2._contents += B.JSString_methods.substring$2(source, sliceStart, i);
            t2._contents = t3 + A.Primitives_stringFromCharCode(char);
            sliceStart = i0;
            continue;
          }
        }
        throw A.wrapException(A.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        t1 = buffer._contents += B.JSString_methods.substring$2(source, sliceStart, end);
        t2 = t1.length;
        if (firstPadding >= 0)
          A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
        else {
          endLength = B.JSInt_methods.$mod(t2 - 1, 4) + 1;
          if (endLength === 1)
            throw A.wrapException(A.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            t1 += "=";
            buffer._contents = t1;
            ++endLength;
          }
        }
        t1 = buffer._contents;
        return B.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
      }
      $length = end - start;
      if (firstPadding >= 0)
        A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = B.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw A.wrapException(A.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = B.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  A.Base64Encoder.prototype = {
    convert$1(input) {
      var t1;
      type$.List_int._as(input);
      t1 = J.getInterceptor$asx(input);
      if (t1.get$isEmpty(input))
        return "";
      t1 = new A._Base64Encoder(string$.ABCDEF).encode$4(input, 0, t1.get$length(input), true);
      t1.toString;
      return A.String_String$fromCharCodes(t1, 0, null);
    }
  };
  A._Base64Encoder.prototype = {
    encode$4(bytes, start, end, isLast) {
      var t1, byteCount, fullChunks, bufferLength, output;
      type$.List_int._as(bytes);
      t1 = this._convert$_state;
      byteCount = (t1 & 3) + (end - start);
      fullChunks = B.JSInt_methods._tdivFast$1(byteCount, 3);
      bufferLength = fullChunks * 4;
      if (byteCount - fullChunks * 3 > 0)
        bufferLength += 4;
      output = new Uint8Array(bufferLength);
      this._convert$_state = A._Base64Encoder_encodeChunk(this._alphabet, bytes, start, end, true, output, 0, t1);
      if (bufferLength > 0)
        return output;
      return null;
    }
  };
  A.ByteConversionSink.prototype = {};
  A.ByteConversionSinkBase.prototype = {};
  A._ByteCallbackSink.prototype = {
    add$1(_, chunk) {
      var t1, t2, t3, v, grown, _this = this;
      type$.Iterable_int._as(chunk);
      t1 = _this._convert$_buffer;
      t2 = _this._bufferIndex;
      t3 = J.getInterceptor$asx(chunk);
      if (t3.get$length(chunk) > t1.length - t2) {
        t1 = _this._convert$_buffer;
        v = t3.get$length(chunk) + t1.length - 1;
        v |= B.JSInt_methods._shrOtherPositive$1(v, 1);
        v |= v >>> 2;
        v |= v >>> 4;
        v |= v >>> 8;
        grown = new Uint8Array((((v | v >>> 16) >>> 0) + 1) * 2);
        t1 = _this._convert$_buffer;
        B.NativeUint8List_methods.setRange$3(grown, 0, t1.length, t1);
        _this.set$_convert$_buffer(grown);
      }
      t1 = _this._convert$_buffer;
      t2 = _this._bufferIndex;
      B.NativeUint8List_methods.setRange$3(t1, t2, t2 + t3.get$length(chunk), chunk);
      _this._bufferIndex = _this._bufferIndex + t3.get$length(chunk);
    },
    close$0(_) {
      this._callback.call$1(B.NativeUint8List_methods.sublist$2(this._convert$_buffer, 0, this._bufferIndex));
    },
    set$_convert$_buffer(_buffer) {
      this._convert$_buffer = type$.List_int._as(_buffer);
    }
  };
  A.ChunkedConversionSink.prototype = {};
  A.Codec.prototype = {
    encode$1(input) {
      A._instanceType(this)._eval$1("Codec.S")._as(input);
      return this.get$encoder().convert$1(input);
    }
  };
  A._FusedCodec.prototype = {
    get$encoder() {
      return this._convert$_first.get$encoder().fuse$1$1(B.C_Base64Encoder, this.$ti._rest[2]);
    }
  };
  A.Converter.prototype = {
    fuse$1$1(other, TT) {
      var t1 = A._instanceType(this);
      return new A._FusedConverter(this, t1._bind$1(TT)._eval$1("Converter<Converter.T,1>")._as(other), t1._eval$1("@<Converter.S>")._bind$1(t1._eval$1("Converter.T"))._bind$1(TT)._eval$1("_FusedConverter<1,2,3>"));
    }
  };
  A._FusedConverter.prototype = {
    convert$1(input) {
      return this._second.convert$1(this._convert$_first.convert$1(this.$ti._precomputed1._as(input)));
    }
  };
  A.Encoding.prototype = {};
  A.JsonUnsupportedObjectError.prototype = {
    toString$0(_) {
      var safeString = A.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  A.JsonCyclicError.prototype = {
    toString$0(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  A.JsonCodec.prototype = {
    decode$2$reviver(_, source, reviver) {
      var t1;
      type$.nullable_nullable_Object_Function_2_nullable_Object_and_nullable_Object._as(reviver);
      t1 = A._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    decode$1($receiver, source) {
      return this.decode$2$reviver($receiver, source, null);
    },
    encode$2$toEncodable(value, toEncodable) {
      var t1;
      type$.nullable_nullable_Object_Function_dynamic._as(toEncodable);
      t1 = A._JsonStringStringifier_stringify(value, this.get$encoder()._toEncodable, null);
      return t1;
    },
    encode$1(value) {
      return this.encode$2$toEncodable(value, null);
    },
    get$encoder() {
      return B.JsonEncoder_null;
    },
    get$decoder() {
      return B.JsonDecoder_null;
    }
  };
  A.JsonEncoder.prototype = {
    convert$1(object) {
      var t1,
        output = new A.StringBuffer(""),
        stringifier = A._JsonStringStringifier$(output, this._toEncodable);
      stringifier.writeObject$1(object);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    fuse$1$1(other, $T) {
      $T._eval$1("Converter<String,0>")._as(other);
      return this.super$Converter$fuse(other, $T);
    }
  };
  A.JsonUtf8Encoder.prototype = {
    convert$1(object) {
      var t4, stringifier, $length, i, result, offset, byteList, end,
        bytes = A._setArrayType([], type$.JSArray_List_int),
        addChunk = new A.JsonUtf8Encoder_convert_addChunk(bytes),
        t1 = this._indent,
        t2 = this._toEncodable,
        t3 = this._bufferSize;
      if (t1 != null) {
        t4 = new Uint8Array(t3);
        if (t2 == null)
          t2 = A.convert___defaultToEncodable$closure();
        stringifier = new A._JsonUtf8StringifierPretty(t1, 0, t3, addChunk, t4, [], t2);
      } else
        stringifier = A._JsonUtf8Stringifier$(t2, t3, addChunk);
      stringifier.writeObject$1(object);
      t1 = stringifier.index;
      if (t1 > 0)
        stringifier.addChunk.call$3(stringifier.buffer, 0, t1);
      stringifier.buffer = new Uint8Array(0);
      stringifier.index = 0;
      t1 = bytes.length;
      if (t1 === 1) {
        if (0 >= t1)
          return A.ioore(bytes, 0);
        return bytes[0];
      }
      for ($length = 0, i = 0; i < t1; ++i)
        $length += bytes[i].length;
      result = new Uint8Array($length);
      for (i = 0, offset = 0; i < bytes.length; ++i, offset = end) {
        byteList = bytes[i];
        end = offset + byteList.length;
        B.NativeUint8List_methods.setRange$3(result, offset, end, byteList);
      }
      return result;
    }
  };
  A.JsonUtf8Encoder_convert_addChunk.prototype = {
    call$3(chunk, start, end) {
      if (start > 0 || end < chunk.length)
        chunk = A.NativeUint8List_NativeUint8List$view(chunk.buffer, chunk.byteOffset + start, end - start);
      B.JSArray_methods.add$1(this.bytes, chunk);
    },
    $signature: 171
  };
  A.JsonDecoder.prototype = {
    convert$1(input) {
      return A._parseJson(A._asString(input), this._reviver);
    }
  };
  A._JsonStringifier.prototype = {
    writeStringContent$1(s) {
      var offset, i, charCode, t1, t2, _this = this,
        $length = s.length;
      for (offset = 0, i = 0; i < $length; ++i) {
        charCode = B.JSString_methods._codeUnitAt$1(s, i);
        if (charCode > 92) {
          if (charCode >= 55296) {
            t1 = charCode & 64512;
            if (t1 === 55296) {
              t2 = i + 1;
              t2 = !(t2 < $length && (B.JSString_methods._codeUnitAt$1(s, t2) & 64512) === 56320);
            } else
              t2 = false;
            if (!t2)
              if (t1 === 56320) {
                t1 = i - 1;
                t1 = !(t1 >= 0 && (B.JSString_methods.codeUnitAt$1(s, t1) & 64512) === 55296);
              } else
                t1 = false;
            else
              t1 = true;
            if (t1) {
              if (i > offset)
                _this.writeStringSlice$3(s, offset, i);
              offset = i + 1;
              _this.writeCharCode$1(92);
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(100);
              t1 = charCode >>> 8 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
            }
          }
          continue;
        }
        if (charCode < 32) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          switch (charCode) {
            case 8:
              _this.writeCharCode$1(98);
              break;
            case 9:
              _this.writeCharCode$1(116);
              break;
            case 10:
              _this.writeCharCode$1(110);
              break;
            case 12:
              _this.writeCharCode$1(102);
              break;
            case 13:
              _this.writeCharCode$1(114);
              break;
            default:
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(48);
              _this.writeCharCode$1(48);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          _this.writeCharCode$1(charCode);
        }
      }
      if (offset === 0)
        _this.writeString$1(s);
      else if (offset < $length)
        _this.writeStringSlice$3(s, offset, $length);
    },
    _checkCycle$1(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw A.wrapException(new A.JsonCyclicError(object, null));
      }
      B.JSArray_methods.add$1(t1, object);
    },
    writeObject$1(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = A.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw A.wrapException(t1);
        }
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw A.wrapException(t1);
      }
    },
    writeJsonValue$1(object) {
      var t1, success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this.writeNumber$1(object);
        return true;
      } else if (object === true) {
        _this.writeString$1("true");
        return true;
      } else if (object === false) {
        _this.writeString$1("false");
        return true;
      } else if (object == null) {
        _this.writeString$1("null");
        return true;
      } else if (typeof object == "string") {
        _this.writeString$1('"');
        _this.writeStringContent$1(object);
        _this.writeString$1('"');
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        return success;
      } else
        return false;
    },
    writeList$1(list) {
      var t1, i, _this = this;
      _this.writeString$1("[");
      t1 = J.getInterceptor$asx(list);
      if (t1.get$isNotEmpty(list)) {
        _this.writeObject$1(t1.$index(list, 0));
        for (i = 1; i < t1.get$length(list); ++i) {
          _this.writeString$1(",");
          _this.writeObject$1(t1.$index(list, i));
        }
      }
      _this.writeString$1("]");
    },
    writeMap$1(map) {
      var t1, keyValueList, i, separator, t2, _this = this, _box_0 = {};
      if (map.get$isEmpty(map)) {
        _this.writeString$1("{}");
        return true;
      }
      t1 = map.get$length(map) * 2;
      keyValueList = A.List_List$filled(t1, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      map.forEach$1(0, new A._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      _this.writeString$1("{");
      for (separator = '"'; i < t1; i += 2, separator = ',"') {
        _this.writeString$1(separator);
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        _this.writeString$1('":');
        t2 = i + 1;
        if (!(t2 < t1))
          return A.ioore(keyValueList, t2);
        _this.writeObject$1(keyValueList[t2]);
      }
      _this.writeString$1("}");
      return true;
    }
  };
  A._JsonStringifier_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      B.JSArray_methods.$indexSet(t1, t2.i++, key);
      B.JSArray_methods.$indexSet(t1, t2.i++, value);
    },
    $signature: 16
  };
  A._JsonPrettyPrintMixin.prototype = {
    writeList$1(list) {
      var i, _this = this,
        t1 = J.getInterceptor$asx(list);
      if (t1.get$isEmpty(list))
        _this.writeString$1("[]");
      else {
        _this.writeString$1("[\n");
        _this.writeIndentation$1(++_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeObject$1(t1.$index(list, 0));
        for (i = 1; i < t1.get$length(list); ++i) {
          _this.writeString$1(",\n");
          _this.writeIndentation$1(_this._JsonPrettyPrintMixin__indentLevel);
          _this.writeObject$1(t1.$index(list, i));
        }
        _this.writeString$1("\n");
        _this.writeIndentation$1(--_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeString$1("]");
      }
    },
    writeMap$1(map) {
      var t1, keyValueList, i, separator, t2, _this = this, _box_0 = {};
      if (map.get$isEmpty(map)) {
        _this.writeString$1("{}");
        return true;
      }
      t1 = map.get$length(map) * 2;
      keyValueList = A.List_List$filled(t1, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      map.forEach$1(0, new A._JsonPrettyPrintMixin_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      _this.writeString$1("{\n");
      ++_this._JsonPrettyPrintMixin__indentLevel;
      for (separator = ""; i < t1; i += 2, separator = ",\n") {
        _this.writeString$1(separator);
        _this.writeIndentation$1(_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeString$1('"');
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        _this.writeString$1('": ');
        t2 = i + 1;
        if (!(t2 < t1))
          return A.ioore(keyValueList, t2);
        _this.writeObject$1(keyValueList[t2]);
      }
      _this.writeString$1("\n");
      _this.writeIndentation$1(--_this._JsonPrettyPrintMixin__indentLevel);
      _this.writeString$1("}");
      return true;
    }
  };
  A._JsonPrettyPrintMixin_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      B.JSArray_methods.$indexSet(t1, t2.i++, key);
      B.JSArray_methods.$indexSet(t1, t2.i++, value);
    },
    $signature: 16
  };
  A._JsonStringStringifier.prototype = {
    get$_partialResult() {
      var t1 = this._sink._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    writeNumber$1(number) {
      this._sink._contents += B.JSNumber_methods.toString$0(number);
    },
    writeString$1(string) {
      this._sink._contents += string;
    },
    writeStringSlice$3(string, start, end) {
      this._sink._contents += B.JSString_methods.substring$2(string, start, end);
    },
    writeCharCode$1(charCode) {
      this._sink._contents += A.Primitives_stringFromCharCode(charCode);
    }
  };
  A._JsonUtf8Stringifier.prototype = {
    get$_partialResult() {
      return null;
    },
    writeNumber$1(number) {
      this.writeAsciiString$1(B.JSNumber_methods.toString$0(number));
    },
    writeAsciiString$1(string) {
      var t1, i;
      for (t1 = string.length, i = 0; i < t1; ++i)
        this.writeByte$1(B.JSString_methods._codeUnitAt$1(string, i));
    },
    writeString$1(string) {
      this.writeStringSlice$3(string, 0, string.length);
    },
    writeStringSlice$3(string, start, end) {
      var i, char, i0, nextChar, _this = this;
      for (i = start; i < end; ++i) {
        char = B.JSString_methods._codeUnitAt$1(string, i);
        if (char <= 127)
          _this.writeByte$1(char);
        else {
          if ((char & 63488) === 55296) {
            if (char < 56320 && i + 1 < end) {
              i0 = i + 1;
              nextChar = B.JSString_methods._codeUnitAt$1(string, i0);
              if ((nextChar & 64512) === 56320) {
                _this.writeFourByteCharCode$1(65536 + ((char & 1023) << 10) + (nextChar & 1023));
                i = i0;
                continue;
              }
            }
            _this.writeMultiByteCharCode$1(65533);
            continue;
          }
          _this.writeMultiByteCharCode$1(char);
        }
      }
    },
    writeCharCode$1(charCode) {
      if (charCode <= 127) {
        this.writeByte$1(charCode);
        return;
      }
      this.writeMultiByteCharCode$1(charCode);
    },
    writeMultiByteCharCode$1(charCode) {
      var _this = this;
      if (charCode <= 2047) {
        _this.writeByte$1((charCode >>> 6 | 192) >>> 0);
        _this.writeByte$1(charCode & 63 | 128);
        return;
      }
      if (charCode <= 65535) {
        _this.writeByte$1((charCode >>> 12 | 224) >>> 0);
        _this.writeByte$1(charCode >>> 6 & 63 | 128);
        _this.writeByte$1(charCode & 63 | 128);
        return;
      }
      _this.writeFourByteCharCode$1(charCode);
    },
    writeFourByteCharCode$1(charCode) {
      var _this = this;
      _this.writeByte$1((charCode >>> 18 | 240) >>> 0);
      _this.writeByte$1(charCode >>> 12 & 63 | 128);
      _this.writeByte$1(charCode >>> 6 & 63 | 128);
      _this.writeByte$1(charCode & 63 | 128);
    },
    writeByte$1(byte) {
      var t0, _this = this,
        t1 = _this.index,
        t2 = _this.buffer;
      if (t1 === t2.length) {
        _this.addChunk.call$3(t2, 0, t1);
        t1 = _this.buffer = new Uint8Array(_this.bufferSize);
        t2 = _this.index = 0;
      } else {
        t0 = t2;
        t2 = t1;
        t1 = t0;
      }
      _this.index = t2 + 1;
      if (!(t2 >= 0 && t2 < t1.length))
        return A.ioore(t1, t2);
      t1[t2] = byte;
    }
  };
  A._JsonUtf8StringifierPretty.prototype = {
    writeIndentation$1(count) {
      var char, t2, end, t3, i, _this = this,
        indent = _this.indent,
        t1 = J.getInterceptor$asx(indent),
        indentLength = t1.get$length(indent);
      if (indentLength === 1) {
        char = t1.$index(indent, 0);
        for (; count > 0;) {
          _this.writeByte$1(char);
          --count;
        }
        return;
      }
      for (; count > 0;) {
        --count;
        t2 = _this.index;
        end = t2 + indentLength;
        t3 = _this.buffer;
        if (end <= t3.length) {
          B.NativeUint8List_methods.setRange$3(t3, t2, end, indent);
          _this.index = end;
        } else
          for (i = 0; i < indentLength; ++i)
            _this.writeByte$1(t1.$index(indent, i));
      }
    }
  };
  A.Latin1Codec.prototype = {
    get$name(_) {
      return "iso-8859-1";
    },
    encode$1(source) {
      return B.Latin1Encoder_255.convert$1(source);
    },
    decode$1(_, bytes) {
      var t1;
      type$.List_int._as(bytes);
      t1 = B.Latin1Decoder_false_255.convert$1(bytes);
      return t1;
    },
    get$encoder() {
      return B.Latin1Encoder_255;
    }
  };
  A.Latin1Encoder.prototype = {};
  A.Latin1Decoder.prototype = {};
  A.Utf8Codec.prototype = {
    get$name(_) {
      return "utf-8";
    },
    decode$1(_, codeUnits) {
      type$.List_int._as(codeUnits);
      return B.Utf8Decoder_false.convert$1(codeUnits);
    },
    get$encoder() {
      return B.C_Utf8Encoder;
    }
  };
  A.Utf8Encoder.prototype = {
    convert$1(string) {
      var end, $length, t1, encoder;
      A._asString(string);
      end = A.RangeError_checkValidRange(0, null, string.length);
      $length = end - 0;
      if ($length === 0)
        return new Uint8Array(0);
      t1 = new Uint8Array($length * 3);
      encoder = new A._Utf8Encoder(t1);
      if (encoder._fillBuffer$3(string, 0, end) !== end) {
        B.JSString_methods.codeUnitAt$1(string, end - 1);
        encoder._writeReplacementCharacter$0();
      }
      return B.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
    }
  };
  A._Utf8Encoder.prototype = {
    _writeReplacementCharacter$0() {
      var _this = this,
        t1 = _this._convert$_buffer,
        t2 = _this._bufferIndex,
        t3 = _this._bufferIndex = t2 + 1,
        t4 = t1.length;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = 239;
      t2 = _this._bufferIndex = t3 + 1;
      if (!(t3 < t4))
        return A.ioore(t1, t3);
      t1[t3] = 191;
      _this._bufferIndex = t2 + 1;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = 189;
    },
    _writeSurrogate$2(leadingSurrogate, nextCodeUnit) {
      var rune, t1, t2, t3, t4, _this = this;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        t1 = _this._convert$_buffer;
        t2 = _this._bufferIndex;
        t3 = _this._bufferIndex = t2 + 1;
        t4 = t1.length;
        if (!(t2 < t4))
          return A.ioore(t1, t2);
        t1[t2] = rune >>> 18 | 240;
        t2 = _this._bufferIndex = t3 + 1;
        if (!(t3 < t4))
          return A.ioore(t1, t3);
        t1[t3] = rune >>> 12 & 63 | 128;
        t3 = _this._bufferIndex = t2 + 1;
        if (!(t2 < t4))
          return A.ioore(t1, t2);
        t1[t2] = rune >>> 6 & 63 | 128;
        _this._bufferIndex = t3 + 1;
        if (!(t3 < t4))
          return A.ioore(t1, t3);
        t1[t3] = rune & 63 | 128;
        return true;
      } else {
        _this._writeReplacementCharacter$0();
        return false;
      }
    },
    _fillBuffer$3(str, start, end) {
      var t1, t2, stringIndex, codeUnit, t3, stringIndex0, t4, _this = this;
      if (start !== end && (B.JSString_methods.codeUnitAt$1(str, end - 1) & 64512) === 55296)
        --end;
      for (t1 = _this._convert$_buffer, t2 = t1.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        codeUnit = B.JSString_methods._codeUnitAt$1(str, stringIndex);
        if (codeUnit <= 127) {
          t3 = _this._bufferIndex;
          if (t3 >= t2)
            break;
          _this._bufferIndex = t3 + 1;
          t1[t3] = codeUnit;
        } else {
          t3 = codeUnit & 64512;
          if (t3 === 55296) {
            if (_this._bufferIndex + 4 > t2)
              break;
            stringIndex0 = stringIndex + 1;
            if (_this._writeSurrogate$2(codeUnit, B.JSString_methods._codeUnitAt$1(str, stringIndex0)))
              stringIndex = stringIndex0;
          } else if (t3 === 56320) {
            if (_this._bufferIndex + 3 > t2)
              break;
            _this._writeReplacementCharacter$0();
          } else if (codeUnit <= 2047) {
            t3 = _this._bufferIndex;
            t4 = t3 + 1;
            if (t4 >= t2)
              break;
            _this._bufferIndex = t4;
            if (!(t3 < t2))
              return A.ioore(t1, t3);
            t1[t3] = codeUnit >>> 6 | 192;
            _this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit & 63 | 128;
          } else {
            t3 = _this._bufferIndex;
            if (t3 + 2 >= t2)
              break;
            t4 = _this._bufferIndex = t3 + 1;
            if (!(t3 < t2))
              return A.ioore(t1, t3);
            t1[t3] = codeUnit >>> 12 | 224;
            t3 = _this._bufferIndex = t4 + 1;
            if (!(t4 < t2))
              return A.ioore(t1, t4);
            t1[t4] = codeUnit >>> 6 & 63 | 128;
            _this._bufferIndex = t3 + 1;
            if (!(t3 < t2))
              return A.ioore(t1, t3);
            t1[t3] = codeUnit & 63 | 128;
          }
        }
      }
      return stringIndex;
    }
  };
  A.Utf8Decoder.prototype = {
    fuse$1$1(next, $T) {
      return this.super$Converter$fuse($T._eval$1("Converter<String,0>")._as(next), $T);
    },
    convert$1(codeUnits) {
      var t1, result;
      type$.List_int._as(codeUnits);
      t1 = this._allowMalformed;
      result = A.Utf8Decoder__convertIntercepted(t1, codeUnits, 0, null);
      if (result != null)
        return result;
      return new A._Utf8Decoder(t1).convertGeneral$4(codeUnits, 0, null, true);
    }
  };
  A._Utf8Decoder.prototype = {
    convertGeneral$4(codeUnits, start, maybeEnd, single) {
      var end, bytes, errorOffset, result, t1, message, _this = this;
      type$.List_int._as(codeUnits);
      end = A.RangeError_checkValidRange(start, maybeEnd, J.get$length$asx(codeUnits));
      if (start === end)
        return "";
      if (type$.Uint8List._is(codeUnits)) {
        bytes = codeUnits;
        errorOffset = 0;
      } else {
        bytes = A._Utf8Decoder__makeUint8List(codeUnits, start, end);
        end -= start;
        errorOffset = start;
        start = 0;
      }
      result = _this._convertRecursive$4(bytes, start, end, true);
      t1 = _this._convert$_state;
      if ((t1 & 1) !== 0) {
        message = A._Utf8Decoder_errorDescription(t1);
        _this._convert$_state = 0;
        throw A.wrapException(A.FormatException$(message, codeUnits, errorOffset + _this._charOrIndex));
      }
      return result;
    },
    _convertRecursive$4(bytes, start, end, single) {
      var mid, s1, _this = this;
      if (end - start > 1000) {
        mid = B.JSInt_methods._tdivFast$1(start + end, 2);
        s1 = _this._convertRecursive$4(bytes, start, mid, false);
        if ((_this._convert$_state & 1) !== 0)
          return s1;
        return s1 + _this._convertRecursive$4(bytes, mid, end, single);
      }
      return _this.decodeGeneral$4(bytes, start, end, single);
    },
    decodeGeneral$4(bytes, start, end, single) {
      var byte, t2, type, t3, i0, markEnd, i1, m, _this = this, _65533 = 65533,
        state = _this._convert$_state,
        char = _this._charOrIndex,
        buffer = new A.StringBuffer(""),
        i = start + 1,
        t1 = bytes.length;
      if (!(start >= 0 && start < t1))
        return A.ioore(bytes, start);
      byte = bytes[start];
      $label0$0:
        for (t2 = _this.allowMalformed; true;) {
          for (; true; i = i0) {
            type = B.JSString_methods._codeUnitAt$1("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHJEEBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKCCCCCCCCCCCCDCLONNNMEEEEEEEEEEE", byte) & 31;
            char = state <= 32 ? byte & 61694 >>> type : (byte & 63 | char << 6) >>> 0;
            state = B.JSString_methods._codeUnitAt$1(" \x000:XECCCCCN:lDb \x000:XECCCCCNvlDb \x000:XECCCCCN:lDb AAAAA\x00\x00\x00\x00\x00AAAAA00000AAAAA:::::AAAAAGG000AAAAA00KKKAAAAAG::::AAAAA:IIIIAAAAA000\x800AAAAA\x00\x00\x00\x00 AAAAA", state + type);
            if (state === 0) {
              buffer._contents += A.Primitives_stringFromCharCode(char);
              if (i === end)
                break $label0$0;
              break;
            } else if ((state & 1) !== 0) {
              if (t2)
                switch (state) {
                  case 69:
                  case 67:
                    buffer._contents += A.Primitives_stringFromCharCode(_65533);
                    break;
                  case 65:
                    buffer._contents += A.Primitives_stringFromCharCode(_65533);
                    --i;
                    break;
                  default:
                    t3 = buffer._contents += A.Primitives_stringFromCharCode(_65533);
                    buffer._contents = t3 + A.Primitives_stringFromCharCode(_65533);
                    break;
                }
              else {
                _this._convert$_state = state;
                _this._charOrIndex = i - 1;
                return "";
              }
              state = 0;
            }
            if (i === end)
              break $label0$0;
            i0 = i + 1;
            if (!(i >= 0 && i < t1))
              return A.ioore(bytes, i);
            byte = bytes[i];
          }
          i0 = i + 1;
          if (!(i >= 0 && i < t1))
            return A.ioore(bytes, i);
          byte = bytes[i];
          if (byte < 128) {
            while (true) {
              if (!(i0 < end)) {
                markEnd = end;
                break;
              }
              i1 = i0 + 1;
              if (!(i0 >= 0 && i0 < t1))
                return A.ioore(bytes, i0);
              byte = bytes[i0];
              if (byte >= 128) {
                markEnd = i1 - 1;
                i0 = i1;
                break;
              }
              i0 = i1;
            }
            if (markEnd - i < 20)
              for (m = i; m < markEnd; ++m) {
                if (!(m < t1))
                  return A.ioore(bytes, m);
                buffer._contents += A.Primitives_stringFromCharCode(bytes[m]);
              }
            else
              buffer._contents += A.String_String$fromCharCodes(bytes, i, markEnd);
            if (markEnd === end)
              break $label0$0;
            i = i0;
          } else
            i = i0;
        }
      if (single && state > 32)
        if (t2)
          buffer._contents += A.Primitives_stringFromCharCode(_65533);
        else {
          _this._convert$_state = 77;
          _this._charOrIndex = end;
          return "";
        }
      _this._convert$_state = state;
      _this._charOrIndex = char;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.__JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin.prototype = {};
  A._symbolMapToStringMap_closure.prototype = {
    call$2(key, value) {
      this.result.$indexSet(0, type$.Symbol._as(key).__internal$_name, value);
    },
    $signature: 24
  };
  A.NoSuchMethodError_toString_closure.prototype = {
    call$2(key, value) {
      var t1, t2, t3;
      type$.Symbol._as(key);
      t1 = this.sb;
      t2 = this._box_0;
      t3 = t1._contents += t2.comma;
      t3 += key.__internal$_name;
      t1._contents = t3;
      t1._contents = t3 + ": ";
      t1._contents += A.Error_safeToString(value);
      t2.comma = ", ";
    },
    $signature: 24
  };
  A.DateTime.prototype = {
    get$timeZoneName() {
      if (this.isUtc)
        return "UTC";
      return A.Primitives_getTimeZoneName(this);
    },
    add$1(_, duration) {
      return A.DateTime$_withValue(B.JSInt_methods.$add(this._value, duration.get$inMilliseconds()), this.isUtc);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DateTime && this._value === other._value && this.isUtc === other.isUtc;
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._value, type$.DateTime._as(other)._value);
    },
    DateTime$_withValue$2$isUtc(_value, isUtc) {
      var t2,
        t1 = this._value;
      if (Math.abs(t1) <= 864e13)
        t2 = false;
      else
        t2 = true;
      if (t2)
        throw A.wrapException(A.ArgumentError$("DateTime is outside valid range: " + t1, null));
      A.checkNotNullable(this.isUtc, "isUtc", type$.bool);
    },
    get$hashCode(_) {
      var t1 = this._value;
      return (t1 ^ B.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
    },
    toUtc$0() {
      if (this.isUtc)
        return this;
      return A.DateTime$_withValue(this._value, true);
    },
    toString$0(_) {
      var _this = this,
        y = A.DateTime__fourDigits(A.Primitives_getYear(_this)),
        m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
        d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
        h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
        min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
        sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
        ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this)),
        t1 = y + "-" + m;
      if (_this.isUtc)
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
      else
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
    },
    toIso8601String$0() {
      var _this = this,
        y = A.Primitives_getYear(_this) >= -9999 && A.Primitives_getYear(_this) <= 9999 ? A.DateTime__fourDigits(A.Primitives_getYear(_this)) : A.DateTime__sixDigits(A.Primitives_getYear(_this)),
        m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
        d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
        h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
        min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
        sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
        ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this)),
        t1 = y + "-" + m;
      if (_this.isUtc)
        return t1 + "-" + d + "T" + h + ":" + min + ":" + sec + "." + ms + "Z";
      else
        return t1 + "-" + d + "T" + h + ":" + min + ":" + sec + "." + ms;
    },
    $isComparable: 1
  };
  A.DateTime_parse_parseIntOrZero.prototype = {
    call$1(matched) {
      if (matched == null)
        return 0;
      return A.int_parse(matched, null);
    },
    $signature: 25
  };
  A.DateTime_parse_parseMilliAndMicroseconds.prototype = {
    call$1(matched) {
      var t1, result, i;
      if (matched == null)
        return 0;
      for (t1 = matched.length, result = 0, i = 0; i < 6; ++i) {
        result *= 10;
        if (i < t1)
          result += B.JSString_methods._codeUnitAt$1(matched, i) ^ 48;
      }
      return result;
    },
    $signature: 25
  };
  A.Duration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Duration && this._duration === other._duration;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._duration);
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._duration, type$.Duration._as(other)._duration);
    },
    toString$0(_) {
      var minutes, minutesPadding, seconds, secondsPadding,
        microseconds = this._duration,
        sign = microseconds < 0 ? "-" : "",
        hours = B.JSInt_methods._tdivFast$1(microseconds, 3600000000);
      microseconds %= 3600000000;
      if (microseconds < 0)
        microseconds = -microseconds;
      minutes = B.JSInt_methods._tdivFast$1(microseconds, 60000000);
      microseconds %= 60000000;
      minutesPadding = minutes < 10 ? "0" : "";
      seconds = B.JSInt_methods._tdivFast$1(microseconds, 1000000);
      secondsPadding = seconds < 10 ? "0" : "";
      return sign + Math.abs(hours) + ":" + minutesPadding + minutes + ":" + secondsPadding + seconds + "." + B.JSString_methods.padLeft$2(B.JSInt_methods.toString$0(microseconds % 1000000), 6, "0");
    },
    $isComparable: 1
  };
  A._Enum.prototype = {};
  A.Error.prototype = {
    get$stackTrace() {
      return A.getTraceFromException(this.$thrownJsError);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  A.TypeError.prototype = {};
  A.NullThrownError.prototype = {
    toString$0(_) {
      return "Throw of null.";
    }
  };
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + A.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.invalidValue);
    }
  };
  A.RangeError.prototype = {
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (A._asInt(this.invalidValue) < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.NoSuchMethodError.prototype = {
    toString$0(_) {
      var $arguments, t1, _i, t2, t3, argument, receiverText, actualParameters, _this = this, _box_0 = {},
        sb = new A.StringBuffer("");
      _box_0.comma = "";
      $arguments = _this._core$_arguments;
      for (t1 = $arguments.length, _i = 0, t2 = "", t3 = ""; _i < t1; ++_i, t3 = ", ") {
        argument = $arguments[_i];
        sb._contents = t2 + t3;
        t2 = sb._contents += A.Error_safeToString(argument);
        _box_0.comma = ", ";
      }
      _this._namedArguments.forEach$1(0, new A.NoSuchMethodError_toString_closure(_box_0, sb));
      receiverText = A.Error_safeToString(_this._core$_receiver);
      actualParameters = sb.toString$0(0);
      return "NoSuchMethodError: method not found: '" + _this._core$_memberName.__internal$_name + "'\nReceiver: " + receiverText + "\nArguments: [" + actualParameters + "]";
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      var message = this.message;
      return message != null ? "UnimplementedError: " + message : "UnimplementedError";
    }
  };
  A.StateError.prototype = {
    toString$0(_) {
      return "Bad state: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.OutOfMemoryError.prototype = {
    toString$0(_) {
      return "Out of Memory";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.CyclicInitializationError.prototype = {
    toString$0(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    }
  };
  A._Exception.prototype = {
    toString$0(_) {
      return "Exception: " + this.message;
    },
    $isException: 1
  };
  A.FormatException.prototype = {
    toString$0(_) {
      var t1, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix,
        message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        offset = this.offset,
        source = this.source;
      if (typeof source == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = B.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = B.JSString_methods._codeUnitAt$1(source, i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = source.length;
        for (i = offset; i < lineEnd; ++i) {
          char = B.JSString_methods.codeUnitAt$1(source, i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        return report + prefix + B.JSString_methods.substring$2(source, start, end) + postfix + "\n" + B.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + A.S(offset) + ")") : report;
    },
    $isException: 1,
    get$message(receiver) {
      return this.message;
    },
    get$source(receiver) {
      return this.source;
    },
    get$offset(receiver) {
      return this.offset;
    }
  };
  A.Iterable.prototype = {
    cast$1$0(_, $R) {
      return A.CastIterable_CastIterable(this, A._instanceType(this)._eval$1("Iterable.E"), $R);
    },
    map$1$1(_, toElement, $T) {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(this, t1._bind$1($T)._eval$1("1(Iterable.E)")._as(toElement), t1._eval$1("Iterable.E"), $T);
    },
    where$1(_, test) {
      var t1 = A._instanceType(this);
      return new A.WhereIterable(this, t1._eval$1("bool(Iterable.E)")._as(test), t1._eval$1("WhereIterable<Iterable.E>"));
    },
    contains$1(_, element) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (J.$eq$(t1.get$current(), element))
          return true;
      return false;
    },
    every$1(_, test) {
      var t1;
      A._instanceType(this)._eval$1("bool(Iterable.E)")._as(test);
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (!A.boolConversionCheck(test.call$1(t1.get$current())))
          return false;
      return true;
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, growable, A._instanceType(this)._eval$1("Iterable.E"));
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty(_) {
      return !this.get$isEmpty(this);
    },
    skip$1(_, count) {
      return A.SkipIterable_SkipIterable(this, count, A._instanceType(this)._eval$1("Iterable.E"));
    },
    skipWhile$1(_, test) {
      var t1 = A._instanceType(this);
      return new A.SkipWhileIterable(this, t1._eval$1("bool(Iterable.E)")._as(test), t1._eval$1("SkipWhileIterable<Iterable.E>"));
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current();
    },
    get$last(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      do
        result = it.get$current();
      while (it.moveNext$0());
      return result;
    },
    elementAt$1(_, index) {
      var t1, elementIndex, element;
      A.RangeError_checkNotNegative(index, "index");
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current();
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw A.wrapException(A.IndexError$(index, this, "index", null, elementIndex));
    },
    toString$0(_) {
      return A.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  A.Iterator.prototype = {};
  A.MapEntry.prototype = {
    toString$0(_) {
      return "MapEntry(" + A.S(this.key) + ": " + A.S(this.value) + ")";
    }
  };
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, this);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    noSuchMethod$1(_, invocation) {
      type$.Invocation._as(invocation);
      throw A.wrapException(A.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    },
    get$runtimeType(_) {
      return A.getRuntimeType(this);
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return this._stackTrace;
    },
    $isStackTrace: 1
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isStringSink: 1
  };
  A.Uri__parseIPv4Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
    },
    $signature: 167
  };
  A.Uri_parseIPv6Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
    },
    $signature: 166
  };
  A.Uri_parseIPv6Address_parseHex.prototype = {
    call$2(start, end) {
      var value;
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = A.int_parse(B.JSString_methods.substring$2(this.host, start, end), 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 87
  };
  A._Uri.prototype = {
    get$_text() {
      var t1, t2, t3, t4, _this = this,
        value = _this.___Uri__text_FI;
      if (value === $) {
        t1 = _this.scheme;
        t2 = t1.length !== 0 ? "" + t1 + ":" : "";
        t3 = _this._host;
        t4 = t3 == null;
        if (!t4 || t1 === "file") {
          t1 = t2 + "//";
          t2 = _this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += t3;
          t2 = _this._port;
          if (t2 != null)
            t1 = t1 + ":" + A.S(t2);
        } else
          t1 = t2;
        t1 += _this.path;
        t2 = _this._query;
        if (t2 != null)
          t1 = t1 + "?" + t2;
        t2 = _this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + t2;
        value !== $ && A.throwLateFieldADI("_text");
        value = _this.___Uri__text_FI = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return value;
    },
    get$pathSegments() {
      var pathToSplit, result, _this = this,
        value = _this.___Uri_pathSegments_FI;
      if (value === $) {
        pathToSplit = _this.path;
        if (pathToSplit.length !== 0 && B.JSString_methods._codeUnitAt$1(pathToSplit, 0) === 47)
          pathToSplit = B.JSString_methods.substring$1(pathToSplit, 1);
        result = pathToSplit.length === 0 ? B.List_empty1 : A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(pathToSplit.split("/"), type$.JSArray_String), type$.dynamic_Function_String._as(A.core_Uri_decodeComponent$closure()), type$.MappedListIterable_String_dynamic), type$.String);
        _this.___Uri_pathSegments_FI !== $ && A.throwLateFieldADI("pathSegments");
        _this.set$___Uri_pathSegments_FI(result);
        value = result;
      }
      return value;
    },
    get$hashCode(_) {
      var result, _this = this,
        value = _this.___Uri_hashCode_FI;
      if (value === $) {
        result = B.JSString_methods.get$hashCode(_this.get$_text());
        _this.___Uri_hashCode_FI !== $ && A.throwLateFieldADI("hashCode");
        _this.___Uri_hashCode_FI = result;
        value = result;
      }
      return value;
    },
    get$userInfo() {
      return this._userInfo;
    },
    get$host(_) {
      var host = this._host;
      if (host == null)
        return "";
      if (B.JSString_methods.startsWith$1(host, "["))
        return B.JSString_methods.substring$2(host, 1, host.length - 1);
      return host;
    },
    get$port(_) {
      var t1 = this._port;
      return t1 == null ? A._Uri__defaultPort(this.scheme) : t1;
    },
    get$query() {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    isScheme$1(scheme) {
      var thisScheme = this.scheme;
      if (scheme.length !== thisScheme.length)
        return false;
      return A._caseInsensitiveCompareStart(scheme, thisScheme, 0) >= 0;
    },
    _mergePaths$2(base, reference) {
      var backCount, refStart, baseEnd, newEnd, delta, t1;
      for (backCount = 0, refStart = 0; B.JSString_methods.startsWith$2(reference, "../", refStart);) {
        refStart += 3;
        ++backCount;
      }
      baseEnd = B.JSString_methods.lastIndexOf$1(base, "/");
      while (true) {
        if (!(baseEnd > 0 && backCount > 0))
          break;
        newEnd = B.JSString_methods.lastIndexOf$2(base, "/", baseEnd - 1);
        if (newEnd < 0)
          break;
        delta = baseEnd - newEnd;
        t1 = delta !== 2;
        if (!t1 || delta === 3)
          if (B.JSString_methods.codeUnitAt$1(base, newEnd + 1) === 46)
            t1 = !t1 || B.JSString_methods.codeUnitAt$1(base, newEnd + 2) === 46;
          else
            t1 = false;
        else
          t1 = false;
        if (t1)
          break;
        --backCount;
        baseEnd = newEnd;
      }
      return B.JSString_methods.replaceRange$3(base, baseEnd + 1, null, B.JSString_methods.substring$1(reference, refStart - 3 * backCount));
    },
    resolve$1(reference) {
      return this.resolveUri$1(A.Uri_parse(reference));
    },
    resolveUri$1(reference) {
      var targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, packageNameEnd, packageName, mergedPath, t1, _this = this, _null = null;
      if (reference.get$scheme().length !== 0) {
        targetScheme = reference.get$scheme();
        if (reference.get$hasAuthority()) {
          targetUserInfo = reference.get$userInfo();
          targetHost = reference.get$host(reference);
          targetPort = reference.get$hasPort() ? reference.get$port(reference) : _null;
        } else {
          targetPort = _null;
          targetHost = targetPort;
          targetUserInfo = "";
        }
        targetPath = A._Uri__removeDotSegments(reference.get$path(reference));
        targetQuery = reference.get$hasQuery() ? reference.get$query() : _null;
      } else {
        targetScheme = _this.scheme;
        if (reference.get$hasAuthority()) {
          targetUserInfo = reference.get$userInfo();
          targetHost = reference.get$host(reference);
          targetPort = A._Uri__makePort(reference.get$hasPort() ? reference.get$port(reference) : _null, targetScheme);
          targetPath = A._Uri__removeDotSegments(reference.get$path(reference));
          targetQuery = reference.get$hasQuery() ? reference.get$query() : _null;
        } else {
          targetUserInfo = _this._userInfo;
          targetHost = _this._host;
          targetPort = _this._port;
          targetPath = _this.path;
          if (reference.get$path(reference) === "")
            targetQuery = reference.get$hasQuery() ? reference.get$query() : _this._query;
          else {
            packageNameEnd = A._Uri__packageNameEnd(_this, targetPath);
            if (packageNameEnd > 0) {
              packageName = B.JSString_methods.substring$2(targetPath, 0, packageNameEnd);
              targetPath = reference.get$hasAbsolutePath() ? packageName + A._Uri__removeDotSegments(reference.get$path(reference)) : packageName + A._Uri__removeDotSegments(_this._mergePaths$2(B.JSString_methods.substring$1(targetPath, packageName.length), reference.get$path(reference)));
            } else if (reference.get$hasAbsolutePath())
              targetPath = A._Uri__removeDotSegments(reference.get$path(reference));
            else if (targetPath.length === 0)
              if (targetHost == null)
                targetPath = targetScheme.length === 0 ? reference.get$path(reference) : A._Uri__removeDotSegments(reference.get$path(reference));
              else
                targetPath = A._Uri__removeDotSegments("/" + reference.get$path(reference));
            else {
              mergedPath = _this._mergePaths$2(targetPath, reference.get$path(reference));
              t1 = targetScheme.length === 0;
              if (!t1 || targetHost != null || B.JSString_methods.startsWith$1(targetPath, "/"))
                targetPath = A._Uri__removeDotSegments(mergedPath);
              else
                targetPath = A._Uri__normalizeRelativePath(mergedPath, !t1 || targetHost != null);
            }
            targetQuery = reference.get$hasQuery() ? reference.get$query() : _null;
          }
        }
      }
      return A._Uri$_internal(targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, reference.get$hasFragment() ? reference.get$fragment() : _null);
    },
    get$hasAuthority() {
      return this._host != null;
    },
    get$hasPort() {
      return this._port != null;
    },
    get$hasQuery() {
      return this._query != null;
    },
    get$hasFragment() {
      return this._fragment != null;
    },
    get$hasAbsolutePath() {
      return B.JSString_methods.startsWith$1(this.path, "/");
    },
    toFilePath$0() {
      var pathSegments, _this = this,
        t1 = _this.scheme;
      if (t1 !== "" && t1 !== "file")
        throw A.wrapException(A.UnsupportedError$("Cannot extract a file path from a " + t1 + " URI"));
      t1 = _this._query;
      if ((t1 == null ? "" : t1) !== "")
        throw A.wrapException(A.UnsupportedError$(string$.Cannotfq));
      t1 = _this._fragment;
      if ((t1 == null ? "" : t1) !== "")
        throw A.wrapException(A.UnsupportedError$(string$.Cannotff));
      t1 = $.$get$_Uri__isWindowsCached();
      if (A.boolConversionCheck(t1))
        t1 = A._Uri__toWindowsFilePath(_this);
      else {
        if (_this._host != null && _this.get$host(_this) !== "")
          A.throwExpression(A.UnsupportedError$(string$.Cannotn));
        pathSegments = _this.get$pathSegments();
        A._Uri__checkNonWindowsPathReservedCharacters(pathSegments, false);
        t1 = A.StringBuffer__writeAll(B.JSString_methods.startsWith$1(_this.path, "/") ? "" + "/" : "", pathSegments, "/");
        t1 = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return t1;
    },
    toString$0(_) {
      return this.get$_text();
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (type$.Uri._is(other))
        if (_this.scheme === other.get$scheme())
          if (_this._host != null === other.get$hasAuthority())
            if (_this._userInfo === other.get$userInfo())
              if (_this.get$host(_this) === other.get$host(other))
                if (_this.get$port(_this) === other.get$port(other))
                  if (_this.path === other.get$path(other)) {
                    t1 = _this._query;
                    t2 = t1 == null;
                    if (!t2 === other.get$hasQuery()) {
                      if (t2)
                        t1 = "";
                      if (t1 === other.get$query()) {
                        t1 = _this._fragment;
                        t2 = t1 == null;
                        if (!t2 === other.get$hasFragment()) {
                          if (t2)
                            t1 = "";
                          t1 = t1 === other.get$fragment();
                        } else
                          t1 = false;
                      } else
                        t1 = false;
                    } else
                      t1 = false;
                  } else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    set$___Uri_pathSegments_FI(___Uri_pathSegments_FI) {
      this.___Uri_pathSegments_FI = type$.List_String._as(___Uri_pathSegments_FI);
    },
    $isUri: 1,
    get$scheme() {
      return this.scheme;
    },
    get$path(receiver) {
      return this.path;
    }
  };
  A._Uri__makePath_closure.prototype = {
    call$1(s) {
      return A._Uri__uriEncode(B.List_qg40, A._asString(s), B.C_Utf8Codec, false);
    },
    $signature: 6
  };
  A.UriData.prototype = {
    get$uri() {
      var t2, queryIndex, end, query, _this = this, _null = null,
        t1 = _this._uriCache;
      if (t1 == null) {
        t1 = _this._separatorIndices;
        if (0 >= t1.length)
          return A.ioore(t1, 0);
        t2 = _this._text;
        t1 = t1[0] + 1;
        queryIndex = B.JSString_methods.indexOf$2(t2, "?", t1);
        end = t2.length;
        if (queryIndex >= 0) {
          query = A._Uri__normalizeOrSubstring(t2, queryIndex + 1, end, B.List_CVk, false);
          end = queryIndex;
        } else
          query = _null;
        t1 = _this._uriCache = new A._DataUri("data", "", _null, _null, A._Uri__normalizeOrSubstring(t2, t1, end, B.List_qg4, false), query, _null);
      }
      return t1;
    },
    toString$0(_) {
      var t2,
        t1 = this._separatorIndices;
      if (0 >= t1.length)
        return A.ioore(t1, 0);
      t2 = this._text;
      return t1[0] === -1 ? "data:" + t2 : t2;
    }
  };
  A._createTables_build.prototype = {
    call$2(state, defaultTransition) {
      var t1 = this.tables;
      if (!(state < t1.length))
        return A.ioore(t1, state);
      t1 = t1[state];
      B.NativeUint8List_methods.fillRange$3(t1, 0, 96, defaultTransition);
      return t1;
    },
    $signature: 162
  };
  A._createTables_setChars.prototype = {
    call$3(target, chars, transition) {
      var t1, i, t2;
      for (t1 = chars.length, i = 0; i < t1; ++i) {
        t2 = B.JSString_methods._codeUnitAt$1(chars, i) ^ 96;
        if (!(t2 < 96))
          return A.ioore(target, t2);
        target[t2] = transition;
      }
    },
    $signature: 27
  };
  A._createTables_setRange.prototype = {
    call$3(target, range, transition) {
      var i, n, t1;
      for (i = B.JSString_methods._codeUnitAt$1(range, 0), n = B.JSString_methods._codeUnitAt$1(range, 1); i <= n; ++i) {
        t1 = (i ^ 96) >>> 0;
        if (!(t1 < 96))
          return A.ioore(target, t1);
        target[t1] = transition;
      }
    },
    $signature: 27
  };
  A._SimpleUri.prototype = {
    get$hasAuthority() {
      return this._hostStart > 0;
    },
    get$hasPort() {
      return this._hostStart > 0 && this._portStart + 1 < this._pathStart;
    },
    get$hasQuery() {
      return this._queryStart < this._fragmentStart;
    },
    get$hasFragment() {
      return this._fragmentStart < this._uri.length;
    },
    get$hasAbsolutePath() {
      return B.JSString_methods.startsWith$2(this._uri, "/", this._pathStart);
    },
    get$scheme() {
      var t1 = this._schemeCache;
      return t1 == null ? this._schemeCache = this._computeScheme$0() : t1;
    },
    _computeScheme$0() {
      var t2, _this = this,
        t1 = _this._schemeEnd;
      if (t1 <= 0)
        return "";
      t2 = t1 === 4;
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return "http";
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return "https";
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "file"))
        return "file";
      if (t1 === 7 && B.JSString_methods.startsWith$1(_this._uri, "package"))
        return "package";
      return B.JSString_methods.substring$2(_this._uri, 0, t1);
    },
    get$userInfo() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd + 3;
      return t1 > t2 ? B.JSString_methods.substring$2(this._uri, t2, t1 - 1) : "";
    },
    get$host(_) {
      var t1 = this._hostStart;
      return t1 > 0 ? B.JSString_methods.substring$2(this._uri, t1, this._portStart) : "";
    },
    get$port(_) {
      var t1, _this = this;
      if (_this.get$hasPort())
        return A.int_parse(B.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null);
      t1 = _this._schemeEnd;
      if (t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return 80;
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return 443;
      return 0;
    },
    get$path(_) {
      return B.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);
    },
    get$query() {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      return t1 < t2 ? B.JSString_methods.substring$2(this._uri, t1 + 1, t2) : "";
    },
    get$fragment() {
      var t1 = this._fragmentStart,
        t2 = this._uri;
      return t1 < t2.length ? B.JSString_methods.substring$1(t2, t1 + 1) : "";
    },
    get$pathSegments() {
      var parts, i,
        start = this._pathStart,
        end = this._queryStart,
        t1 = this._uri;
      if (B.JSString_methods.startsWith$2(t1, "/", start))
        ++start;
      if (start === end)
        return B.List_empty1;
      parts = A._setArrayType([], type$.JSArray_String);
      for (i = start; i < end; ++i)
        if (B.JSString_methods.codeUnitAt$1(t1, i) === 47) {
          B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(t1, start, i));
          start = i + 1;
        }
      B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(t1, start, end));
      return A.List_List$unmodifiable(parts, type$.String);
    },
    _isPort$1(port) {
      var portDigitStart = this._portStart + 1;
      return portDigitStart + port.length === this._pathStart && B.JSString_methods.startsWith$2(this._uri, port, portDigitStart);
    },
    removeFragment$0() {
      var _this = this,
        t1 = _this._fragmentStart,
        t2 = _this._uri;
      if (t1 >= t2.length)
        return _this;
      return new A._SimpleUri(B.JSString_methods.substring$2(t2, 0, t1), _this._schemeEnd, _this._hostStart, _this._portStart, _this._pathStart, _this._queryStart, t1, _this._schemeCache);
    },
    resolve$1(reference) {
      return this.resolveUri$1(A.Uri_parse(reference));
    },
    resolveUri$1(reference) {
      if (reference instanceof A._SimpleUri)
        return this._simpleMerge$2(this, reference);
      return this._toNonSimple$0().resolveUri$1(reference);
    },
    _simpleMerge$2(base, ref) {
      var t2, t3, t4, isSimple, delta, refStart, basePathStart, packageNameEnd, basePathStart0, baseStart, baseEnd, baseUri, baseStart0, backCount, refStart0, insert,
        t1 = ref._schemeEnd;
      if (t1 > 0)
        return ref;
      t2 = ref._hostStart;
      if (t2 > 0) {
        t3 = base._schemeEnd;
        if (t3 <= 0)
          return ref;
        t4 = t3 === 4;
        if (t4 && B.JSString_methods.startsWith$1(base._uri, "file"))
          isSimple = ref._pathStart !== ref._queryStart;
        else if (t4 && B.JSString_methods.startsWith$1(base._uri, "http"))
          isSimple = !ref._isPort$1("80");
        else
          isSimple = !(t3 === 5 && B.JSString_methods.startsWith$1(base._uri, "https")) || !ref._isPort$1("443");
        if (isSimple) {
          delta = t3 + 1;
          return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, delta) + B.JSString_methods.substring$1(ref._uri, t1 + 1), t3, t2 + delta, ref._portStart + delta, ref._pathStart + delta, ref._queryStart + delta, ref._fragmentStart + delta, base._schemeCache);
        } else
          return this._toNonSimple$0().resolveUri$1(ref);
      }
      refStart = ref._pathStart;
      t1 = ref._queryStart;
      if (refStart === t1) {
        t2 = ref._fragmentStart;
        if (t1 < t2) {
          t3 = base._queryStart;
          delta = t3 - t1;
          return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, t3) + B.JSString_methods.substring$1(ref._uri, t1), base._schemeEnd, base._hostStart, base._portStart, base._pathStart, t1 + delta, t2 + delta, base._schemeCache);
        }
        t1 = ref._uri;
        if (t2 < t1.length) {
          t3 = base._fragmentStart;
          return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, t3) + B.JSString_methods.substring$1(t1, t2), base._schemeEnd, base._hostStart, base._portStart, base._pathStart, base._queryStart, t2 + (t3 - t2), base._schemeCache);
        }
        return base.removeFragment$0();
      }
      t2 = ref._uri;
      if (B.JSString_methods.startsWith$2(t2, "/", refStart)) {
        basePathStart = base._pathStart;
        packageNameEnd = A._SimpleUri__packageNameEnd(this);
        basePathStart0 = packageNameEnd > 0 ? packageNameEnd : basePathStart;
        delta = basePathStart0 - refStart;
        return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, basePathStart0) + B.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, basePathStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);
      }
      baseStart = base._pathStart;
      baseEnd = base._queryStart;
      if (baseStart === baseEnd && base._hostStart > 0) {
        for (; B.JSString_methods.startsWith$2(t2, "../", refStart);)
          refStart += 3;
        delta = baseStart - refStart + 1;
        return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, baseStart) + "/" + B.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, baseStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);
      }
      baseUri = base._uri;
      packageNameEnd = A._SimpleUri__packageNameEnd(this);
      if (packageNameEnd >= 0)
        baseStart0 = packageNameEnd;
      else
        for (baseStart0 = baseStart; B.JSString_methods.startsWith$2(baseUri, "../", baseStart0);)
          baseStart0 += 3;
      backCount = 0;
      while (true) {
        refStart0 = refStart + 3;
        if (!(refStart0 <= t1 && B.JSString_methods.startsWith$2(t2, "../", refStart)))
          break;
        ++backCount;
        refStart = refStart0;
      }
      for (insert = ""; baseEnd > baseStart0;) {
        --baseEnd;
        if (B.JSString_methods.codeUnitAt$1(baseUri, baseEnd) === 47) {
          if (backCount === 0) {
            insert = "/";
            break;
          }
          --backCount;
          insert = "/";
        }
      }
      if (baseEnd === baseStart0 && base._schemeEnd <= 0 && !B.JSString_methods.startsWith$2(baseUri, "/", baseStart)) {
        refStart -= backCount * 3;
        insert = "";
      }
      delta = baseEnd - refStart + insert.length;
      return new A._SimpleUri(B.JSString_methods.substring$2(baseUri, 0, baseEnd) + insert + B.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, baseStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);
    },
    toFilePath$0() {
      var t2, t3, _this = this,
        t1 = _this._schemeEnd;
      if (t1 >= 0) {
        t2 = !(t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "file"));
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        throw A.wrapException(A.UnsupportedError$("Cannot extract a file path from a " + _this.get$scheme() + " URI"));
      t1 = _this._queryStart;
      t2 = _this._uri;
      if (t1 < t2.length) {
        if (t1 < _this._fragmentStart)
          throw A.wrapException(A.UnsupportedError$(string$.Cannotfq));
        throw A.wrapException(A.UnsupportedError$(string$.Cannotff));
      }
      t3 = $.$get$_Uri__isWindowsCached();
      if (A.boolConversionCheck(t3))
        t1 = A._Uri__toWindowsFilePath(_this);
      else {
        if (_this._hostStart < _this._portStart)
          A.throwExpression(A.UnsupportedError$(string$.Cannotn));
        t1 = B.JSString_methods.substring$2(t2, _this._pathStart, t1);
      }
      return t1;
    },
    get$hashCode(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = B.JSString_methods.get$hashCode(this._uri) : t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && this._uri === other.toString$0(0);
    },
    _toNonSimple$0() {
      var _this = this, _null = null,
        t1 = _this.get$scheme(),
        t2 = _this.get$userInfo(),
        t3 = _this._hostStart > 0 ? _this.get$host(_this) : _null,
        t4 = _this.get$hasPort() ? _this.get$port(_this) : _null,
        t5 = _this._uri,
        t6 = _this._queryStart,
        t7 = B.JSString_methods.substring$2(t5, _this._pathStart, t6),
        t8 = _this._fragmentStart;
      t6 = t6 < t8 ? _this.get$query() : _null;
      return A._Uri$_internal(t1, t2, t3, t4, t7, t6, t8 < t5.length ? _this.get$fragment() : _null);
    },
    toString$0(_) {
      return this._uri;
    },
    $isUri: 1
  };
  A._DataUri.prototype = {};
  A.Expando.prototype = {
    $index(_, object) {
      if (A._isBool(object) || typeof object == "number" || typeof object == "string")
        A.throwExpression(A.ArgumentError$value(object, string$.Expand, null));
      return this._jsWeakMap.get(object);
    },
    toString$0(_) {
      return "Expando:null";
    }
  };
  A.HtmlElement.prototype = {};
  A.AnchorElement.prototype = {
    toString$0(receiver) {
      return String(receiver);
    }
  };
  A.AreaElement.prototype = {
    toString$0(receiver) {
      return String(receiver);
    }
  };
  A.Blob.prototype = {$isBlob: 1};
  A.CharacterData.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CssStyleDeclaration.prototype = {
    _browserPropertyName$1(receiver, propertyName) {
      var t1 = $.$get$CssStyleDeclaration__propertyCache(),
        $name = t1[propertyName];
      if (typeof $name == "string")
        return $name;
      $name = this._supportedBrowserPropertyName$1(receiver, propertyName);
      t1[propertyName] = $name;
      return $name;
    },
    _supportedBrowserPropertyName$1(receiver, propertyName) {
      var prefixed;
      if (propertyName.replace(/^-ms-/, "ms-").replace(/-([\da-z])/ig, function(_, letter) {
        return letter.toUpperCase();
      }) in receiver)
        return propertyName;
      prefixed = $.$get$Device_cssPrefix() + propertyName;
      if (prefixed in receiver)
        return prefixed;
      return propertyName;
    },
    _setPropertyHelper$3(receiver, propertyName, value, priority) {
      receiver.setProperty(propertyName, value, priority);
    },
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CssStyleDeclarationBase.prototype = {};
  A.Document.prototype = {$isDocument: 1};
  A.DomException.prototype = {
    toString$0(receiver) {
      return String(receiver);
    }
  };
  A.DomTokenList.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    add$1(receiver, tokens) {
      return receiver.add(tokens);
    }
  };
  A._ChildrenElementList.prototype = {
    contains$1(_, element) {
      return J.contains$1$asx(this._childElements, element);
    },
    get$isEmpty(_) {
      return this._element.firstElementChild == null;
    },
    get$length(_) {
      return this._childElements.length;
    },
    $index(_, index) {
      var t1;
      A._asInt(index);
      t1 = this._childElements;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return type$.Element._as(t1[index]);
    },
    $indexSet(_, index, value) {
      var t1;
      A._asInt(index);
      type$.Element._as(value);
      t1 = this._childElements;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      this._element.replaceChild(value, t1[index]);
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize element lists"));
    },
    add$1(_, value) {
      type$.Element._as(value);
      this._element.appendChild(value);
      return value;
    },
    get$iterator(_) {
      var t1 = this.toList$0(this);
      return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    sort$1(_, compare) {
      type$.nullable_int_Function_Element_Element._as(compare);
      throw A.wrapException(A.UnsupportedError$("Cannot sort element lists"));
    },
    get$first(_) {
      return A._ChildrenElementList__first(this._element);
    },
    get$last(_) {
      var result = this._element.lastElementChild;
      if (result == null)
        throw A.wrapException(A.StateError$("No elements"));
      return result;
    }
  };
  A._FrozenElementList.prototype = {
    get$length(_) {
      return this._nodeList.length;
    },
    $index(_, index) {
      var t1;
      A._asInt(index);
      t1 = this._nodeList;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return this.$ti._precomputed1._as(t1[index]);
    },
    $indexSet(_, index, value) {
      A._asInt(index);
      this.$ti._precomputed1._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot modify list"));
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify list"));
    },
    sort$1(_, compare) {
      this.$ti._eval$1("int(1,1)?")._as(compare);
      throw A.wrapException(A.UnsupportedError$("Cannot sort list"));
    }
  };
  A.Element.prototype = {
    get$children(receiver) {
      return new A._ChildrenElementList(receiver, receiver.children);
    },
    get$classes(receiver) {
      return new A._ElementCssClassSet(receiver);
    },
    toString$0(receiver) {
      return receiver.localName;
    },
    insertAdjacentElement$2(receiver, where, element) {
      var t1;
      if (!!receiver.insertAdjacentElement)
        receiver.insertAdjacentElement(where, element);
      else
        switch (where.toLowerCase()) {
          case "beforebegin":
            t1 = receiver.parentNode;
            t1.toString;
            J.insertBefore$2$x(t1, element, receiver);
            break;
          case "afterbegin":
            t1 = receiver.childNodes;
            this.insertBefore$2(receiver, element, t1.length > 0 ? t1[0] : null);
            break;
          case "beforeend":
            receiver.appendChild(element);
            break;
          case "afterend":
            t1 = receiver.parentNode;
            t1.toString;
            J.insertBefore$2$x(t1, element, receiver.nextSibling);
            break;
          default:
            A.throwExpression(A.ArgumentError$("Invalid position " + where, null));
        }
      return element;
    },
    get$onClick(receiver) {
      return new A._ElementEventStreamImpl(receiver, "click", false, type$._ElementEventStreamImpl_MouseEvent);
    },
    get$onMouseEnter(receiver) {
      return new A._ElementEventStreamImpl(receiver, "mouseenter", false, type$._ElementEventStreamImpl_MouseEvent);
    },
    get$onMouseLeave(receiver) {
      return new A._ElementEventStreamImpl(receiver, "mouseleave", false, type$._ElementEventStreamImpl_MouseEvent);
    },
    $isElement: 1
  };
  A.Event.prototype = {$isEvent: 1};
  A.EventTarget.prototype = {
    _addEventListener$3(receiver, type, listener, options) {
      return receiver.addEventListener(type, A.convertDartClosureToJS(type$.nullable_dynamic_Function_Event._as(listener), 1), false);
    },
    _removeEventListener$3(receiver, type, listener, options) {
      return receiver.removeEventListener(type, A.convertDartClosureToJS(type$.nullable_dynamic_Function_Event._as(listener), 1), false);
    },
    $isEventTarget: 1
  };
  A.FormElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.HtmlCollection.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw A.wrapException(A.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._asInt(index);
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1,
    $isHtmlCollection: 1
  };
  A.HttpRequest.prototype = {
    get$responseHeaders(receiver) {
      var _i, header, t2, splitIdx, key, value,
        t1 = type$.String,
        headers = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1),
        headersString = receiver.getAllResponseHeaders(),
        headersList = headersString.split("\r\n");
      for (t1 = headersList.length, _i = 0; _i < t1; ++_i) {
        header = headersList[_i];
        t2 = J.getInterceptor$asx(header);
        if (t2.get$length(header) === 0)
          continue;
        splitIdx = t2.indexOf$1(header, ": ");
        if (splitIdx === -1)
          continue;
        key = t2.substring$2(header, 0, splitIdx).toLowerCase();
        value = t2.substring$1(header, splitIdx + 2);
        if (headers.containsKey$1(key))
          headers.$indexSet(0, key, A.S(headers.$index(0, key)) + ", " + value);
        else
          headers.$indexSet(0, key, value);
      }
      return headers;
    },
    open$3$async(receiver, method, url, async) {
      return receiver.open(method, url, true);
    },
    set$withCredentials(receiver, value) {
      receiver.withCredentials = false;
    },
    send$1(receiver, body_OR_data) {
      return receiver.send(body_OR_data);
    },
    setRequestHeader$2(receiver, $name, value) {
      return receiver.setRequestHeader(A._asString($name), A._asString(value));
    },
    $isHttpRequest: 1
  };
  A.HttpRequestEventTarget.prototype = {};
  A.ImageData.prototype = {$isImageData: 1};
  A.ImageElement.prototype = {
    set$src(receiver, value) {
      receiver.src = value;
    }
  };
  A.Location.prototype = {
    get$origin(receiver) {
      if ("origin" in receiver)
        return receiver.origin;
      return receiver.protocol + "//" + receiver.host;
    },
    toString$0(receiver) {
      return String(receiver);
    },
    $isLocation: 1
  };
  A.MouseEvent.prototype = {$isMouseEvent: 1};
  A.MutationObserver.prototype = {
    observe$3$childList$subtree(receiver, target, childList, subtree) {
      var _null = null, parsedOptions = {},
        t1 = new A.MutationObserver_observe_override(parsedOptions);
      t1.call$2("childList", true);
      t1.call$2("attributes", _null);
      t1.call$2("characterData", _null);
      t1.call$2("subtree", true);
      t1.call$2("attributeOldValue", _null);
      t1.call$2("characterDataOldValue", _null);
      receiver.observe(target, parsedOptions);
    },
    $isMutationObserver: 1
  };
  A.MutationObserver_observe_override.prototype = {
    call$2(key, value) {
      if (value != null)
        this.parsedOptions[key] = value;
    },
    $signature: 146
  };
  A._ChildNodeListLazy.prototype = {
    add$1(_, value) {
      this._this.appendChild(type$.Node._as(value));
    },
    $indexSet(_, index, value) {
      var t1, t2;
      A._asInt(index);
      type$.Node._as(value);
      t1 = this._this;
      t2 = t1.childNodes;
      if (!(index >= 0 && index < t2.length))
        return A.ioore(t2, index);
      t1.replaceChild(value, t2[index]);
    },
    get$iterator(_) {
      var t1 = this._this.childNodes;
      return new A.FixedSizeListIterator(t1, t1.length, A.instanceType(t1)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    sort$1(_, compare) {
      type$.nullable_int_Function_Node_Node._as(compare);
      throw A.wrapException(A.UnsupportedError$("Cannot sort Node list"));
    },
    get$length(_) {
      return this._this.childNodes.length;
    },
    set$length(_, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot set length on immutable List."));
    },
    $index(_, index) {
      var t1;
      A._asInt(index);
      t1 = this._this.childNodes;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    }
  };
  A.Node0.prototype = {
    remove$0(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver);
    },
    replaceWith$1(receiver, otherNode) {
      var $parent, t1, exception;
      try {
        t1 = receiver.parentNode;
        t1.toString;
        $parent = t1;
        J._replaceChild$2$x($parent, otherNode, receiver);
      } catch (exception) {
      }
      return receiver;
    },
    toString$0(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    insertBefore$2(receiver, node, child) {
      return receiver.insertBefore(node, child);
    },
    _replaceChild$2(receiver, node, child) {
      return receiver.replaceChild(node, child);
    },
    $isNode0: 1
  };
  A.NodeList.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw A.wrapException(A.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._asInt(index);
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.ProgressEvent.prototype = {$isProgressEvent: 1};
  A.Screen.prototype = {
    get$available(receiver) {
      var t2, t3, t4,
        t1 = receiver.availLeft;
      t1.toString;
      t2 = receiver.availTop;
      t2.toString;
      t3 = receiver.availWidth;
      t3.toString;
      t4 = receiver.availHeight;
      t4.toString;
      if (t3 < 0)
        t3 = t3 === -1 / 0 ? 0 : -t3 * 0;
      if (t4 < 0)
        t4 = t4 === -1 / 0 ? 0 : -t4 * 0;
      return new A.Rectangle(t1, t2, t3, t4, type$.Rectangle_num);
    }
  };
  A.SelectElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.UIEvent.prototype = {};
  A.Window.prototype = {
    alert$1(receiver, message) {
      return receiver.alert(message);
    },
    confirm$1(receiver, message) {
      return receiver.confirm(message);
    },
    $isWindow: 1
  };
  A.WorkerGlobalScope.prototype = {$isWorkerGlobalScope: 1};
  A._NamedNodeMap.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      if (index >>> 0 !== index || index >= receiver.length)
        throw A.wrapException(A.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._asInt(index);
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._ElementCssClassSet.prototype = {
    readClasses$0() {
      var t1, t2, _i, trimmed,
        s = A.LinkedHashSet_LinkedHashSet(type$.String);
      for (t1 = this._element.className.split(" "), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        trimmed = J.trim$0$s(t1[_i]);
        if (trimmed.length !== 0)
          s.add$1(0, trimmed);
      }
      return s;
    },
    writeClasses$1(s) {
      this._element.className = type$.Set_String._as(s).join$1(0, " ");
    },
    get$length(_) {
      return this._element.classList.length;
    },
    get$isEmpty(_) {
      return this._element.classList.length === 0;
    },
    get$isNotEmpty(_) {
      return this._element.classList.length !== 0;
    },
    contains$1(_, value) {
      var t1 = this._element.classList.contains(value);
      return t1;
    },
    add$1(_, value) {
      var list, t1;
      A._asString(value);
      list = this._element.classList;
      t1 = list.contains(value);
      list.add(value);
      return !t1;
    }
  };
  A.EventStreamProvider.prototype = {};
  A._EventStream.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t1 = A._instanceType(this);
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      return A._EventStreamSubscription$(this._target, this._eventType, onData, false, t1._precomputed1);
    }
  };
  A._ElementEventStreamImpl.prototype = {};
  A._EventStreamSubscription.prototype = {
    cancel$0() {
      var _this = this;
      if (_this._target == null)
        return $.$get$nullFuture();
      _this._unlisten$0();
      _this._target = null;
      _this.set$_onData(null);
      return $.$get$nullFuture();
    },
    onData$1(handleData) {
      var t1, _this = this;
      _this.$ti._eval$1("~(1)?")._as(handleData);
      if (_this._target == null)
        throw A.wrapException(A.StateError$("Subscription has been canceled."));
      _this._unlisten$0();
      t1 = A._wrapZone(new A._EventStreamSubscription_onData_closure(handleData), type$.Event);
      _this.set$_onData(t1);
      _this._tryResume$0();
    },
    pause$0(_) {
      if (this._target == null)
        return;
      ++this._pauseCount;
      this._unlisten$0();
    },
    resume$0() {
      var _this = this;
      if (_this._target == null || _this._pauseCount <= 0)
        return;
      --_this._pauseCount;
      _this._tryResume$0();
    },
    _tryResume$0() {
      var t3, _this = this,
        t1 = _this._onData,
        t2 = t1 != null;
      if (t2 && _this._pauseCount <= 0) {
        t3 = _this._target;
        t3.toString;
        type$.nullable_dynamic_Function_Event._as(t1);
        if (t2)
          J._addEventListener$3$x(t3, _this._eventType, t1, false);
      }
    },
    _unlisten$0() {
      var t2,
        t1 = this._onData;
      if (t1 != null) {
        t2 = this._target;
        t2.toString;
        J._removeEventListener$3$x(t2, this._eventType, type$.nullable_dynamic_Function_Event._as(t1), false);
      }
    },
    set$_onData(_onData) {
      this._onData = type$.nullable_dynamic_Function_Event._as(_onData);
    }
  };
  A._EventStreamSubscription_closure.prototype = {
    call$1(e) {
      return this.onData.call$1(type$.Event._as(e));
    },
    $signature: 28
  };
  A._EventStreamSubscription_onData_closure.prototype = {
    call$1(e) {
      return this.handleData.call$1(type$.Event._as(e));
    },
    $signature: 28
  };
  A.ImmutableListMixin.prototype = {
    get$iterator(receiver) {
      return new A.FixedSizeListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    add$1(receiver, value) {
      A.instanceType(receiver)._eval$1("ImmutableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot add to immutable List."));
    },
    sort$1(receiver, compare) {
      A.instanceType(receiver)._eval$1("int(ImmutableListMixin.E,ImmutableListMixin.E)?")._as(compare);
      throw A.wrapException(A.UnsupportedError$("Cannot sort immutable List."));
    }
  };
  A.FixedSizeListIterator.prototype = {
    moveNext$0() {
      var _this = this,
        nextPosition = _this._position + 1,
        t1 = _this._html$_length;
      if (nextPosition < t1) {
        _this.set$_html$_current(J.$index$asx(_this._array, nextPosition));
        _this._position = nextPosition;
        return true;
      }
      _this.set$_html$_current(null);
      _this._position = t1;
      return false;
    },
    get$current() {
      var t1 = this._html$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    set$_html$_current(_current) {
      this._html$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._AcceptStructuredClone.prototype = {
    findSlot$1(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      B.JSArray_methods.add$1(t1, value);
      B.JSArray_methods.add$1(this.copies, null);
      return $length;
    },
    walk$1(e) {
      var proto, slot, t1, copy, t2, l, $length, i, _this = this, _box_0 = {};
      if (e == null)
        return e;
      if (A._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      if (e instanceof Date)
        return A.DateTime$fromMillisecondsSinceEpoch(e.getTime(), true);
      if (e instanceof RegExp)
        throw A.wrapException(A.UnimplementedError$("structured clone of RegExp"));
      if (typeof Promise != "undefined" && e instanceof Promise)
        return A.promiseToFuture(e, type$.dynamic);
      proto = Object.getPrototypeOf(e);
      if (proto === Object.prototype || proto === null) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        if (!(slot < t1.length))
          return A.ioore(t1, slot);
        copy = _box_0.copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = type$.dynamic;
        copy = A.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        _box_0.copy = copy;
        B.JSArray_methods.$indexSet(t1, slot, copy);
        _this.forEachJsField$2(e, new A._AcceptStructuredClone_walk_closure(_box_0, _this));
        return _box_0.copy;
      }
      if (e instanceof Array) {
        l = e;
        slot = _this.findSlot$1(l);
        t1 = _this.copies;
        if (!(slot < t1.length))
          return A.ioore(t1, slot);
        copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = J.getInterceptor$asx(l);
        $length = t2.get$length(l);
        copy = _this.mustCopy ? new Array($length) : l;
        B.JSArray_methods.$indexSet(t1, slot, copy);
        for (t1 = J.getInterceptor$ax(copy), i = 0; i < $length; ++i)
          t1.$indexSet(copy, i, _this.walk$1(t2.$index(l, i)));
        return copy;
      }
      return e;
    }
  };
  A._AcceptStructuredClone_walk_closure.prototype = {
    call$2(key, value) {
      var t1 = this._box_0.copy,
        t2 = this.$this.walk$1(value);
      J.$indexSet$ax(t1, key, t2);
      return t2;
    },
    $signature: 143
  };
  A._AcceptStructuredCloneDart2Js.prototype = {
    forEachJsField$2(object, action) {
      var t1, t2, _i, key;
      type$.dynamic_Function_dynamic_dynamic._as(action);
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  A.CssClassSetImpl.prototype = {
    _validateToken$1(value) {
      var t1;
      A._asString(value);
      t1 = $.$get$CssClassSetImpl__validTokenRE()._nativeRegExp;
      if (t1.test(value))
        return value;
      throw A.wrapException(A.ArgumentError$value(value, "value", "Not a valid class token"));
    },
    toString$0(_) {
      return this.readClasses$0().join$1(0, " ");
    },
    get$iterator(_) {
      var t1 = this.readClasses$0();
      return A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1);
    },
    map$1$1(_, f, $T) {
      var t1, t2;
      $T._eval$1("0(String)")._as(f);
      t1 = this.readClasses$0();
      t2 = A._instanceType(t1);
      return new A.EfficientLengthMappedIterable(t1, t2._bind$1($T)._eval$1("1(SetMixin.E)")._as(f), t2._eval$1("@<SetMixin.E>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    get$isEmpty(_) {
      return this.readClasses$0()._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this.readClasses$0()._collection$_length !== 0;
    },
    get$length(_) {
      return this.readClasses$0()._collection$_length;
    },
    contains$1(_, value) {
      this._validateToken$1(value);
      return this.readClasses$0().contains$1(0, value);
    },
    add$1(_, value) {
      var t1;
      A._asString(value);
      this._validateToken$1(value);
      t1 = this.modify$1(new A.CssClassSetImpl_add_closure(value));
      return A._asBool(t1 == null ? false : t1);
    },
    skip$1(_, n) {
      var t1 = this.readClasses$0();
      return A.SkipIterable_SkipIterable(t1, n, A._instanceType(t1)._eval$1("SetMixin.E"));
    },
    elementAt$1(_, index) {
      return this.readClasses$0().elementAt$1(0, index);
    },
    modify$1(f) {
      var s, ret;
      type$.dynamic_Function_Set_String._as(f);
      s = this.readClasses$0();
      ret = f.call$1(s);
      this.writeClasses$1(s);
      return ret;
    }
  };
  A.CssClassSetImpl_add_closure.prototype = {
    call$1(s) {
      return type$.Set_String._as(s).add$1(0, this.value);
    },
    $signature: 133
  };
  A.FilteredElementList.prototype = {
    get$_html_common$_iterable() {
      var t1 = this._childNodes,
        t2 = A._instanceType(t1);
      return new A.MappedIterable(new A.WhereIterable(t1, t2._eval$1("bool(ListMixin.E)")._as(new A.FilteredElementList__iterable_closure()), t2._eval$1("WhereIterable<ListMixin.E>")), t2._eval$1("Element(ListMixin.E)")._as(new A.FilteredElementList__iterable_closure0()), t2._eval$1("MappedIterable<ListMixin.E,Element>"));
    },
    forEach$1(_, f) {
      type$.void_Function_Element._as(f);
      B.JSArray_methods.forEach$1(A.List_List$from(this.get$_html_common$_iterable(), false, type$.Element), f);
    },
    $indexSet(_, index, value) {
      var t1;
      A._asInt(index);
      type$.Element._as(value);
      t1 = this.get$_html_common$_iterable();
      J.replaceWith$1$x(t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index)), value);
    },
    set$length(_, newLength) {
      var len = J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
      if (newLength >= len)
        return;
      else if (newLength < 0)
        throw A.wrapException(A.ArgumentError$("Invalid list length", null));
      this.removeRange$2(0, newLength, len);
    },
    add$1(_, value) {
      this._childNodes._this.appendChild(type$.Element._as(value));
    },
    contains$1(_, needle) {
      return false;
    },
    sort$1(_, compare) {
      type$.nullable_int_Function_Element_Element._as(compare);
      throw A.wrapException(A.UnsupportedError$("Cannot sort filtered list"));
    },
    removeRange$2(_, start, end) {
      var t1 = this.get$_html_common$_iterable();
      t1 = A.SkipIterable_SkipIterable(t1, start, t1.$ti._eval$1("Iterable.E"));
      B.JSArray_methods.forEach$1(A.List_List$from(A.TakeIterable_TakeIterable(t1, end - start, A._instanceType(t1)._eval$1("Iterable.E")), true, type$.dynamic), new A.FilteredElementList_removeRange_closure());
    },
    get$length(_) {
      return J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
    },
    $index(_, index) {
      var t1;
      A._asInt(index);
      t1 = this.get$_html_common$_iterable();
      return t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index));
    },
    get$iterator(_) {
      var t1 = A.List_List$from(this.get$_html_common$_iterable(), false, type$.Element);
      return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    }
  };
  A.FilteredElementList__iterable_closure.prototype = {
    call$1(n) {
      return type$.Element._is(type$.Node._as(n));
    },
    $signature: 114
  };
  A.FilteredElementList__iterable_closure0.prototype = {
    call$1(n) {
      return type$.Element._as(type$.Node._as(n));
    },
    $signature: 91
  };
  A.FilteredElementList_removeRange_closure.prototype = {
    call$1(el) {
      return J.remove$0$x(el);
    },
    $signature: 8
  };
  A.KeyRange.prototype = {$isKeyRange: 1};
  A._convertToJS_closure.prototype = {
    call$1(o) {
      var jsFunction;
      type$.Function._as(o);
      jsFunction = function(_call, f, captureThis) {
        return function() {
          return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));
        };
      }(A._callDartFunction, o, false);
      A._defineProperty(jsFunction, $.$get$DART_CLOSURE_PROPERTY_NAME(), o);
      return jsFunction;
    },
    $signature: 1
  };
  A._convertToJS_closure0.prototype = {
    call$1(o) {
      return new this.ctor(o);
    },
    $signature: 1
  };
  A._wrapToDart_closure.prototype = {
    call$1(o) {
      return new A.JsFunction(o == null ? type$.Object._as(o) : o);
    },
    $signature: 84
  };
  A._wrapToDart_closure0.prototype = {
    call$1(o) {
      var t1 = o == null ? type$.Object._as(o) : o;
      return new A.JsArray(t1, type$.JsArray_dynamic);
    },
    $signature: 50
  };
  A._wrapToDart_closure1.prototype = {
    call$1(o) {
      return new A.JsObject(o == null ? type$.Object._as(o) : o);
    },
    $signature: 46
  };
  A.JsObject.prototype = {
    $index(_, property) {
      if (typeof property != "string" && typeof property != "number")
        throw A.wrapException(A.ArgumentError$("property is not a String or num", null));
      return A._convertToDart(this._js$_jsObject[property]);
    },
    $indexSet(_, property, value) {
      type$.Object._as(property);
      if (typeof property != "string" && typeof property != "number")
        throw A.wrapException(A.ArgumentError$("property is not a String or num", null));
      this._js$_jsObject[property] = A._convertToJS(value);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.JsObject && this._js$_jsObject === other._js$_jsObject;
    },
    toString$0(_) {
      var t1, exception;
      try {
        t1 = String(this._js$_jsObject);
        return t1;
      } catch (exception) {
        t1 = this.super$Object$toString(0);
        return t1;
      }
    },
    callMethod$2(method, args) {
      var t2,
        t1 = this._js$_jsObject;
      if (args == null)
        t2 = null;
      else {
        t2 = A._arrayInstanceType(args);
        t2 = A.List_List$from(new A.MappedListIterable(args, t2._eval$1("@(1)")._as(A.js___convertToJS$closure()), t2._eval$1("MappedListIterable<1,@>")), true, type$.dynamic);
      }
      return A._convertToDart(t1[method].apply(t1, t2));
    },
    get$hashCode(_) {
      return 0;
    }
  };
  A.JsFunction.prototype = {};
  A.JsArray.prototype = {
    _checkIndex$1(index) {
      var _this = this,
        t1 = index < 0 || index >= _this.get$length(_this);
      if (t1)
        throw A.wrapException(A.RangeError$range(index, 0, _this.get$length(_this), null, null));
    },
    $index(_, index) {
      if (A._isInt(index))
        this._checkIndex$1(index);
      return this.$ti._precomputed1._as(this.super$JsObject$$index(0, index));
    },
    $indexSet(_, index, value) {
      type$.Object._as(index);
      if (A._isInt(index))
        this._checkIndex$1(index);
      this.super$_JsArray_JsObject_ListMixin$$indexSet(0, index, value);
    },
    get$length(_) {
      var len = this._js$_jsObject.length;
      if (typeof len === "number" && len >>> 0 === len)
        return len;
      throw A.wrapException(A.StateError$("Bad JsArray length"));
    },
    set$length(_, $length) {
      this.super$_JsArray_JsObject_ListMixin$$indexSet(0, "length", $length);
    },
    add$1(_, value) {
      this.callMethod$2("push", [this.$ti._precomputed1._as(value)]);
    },
    sort$1(_, compare) {
      this.$ti._eval$1("int(1,1)?")._as(compare);
      this.callMethod$2("sort", compare == null ? [] : [compare]);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._JsArray_JsObject_ListMixin.prototype = {
    $indexSet(_, property, value) {
      return this.super$JsObject$$indexSet(0, type$.Object._as(property), value);
    }
  };
  A.promiseToFuture_closure.prototype = {
    call$1(r) {
      return this.completer.complete$1(0, this.T._eval$1("0/?")._as(r));
    },
    $signature: 8
  };
  A.promiseToFuture_closure0.prototype = {
    call$1(e) {
      if (e == null)
        return this.completer.completeError$1(new A.NullRejectionException(e === undefined));
      return this.completer.completeError$1(e);
    },
    $signature: 8
  };
  A.NullRejectionException.prototype = {
    toString$0(_) {
      return "Promise was rejected with a value of `" + (this.isUndefined ? "undefined" : "null") + "`.";
    },
    $isException: 1
  };
  A._JSRandom.prototype = {
    nextInt$1(max) {
      if (max <= 0 || max > 4294967296)
        throw A.wrapException(A.RangeError$(string$.max_mu + max));
      return Math.random() * max >>> 0;
    },
    $isRandom: 1
  };
  A._Random.prototype = {
    _Random$1(seed) {
      var low, high, tmplow, low0, t1, t2, t3, _this = this, _4294967296 = 4294967296,
        empty_seed = seed < 0 ? -1 : 0;
      do {
        low = seed >>> 0;
        seed = B.JSInt_methods._tdivFast$1(seed - low, _4294967296);
        high = seed >>> 0;
        seed = B.JSInt_methods._tdivFast$1(seed - high, _4294967296);
        tmplow = (~low >>> 0) + (low << 21 >>> 0);
        low0 = tmplow >>> 0;
        high = (~high >>> 0) + ((high << 21 | low >>> 11) >>> 0) + B.JSInt_methods._tdivFast$1(tmplow - low0, _4294967296) >>> 0;
        tmplow = ((low0 ^ (low0 >>> 24 | high << 8)) >>> 0) * 265;
        low = tmplow >>> 0;
        high = ((high ^ high >>> 24) >>> 0) * 265 + B.JSInt_methods._tdivFast$1(tmplow - low, _4294967296) >>> 0;
        tmplow = ((low ^ (low >>> 14 | high << 18)) >>> 0) * 21;
        low = tmplow >>> 0;
        high = ((high ^ high >>> 14) >>> 0) * 21 + B.JSInt_methods._tdivFast$1(tmplow - low, _4294967296) >>> 0;
        low = (low ^ (low >>> 28 | high << 4)) >>> 0;
        high = (high ^ high >>> 28) >>> 0;
        tmplow = (low << 31 >>> 0) + low;
        low0 = tmplow >>> 0;
        t1 = B.JSInt_methods._tdivFast$1(tmplow - low0, _4294967296);
        tmplow = _this._lo * 1037;
        t2 = _this._lo = tmplow >>> 0;
        t3 = _this._hi * 1037 + B.JSInt_methods._tdivFast$1(tmplow - t2, _4294967296) >>> 0;
        _this._hi = t3;
        t2 = (t2 ^ low0) >>> 0;
        _this._lo = t2;
        t1 = (t3 ^ high + ((high << 31 | low >>> 1) >>> 0) + t1 >>> 0) >>> 0;
        _this._hi = t1;
      } while (seed !== empty_seed);
      if (t1 === 0 && t2 === 0)
        _this._lo = 23063;
      _this._nextState$0();
      _this._nextState$0();
      _this._nextState$0();
      _this._nextState$0();
    },
    _nextState$0() {
      var _this = this,
        t1 = _this._lo,
        tmpHi = 4294901760 * t1,
        tmpHiLo = tmpHi >>> 0,
        tmpLo = 55905 * t1,
        tmpLoLo = tmpLo >>> 0,
        newLo = tmpLoLo + tmpHiLo + _this._hi;
      t1 = newLo >>> 0;
      _this._lo = t1;
      _this._hi = B.JSInt_methods._tdivFast$1(tmpLo - tmpLoLo + (tmpHi - tmpHiLo) + (newLo - t1), 4294967296) >>> 0;
    },
    nextInt$1(max) {
      var t1, rnd32, result, _this = this;
      if (max <= 0 || max > 4294967296)
        throw A.wrapException(A.RangeError$(string$.max_mu + max));
      t1 = max - 1;
      if ((max & t1) >>> 0 === 0) {
        _this._nextState$0();
        return (_this._lo & t1) >>> 0;
      }
      do {
        _this._nextState$0();
        rnd32 = _this._lo;
        result = rnd32 % max;
      } while (rnd32 - result + max >= 4294967296);
      return result;
    },
    $isRandom: 1
  };
  A._RectangleBase.prototype = {
    toString$0(_) {
      var _this = this;
      return "Rectangle (" + _this.left + ", " + _this.top + ") " + _this.width + " x " + _this.height;
    },
    $eq(_, other) {
      var t1, t2, t3, t4, t5, t6, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.Rectangle) {
        t1 = _this.left;
        t2 = other.left;
        if (t1 === t2) {
          t3 = _this.top;
          t4 = other.top;
          if (t3 === t4) {
            t5 = _this.$ti._precomputed1;
            t6 = other.$ti._precomputed1;
            t1 = t5._as(t1 + _this.width) === t6._as(t2 + other.width) && t5._as(t3 + _this.height) === t6._as(t4 + other.height);
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.left,
        t2 = _this.top,
        t3 = _this.$ti._precomputed1;
      return A.SystemHash_hash4(B.JSInt_methods.get$hashCode(t1), B.JSInt_methods.get$hashCode(t2), B.JSInt_methods.get$hashCode(t3._as(t1 + _this.width)), B.JSInt_methods.get$hashCode(t3._as(t2 + _this.height)), 0);
    }
  };
  A.Rectangle.prototype = {};
  A.AttributeClassSet.prototype = {
    readClasses$0() {
      var t1, t2, _i, trimmed,
        classname = this._svg$_element.getAttribute("class"),
        s = A.LinkedHashSet_LinkedHashSet(type$.String);
      if (classname == null)
        return s;
      for (t1 = classname.split(" "), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        trimmed = J.trim$0$s(t1[_i]);
        if (trimmed.length !== 0)
          s.add$1(0, trimmed);
      }
      return s;
    },
    writeClasses$1(s) {
      this._svg$_element.setAttribute("class", s.join$1(0, " "));
    }
  };
  A.SvgElement.prototype = {
    get$classes(receiver) {
      return new A.AttributeClassSet(receiver);
    },
    get$children(receiver) {
      return new A.FilteredElementList(receiver, new A._ChildNodeListLazy(receiver));
    },
    insertAdjacentElement$2(receiver, where, element) {
      throw A.wrapException(A.UnsupportedError$("Cannot invoke insertAdjacentElement on SVG."));
    },
    get$onClick(receiver) {
      return new A._ElementEventStreamImpl(receiver, "click", false, type$._ElementEventStreamImpl_MouseEvent);
    },
    get$onMouseEnter(receiver) {
      return new A._ElementEventStreamImpl(receiver, "mouseenter", false, type$._ElementEventStreamImpl_MouseEvent);
    },
    get$onMouseLeave(receiver) {
      return new A._ElementEventStreamImpl(receiver, "mouseleave", false, type$._ElementEventStreamImpl_MouseEvent);
    }
  };
  A.CanonicalizedMap.prototype = {
    $index(_, key) {
      var pair, _this = this;
      if (!_this._isValidKey$1(key))
        return null;
      pair = _this._base.$index(0, _this._canonicalize.call$1(_this.$ti._eval$1("CanonicalizedMap.K")._as(key)));
      return pair == null ? null : pair.value;
    },
    $indexSet(_, key, value) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._eval$1("CanonicalizedMap.K")._as(key);
      t2 = t1._eval$1("CanonicalizedMap.V");
      t2._as(value);
      if (!_this._isValidKey$1(key))
        return;
      _this._base.$indexSet(0, _this._canonicalize.call$1(key), new A.MapEntry(key, value, t1._eval$1("@<CanonicalizedMap.K>")._bind$1(t2)._eval$1("MapEntry<1,2>")));
    },
    addAll$1(_, other) {
      this.$ti._eval$1("Map<CanonicalizedMap.K,CanonicalizedMap.V>")._as(other).forEach$1(0, new A.CanonicalizedMap_addAll_closure(this));
    },
    cast$2$0(_, K2, V2) {
      return this._base.cast$2$0(0, K2, V2);
    },
    containsKey$1(key) {
      var _this = this;
      if (!_this._isValidKey$1(key))
        return false;
      return _this._base.containsKey$1(_this._canonicalize.call$1(_this.$ti._eval$1("CanonicalizedMap.K")._as(key)));
    },
    get$entries(_) {
      var t1 = this._base;
      return t1.get$entries(t1).map$1$1(0, new A.CanonicalizedMap_entries_closure(this), this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>"));
    },
    forEach$1(_, f) {
      this._base.forEach$1(0, new A.CanonicalizedMap_forEach_closure(this, this.$ti._eval$1("~(CanonicalizedMap.K,CanonicalizedMap.V)")._as(f)));
    },
    get$isEmpty(_) {
      return this._base.__js_helper$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._base.__js_helper$_length !== 0;
    },
    get$keys() {
      var t2, t3,
        t1 = this._base;
      t1 = t1.get$values(t1);
      t2 = this.$ti._eval$1("CanonicalizedMap.K");
      t3 = A._instanceType(t1);
      return A.MappedIterable_MappedIterable(t1, t3._bind$1(t2)._eval$1("1(Iterable.E)")._as(new A.CanonicalizedMap_keys_closure(this)), t3._eval$1("Iterable.E"), t2);
    },
    get$length(_) {
      return this._base.__js_helper$_length;
    },
    map$2$1(_, transform, K2, V2) {
      return this._base.map$2$1(0, new A.CanonicalizedMap_map_closure(this, this.$ti._bind$1(K2)._bind$1(V2)._eval$1("MapEntry<1,2>(CanonicalizedMap.K,CanonicalizedMap.V)")._as(transform), K2, V2), K2, V2);
    },
    get$values(_) {
      var t2, t3,
        t1 = this._base;
      t1 = t1.get$values(t1);
      t2 = this.$ti._eval$1("CanonicalizedMap.V");
      t3 = A._instanceType(t1);
      return A.MappedIterable_MappedIterable(t1, t3._bind$1(t2)._eval$1("1(Iterable.E)")._as(new A.CanonicalizedMap_values_closure(this)), t3._eval$1("Iterable.E"), t2);
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _isValidKey$1(key) {
      var t1;
      if (this.$ti._eval$1("CanonicalizedMap.K")._is(key))
        t1 = true;
      else
        t1 = false;
      return t1;
    },
    $isMap: 1
  };
  A.CanonicalizedMap_addAll_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = t1.$ti;
      t2._eval$1("CanonicalizedMap.K")._as(key);
      t2._eval$1("CanonicalizedMap.V")._as(value);
      t1.$indexSet(0, key, value);
      return value;
    },
    $signature() {
      return this.$this.$ti._eval$1("~(CanonicalizedMap.K,CanonicalizedMap.V)");
    }
  };
  A.CanonicalizedMap_entries_closure.prototype = {
    call$1(e) {
      var t1 = this.$this.$ti,
        t2 = t1._eval$1("MapEntry<CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>")._as(e).value;
      return new A.MapEntry(t2.key, t2.value, t1._eval$1("@<CanonicalizedMap.K>")._bind$1(t1._eval$1("CanonicalizedMap.V"))._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>(MapEntry<CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>)");
    }
  };
  A.CanonicalizedMap_forEach_closure.prototype = {
    call$2(key, pair) {
      var t1 = this.$this.$ti;
      t1._eval$1("CanonicalizedMap.C")._as(key);
      t1._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")._as(pair);
      return this.f.call$2(pair.key, pair.value);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.CanonicalizedMap_keys_closure.prototype = {
    call$1(pair) {
      return this.$this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")._as(pair).key;
    },
    $signature() {
      return this.$this.$ti._eval$1("CanonicalizedMap.K(MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.CanonicalizedMap_map_closure.prototype = {
    call$2(_, pair) {
      var t1 = this.$this.$ti;
      t1._eval$1("CanonicalizedMap.C")._as(_);
      t1._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")._as(pair);
      return this.transform.call$2(pair.key, pair.value);
    },
    $signature() {
      return this.$this.$ti._bind$1(this.K2)._bind$1(this.V2)._eval$1("MapEntry<1,2>(CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.CanonicalizedMap_values_closure.prototype = {
    call$1(pair) {
      return this.$this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")._as(pair).value;
    },
    $signature() {
      return this.$this.$ti._eval$1("CanonicalizedMap.V(MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.ConnectorApi.prototype = {
    connectWithHttpInfo$1$seededConnectorConnection(seededConnectorConnection) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this, postBody, queryParams, t1, t2;
      var $async$connectWithHttpInfo$1$seededConnectorConnection = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              postBody = seededConnectorConnection.toJson$0();
              queryParams = A._setArrayType([], type$.JSArray_QueryParam);
              t1 = type$.String;
              t2 = B.JSArray_methods.get$first(B.List_k2a);
              $async$returnValue = $async$self.apiClient.invokeAPI$8("/connect", "POST", queryParams, postBody, A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t2, B.List_empty1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$connectWithHttpInfo$1$seededConnectorConnection, $async$completer);
    },
    connect$1$seededConnectorConnection(seededConnectorConnection) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Context),
        $async$returnValue, $async$self = this, response, t1, $async$temp1, $async$temp2, $async$temp3;
      var $async$connect$1$seededConnectorConnection = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.connectWithHttpInfo$1$seededConnectorConnection(seededConnectorConnection), $async$connect$1$seededConnectorConnection);
            case 3:
              // returning from await.
              response = $async$result;
              t1 = response.statusCode;
              $async$goto = t1 >= 400 ? 4 : 5;
              break;
            case 4:
              // then
              $async$temp1 = A;
              $async$temp2 = A;
              $async$temp3 = t1;
              $async$goto = 6;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$connect$1$seededConnectorConnection);
            case 6:
              // returning from await.
              throw $async$temp1.wrapException($async$temp2.ApiException$0($async$temp3, $async$result));
            case 5:
              // join
              $async$goto = A.encodingForCharset(A._contentTypeForHeaders(response.headers).parameters._collection$_map.$index(0, "charset")).decode$1(0, response.bodyBytes).length !== 0 && t1 !== 204 ? 7 : 8;
              break;
            case 7:
              // then
              $async$temp1 = type$.Context;
              $async$temp2 = $async$self.apiClient;
              $async$goto = 10;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$connect$1$seededConnectorConnection);
            case 10:
              // returning from await.
              $async$goto = 9;
              return A._asyncAwait($async$temp2.deserializeAsync$2($async$result, "Context"), $async$connect$1$seededConnectorConnection);
            case 9:
              // returning from await.
              $async$returnValue = $async$temp1._as($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              throw A.wrapException(A.ApiException$0(t1, "Received an empty body (not in a 204)"));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$connect$1$seededConnectorConnection, $async$completer);
    },
    trackWithHttpInfo$2$seededConnectorTracking(application, seededConnectorTracking) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this, path, postBody, queryParams, t1, t2;
      var $async$trackWithHttpInfo$2$seededConnectorTracking = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              path = A.stringReplaceAllUnchecked("/{application}/track", "{application}", application);
              postBody = seededConnectorTracking.toJson$0();
              queryParams = A._setArrayType([], type$.JSArray_QueryParam);
              t1 = type$.String;
              t2 = B.JSArray_methods.get$first(B.List_k2a);
              $async$returnValue = $async$self.apiClient.invokeAPI$8(path, "POST", queryParams, postBody, A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t2, B.List_empty1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$trackWithHttpInfo$2$seededConnectorTracking, $async$completer);
    },
    track$2$seededConnectorTracking(_, application, seededConnectorTracking) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$self = this, response, t1, $async$temp1, $async$temp2, $async$temp3;
      var $async$track$2$seededConnectorTracking = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.trackWithHttpInfo$2$seededConnectorTracking(application, seededConnectorTracking), $async$track$2$seededConnectorTracking);
            case 3:
              // returning from await.
              response = $async$result;
              t1 = response.statusCode;
              $async$goto = t1 >= 400 ? 4 : 5;
              break;
            case 4:
              // then
              $async$temp1 = A;
              $async$temp2 = A;
              $async$temp3 = t1;
              $async$goto = 6;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$track$2$seededConnectorTracking);
            case 6:
              // returning from await.
              throw $async$temp1.wrapException($async$temp2.ApiException$0($async$temp3, $async$result));
            case 5:
              // join
              $async$goto = A.encodingForCharset(A._contentTypeForHeaders(response.headers).parameters._collection$_map.$index(0, "charset")).decode$1(0, response.bodyBytes).length !== 0 && t1 !== 204 ? 7 : 8;
              break;
            case 7:
              // then
              $async$temp1 = A;
              $async$temp2 = $async$self.apiClient;
              $async$goto = 10;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$track$2$seededConnectorTracking);
            case 10:
              // returning from await.
              $async$goto = 9;
              return A._asyncAwait($async$temp2.deserializeAsync$2($async$result, "String"), $async$track$2$seededConnectorTracking);
            case 9:
              // returning from await.
              $async$returnValue = $async$temp1._asString($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              throw A.wrapException(A.ApiException$0(t1, "Received an empty body (not in a 204)"));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$track$2$seededConnectorTracking, $async$completer);
    }
  };
  A.ApiClient0.prototype = {
    invokeAPI$8(path, method, queryParams, body, headerParams, formParams, contentType, authNames) {
      var t1 = type$.Map_String_String;
      return this.invokeAPI$body$ApiClient0(path, method, type$.List_QueryParam._as(queryParams), body, t1._as(headerParams), t1._as(formParams), contentType, type$.List_String._as(authNames));
    },
    invokeAPI$body$ApiClient0(path, method, queryParams, body, headerParams, formParams, contentType, authNames) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, uri, msgBody, nullableHeaderParams, request, response, error, trace, error0, trace0, t1, urlEncodedQueryParams, queryString, t2, exception, $async$exception;
      var $async$invokeAPI$8 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._api_client$_updateParamsForAuth$3(authNames, queryParams, headerParams);
              headerParams.addAll$1(0, $async$self._api_client$_defaultHeaderMap);
              if (contentType != null)
                headerParams.$indexSet(0, "Content-Type", contentType);
              t1 = A._arrayInstanceType(queryParams);
              urlEncodedQueryParams = new A.MappedListIterable(queryParams, t1._eval$1("String(1)")._as(new A.ApiClient_invokeAPI_closure0()), t1._eval$1("MappedListIterable<1,String>"));
              queryString = !urlEncodedQueryParams.get$isEmpty(urlEncodedQueryParams) ? "?" + urlEncodedQueryParams.join$1(0, "&") : "";
              uri = A.Uri_parse($async$self.basePath + path + queryString);
              $async$handler = 4;
              $async$goto = contentType === "application/x-www-form-urlencoded" ? 7 : 9;
              break;
            case 7:
              // then
              $async$result = formParams;
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              $async$goto = 10;
              return A._asyncAwait($async$self.serializeAsync$1(body), $async$invokeAPI$8);
            case 10:
              // returning from await.
            case 8:
              // join
              msgBody = $async$result;
              nullableHeaderParams = headerParams.__js_helper$_length === 0 ? null : headerParams;
              $async$goto = method === "POST" ? 11 : 12;
              break;
            case 11:
              // then
              request = A.Request$(method, uri);
              request.headers.addAll$1(0, headerParams);
              t1 = request;
              t2 = type$.List_int._as(A.JsonUtf8Encoder$(null, null, null).convert$1(body));
              t1._checkFinalized$0();
              t1._bodyBytes = A.toUint8List(t2);
              $async$goto = 13;
              return A._asyncAwait($async$self._api_client$_client.send$1(0, request), $async$invokeAPI$8);
            case 13:
              // returning from await.
              response = $async$result;
              t2 = A.Response_fromStream(response);
              $async$returnValue = t2;
              // goto return
              $async$goto = 1;
              break;
            case 12:
              // join
            case 14:
              // switch
              switch (method) {
                case "PUT":
                  // goto case
                  $async$goto = 16;
                  break;
                case "DELETE":
                  // goto case
                  $async$goto = 17;
                  break;
                case "PATCH":
                  // goto case
                  $async$goto = 18;
                  break;
                case "HEAD":
                  // goto case
                  $async$goto = 19;
                  break;
                case "GET":
                  // goto case
                  $async$goto = 20;
                  break;
                default:
                  // goto after switch
                  $async$goto = 15;
                  break;
              }
              break;
            case 16:
              // case
              $async$goto = 21;
              return A._asyncAwait($async$self._api_client$_client.put$3$body$headers(uri, msgBody, nullableHeaderParams), $async$invokeAPI$8);
            case 21:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 17:
              // case
              $async$goto = 22;
              return A._asyncAwait($async$self._api_client$_client.delete$3$body$headers(uri, msgBody, nullableHeaderParams), $async$invokeAPI$8);
            case 22:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 18:
              // case
              $async$goto = 23;
              return A._asyncAwait($async$self._api_client$_client.patch$3$body$headers(uri, msgBody, nullableHeaderParams), $async$invokeAPI$8);
            case 23:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 19:
              // case
              $async$goto = 24;
              return A._asyncAwait($async$self._api_client$_client.head$2$headers(0, uri, nullableHeaderParams), $async$invokeAPI$8);
            case 24:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 20:
              // case
              $async$goto = 25;
              return A._asyncAwait($async$self._api_client$_client.$get$2$headers(uri, nullableHeaderParams), $async$invokeAPI$8);
            case 25:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 15:
              // after switch
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = A.unwrapException($async$exception);
              if (t1 instanceof A.ClientException) {
                error = t1;
                trace = A.getTraceFromException($async$exception);
                throw A.wrapException(A.ApiException$withInner0(400, "HTTP connection failed: " + method + " " + path, error, trace));
              } else if (type$.Exception._is(t1)) {
                error0 = t1;
                trace0 = A.getTraceFromException($async$exception);
                throw A.wrapException(A.ApiException$withInner0(400, "Exception occurred: " + method + " " + path, error0, trace0));
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              throw A.wrapException(A.ApiException$0(400, "Invalid HTTP operation: " + method + " " + path));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$invokeAPI$8, $async$completer);
    },
    deserializeAsync$2(json, targetType) {
      return this.deserializeAsync$body$ApiClient0(A._asString(json), targetType);
    },
    deserializeAsync$body$ApiClient0(json, targetType) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue;
      var $async$deserializeAsync$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              targetType = A.stringReplaceAllUnchecked(targetType, " ", "");
              $async$returnValue = targetType === "String" ? json : A.ApiClient__deserialize0(B.C_JsonCodec.decode$2$reviver(0, json, null), targetType, false);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$deserializeAsync$2, $async$completer);
    },
    serializeAsync$1(value) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue;
      var $async$serializeAsync$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = value == null ? "" : B.C_JsonCodec.encode$1(value);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$serializeAsync$1, $async$completer);
    },
    _api_client$_updateParamsForAuth$3(authNames, queryParams, headerParams) {
      var t1, authName, t2;
      type$.List_String._as(authNames);
      type$.List_QueryParam._as(queryParams);
      type$.Map_String_String._as(headerParams);
      for (t1 = this._api_client$_authentications; false;) {
        authName = authNames[0];
        t1.$index(0, authName);
        t2 = A.ArgumentError$("Authentication undefined: " + A.S(authName), null);
        throw A.wrapException(t2);
      }
    }
  };
  A.ApiClient_invokeAPI_closure0.prototype = {
    call$1(param) {
      return type$.QueryParam._as(param).toString$0(0);
    },
    $signature: 29
  };
  A.ApiClient__deserialize_closure2.prototype = {
    call$1(v) {
      return A.ApiClient__deserialize0(v, A._asString(this._box_0.match), this.growable);
    },
    $signature: 1
  };
  A.ApiClient__deserialize_closure3.prototype = {
    call$1(v) {
      return A.ApiClient__deserialize0(v, A._asString(this._box_0.match), this.growable);
    },
    $signature: 1
  };
  A.ApiClient__deserialize_closure4.prototype = {
    call$1(v) {
      return A.ApiClient__deserialize0(v, A._asString(this._box_0.match), this.growable);
    },
    $signature: 1
  };
  A.ApiException0.prototype = {
    toString$0(_) {
      var t2, _this = this,
        t1 = _this.message;
      if (t1 == null)
        return "ApiException";
      t2 = _this.innerException;
      if (t2 == null)
        return "ApiException " + _this.code + ": " + t1;
      return "ApiException " + _this.code + ": " + t1 + " (Inner exception: " + t2.toString$0(0) + ")\n\n" + A.S(_this.stackTrace);
    },
    $isException: 1
  };
  A.AllocationsApi.prototype = {
    allocationsConnectNewCloudWithHttpInfo$1$userProfile(userProfile) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this, postBody, queryParams, t1, t2;
      var $async$allocationsConnectNewCloudWithHttpInfo$1$userProfile = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              postBody = userProfile.toJson$0();
              queryParams = A._setArrayType([], type$.JSArray_QueryParam);
              t1 = type$.String;
              t2 = B.JSArray_methods.get$first(B.List_k2a);
              $async$returnValue = $async$self.apiClient.invokeAPI$8("/allocations/connect", "POST", queryParams, postBody, A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t2, B.List_empty1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$allocationsConnectNewCloudWithHttpInfo$1$userProfile, $async$completer);
    },
    allocationsConnectNewCloud$1$userProfile(userProfile) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.AllocationCloud),
        $async$returnValue, $async$self = this, response, t1, $async$temp1, $async$temp2, $async$temp3;
      var $async$allocationsConnectNewCloud$1$userProfile = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.allocationsConnectNewCloudWithHttpInfo$1$userProfile(userProfile), $async$allocationsConnectNewCloud$1$userProfile);
            case 3:
              // returning from await.
              response = $async$result;
              t1 = response.statusCode;
              $async$goto = t1 >= 400 ? 4 : 5;
              break;
            case 4:
              // then
              $async$temp1 = A;
              $async$temp2 = A;
              $async$temp3 = t1;
              $async$goto = 6;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$allocationsConnectNewCloud$1$userProfile);
            case 6:
              // returning from await.
              throw $async$temp1.wrapException($async$temp2.ApiException$($async$temp3, $async$result));
            case 5:
              // join
              $async$goto = A.encodingForCharset(A._contentTypeForHeaders(response.headers).parameters._collection$_map.$index(0, "charset")).decode$1(0, response.bodyBytes).length !== 0 && t1 !== 204 ? 7 : 8;
              break;
            case 7:
              // then
              $async$temp1 = type$.AllocationCloud;
              $async$temp2 = $async$self.apiClient;
              $async$goto = 10;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$allocationsConnectNewCloud$1$userProfile);
            case 10:
              // returning from await.
              $async$goto = 9;
              return A._asyncAwait($async$temp2.deserializeAsync$2($async$result, "AllocationCloud"), $async$allocationsConnectNewCloud$1$userProfile);
            case 9:
              // returning from await.
              $async$returnValue = $async$temp1._as($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              throw A.wrapException(A.ApiException$(t1, "Received an empty body (not in a 204)"));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$allocationsConnectNewCloud$1$userProfile, $async$completer);
    }
  };
  A.AssetsApi.prototype = {
    assetsCreateNewAssetWithHttpInfo$2$seed$transferables(seed, transferables) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this, postBody, queryParams, t1, t2;
      var $async$assetsCreateNewAssetWithHttpInfo$2$seed$transferables = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              postBody = seed.toJson$0();
              queryParams = A._setArrayType([], type$.JSArray_QueryParam);
              t1 = type$.String;
              t2 = B.JSArray_methods.get$first(B.List_k2a);
              $async$returnValue = $async$self.apiClient.invokeAPI$8("/assets/create", "POST", queryParams, postBody, A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t2, B.List_empty1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$assetsCreateNewAssetWithHttpInfo$2$seed$transferables, $async$completer);
    },
    assetsCreateNewAsset$1$seed(seed) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Asset),
        $async$returnValue, $async$self = this, response, t1, $async$temp1, $async$temp2, $async$temp3;
      var $async$assetsCreateNewAsset$1$seed = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.assetsCreateNewAssetWithHttpInfo$2$seed$transferables(seed, null), $async$assetsCreateNewAsset$1$seed);
            case 3:
              // returning from await.
              response = $async$result;
              t1 = response.statusCode;
              $async$goto = t1 >= 400 ? 4 : 5;
              break;
            case 4:
              // then
              $async$temp1 = A;
              $async$temp2 = A;
              $async$temp3 = t1;
              $async$goto = 6;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$assetsCreateNewAsset$1$seed);
            case 6:
              // returning from await.
              throw $async$temp1.wrapException($async$temp2.ApiException$($async$temp3, $async$result));
            case 5:
              // join
              $async$goto = A.encodingForCharset(A._contentTypeForHeaders(response.headers).parameters._collection$_map.$index(0, "charset")).decode$1(0, response.bodyBytes).length !== 0 && t1 !== 204 ? 7 : 8;
              break;
            case 7:
              // then
              $async$temp1 = type$.Asset;
              $async$temp2 = $async$self.apiClient;
              $async$goto = 10;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$assetsCreateNewAsset$1$seed);
            case 10:
              // returning from await.
              $async$goto = 9;
              return A._asyncAwait($async$temp2.deserializeAsync$2($async$result, "Asset"), $async$assetsCreateNewAsset$1$seed);
            case 9:
              // returning from await.
              $async$returnValue = $async$temp1._as($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              throw A.wrapException(A.ApiException$(t1, "Received an empty body (not in a 204)"));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$assetsCreateNewAsset$1$seed, $async$completer);
    }
  };
  A.LinkifyApi.prototype = {
    linkifyWithHttpInfo$1$linkify(linkify) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this, postBody, queryParams, t1, t2;
      var $async$linkifyWithHttpInfo$1$linkify = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              postBody = linkify.toJson$0();
              queryParams = A._setArrayType([], type$.JSArray_QueryParam);
              t1 = type$.String;
              t2 = B.JSArray_methods.get$first(B.List_k2a);
              $async$returnValue = $async$self.apiClient.invokeAPI$8("/linkify", "POST", queryParams, postBody, A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t2, B.List_empty1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$linkifyWithHttpInfo$1$linkify, $async$completer);
    },
    linkify$1$linkify(linkify) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Shares),
        $async$returnValue, $async$self = this, response, t1, $async$temp1, $async$temp2, $async$temp3;
      var $async$linkify$1$linkify = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.linkifyWithHttpInfo$1$linkify(linkify), $async$linkify$1$linkify);
            case 3:
              // returning from await.
              response = $async$result;
              t1 = response.statusCode;
              $async$goto = t1 >= 400 ? 4 : 5;
              break;
            case 4:
              // then
              $async$temp1 = A;
              $async$temp2 = A;
              $async$temp3 = t1;
              $async$goto = 6;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$linkify$1$linkify);
            case 6:
              // returning from await.
              throw $async$temp1.wrapException($async$temp2.ApiException$($async$temp3, $async$result));
            case 5:
              // join
              $async$goto = A.encodingForCharset(A._contentTypeForHeaders(response.headers).parameters._collection$_map.$index(0, "charset")).decode$1(0, response.bodyBytes).length !== 0 && t1 !== 204 ? 7 : 8;
              break;
            case 7:
              // then
              $async$temp1 = type$.Shares;
              $async$temp2 = $async$self.apiClient;
              $async$goto = 10;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$linkify$1$linkify);
            case 10:
              // returning from await.
              $async$goto = 9;
              return A._asyncAwait($async$temp2.deserializeAsync$2($async$result, "Shares"), $async$linkify$1$linkify);
            case 9:
              // returning from await.
              $async$returnValue = $async$temp1._as($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              throw A.wrapException(A.ApiException$(t1, "Received an empty body (not in a 204)"));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$linkify$1$linkify, $async$completer);
    }
  };
  A.OSApi.prototype = {
    signIntoOSWithHttpInfo$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this, queryParams, t1;
      var $async$signIntoOSWithHttpInfo$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              queryParams = A._setArrayType([], type$.JSArray_QueryParam);
              t1 = type$.String;
              $async$returnValue = $async$self.apiClient.invokeAPI$8("/os/sign_in", "POST", queryParams, null, A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), null, B.List_empty1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$signIntoOSWithHttpInfo$0, $async$completer);
    },
    signIntoOS$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.UserProfile),
        $async$returnValue, $async$self = this, response, t1, $async$temp1, $async$temp2, $async$temp3;
      var $async$signIntoOS$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.signIntoOSWithHttpInfo$0(), $async$signIntoOS$0);
            case 3:
              // returning from await.
              response = $async$result;
              t1 = response.statusCode;
              $async$goto = t1 >= 400 ? 4 : 5;
              break;
            case 4:
              // then
              $async$temp1 = A;
              $async$temp2 = A;
              $async$temp3 = t1;
              $async$goto = 6;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$signIntoOS$0);
            case 6:
              // returning from await.
              throw $async$temp1.wrapException($async$temp2.ApiException$($async$temp3, $async$result));
            case 5:
              // join
              $async$goto = A.encodingForCharset(A._contentTypeForHeaders(response.headers).parameters._collection$_map.$index(0, "charset")).decode$1(0, response.bodyBytes).length !== 0 && t1 !== 204 ? 7 : 8;
              break;
            case 7:
              // then
              $async$temp1 = type$.UserProfile;
              $async$temp2 = $async$self.apiClient;
              $async$goto = 10;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$signIntoOS$0);
            case 10:
              // returning from await.
              $async$goto = 9;
              return A._asyncAwait($async$temp2.deserializeAsync$2($async$result, "UserProfile"), $async$signIntoOS$0);
            case 9:
              // returning from await.
              $async$returnValue = $async$temp1._as($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              throw A.wrapException(A.ApiException$(t1, "Received an empty body (not in a 204)"));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$signIntoOS$0, $async$completer);
    }
  };
  A.WellKnownApi.prototype = {
    getWellKnownVersionWithHttpInfo$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this, queryParams, t1;
      var $async$getWellKnownVersionWithHttpInfo$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              queryParams = A._setArrayType([], type$.JSArray_QueryParam);
              t1 = type$.String;
              $async$returnValue = $async$self.apiClient.invokeAPI$8("/.well-known/version", "GET", queryParams, null, A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), null, B.List_empty1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$getWellKnownVersionWithHttpInfo$0, $async$completer);
    },
    getWellKnownVersion$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$self = this, response, t1, $async$temp1, $async$temp2, $async$temp3;
      var $async$getWellKnownVersion$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.getWellKnownVersionWithHttpInfo$0(), $async$getWellKnownVersion$0);
            case 3:
              // returning from await.
              response = $async$result;
              t1 = response.statusCode;
              $async$goto = t1 >= 400 ? 4 : 5;
              break;
            case 4:
              // then
              $async$temp1 = A;
              $async$temp2 = A;
              $async$temp3 = t1;
              $async$goto = 6;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$getWellKnownVersion$0);
            case 6:
              // returning from await.
              throw $async$temp1.wrapException($async$temp2.ApiException$($async$temp3, $async$result));
            case 5:
              // join
              $async$goto = A.encodingForCharset(A._contentTypeForHeaders(response.headers).parameters._collection$_map.$index(0, "charset")).decode$1(0, response.bodyBytes).length !== 0 && t1 !== 204 ? 7 : 8;
              break;
            case 7:
              // then
              $async$temp1 = A;
              $async$temp2 = $async$self.apiClient;
              $async$goto = 10;
              return A._asyncAwait(A.decodeBodyBytes(response), $async$getWellKnownVersion$0);
            case 10:
              // returning from await.
              $async$goto = 9;
              return A._asyncAwait($async$temp2.deserializeAsync$2($async$result, "String"), $async$getWellKnownVersion$0);
            case 9:
              // returning from await.
              $async$returnValue = $async$temp1._asString($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              throw A.wrapException(A.ApiException$(t1, "Received an empty body (not in a 204)"));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$getWellKnownVersion$0, $async$completer);
    }
  };
  A.ApiClient.prototype = {
    invokeAPI$8(path, method, queryParams, body, headerParams, formParams, contentType, authNames) {
      var t1 = type$.Map_String_String;
      return this.invokeAPI$body$ApiClient(path, method, type$.List_QueryParam._as(queryParams), body, t1._as(headerParams), t1._as(formParams), contentType, type$.List_String._as(authNames));
    },
    invokeAPI$body$ApiClient(path, method, queryParams, body, headerParams, formParams, contentType, authNames) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, uri, msgBody, nullableHeaderParams, request, response, error, trace, error0, trace0, t1, urlEncodedQueryParams, queryString, t2, exception, $async$exception;
      var $async$invokeAPI$8 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._updateParamsForAuth$3(authNames, queryParams, headerParams);
              headerParams.addAll$1(0, $async$self._defaultHeaderMap);
              if (contentType != null)
                headerParams.$indexSet(0, "Content-Type", contentType);
              t1 = A._arrayInstanceType(queryParams);
              urlEncodedQueryParams = new A.MappedListIterable(queryParams, t1._eval$1("String(1)")._as(new A.ApiClient_invokeAPI_closure()), t1._eval$1("MappedListIterable<1,String>"));
              queryString = !urlEncodedQueryParams.get$isEmpty(urlEncodedQueryParams) ? "?" + urlEncodedQueryParams.join$1(0, "&") : "";
              uri = A.Uri_parse($async$self.basePath + path + queryString);
              $async$handler = 4;
              $async$goto = contentType === "application/x-www-form-urlencoded" ? 7 : 9;
              break;
            case 7:
              // then
              $async$result = formParams;
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              $async$goto = 10;
              return A._asyncAwait($async$self.serializeAsync$1(body), $async$invokeAPI$8);
            case 10:
              // returning from await.
            case 8:
              // join
              msgBody = $async$result;
              nullableHeaderParams = headerParams.__js_helper$_length === 0 ? null : headerParams;
              $async$goto = method === "POST" ? 11 : 12;
              break;
            case 11:
              // then
              request = A.Request$(method, uri);
              request.headers.addAll$1(0, headerParams);
              t1 = request;
              t2 = type$.List_int._as(A.JsonUtf8Encoder$(null, null, null).convert$1(body));
              t1._checkFinalized$0();
              t1._bodyBytes = A.toUint8List(t2);
              $async$goto = 13;
              return A._asyncAwait($async$self._client.send$1(0, request), $async$invokeAPI$8);
            case 13:
              // returning from await.
              response = $async$result;
              t2 = A.Response_fromStream(response);
              $async$returnValue = t2;
              // goto return
              $async$goto = 1;
              break;
            case 12:
              // join
            case 14:
              // switch
              switch (method) {
                case "PUT":
                  // goto case
                  $async$goto = 16;
                  break;
                case "DELETE":
                  // goto case
                  $async$goto = 17;
                  break;
                case "PATCH":
                  // goto case
                  $async$goto = 18;
                  break;
                case "HEAD":
                  // goto case
                  $async$goto = 19;
                  break;
                case "GET":
                  // goto case
                  $async$goto = 20;
                  break;
                default:
                  // goto after switch
                  $async$goto = 15;
                  break;
              }
              break;
            case 16:
              // case
              $async$goto = 21;
              return A._asyncAwait($async$self._client.put$3$body$headers(uri, msgBody, nullableHeaderParams), $async$invokeAPI$8);
            case 21:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 17:
              // case
              $async$goto = 22;
              return A._asyncAwait($async$self._client.delete$3$body$headers(uri, msgBody, nullableHeaderParams), $async$invokeAPI$8);
            case 22:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 18:
              // case
              $async$goto = 23;
              return A._asyncAwait($async$self._client.patch$3$body$headers(uri, msgBody, nullableHeaderParams), $async$invokeAPI$8);
            case 23:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 19:
              // case
              $async$goto = 24;
              return A._asyncAwait($async$self._client.head$2$headers(0, uri, nullableHeaderParams), $async$invokeAPI$8);
            case 24:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 20:
              // case
              $async$goto = 25;
              return A._asyncAwait($async$self._client.$get$2$headers(uri, nullableHeaderParams), $async$invokeAPI$8);
            case 25:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 15:
              // after switch
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = A.unwrapException($async$exception);
              if (t1 instanceof A.ClientException) {
                error = t1;
                trace = A.getTraceFromException($async$exception);
                throw A.wrapException(A.ApiException$withInner(400, "HTTP connection failed: " + method + " " + path, error, trace));
              } else if (type$.Exception._is(t1)) {
                error0 = t1;
                trace0 = A.getTraceFromException($async$exception);
                throw A.wrapException(A.ApiException$withInner(400, "Exception occurred: " + method + " " + path, error0, trace0));
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              throw A.wrapException(A.ApiException$(400, "Invalid HTTP operation: " + method + " " + path));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$invokeAPI$8, $async$completer);
    },
    deserializeAsync$2(json, targetType) {
      return this.deserializeAsync$body$ApiClient(A._asString(json), targetType);
    },
    deserializeAsync$body$ApiClient(json, targetType) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue;
      var $async$deserializeAsync$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              targetType = A.stringReplaceAllUnchecked(targetType, " ", "");
              $async$returnValue = targetType === "String" ? json : A.ApiClient__deserialize(B.C_JsonCodec.decode$2$reviver(0, json, null), targetType, false);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$deserializeAsync$2, $async$completer);
    },
    serializeAsync$1(value) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue;
      var $async$serializeAsync$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = value == null ? "" : B.C_JsonCodec.encode$1(value);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$serializeAsync$1, $async$completer);
    },
    _updateParamsForAuth$3(authNames, queryParams, headerParams) {
      var t1, _i, authName;
      type$.List_String._as(authNames);
      type$.List_QueryParam._as(queryParams);
      type$.Map_String_String._as(headerParams);
      for (t1 = this._authentications, _i = 0; false; ++_i) {
        authName = authNames[_i];
        if (t1.$index(0, authName) == null)
          throw A.wrapException(A.ArgumentError$("Authentication undefined: " + A.S(authName), null));
      }
    }
  };
  A.ApiClient_invokeAPI_closure.prototype = {
    call$1(param) {
      return type$.QueryParam._as(param).toString$0(0);
    },
    $signature: 29
  };
  A.ApiClient__deserialize_closure.prototype = {
    call$1(v) {
      return A.ApiClient__deserialize(v, A._asString(this._box_0.match), this.growable);
    },
    $signature: 1
  };
  A.ApiClient__deserialize_closure0.prototype = {
    call$1(v) {
      return A.ApiClient__deserialize(v, A._asString(this._box_0.match), this.growable);
    },
    $signature: 1
  };
  A.ApiClient__deserialize_closure1.prototype = {
    call$1(v) {
      return A.ApiClient__deserialize(v, A._asString(this._box_0.match), this.growable);
    },
    $signature: 1
  };
  A.ApiException.prototype = {
    toString$0(_) {
      var t2, _this = this,
        t1 = _this.message;
      if (t1 == null)
        return "ApiException";
      t2 = _this.innerException;
      if (t2 == null)
        return "ApiException " + _this.code + ": " + t1;
      return "ApiException " + _this.code + ": " + t1 + " (Inner exception: " + t2.toString$0(0) + ")\n\n" + A.S(_this.stackTrace);
    },
    $isException: 1
  };
  A.OAuth.prototype = {$isAuthentication: 1};
  A.BaseClient.prototype = {
    head$2$headers(_, url, headers) {
      return this._sendUnstreamed$3("HEAD", url, type$.nullable_Map_String_String._as(headers));
    },
    $get$2$headers(url, headers) {
      return this._sendUnstreamed$3("GET", url, type$.nullable_Map_String_String._as(headers));
    },
    put$3$body$headers(url, body, headers) {
      return this._sendUnstreamed$5("PUT", url, type$.nullable_Map_String_String._as(headers), body, null);
    },
    patch$3$body$headers(url, body, headers) {
      return this._sendUnstreamed$5("PATCH", url, type$.nullable_Map_String_String._as(headers), body, null);
    },
    delete$3$body$headers(url, body, headers) {
      return this._sendUnstreamed$5("DELETE", url, type$.nullable_Map_String_String._as(headers), body, null);
    },
    _sendUnstreamed$5(method, url, headers, body, encoding) {
      return this._sendUnstreamed$body$BaseClient(method, url, type$.nullable_Map_String_String._as(headers), body, encoding);
    },
    _sendUnstreamed$3(method, url, headers) {
      return this._sendUnstreamed$5(method, url, headers, null, null);
    },
    _sendUnstreamed$body$BaseClient(method, url, headers, body, encoding) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this, t1, contentType, request, $async$temp1;
      var $async$_sendUnstreamed$5 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              request = A.Request$(method, url);
              if (headers != null)
                request.headers.addAll$1(0, headers);
              if (body != null)
                if (typeof body == "string")
                  request.set$body(0, body);
                else if (type$.List_dynamic._is(body)) {
                  t1 = type$.List_int._as(J.cast$1$0$ax(body, type$.int));
                  request._checkFinalized$0();
                  request._bodyBytes = A.toUint8List(t1);
                } else if (type$.Map_dynamic_dynamic._is(body)) {
                  t1 = type$.String;
                  t1 = type$.Map_String_String._as(body.cast$2$0(0, t1, t1));
                  contentType = request.get$_contentType();
                  if (contentType == null)
                    request.set$_contentType(A.MediaType$("application", "x-www-form-urlencoded", null));
                  else if (contentType.type + "/" + contentType.subtype !== "application/x-www-form-urlencoded")
                    A.throwExpression(A.StateError$('Cannot set the body fields of a Request with content-type "' + contentType.get$mimeType() + '".'));
                  request.set$body(0, A.mapToQuery(t1, request.get$encoding(request)));
                } else
                  throw A.wrapException(A.ArgumentError$('Invalid request body "' + A.S(body) + '".', null));
              $async$temp1 = A;
              $async$goto = 3;
              return A._asyncAwait($async$self.send$1(0, request), $async$_sendUnstreamed$5);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.Response_fromStream($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_sendUnstreamed$5, $async$completer);
    },
    close$0(_) {
    },
    $isClient: 1
  };
  A.BaseRequest.prototype = {
    finalize$0() {
      if (this._finalized)
        throw A.wrapException(A.StateError$("Can't finalize a finalized Request."));
      this._finalized = true;
      return B.ByteStream__EmptyStream;
    },
    toString$0(_) {
      return this.method + " " + this.url.toString$0(0);
    }
  };
  A.BaseRequest_closure.prototype = {
    call$2(key1, key2) {
      return A._asString(key1).toLowerCase() === A._asString(key2).toLowerCase();
    },
    $signature: 44
  };
  A.BaseRequest_closure0.prototype = {
    call$1(key) {
      return B.JSString_methods.get$hashCode(A._asString(key).toLowerCase());
    },
    $signature: 45
  };
  A.BaseResponse.prototype = {
    BaseResponse$7$contentLength$headers$isRedirect$persistentConnection$reasonPhrase$request(statusCode, contentLength, headers, isRedirect, persistentConnection, reasonPhrase, request) {
      var t1 = this.statusCode;
      if (t1 < 100)
        throw A.wrapException(A.ArgumentError$("Invalid status code " + t1 + ".", null));
      else {
        t1 = this.contentLength;
        if (t1 != null && t1 < 0)
          throw A.wrapException(A.ArgumentError$("Invalid content length " + A.S(t1) + ".", null));
      }
    }
  };
  A.BrowserClient.prototype = {
    send$1(_, request) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.StreamedResponse),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, completer, t2, t3, t4, t5, bytes, xhr, t1;
      var $async$send$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(request.finalize$0().toBytes$0(), $async$send$1);
            case 3:
              // returning from await.
              bytes = $async$result;
              xhr = new XMLHttpRequest();
              t1 = $async$self._xhrs;
              t1.add$1(0, xhr);
              t2 = xhr;
              t3 = J.getInterceptor$x(t2);
              t3.open$3$async(t2, request.method, request.url.toString$0(0), true);
              t2.responseType = "arraybuffer";
              t3.set$withCredentials(t2, false);
              request.headers.forEach$1(0, J.get$setRequestHeader$x(xhr));
              completer = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_StreamedResponse), type$._AsyncCompleter_StreamedResponse);
              t2 = type$.nullable_EventTarget;
              t3 = type$._EventStream_ProgressEvent;
              t4 = new A._EventStream(t2._as(xhr), "load", false, t3);
              t5 = type$.void;
              t4.get$first(t4).then$1$1(new A.BrowserClient_send_closure(xhr, completer, request), t5);
              t3 = new A._EventStream(t2._as(xhr), "error", false, t3);
              t3.get$first(t3).then$1$1(new A.BrowserClient_send_closure0(completer, request), t5);
              J.send$1$x(xhr, bytes);
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(completer.future, $async$send$1);
            case 7:
              // returning from await.
              t2 = $async$result;
              $async$returnValue = t2;
              $async$next = [1];
              // goto finally
              $async$goto = 5;
              break;
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // uncaught
              $async$next = [2];
            case 5:
              // finally
              $async$handler = 2;
              t1.remove$1(0, xhr);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$send$1, $async$completer);
    },
    close$0(_) {
      var t1, t2, t3;
      for (t1 = this._xhrs, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        (t3 == null ? t2._as(t3) : t3).abort();
      }
    }
  };
  A.BrowserClient_send_closure.prototype = {
    call$1(_) {
      var t1, body, t2, t3;
      type$.ProgressEvent._as(_);
      t1 = this.xhr;
      body = A.NativeUint8List_NativeUint8List$view(type$.ByteBuffer._as(A._convertNativeToDart_XHR_Response(t1.response)), 0, null);
      t2 = A.Stream_Stream$value(body, type$.List_int);
      t3 = t1.status;
      t3.toString;
      this.completer.complete$1(0, A.StreamedResponse$(new A.ByteStream(t2), t3, body.length, B.HttpRequest_methods.get$responseHeaders(t1), t1.statusText, this.request));
    },
    $signature: 42
  };
  A.BrowserClient_send_closure0.prototype = {
    call$1(_) {
      type$.ProgressEvent._as(_);
      this.completer.completeError$2(new A.ClientException("XMLHttpRequest error."), A.StackTrace_current());
    },
    $signature: 42
  };
  A.ByteStream.prototype = {
    toBytes$0() {
      var t1 = new A._Future($.Zone__current, type$._Future_Uint8List),
        completer = new A._AsyncCompleter(t1, type$._AsyncCompleter_Uint8List),
        sink = new A._ByteCallbackSink(new A.ByteStream_toBytes_closure(completer), new Uint8Array(1024));
      this.listen$4$cancelOnError$onDone$onError(type$.void_Function_List_int._as(sink.get$add(sink)), true, sink.get$close(sink), completer.get$completeError());
      return t1;
    }
  };
  A.ByteStream_toBytes_closure.prototype = {
    call$1(bytes) {
      return this.completer.complete$1(0, new Uint8Array(A._ensureNativeList(type$.List_int._as(bytes))));
    },
    $signature: 47
  };
  A.ClientException.prototype = {
    toString$0(_) {
      return this.message;
    },
    $isException: 1
  };
  A.Request.prototype = {
    get$encoding(_) {
      var t1, t2, _this = this;
      if (_this.get$_contentType() == null || !_this.get$_contentType().parameters._collection$_map.containsKey$1("charset"))
        return _this._defaultEncoding;
      t1 = _this.get$_contentType().parameters._collection$_map.$index(0, "charset");
      t1.toString;
      t2 = A.Encoding_getByName(t1);
      return t2 == null ? A.throwExpression(A.FormatException$('Unsupported encoding "' + t1 + '".', null, null)) : t2;
    },
    set$body(_, value) {
      var contentType, t2, _this = this,
        t1 = type$.List_int._as(_this.get$encoding(_this).encode$1(value));
      _this._checkFinalized$0();
      _this._bodyBytes = A.toUint8List(t1);
      contentType = _this.get$_contentType();
      if (contentType == null) {
        t1 = _this.get$encoding(_this);
        t2 = type$.String;
        _this.set$_contentType(A.MediaType$("text", "plain", A.LinkedHashMap_LinkedHashMap$_literal(["charset", t1.get$name(t1)], t2, t2)));
      } else if (!contentType.parameters._collection$_map.containsKey$1("charset")) {
        t1 = _this.get$encoding(_this);
        t2 = type$.String;
        _this.set$_contentType(contentType.change$1$parameters(A.LinkedHashMap_LinkedHashMap$_literal(["charset", t1.get$name(t1)], t2, t2)));
      }
    },
    finalize$0() {
      this.super$BaseRequest$finalize();
      return new A.ByteStream(A.Stream_Stream$value(this._bodyBytes, type$.List_int));
    },
    get$_contentType() {
      var contentType = this.headers.$index(0, "content-type");
      if (contentType == null)
        return null;
      return A.MediaType_MediaType$parse(contentType);
    },
    set$_contentType(value) {
      this.headers.$indexSet(0, "content-type", value.toString$0(0));
    },
    _checkFinalized$0() {
      if (!this._finalized)
        return;
      throw A.wrapException(A.StateError$("Can't modify a finalized Request."));
    }
  };
  A.Response.prototype = {};
  A.StreamedRequest.prototype = {
    finalize$0() {
      this.super$BaseRequest$finalize();
      var t1 = this._streamed_request$_controller;
      return new A.ByteStream(new A._ControllerStream(t1, A._instanceType(t1)._eval$1("_ControllerStream<1>")));
    }
  };
  A.StreamedResponse.prototype = {};
  A.mapToQuery_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      A._asString(key);
      A._asString(value);
      t1 = this.encoding;
      t2 = A._Uri__uriEncode(B.List_nxB, key, t1, true);
      return B.JSArray_methods.add$1(this.pairs, A._setArrayType([t2, A._Uri__uriEncode(B.List_nxB, value, t1, true)], type$.JSArray_String));
    },
    $signature: 17
  };
  A.mapToQuery_closure0.prototype = {
    call$1(pair) {
      var t1;
      type$.List_String._as(pair);
      t1 = J.getInterceptor$asx(pair);
      return A.S(t1.$index(pair, 0)) + "=" + A.S(t1.$index(pair, 1));
    },
    $signature: 48
  };
  A.CaseInsensitiveMap.prototype = {};
  A.CaseInsensitiveMap$from_closure.prototype = {
    call$1(key) {
      return A._asString(key).toLowerCase();
    },
    $signature: 6
  };
  A.MediaType.prototype = {
    get$mimeType() {
      return this.type + "/" + this.subtype;
    },
    change$1$parameters(parameters) {
      var t1, parameters0;
      type$.nullable_Map_String_String._as(parameters);
      t1 = type$.String;
      parameters0 = A.LinkedHashMap_LinkedHashMap$from(this.parameters, t1, t1);
      parameters0.addAll$1(0, parameters);
      return A.MediaType$(this.type, this.subtype, parameters0);
    },
    toString$0(_) {
      var buffer = new A.StringBuffer(""),
        t1 = "" + this.type;
      buffer._contents = t1;
      t1 += "/";
      buffer._contents = t1;
      buffer._contents = t1 + this.subtype;
      t1 = this.parameters;
      t1._collection$_map.forEach$1(0, t1.$ti._eval$1("~(MapView.K,MapView.V)")._as(new A.MediaType_toString_closure(buffer)));
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.MediaType_MediaType$parse_closure.prototype = {
    call$0() {
      var t3, t4, t5, t6, parameters, t7, t8, success, t9, value,
        t1 = this.mediaType,
        scanner = new A.StringScanner(null, t1),
        t2 = $.$get$whitespace();
      scanner.scan$1(t2);
      t3 = $.$get$token();
      scanner.expect$1(t3);
      t4 = scanner.get$lastMatch().$index(0, 0);
      t4.toString;
      scanner.expect$1("/");
      scanner.expect$1(t3);
      t5 = scanner.get$lastMatch().$index(0, 0);
      t5.toString;
      scanner.scan$1(t2);
      t6 = type$.String;
      parameters = A.LinkedHashMap_LinkedHashMap$_empty(t6, t6);
      t6 = type$.Pattern;
      while (true) {
        t7 = scanner._lastMatch = B.JSString_methods.matchAsPrefix$2(";", t1, scanner._string_scanner$_position);
        t8 = scanner._lastMatchPosition = scanner._string_scanner$_position;
        success = t7 != null;
        t7 = success ? scanner._lastMatchPosition = scanner._string_scanner$_position = t7.get$end() : t8;
        if (!success)
          break;
        t6._as(t2);
        t7 = scanner._lastMatch = t2.matchAsPrefix$2(0, t1, t7);
        scanner._lastMatchPosition = scanner._string_scanner$_position;
        if (t7 != null)
          scanner._lastMatchPosition = scanner._string_scanner$_position = t7.get$end();
        scanner.expect$1(t3);
        if (scanner._string_scanner$_position !== scanner._lastMatchPosition)
          scanner._lastMatch = null;
        t7 = scanner._lastMatch.$index(0, 0);
        t7.toString;
        scanner.expect$1("=");
        t8 = scanner._lastMatch = t6._as(t3).matchAsPrefix$2(0, t1, scanner._string_scanner$_position);
        t9 = scanner._lastMatchPosition = scanner._string_scanner$_position;
        success = t8 != null;
        if (success) {
          t8 = scanner._lastMatchPosition = scanner._string_scanner$_position = t8.get$end();
          t9 = t8;
        } else
          t8 = t9;
        if (success) {
          if (t8 !== t9)
            scanner._lastMatch = null;
          t8 = scanner._lastMatch.$index(0, 0);
          t8.toString;
          value = t8;
        } else
          value = A.expectQuotedString(scanner);
        t8 = scanner._lastMatch = t2.matchAsPrefix$2(0, t1, scanner._string_scanner$_position);
        scanner._lastMatchPosition = scanner._string_scanner$_position;
        if (t8 != null)
          scanner._lastMatchPosition = scanner._string_scanner$_position = t8.get$end();
        parameters.$indexSet(0, t7, value);
      }
      scanner.expectDone$0();
      return A.MediaType$(t4, t5, parameters);
    },
    $signature: 49
  };
  A.MediaType_toString_closure.prototype = {
    call$2(attribute, value) {
      var t1, t2, t3;
      A._asString(attribute);
      A._asString(value);
      t1 = this.buffer;
      t1._contents += "; " + attribute + "=";
      t2 = $.$get$nonToken()._nativeRegExp;
      t2 = t2.test(value);
      t3 = t1._contents;
      if (t2) {
        t1._contents = t3 + '"';
        t2 = t1._contents += A.stringReplaceAllFuncUnchecked(value, type$.Pattern._as($.$get$_escapedChar()), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(new A.MediaType_toString__closure())), type$.nullable_String_Function_String._as(null));
        t1._contents = t2 + '"';
      } else
        t1._contents = t3 + value;
    },
    $signature: 17
  };
  A.MediaType_toString__closure.prototype = {
    call$1(match) {
      return "\\" + A.S(match.$index(0, 0));
    },
    $signature: 41
  };
  A.expectQuotedString_closure.prototype = {
    call$1(match) {
      var t1 = match.$index(0, 1);
      t1.toString;
      return t1;
    },
    $signature: 41
  };
  A.Context.prototype = {
    absolute$7(_, part1, part2, part3, part4, part5, part6, part7) {
      var t1;
      A._validateArgList("absolute", A._setArrayType([part1, part2, part3, part4, part5, part6, part7], type$.JSArray_nullable_String));
      t1 = this.style;
      t1 = t1.rootLength$1(part1) > 0 && !t1.isRootRelative$1(part1);
      if (t1)
        return part1;
      t1 = this._context$_current;
      return this.join$8(0, t1 == null ? A.current() : t1, part1, part2, part3, part4, part5, part6, part7);
    },
    absolute$1($receiver, part1) {
      return this.absolute$7($receiver, part1, null, null, null, null, null, null);
    },
    join$8(_, part1, part2, part3, part4, part5, part6, part7, part8) {
      var parts = A._setArrayType([part1, part2, part3, part4, part5, part6, part7, part8], type$.JSArray_nullable_String);
      A._validateArgList("join", parts);
      return this.joinAll$1(new A.WhereTypeIterable(parts, type$.WhereTypeIterable_String));
    },
    join$2($receiver, part1, part2) {
      return this.join$8($receiver, part1, part2, null, null, null, null, null, null);
    },
    joinAll$1(parts) {
      var t1, t2, t3, needsSeparator, isAbsoluteAndNotRootRelative, t4, t5, parsed, path, t6;
      type$.Iterable_String._as(parts);
      for (t1 = parts.$ti, t2 = t1._eval$1("bool(Iterable.E)")._as(new A.Context_joinAll_closure()), t3 = parts.get$iterator(parts), t1 = new A.WhereIterator(t3, t2, t1._eval$1("WhereIterator<Iterable.E>")), t2 = this.style, needsSeparator = false, isAbsoluteAndNotRootRelative = false, t4 = ""; t1.moveNext$0();) {
        t5 = t3.get$current();
        if (t2.isRootRelative$1(t5) && isAbsoluteAndNotRootRelative) {
          parsed = A.ParsedPath_ParsedPath$parse(t5, t2);
          path = t4.charCodeAt(0) == 0 ? t4 : t4;
          t4 = B.JSString_methods.substring$2(path, 0, t2.rootLength$2$withDrive(path, true));
          parsed.root = t4;
          if (t2.needsSeparator$1(t4))
            B.JSArray_methods.$indexSet(parsed.separators, 0, t2.get$separator());
          t4 = "" + parsed.toString$0(0);
        } else if (t2.rootLength$1(t5) > 0) {
          isAbsoluteAndNotRootRelative = !t2.isRootRelative$1(t5);
          t4 = "" + t5;
        } else {
          t6 = t5.length;
          if (t6 !== 0) {
            if (0 >= t6)
              return A.ioore(t5, 0);
            t6 = t2.containsSeparator$1(t5[0]);
          } else
            t6 = false;
          if (!t6)
            if (needsSeparator)
              t4 += t2.get$separator();
          t4 += t5;
        }
        needsSeparator = t2.needsSeparator$1(t5);
      }
      return t4.charCodeAt(0) == 0 ? t4 : t4;
    },
    split$1(_, path) {
      var parsed = A.ParsedPath_ParsedPath$parse(path, this.style),
        t1 = parsed.parts,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("WhereIterable<1>");
      parsed.set$parts(A.List_List$of(new A.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Context_split_closure()), t3), true, t3._eval$1("Iterable.E")));
      t1 = parsed.root;
      if (t1 != null)
        B.JSArray_methods.insert$2(parsed.parts, 0, t1);
      return parsed.parts;
    },
    normalize$1(path) {
      var parsed;
      if (!this._needsNormalization$1(path))
        return path;
      parsed = A.ParsedPath_ParsedPath$parse(path, this.style);
      parsed.normalize$0();
      return parsed.toString$0(0);
    },
    _needsNormalization$1(path) {
      var i, start, previous, t2, t3, previousPrevious, codeUnit, t4,
        t1 = this.style,
        root = t1.rootLength$1(path);
      if (root !== 0) {
        if (t1 === $.$get$Style_windows())
          for (i = 0; i < root; ++i)
            if (B.JSString_methods._codeUnitAt$1(path, i) === 47)
              return true;
        start = root;
        previous = 47;
      } else {
        start = 0;
        previous = null;
      }
      for (t2 = new A.CodeUnits(path).__internal$_string, t3 = t2.length, i = start, previousPrevious = null; i < t3; ++i, previousPrevious = previous, previous = codeUnit) {
        codeUnit = B.JSString_methods.codeUnitAt$1(t2, i);
        if (t1.isSeparator$1(codeUnit)) {
          if (t1 === $.$get$Style_windows() && codeUnit === 47)
            return true;
          if (previous != null && t1.isSeparator$1(previous))
            return true;
          if (previous === 46)
            t4 = previousPrevious == null || previousPrevious === 46 || t1.isSeparator$1(previousPrevious);
          else
            t4 = false;
          if (t4)
            return true;
        }
      }
      if (previous == null)
        return true;
      if (t1.isSeparator$1(previous))
        return true;
      if (previous === 46)
        t1 = previousPrevious == null || t1.isSeparator$1(previousPrevious) || previousPrevious === 46;
      else
        t1 = false;
      if (t1)
        return true;
      return false;
    },
    relative$1(path) {
      var from, fromParsed, pathParsed, t3, t4, t5, _this = this,
        _s26_ = 'Unable to find a path to "',
        t1 = _this.style,
        t2 = t1.rootLength$1(path);
      if (t2 <= 0)
        return _this.normalize$1(path);
      t2 = _this._context$_current;
      from = t2 == null ? A.current() : t2;
      if (t1.rootLength$1(from) <= 0 && t1.rootLength$1(path) > 0)
        return _this.normalize$1(path);
      if (t1.rootLength$1(path) <= 0 || t1.isRootRelative$1(path))
        path = _this.absolute$1(0, path);
      if (t1.rootLength$1(path) <= 0 && t1.rootLength$1(from) > 0)
        throw A.wrapException(A.PathException$(_s26_ + path + '" from "' + from + '".'));
      fromParsed = A.ParsedPath_ParsedPath$parse(from, t1);
      fromParsed.normalize$0();
      pathParsed = A.ParsedPath_ParsedPath$parse(path, t1);
      pathParsed.normalize$0();
      t2 = fromParsed.parts;
      t3 = t2.length;
      if (t3 !== 0) {
        if (0 >= t3)
          return A.ioore(t2, 0);
        t2 = J.$eq$(t2[0], ".");
      } else
        t2 = false;
      if (t2)
        return pathParsed.toString$0(0);
      t2 = fromParsed.root;
      t3 = pathParsed.root;
      if (t2 != t3)
        t2 = t2 == null || t3 == null || !t1.pathsEqual$2(t2, t3);
      else
        t2 = false;
      if (t2)
        return pathParsed.toString$0(0);
      while (true) {
        t2 = fromParsed.parts;
        t3 = t2.length;
        if (t3 !== 0) {
          t4 = pathParsed.parts;
          t5 = t4.length;
          if (t5 !== 0) {
            if (0 >= t3)
              return A.ioore(t2, 0);
            t2 = t2[0];
            if (0 >= t5)
              return A.ioore(t4, 0);
            t4 = t1.pathsEqual$2(t2, t4[0]);
            t2 = t4;
          } else
            t2 = false;
        } else
          t2 = false;
        if (!t2)
          break;
        B.JSArray_methods.removeAt$1(fromParsed.parts, 0);
        B.JSArray_methods.removeAt$1(fromParsed.separators, 1);
        B.JSArray_methods.removeAt$1(pathParsed.parts, 0);
        B.JSArray_methods.removeAt$1(pathParsed.separators, 1);
      }
      t2 = fromParsed.parts;
      t3 = t2.length;
      if (t3 !== 0) {
        if (0 >= t3)
          return A.ioore(t2, 0);
        t2 = J.$eq$(t2[0], "..");
      } else
        t2 = false;
      if (t2)
        throw A.wrapException(A.PathException$(_s26_ + path + '" from "' + from + '".'));
      t2 = type$.String;
      B.JSArray_methods.insertAll$2(pathParsed.parts, 0, A.List_List$filled(fromParsed.parts.length, "..", false, t2));
      B.JSArray_methods.$indexSet(pathParsed.separators, 0, "");
      B.JSArray_methods.insertAll$2(pathParsed.separators, 1, A.List_List$filled(fromParsed.parts.length, t1.get$separator(), false, t2));
      t1 = pathParsed.parts;
      t2 = t1.length;
      if (t2 === 0)
        return ".";
      if (t2 > 1 && J.$eq$(B.JSArray_methods.get$last(t1), ".")) {
        B.JSArray_methods.removeLast$0(pathParsed.parts);
        t1 = pathParsed.separators;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        B.JSArray_methods.add$1(t1, "");
      }
      pathParsed.root = "";
      pathParsed.removeTrailingSeparators$0();
      return pathParsed.toString$0(0);
    },
    toUri$1(path) {
      var t2,
        t1 = this.style;
      if (t1.rootLength$1(path) <= 0)
        return t1.relativePathToUri$1(path);
      else {
        t2 = this._context$_current;
        return t1.absolutePathToUri$1(this.join$2(0, t2 == null ? A.current() : t2, path));
      }
    },
    prettyUri$1(uri) {
      var path, rel, _this = this,
        typedUri = A._parseUri(uri);
      if (typedUri.get$scheme() === "file" && _this.style === $.$get$Style_url())
        return typedUri.toString$0(0);
      else if (typedUri.get$scheme() !== "file" && typedUri.get$scheme() !== "" && _this.style !== $.$get$Style_url())
        return typedUri.toString$0(0);
      path = _this.normalize$1(_this.style.pathFromUri$1(A._parseUri(typedUri)));
      rel = _this.relative$1(path);
      return _this.split$1(0, rel).length > _this.split$1(0, path).length ? path : rel;
    }
  };
  A.Context_joinAll_closure.prototype = {
    call$1(part) {
      return A._asString(part) !== "";
    },
    $signature: 2
  };
  A.Context_split_closure.prototype = {
    call$1(part) {
      return A._asString(part).length !== 0;
    },
    $signature: 2
  };
  A._validateArgList_closure.prototype = {
    call$1(arg) {
      A._asStringQ(arg);
      return arg == null ? "null" : '"' + arg + '"';
    },
    $signature: 52
  };
  A.InternalStyle.prototype = {
    getRoot$1(path) {
      var t1,
        $length = this.rootLength$1(path);
      if ($length > 0)
        return B.JSString_methods.substring$2(path, 0, $length);
      if (this.isRootRelative$1(path)) {
        if (0 >= path.length)
          return A.ioore(path, 0);
        t1 = path[0];
      } else
        t1 = null;
      return t1;
    },
    relativePathToUri$1(path) {
      var segments, _null = null,
        t1 = path.length;
      if (t1 === 0)
        return A._Uri__Uri(_null, _null, _null, _null);
      segments = A.Context_Context(this).split$1(0, path);
      if (this.isSeparator$1(B.JSString_methods.codeUnitAt$1(path, t1 - 1)))
        B.JSArray_methods.add$1(segments, "");
      return A._Uri__Uri(_null, _null, segments, _null);
    },
    pathsEqual$2(path1, path2) {
      return path1 === path2;
    }
  };
  A.ParsedPath.prototype = {
    get$hasTrailingSeparator() {
      var t1 = this.parts;
      if (t1.length !== 0)
        t1 = J.$eq$(B.JSArray_methods.get$last(t1), "") || !J.$eq$(B.JSArray_methods.get$last(this.separators), "");
      else
        t1 = false;
      return t1;
    },
    removeTrailingSeparators$0() {
      var t1, t2, _this = this;
      while (true) {
        t1 = _this.parts;
        if (!(t1.length !== 0 && J.$eq$(B.JSArray_methods.get$last(t1), "")))
          break;
        B.JSArray_methods.removeLast$0(_this.parts);
        t1 = _this.separators;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      }
      t1 = _this.separators;
      t2 = t1.length;
      if (t2 !== 0)
        B.JSArray_methods.$indexSet(t1, t2 - 1, "");
    },
    normalize$0() {
      var t1, t2, leadingDoubles, _i, part, t3, _this = this,
        newParts = A._setArrayType([], type$.JSArray_String);
      for (t1 = _this.parts, t2 = t1.length, leadingDoubles = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        part = t1[_i];
        t3 = J.getInterceptor$(part);
        if (!(t3.$eq(part, ".") || t3.$eq(part, "")))
          if (t3.$eq(part, "..")) {
            t3 = newParts.length;
            if (t3 !== 0) {
              if (0 >= t3)
                return A.ioore(newParts, -1);
              newParts.pop();
            } else
              ++leadingDoubles;
          } else
            B.JSArray_methods.add$1(newParts, part);
      }
      if (_this.root == null)
        B.JSArray_methods.insertAll$2(newParts, 0, A.List_List$filled(leadingDoubles, "..", false, type$.String));
      if (newParts.length === 0 && _this.root == null)
        B.JSArray_methods.add$1(newParts, ".");
      _this.set$parts(newParts);
      t1 = _this.style;
      _this.set$separators(A.List_List$filled(newParts.length + 1, t1.get$separator(), true, type$.String));
      t2 = _this.root;
      if (t2 == null || newParts.length === 0 || !t1.needsSeparator$1(t2))
        B.JSArray_methods.$indexSet(_this.separators, 0, "");
      t2 = _this.root;
      if (t2 != null && t1 === $.$get$Style_windows()) {
        t2.toString;
        _this.root = A.stringReplaceAllUnchecked(t2, "/", "\\");
      }
      _this.removeTrailingSeparators$0();
    },
    toString$0(_) {
      var i, t2, t3, _this = this,
        t1 = _this.root;
      t1 = t1 != null ? "" + t1 : "";
      for (i = 0; i < _this.parts.length; ++i, t1 = t3) {
        t2 = _this.separators;
        if (!(i < t2.length))
          return A.ioore(t2, i);
        t2 = A.S(t2[i]);
        t3 = _this.parts;
        if (!(i < t3.length))
          return A.ioore(t3, i);
        t3 = t1 + t2 + A.S(t3[i]);
      }
      t1 += A.S(B.JSArray_methods.get$last(_this.separators));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    set$parts(parts) {
      this.parts = type$.List_String._as(parts);
    },
    set$separators(separators) {
      this.separators = type$.List_String._as(separators);
    }
  };
  A.PathException.prototype = {
    toString$0(_) {
      return "PathException: " + this.message;
    },
    $isException: 1
  };
  A.Style.prototype = {
    toString$0(_) {
      return this.get$name(this);
    }
  };
  A.PosixStyle.prototype = {
    containsSeparator$1(path) {
      return B.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47;
    },
    needsSeparator$1(path) {
      var t1 = path.length;
      return t1 !== 0 && B.JSString_methods.codeUnitAt$1(path, t1 - 1) !== 47;
    },
    rootLength$2$withDrive(path, withDrive) {
      if (path.length !== 0 && B.JSString_methods._codeUnitAt$1(path, 0) === 47)
        return 1;
      return 0;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return false;
    },
    pathFromUri$1(uri) {
      var t1;
      if (uri.get$scheme() === "" || uri.get$scheme() === "file") {
        t1 = uri.get$path(uri);
        return A._Uri__uriDecode(t1, 0, t1.length, B.C_Utf8Codec, false);
      }
      throw A.wrapException(A.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'.", null));
    },
    absolutePathToUri$1(path) {
      var parsed = A.ParsedPath_ParsedPath$parse(path, this),
        t1 = parsed.parts;
      if (t1.length === 0)
        B.JSArray_methods.addAll$1(t1, A._setArrayType(["", ""], type$.JSArray_String));
      else if (parsed.get$hasTrailingSeparator())
        B.JSArray_methods.add$1(parsed.parts, "");
      return A._Uri__Uri(null, null, parsed.parts, "file");
    },
    get$name() {
      return "posix";
    },
    get$separator() {
      return "/";
    }
  };
  A.UrlStyle.prototype = {
    containsSeparator$1(path) {
      return B.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47;
    },
    needsSeparator$1(path) {
      var t1 = path.length;
      if (t1 === 0)
        return false;
      if (B.JSString_methods.codeUnitAt$1(path, t1 - 1) !== 47)
        return true;
      return B.JSString_methods.endsWith$1(path, "://") && this.rootLength$1(path) === t1;
    },
    rootLength$2$withDrive(path, withDrive) {
      var i, codeUnit, index, t2,
        t1 = path.length;
      if (t1 === 0)
        return 0;
      if (B.JSString_methods._codeUnitAt$1(path, 0) === 47)
        return 1;
      for (i = 0; i < t1; ++i) {
        codeUnit = B.JSString_methods._codeUnitAt$1(path, i);
        if (codeUnit === 47)
          return 0;
        if (codeUnit === 58) {
          if (i === 0)
            return 0;
          index = B.JSString_methods.indexOf$2(path, "/", B.JSString_methods.startsWith$2(path, "//", i + 1) ? i + 3 : i);
          if (index <= 0)
            return t1;
          if (!withDrive || t1 < index + 3)
            return index;
          if (!B.JSString_methods.startsWith$1(path, "file://"))
            return index;
          if (!A.isDriveLetter(path, index + 1))
            return index;
          t2 = index + 3;
          return t1 === t2 ? t2 : index + 4;
        }
      }
      return 0;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return path.length !== 0 && B.JSString_methods._codeUnitAt$1(path, 0) === 47;
    },
    pathFromUri$1(uri) {
      return uri.toString$0(0);
    },
    relativePathToUri$1(path) {
      return A.Uri_parse(path);
    },
    absolutePathToUri$1(path) {
      return A.Uri_parse(path);
    },
    get$name() {
      return "url";
    },
    get$separator() {
      return "/";
    }
  };
  A.WindowsStyle.prototype = {
    containsSeparator$1(path) {
      return B.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47 || codeUnit === 92;
    },
    needsSeparator$1(path) {
      var t1 = path.length;
      if (t1 === 0)
        return false;
      t1 = B.JSString_methods.codeUnitAt$1(path, t1 - 1);
      return !(t1 === 47 || t1 === 92);
    },
    rootLength$2$withDrive(path, withDrive) {
      var t2, index,
        t1 = path.length;
      if (t1 === 0)
        return 0;
      t2 = B.JSString_methods._codeUnitAt$1(path, 0);
      if (t2 === 47)
        return 1;
      if (t2 === 92) {
        if (t1 < 2 || B.JSString_methods._codeUnitAt$1(path, 1) !== 92)
          return 1;
        index = B.JSString_methods.indexOf$2(path, "\\", 2);
        if (index > 0) {
          index = B.JSString_methods.indexOf$2(path, "\\", index + 1);
          if (index > 0)
            return index;
        }
        return t1;
      }
      if (t1 < 3)
        return 0;
      if (!A.isAlphabetic(t2))
        return 0;
      if (B.JSString_methods._codeUnitAt$1(path, 1) !== 58)
        return 0;
      t1 = B.JSString_methods._codeUnitAt$1(path, 2);
      if (!(t1 === 47 || t1 === 92))
        return 0;
      return 3;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return this.rootLength$1(path) === 1;
    },
    pathFromUri$1(uri) {
      var path, t1;
      if (uri.get$scheme() !== "" && uri.get$scheme() !== "file")
        throw A.wrapException(A.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'.", null));
      path = uri.get$path(uri);
      if (uri.get$host(uri) === "") {
        if (path.length >= 3 && B.JSString_methods.startsWith$1(path, "/") && A.isDriveLetter(path, 1))
          path = B.JSString_methods.replaceFirst$2(path, "/", "");
      } else
        path = "\\\\" + uri.get$host(uri) + path;
      t1 = A.stringReplaceAllUnchecked(path, "/", "\\");
      return A._Uri__uriDecode(t1, 0, t1.length, B.C_Utf8Codec, false);
    },
    absolutePathToUri$1(path) {
      var rootParts, t2,
        parsed = A.ParsedPath_ParsedPath$parse(path, this),
        t1 = parsed.root;
      t1.toString;
      if (B.JSString_methods.startsWith$1(t1, "\\\\")) {
        rootParts = new A.WhereIterable(A._setArrayType(t1.split("\\"), type$.JSArray_String), type$.bool_Function_String._as(new A.WindowsStyle_absolutePathToUri_closure()), type$.WhereIterable_String);
        B.JSArray_methods.insert$2(parsed.parts, 0, rootParts.get$last(rootParts));
        if (parsed.get$hasTrailingSeparator())
          B.JSArray_methods.add$1(parsed.parts, "");
        return A._Uri__Uri(rootParts.get$first(rootParts), null, parsed.parts, "file");
      } else {
        if (parsed.parts.length === 0 || parsed.get$hasTrailingSeparator())
          B.JSArray_methods.add$1(parsed.parts, "");
        t1 = parsed.parts;
        t2 = parsed.root;
        t2.toString;
        t2 = A.stringReplaceAllUnchecked(t2, "/", "");
        B.JSArray_methods.insert$2(t1, 0, A.stringReplaceAllUnchecked(t2, "\\", ""));
        return A._Uri__Uri(null, null, parsed.parts, "file");
      }
    },
    codeUnitsEqual$2(codeUnit1, codeUnit2) {
      var upperCase1;
      if (codeUnit1 === codeUnit2)
        return true;
      if (codeUnit1 === 47)
        return codeUnit2 === 92;
      if (codeUnit1 === 92)
        return codeUnit2 === 47;
      if ((codeUnit1 ^ codeUnit2) !== 32)
        return false;
      upperCase1 = codeUnit1 | 32;
      return upperCase1 >= 97 && upperCase1 <= 122;
    },
    pathsEqual$2(path1, path2) {
      var t1, i;
      if (path1 === path2)
        return true;
      t1 = path1.length;
      if (t1 !== path2.length)
        return false;
      for (i = 0; i < t1; ++i)
        if (!this.codeUnitsEqual$2(B.JSString_methods._codeUnitAt$1(path1, i), B.JSString_methods._codeUnitAt$1(path2, i)))
          return false;
      return true;
    },
    get$name() {
      return "windows";
    },
    get$separator() {
      return "\\";
    }
  };
  A.WindowsStyle_absolutePathToUri_closure.prototype = {
    call$1(part) {
      return A._asString(part) !== "";
    },
    $signature: 2
  };
  A.AccessEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.AccessEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "PUBLIC":
            return B.AccessEnum_PUBLIC;
          case "PRIVATE":
            return B.AccessEnum_PRIVATE;
        }
      return null;
    }
  };
  A.Accessor.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Accessor && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.os === _this.os && other.share === _this.share && other.count === _this.count && J.$eq$(other.user, _this.user);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = B.JSString_methods.get$hashCode(_this.os);
      t4 = B.JSString_methods.get$hashCode(_this.share);
      t5 = B.JSInt_methods.get$hashCode(_this.count);
      t6 = _this.user;
      t6 = t6 == null ? 0 : t6.get$hashCode(t6);
      return t1 + t2 + t3 + t4 + t5 + t6;
    },
    toString$0(_) {
      var _this = this;
      return "Accessor[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", os=" + _this.os + ", share=" + _this.share + ", count=" + _this.count + ", user=" + A.S(_this.user) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "os", _this.os);
      _json.$indexSet(0, "share", _this.share);
      _json.$indexSet(0, "count", _this.count);
      t1 = _this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1.toJson$0());
      return _json;
    }
  };
  A.Accessors.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Accessors && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Accessors[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Accessors_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Accessors_toJson_closure.prototype = {
    call$1(element) {
      return type$.Accessor._as(element).toJson$0();
    },
    $signature: 53
  };
  A.Activities.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Activities && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Activities[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Activities_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Activities_toJson_closure.prototype = {
    call$1(element) {
      return type$.Activity._as(element).toJson$0();
    },
    $signature: 54
  };
  A.Activity.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Activity && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && other.event.$eq(0, _this.event) && other.application.$eq(0, _this.application) && J.$eq$(other.deleted, _this.deleted) && J.$eq$(other.asset, _this.asset) && J.$eq$(other.user, _this.user) && J.$eq$(other.format, _this.format) && other.mechanism === _this.mechanism && other.rank == _this.rank;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.created;
      t3 = t3.get$hashCode(t3);
      t4 = _this.updated;
      t4 = t4.get$hashCode(t4);
      t5 = _this.event;
      t5 = t5.get$hashCode(t5);
      t6 = _this.application;
      t6 = t6.get$hashCode(t6);
      t7 = _this.deleted;
      t7 = t7 == null ? 0 : t7.get$hashCode(t7);
      t8 = _this.asset;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      t9 = _this.user;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      t10 = _this.format;
      t10 = t10 == null ? 0 : t10.get$hashCode(t10);
      t11 = A.Primitives_objectHashCode(_this.mechanism);
      t12 = _this.rank;
      t12 = t12 == null ? 0 : B.JSInt_methods.get$hashCode(t12);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12;
    },
    toString$0(_) {
      var _this = this;
      return "Activity[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", event=" + _this.event.toString$0(0) + ", application=" + _this.application.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", asset=" + A.S(_this.asset) + ", user=" + A.S(_this.user) + ", format=" + A.S(_this.format) + ", mechanism=" + _this.mechanism.toString$0(0) + ", rank=" + A.S(_this.rank) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      _json.$indexSet(0, "event", _this.event.toJson$0());
      _json.$indexSet(0, "application", _this.application.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      t1 = _this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      t1 = _this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1.toJson$0());
      t1 = _this.format;
      if (t1 != null)
        _json.$indexSet(0, "format", t1.toJson$0());
      _json.$indexSet(0, "mechanism", _this.mechanism.value);
      t1 = _this.rank;
      if (t1 != null)
        _json.$indexSet(0, "rank", t1);
      return _json;
    }
  };
  A.Aesthetics.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Aesthetics && J.$eq$(other.schema, _this.schema) && other.theme.$eq(0, _this.theme) && other.font.$eq(0, _this.font);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.theme;
      t3 = this.font;
      return t1 + t2.get$hashCode(t2) + t3.get$hashCode(t3);
    },
    toString$0(_) {
      return "Aesthetics[schema=" + A.S(this.schema) + ", theme=" + this.theme.toString$0(0) + ", font=" + this.font.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "theme", this.theme.toJson$0());
      _json.$indexSet(0, "font", this.font.toJson$0());
      return _json;
    }
  };
  A.AllocationCloud.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.AllocationCloud && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.user === _this.user && other.urls.$eq(0, _this.urls) && other.status.$eq(0, _this.status) && other.project === _this.project && J.$eq$(other.updated, _this.updated) && other.version == _this.version;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = B.JSString_methods.get$hashCode(_this.user);
      t4 = _this.urls;
      t4 = t4.get$hashCode(t4);
      t5 = _this.status;
      t5 = t5.get$hashCode(t5);
      t6 = B.JSString_methods.get$hashCode(_this.project);
      t7 = _this.updated;
      t7 = t7 == null ? 0 : t7.get$hashCode(t7);
      t8 = _this.version;
      t8 = t8 == null ? 0 : B.JSString_methods.get$hashCode(t8);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8;
    },
    toString$0(_) {
      var _this = this;
      return "AllocationCloud[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", user=" + _this.user + ", urls=" + _this.urls.toString$0(0) + ", status=" + _this.status.toString$0(0) + ", project=" + _this.project + ", updated=" + A.S(_this.updated) + ", version=" + A.S(_this.version) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "user", _this.user);
      _json.$indexSet(0, "urls", _this.urls.toJson$0());
      _json.$indexSet(0, "status", _this.status.toJson$0());
      _json.$indexSet(0, "project", _this.project);
      t1 = _this.updated;
      if (t1 != null)
        _json.$indexSet(0, "updated", t1.toJson$0());
      t1 = _this.version;
      if (t1 != null)
        _json.$indexSet(0, "version", t1);
      return _json;
    }
  };
  A.AllocationCloudStatus.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.AllocationCloudStatus && J.$eq$(other.schema, this.schema) && other.cloud === this.cloud;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.cloud);
    },
    toString$0(_) {
      return "AllocationCloudStatus[schema=" + A.S(this.schema) + ", cloud=" + this.cloud.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "cloud", this.cloud.value);
      return _json;
    }
  };
  A.AllocationCloudUrl.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.AllocationCloudUrl && J.$eq$(other.schema, _this.schema) && other.status === _this.status && other.url === _this.url;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.status) + B.JSString_methods.get$hashCode(this.url);
    },
    toString$0(_) {
      return "AllocationCloudUrl[schema=" + A.S(this.schema) + ", status=" + this.status.toString$0(0) + ", url=" + this.url + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "status", this.status.value);
      _json.$indexSet(0, "url", this.url);
      return _json;
    }
  };
  A.AllocationCloudUrls.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.AllocationCloudUrls && J.$eq$(other.schema, _this.schema) && other.base.$eq(0, _this.base) && other.id.$eq(0, _this.id) && J.$eq$(other.vanity, _this.vanity);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.base;
      t2 = t2.get$hashCode(t2);
      t3 = _this.id;
      t3 = t3.get$hashCode(t3);
      t4 = _this.vanity;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "AllocationCloudUrls[schema=" + A.S(_this.schema) + ", base=" + _this.base.toString$0(0) + ", id=" + _this.id.toString$0(0) + ", vanity=" + A.S(_this.vanity) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "base", _this.base.toJson$0());
      _json.$indexSet(0, "id", _this.id.toJson$0());
      t1 = _this.vanity;
      if (t1 != null)
        _json.$indexSet(0, "vanity", t1.toJson$0());
      return _json;
    }
  };
  A.AllocationStatusEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.AllocationStatusEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "PENDING":
            return B.AllocationStatusEnum_PENDING;
          case "RUNNING":
            return B.AllocationStatusEnum_RUNNING;
          case "FAILED":
            return B.AllocationStatusEnum_FAILED;
          case "SUCCEEDED":
            return B.AllocationStatusEnum_SUCCEEDED;
          case "UNKNOWN":
            return B.AllocationStatusEnum_UNKNOWN;
        }
      return null;
    }
  };
  A.Allocations.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Allocations && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Allocations[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Allocations_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Allocations_toJson_closure.prototype = {
    call$1(element) {
      return type$.AllocationCloud._as(element).toJson$0();
    },
    $signature: 55
  };
  A.Analyses.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Analyses && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Analyses[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Analyses_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Analyses_toJson_closure.prototype = {
    call$1(element) {
      return type$.Analysis._as(element).toJson$0();
    },
    $signature: 56
  };
  A.Analysis.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Analysis && J.$eq$(other.schema, _this.schema) && J.$eq$(other.code, _this.code) && other.id === _this.id && other.format === _this.format && J.$eq$(other.image, _this.image);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.code;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = B.JSString_methods.get$hashCode(_this.id);
      t4 = B.JSString_methods.get$hashCode(_this.format);
      t5 = _this.image;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      return t1 + t2 + t3 + t4 + t5;
    },
    toString$0(_) {
      var _this = this;
      return "Analysis[schema=" + A.S(_this.schema) + ", code=" + A.S(_this.code) + ", id=" + _this.id + ", format=" + _this.format + ", image=" + A.S(_this.image) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.code;
      if (t1 != null)
        _json.$indexSet(0, "code", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "format", _this.format);
      t1 = _this.image;
      if (t1 != null)
        _json.$indexSet(0, "image", t1.toJson$0());
      return _json;
    }
  };
  A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs && J.$eq$(other.schema, _this.schema) && other.adoptionInstall == _this.adoptionInstall && other.adoptionUninstall == _this.adoptionUninstall;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.adoptionInstall;
      t2 = t2 == null ? 0 : A.Primitives_objectHashCode(t2);
      t3 = this.adoptionUninstall;
      t3 = t3 == null ? 0 : A.Primitives_objectHashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs[schema=" + A.S(this.schema) + ", adoptionInstall=" + A.S(this.adoptionInstall) + ", adoptionUninstall=" + A.S(this.adoptionUninstall) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      if (this.adoptionInstall != null)
        _json.$indexSet(0, "adoption_install", string$.the_usi);
      if (this.adoptionUninstall != null)
        _json.$indexSet(0, "adoption_uninstall", string$.the_usu);
      return _json;
    }
  };
  A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnum.prototype = {
    toString$0(_) {
      return string$.the_usi;
    },
    toJson$0() {
      return string$.the_usi;
    }
  };
  A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.the_usi:
            return B.C_AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnum;
        }
      return null;
    }
  };
  A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnum.prototype = {
    toString$0(_) {
      return string$.the_usu;
    },
    toJson$0() {
      return string$.the_usu;
    }
  };
  A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.the_usu:
            return B.C_AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnum;
        }
      return null;
    }
  };
  A.Application.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Application && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.name === _this.name && other.version === _this.version && other.platform === _this.platform && other.onboarded === _this.onboarded && other.privacy === _this.privacy && other.capabilities == _this.capabilities && other.mechanism == _this.mechanism;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = A.Primitives_objectHashCode(_this.name);
      t4 = B.JSString_methods.get$hashCode(_this.version);
      t5 = A.Primitives_objectHashCode(_this.platform);
      t6 = B.JSBool_methods.get$hashCode(_this.onboarded);
      t7 = A.Primitives_objectHashCode(_this.privacy);
      t8 = _this.capabilities;
      t8 = t8 == null ? 0 : A.Primitives_objectHashCode(t8);
      t9 = _this.mechanism;
      t9 = t9 == null ? 0 : A.Primitives_objectHashCode(t9);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9;
    },
    toString$0(_) {
      var _this = this;
      return "Application[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", name=" + _this.name.toString$0(0) + ", version=" + _this.version + ", platform=" + _this.platform.toString$0(0) + ", onboarded=" + _this.onboarded + ", privacy=" + _this.privacy.toString$0(0) + ", capabilities=" + A.S(_this.capabilities) + ", mechanism=" + A.S(_this.mechanism) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "name", _this.name.value);
      _json.$indexSet(0, "version", _this.version);
      _json.$indexSet(0, "platform", _this.platform.value);
      _json.$indexSet(0, "onboarded", _this.onboarded);
      _json.$indexSet(0, "privacy", _this.privacy.value);
      t1 = _this.capabilities;
      if (t1 != null)
        _json.$indexSet(0, "capabilities", t1.value);
      t1 = _this.mechanism;
      if (t1 != null)
        _json.$indexSet(0, "mechanism", t1.value);
      return _json;
    }
  };
  A.ApplicationNameEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.ApplicationNameEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "SUBLIME":
            return B.ApplicationNameEnum_SUBLIME;
          case "VS_CODE":
            return B.ApplicationNameEnum_VS_CODE;
          case "JETBRAINS":
            return B.ApplicationNameEnum_JETBRAINS;
          case "FIREFOX_ADDON_MV2":
            return B.ApplicationNameEnum_FIREFOX_ADDON_MV2;
          case "FIREFOX_ADDON_MV3":
            return B.ApplicationNameEnum_FIREFOX_ADDON_MV3;
          case "SAFARI_EXTENSION_MV2":
            return B.ApplicationNameEnum_SAFARI_EXTENSION_MV2;
          case "SAFARI_EXTENSION_MV3":
            return B.ApplicationNameEnum_SAFARI_EXTENSION_MV3;
          case "PIECES_FOR_DEVELOPERS":
            return B.ApplicationNameEnum_PIECES_FOR_DEVELOPERS;
          case "PIECES_FOR_DEVELOPERS_CLI":
            return B.ApplicationNameEnum_PIECES_FOR_DEVELOPERS_CLI;
          case "OS_SERVER":
            return B.ApplicationNameEnum_OS_SERVER;
          case "GOOGLE_CHROME_EXTENSION_MV2":
            return B.ApplicationNameEnum_GOOGLE_CHROME_EXTENSION_MV2;
          case "GOOGLE_CHROME_EXTENSION_MV3":
            return B.ApplicationNameEnum_GOOGLE_CHROME_EXTENSION_MV3;
          case "ULTRA_EDIT":
            return B.ApplicationNameEnum_ULTRA_EDIT;
          case "ATOM_PACKAGE":
            return B.ApplicationNameEnum_ATOM_PACKAGE;
          case "ADOBE_ILLUSTRATOR_PIECES_COLOR_SHARE":
            return B.ApplicationNameEnum_hG8;
          case "MICROSOFT_TEAMS":
            return B.ApplicationNameEnum_MICROSOFT_TEAMS;
          case "CHAT_GPT":
            return B.ApplicationNameEnum_CHAT_GPT;
          case "OBSIDIAN":
            return B.ApplicationNameEnum_OBSIDIAN;
          case "JUPYTER_HUB":
            return B.ApplicationNameEnum_JUPYTER_HUB;
          case "VISUAL_STUDIO":
            return B.ApplicationNameEnum_VISUAL_STUDIO;
          case "MICROSOFT_EDGE":
            return B.ApplicationNameEnum_MICROSOFT_EDGE;
          case "BRAVE":
            return B.ApplicationNameEnum_BRAVE;
          case "GOOGLE_CHAT":
            return B.ApplicationNameEnum_GOOGLE_CHAT;
          case "SLACK":
            return B.ApplicationNameEnum_SLACK;
        }
      return null;
    }
  };
  A.Applications.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Applications && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Applications[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Applications_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Applications_toJson_closure.prototype = {
    call$1(element) {
      return type$.Application._as(element).toJson$0();
    },
    $signature: 57
  };
  A.Asset.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Asset && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.name == _this.name && other.description == _this.description && other.creator === _this.creator && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.synced, _this.synced) && J.$eq$(other.deleted, _this.deleted) && other.formats.$eq(0, _this.formats) && other.preview.$eq(0, _this.preview) && other.original.$eq(0, _this.original) && J.$eq$(other.shares, _this.shares) && other.mechanism === _this.mechanism && J.$eq$(other.websites, _this.websites) && J.$eq$(other.interacted, _this.interacted) && J.$eq$(other.tags, _this.tags) && J.$eq$(other.sensitives, _this.sensitives) && J.$eq$(other.persons, _this.persons) && other.curated == _this.curated && other.discovered == _this.discovered && J.$eq$(other.activities, _this.activities) && J.$eq$(other.score, _this.score) && other.favorited == _this.favorited;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.name;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.description;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = B.JSString_methods.get$hashCode(_this.creator);
      t6 = _this.created;
      t6 = t6.get$hashCode(t6);
      t7 = _this.updated;
      t7 = t7.get$hashCode(t7);
      t8 = _this.synced;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      t9 = _this.deleted;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      t10 = _this.formats;
      t10 = t10.get$hashCode(t10);
      t11 = _this.preview;
      t11 = t11.get$hashCode(t11);
      t12 = _this.original;
      t12 = t12.get$hashCode(t12);
      t13 = _this.shares;
      t13 = t13 == null ? 0 : t13.get$hashCode(t13);
      t14 = A.Primitives_objectHashCode(_this.mechanism);
      t15 = _this.websites;
      t15 = t15 == null ? 0 : t15.get$hashCode(t15);
      t16 = _this.interacted;
      t16 = t16 == null ? 0 : t16.get$hashCode(t16);
      t17 = _this.tags;
      t17 = t17 == null ? 0 : t17.get$hashCode(t17);
      t18 = _this.sensitives;
      t18 = t18 == null ? 0 : t18.get$hashCode(t18);
      t19 = _this.persons;
      t19 = t19 == null ? 0 : t19.get$hashCode(t19);
      t20 = _this.curated;
      t20 = t20 == null ? 0 : B.JSBool_methods.get$hashCode(t20);
      t21 = _this.discovered;
      t21 = t21 == null ? 0 : B.JSBool_methods.get$hashCode(t21);
      t22 = _this.activities;
      t22 = t22 == null ? 0 : t22.get$hashCode(t22);
      t23 = _this.score;
      t23 = t23 == null ? 0 : t23.get$hashCode(t23);
      t24 = _this.favorited;
      t24 = t24 == null ? 0 : B.JSBool_methods.get$hashCode(t24);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12 + t13 + t14 + t15 + t16 + t17 + t18 + t19 + t20 + t21 + t22 + t23 + t24;
    },
    toString$0(_) {
      var _this = this;
      return "Asset[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", name=" + A.S(_this.name) + ", description=" + A.S(_this.description) + ", creator=" + _this.creator + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", synced=" + A.S(_this.synced) + ", deleted=" + A.S(_this.deleted) + ", formats=" + _this.formats.toString$0(0) + ", preview=" + _this.preview.toString$0(0) + ", original=" + _this.original.toString$0(0) + ", shares=" + A.S(_this.shares) + ", mechanism=" + _this.mechanism.toString$0(0) + ", websites=" + A.S(_this.websites) + ", interacted=" + A.S(_this.interacted) + ", tags=" + A.S(_this.tags) + ", sensitives=" + A.S(_this.sensitives) + ", persons=" + A.S(_this.persons) + ", curated=" + A.S(_this.curated) + ", discovered=" + A.S(_this.discovered) + ", activities=" + A.S(_this.activities) + ", score=" + A.S(_this.score) + ", favorited=" + A.S(_this.favorited) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      t1 = _this.description;
      if (t1 != null)
        _json.$indexSet(0, "description", t1);
      _json.$indexSet(0, "creator", _this.creator);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.synced;
      if (t1 != null)
        _json.$indexSet(0, "synced", t1.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      _json.$indexSet(0, "formats", _this.formats.toJson$0());
      _json.$indexSet(0, "preview", _this.preview.toJson$0());
      _json.$indexSet(0, "original", _this.original.toJson$0());
      t1 = _this.shares;
      if (t1 != null)
        _json.$indexSet(0, "shares", t1.toJson$0());
      _json.$indexSet(0, "mechanism", _this.mechanism.value);
      t1 = _this.websites;
      if (t1 != null)
        _json.$indexSet(0, "websites", t1.toJson$0());
      t1 = _this.interacted;
      if (t1 != null)
        _json.$indexSet(0, "interacted", t1.toJson$0());
      t1 = _this.tags;
      if (t1 != null)
        _json.$indexSet(0, "tags", t1.toJson$0());
      t1 = _this.sensitives;
      if (t1 != null)
        _json.$indexSet(0, "sensitives", t1.toJson$0());
      t1 = _this.persons;
      if (t1 != null)
        _json.$indexSet(0, "persons", t1.toJson$0());
      t1 = _this.curated;
      if (t1 != null)
        _json.$indexSet(0, "curated", t1);
      t1 = _this.discovered;
      if (t1 != null)
        _json.$indexSet(0, "discovered", t1);
      t1 = _this.activities;
      if (t1 != null)
        _json.$indexSet(0, "activities", t1.toJson$0());
      t1 = _this.score;
      if (t1 != null)
        _json.$indexSet(0, "score", t1.toJson$0());
      t1 = _this.favorited;
      if (t1 != null)
        _json.$indexSet(0, "favorited", t1);
      return _json;
    }
  };
  A.AssetFormats.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.AssetFormats && J.$eq$(other.schema, _this.schema) && other.iterable === _this.iterable && other.asset.$eq(0, _this.asset);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.asset;
      return t1 + A.Primitives_objectHashCode(this.iterable) + t2.get$hashCode(t2);
    },
    toString$0(_) {
      return "AssetFormats[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + ", asset=" + this.asset.toString$0(0) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.AssetFormats_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      _json.$indexSet(0, "asset", this.asset.toJson$0());
      return _json;
    }
  };
  A.AssetFormats_toJson_closure.prototype = {
    call$1(element) {
      return type$.Format._as(element).toJson$0();
    },
    $signature: 26
  };
  A.AssetReclassification.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.AssetReclassification && J.$eq$(other.schema, _this.schema) && other.ext === _this.ext && other.asset.$eq(0, _this.asset);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.asset;
      return t1 + A.Primitives_objectHashCode(this.ext) + t2.get$hashCode(t2);
    },
    toString$0(_) {
      return "AssetReclassification[schema=" + A.S(this.schema) + ", ext=" + this.ext.toString$0(0) + ", asset=" + this.asset.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "ext", this.ext.value);
      _json.$indexSet(0, "asset", this.asset.toJson$0());
      return _json;
    }
  };
  A.Assets.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Assets && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Assets[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Assets_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Assets_toJson_closure.prototype = {
    call$1(element) {
      return type$.Asset._as(element).toJson$0();
    },
    $signature: 59
  };
  A.Auth0.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Auth0 && J.$eq$(other.identity, _this.identity) && J.$eq$(other.user, _this.user) && J.$eq$(other.metadata, _this.metadata) && other.domain === _this.domain && other.client === _this.client && other.audience === _this.audience && other.redirects.$eq(0, _this.redirects) && other.oAuth.$eq(0, _this.oAuth) && other.namespace == _this.namespace;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = _this.identity;
      t1 = t1 == null ? 0 : t1.get$hashCode(t1);
      t2 = _this.user;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.metadata;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = B.JSString_methods.get$hashCode(_this.domain);
      t5 = B.JSString_methods.get$hashCode(_this.client);
      t6 = B.JSString_methods.get$hashCode(_this.audience);
      t7 = _this.redirects;
      t7 = t7.get$hashCode(t7);
      t8 = _this.oAuth;
      t8 = t8.get$hashCode(t8);
      t9 = _this.namespace;
      t9 = t9 == null ? 0 : B.JSString_methods.get$hashCode(t9);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9;
    },
    toString$0(_) {
      var _this = this;
      return "Auth0[identity=" + A.S(_this.identity) + ", user=" + A.S(_this.user) + ", metadata=" + A.S(_this.metadata) + ", domain=" + _this.domain + ", client=" + _this.client + ", audience=" + _this.audience + ", redirects=" + _this.redirects.toString$0(0) + ", oAuth=" + _this.oAuth.toString$0(0) + ", namespace=" + A.S(_this.namespace) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.identity;
      if (t1 != null)
        _json.$indexSet(0, "identity", t1.toJson$0());
      t1 = _this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1.toJson$0());
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      _json.$indexSet(0, "domain", _this.domain);
      _json.$indexSet(0, "client", _this.client);
      _json.$indexSet(0, "audience", _this.audience);
      _json.$indexSet(0, "redirects", _this.redirects.toJson$0());
      _json.$indexSet(0, "oAuth", _this.oAuth.toJson$0());
      t1 = _this.namespace;
      if (t1 != null)
        _json.$indexSet(0, "namespace", t1);
      return _json;
    }
  };
  A.Auth0Identity.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Auth0Identity && other.connection == _this.connection && other.isSocial == _this.isSocial && other.provider == _this.provider && other.userId == _this.userId && other.accessToken == _this.accessToken && other.expiresIn == _this.expiresIn;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.connection;
      t1 = t1 == null ? 0 : B.JSString_methods.get$hashCode(t1);
      t2 = _this.isSocial;
      t2 = t2 == null ? 0 : B.JSBool_methods.get$hashCode(t2);
      t3 = _this.provider;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.userId;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = _this.accessToken;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      t6 = _this.expiresIn;
      t6 = t6 == null ? 0 : B.JSInt_methods.get$hashCode(t6);
      return t1 + t2 + t3 + t4 + t5 + t6;
    },
    toString$0(_) {
      var _this = this;
      return "Auth0Identity[connection=" + A.S(_this.connection) + ", isSocial=" + A.S(_this.isSocial) + ", provider=" + A.S(_this.provider) + ", userId=" + A.S(_this.userId) + ", accessToken=" + A.S(_this.accessToken) + ", expiresIn=" + A.S(_this.expiresIn) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.connection;
      if (t1 != null)
        _json.$indexSet(0, "connection", t1);
      t1 = _this.isSocial;
      if (t1 != null)
        _json.$indexSet(0, "isSocial", t1);
      t1 = _this.provider;
      if (t1 != null)
        _json.$indexSet(0, "provider", t1);
      t1 = _this.userId;
      if (t1 != null)
        _json.$indexSet(0, "user_id", t1);
      t1 = _this.accessToken;
      if (t1 != null)
        _json.$indexSet(0, "access_token", t1);
      t1 = _this.expiresIn;
      if (t1 != null)
        _json.$indexSet(0, "expires_in", t1);
      return _json;
    }
  };
  A.Auth0Redirects.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Auth0Redirects && other.authenticated == this.authenticated && other.unauthenticated == this.unauthenticated;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.authenticated;
      t1 = t1 == null ? 0 : B.JSString_methods.get$hashCode(t1);
      t2 = this.unauthenticated;
      return t1 + (t2 == null ? 0 : B.JSString_methods.get$hashCode(t2));
    },
    toString$0(_) {
      return "Auth0Redirects[authenticated=" + A.S(this.authenticated) + ", unauthenticated=" + A.S(this.unauthenticated) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.authenticated;
      if (t1 != null)
        _json.$indexSet(0, "authenticated", t1);
      t1 = this.unauthenticated;
      if (t1 != null)
        _json.$indexSet(0, "unauthenticated", t1);
      return _json;
    }
  };
  A.Auth0User.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Auth0User && other.name == _this.name && other.picture == _this.picture && other.email == _this.email && J.$eq$(other.createdAt, _this.createdAt) && other.emailVerified == _this.emailVerified && other.familyName == _this.familyName && other.givenName == _this.givenName && other.identities === _this.identities && other.nickname == _this.nickname && J.$eq$(other.updatedAt, _this.updatedAt) && other.username == _this.username && J.$eq$(other.userMetadata, _this.userMetadata) && other.locale == _this.locale && other.userId == _this.userId && other.lastIp == _this.lastIp && J.$eq$(other.lastLogin, _this.lastLogin) && other.loginsCount == _this.loginsCount && other.blockedFor === _this.blockedFor && other.guardianAuthenticators === _this.guardianAuthenticators;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, _this = this,
        t1 = _this.name;
      t1 = t1 == null ? 0 : B.JSString_methods.get$hashCode(t1);
      t2 = _this.picture;
      t2 = t2 == null ? 0 : B.JSString_methods.get$hashCode(t2);
      t3 = _this.email;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.createdAt;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      t5 = _this.emailVerified;
      t5 = t5 == null ? 0 : B.JSBool_methods.get$hashCode(t5);
      t6 = _this.familyName;
      t6 = t6 == null ? 0 : B.JSString_methods.get$hashCode(t6);
      t7 = _this.givenName;
      t7 = t7 == null ? 0 : B.JSString_methods.get$hashCode(t7);
      t8 = A.Primitives_objectHashCode(_this.identities);
      t9 = _this.nickname;
      t9 = t9 == null ? 0 : B.JSString_methods.get$hashCode(t9);
      t10 = _this.updatedAt;
      t10 = t10 == null ? 0 : t10.get$hashCode(t10);
      t11 = _this.username;
      t11 = t11 == null ? 0 : B.JSString_methods.get$hashCode(t11);
      t12 = _this.userMetadata;
      t12 = t12 == null ? 0 : t12.get$hashCode(t12);
      t13 = _this.locale;
      t13 = t13 == null ? 0 : B.JSString_methods.get$hashCode(t13);
      t14 = _this.userId;
      t14 = t14 == null ? 0 : B.JSString_methods.get$hashCode(t14);
      t15 = _this.lastIp;
      t15 = t15 == null ? 0 : B.JSString_methods.get$hashCode(t15);
      t16 = _this.lastLogin;
      t16 = t16 == null ? 0 : t16.get$hashCode(t16);
      t17 = _this.loginsCount;
      t17 = t17 == null ? 0 : B.JSInt_methods.get$hashCode(t17);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12 + t13 + t14 + t15 + t16 + t17 + J.get$hashCode$(_this.blockedFor) + J.get$hashCode$(_this.guardianAuthenticators);
    },
    toString$0(_) {
      var _this = this;
      return "Auth0User[name=" + A.S(_this.name) + ", picture=" + A.S(_this.picture) + ", email=" + A.S(_this.email) + ", createdAt=" + A.S(_this.createdAt) + ", emailVerified=" + A.S(_this.emailVerified) + ", familyName=" + A.S(_this.familyName) + ", givenName=" + A.S(_this.givenName) + ", identities=" + A.S(_this.identities) + ", nickname=" + A.S(_this.nickname) + ", updatedAt=" + A.S(_this.updatedAt) + ", username=" + A.S(_this.username) + ", userMetadata=" + A.S(_this.userMetadata) + ", locale=" + A.S(_this.locale) + ", userId=" + A.S(_this.userId) + ", lastIp=" + A.S(_this.lastIp) + ", lastLogin=" + A.S(_this.lastLogin) + ", loginsCount=" + A.S(_this.loginsCount) + ", blockedFor=" + A.S(_this.blockedFor) + ", guardianAuthenticators=" + A.S(_this.guardianAuthenticators) + "]";
    },
    toJson$0() {
      var t2, t3, _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      t1 = _this.picture;
      if (t1 != null)
        _json.$indexSet(0, "picture", t1);
      t1 = _this.email;
      if (t1 != null)
        _json.$indexSet(0, "email", t1);
      t1 = _this.createdAt;
      if (t1 != null)
        _json.$indexSet(0, "created_at", t1.toUtc$0().toIso8601String$0());
      t1 = _this.emailVerified;
      if (t1 != null)
        _json.$indexSet(0, "email_verified", t1);
      t1 = _this.familyName;
      if (t1 != null)
        _json.$indexSet(0, "family_name", t1);
      t1 = _this.givenName;
      if (t1 != null)
        _json.$indexSet(0, "given_name", t1);
      t1 = _this.identities;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "identities", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Auth0User_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      t1 = _this.nickname;
      if (t1 != null)
        _json.$indexSet(0, "nickname", t1);
      t1 = _this.updatedAt;
      if (t1 != null)
        _json.$indexSet(0, "updated_at", t1.toUtc$0().toIso8601String$0());
      t1 = _this.username;
      if (t1 != null)
        _json.$indexSet(0, "username", t1);
      t1 = _this.userMetadata;
      if (t1 != null)
        _json.$indexSet(0, "user_metadata", t1.toJson$0());
      t1 = _this.locale;
      if (t1 != null)
        _json.$indexSet(0, "locale", t1);
      t1 = _this.userId;
      if (t1 != null)
        _json.$indexSet(0, "user_id", t1);
      t1 = _this.lastIp;
      if (t1 != null)
        _json.$indexSet(0, "last_ip", t1);
      t1 = _this.lastLogin;
      if (t1 != null)
        _json.$indexSet(0, "last_login", t1.toUtc$0().toIso8601String$0());
      t1 = _this.loginsCount;
      if (t1 != null)
        _json.$indexSet(0, "logins_count", t1);
      _json.$indexSet(0, "blocked_for", _this.blockedFor);
      _json.$indexSet(0, "guardian_authenticators", _this.guardianAuthenticators);
      return _json;
    }
  };
  A.Auth0User_toJson_closure.prototype = {
    call$1(element) {
      return type$.Auth0Identity._as(element).toJson$0();
    },
    $signature: 60
  };
  A.Auth0UserMetadata.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Auth0UserMetadata && J.$eq$(other.schema, _this.schema) && other.globalId === _this.globalId && other.cloudKey == _this.cloudKey && other.stripeCustomerId == _this.stripeCustomerId && other.vanityname == _this.vanityname;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.globalId);
      t3 = _this.cloudKey;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.stripeCustomerId;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = _this.vanityname;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      return t1 + t2 + t3 + t4 + t5;
    },
    toString$0(_) {
      var _this = this;
      return "Auth0UserMetadata[schema=" + A.S(_this.schema) + ", globalId=" + _this.globalId + ", cloudKey=" + A.S(_this.cloudKey) + ", stripeCustomerId=" + A.S(_this.stripeCustomerId) + ", vanityname=" + A.S(_this.vanityname) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "global_id", _this.globalId);
      t1 = _this.cloudKey;
      if (t1 != null)
        _json.$indexSet(0, "cloud_key", t1);
      t1 = _this.stripeCustomerId;
      if (t1 != null)
        _json.$indexSet(0, "stripe_customer_id", t1);
      t1 = _this.vanityname;
      if (t1 != null)
        _json.$indexSet(0, "vanityname", t1);
      return _json;
    }
  };
  A.AvailableFormats.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.AvailableFormats && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "AvailableFormats[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.AvailableFormats_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.AvailableFormats_toJson_closure.prototype = {
    call$1(element) {
      return type$.Classification._as(element).toJson$0();
    },
    $signature: 61
  };
  A.ByteDescriptor.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ByteDescriptor && J.$eq$(other.schema, _this.schema) && other.value === _this.value && other.readable === _this.readable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSInt_methods.get$hashCode(this.value) + B.JSString_methods.get$hashCode(this.readable);
    },
    toString$0(_) {
      return "ByteDescriptor[schema=" + A.S(this.schema) + ", value=" + this.value + ", readable=" + this.readable + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "value", this.value);
      _json.$indexSet(0, "readable", this.readable);
      return _json;
    }
  };
  A.CapabilitiesEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.CapabilitiesEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "LOCAL":
            return B.CapabilitiesEnum_LOCAL;
          case "CLOUD":
            return B.CapabilitiesEnum_CLOUD;
          case "BLENDED":
            return B.CapabilitiesEnum_BLENDED;
        }
      return null;
    }
  };
  A.ChallengedPKCE.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ChallengedPKCE && J.$eq$(other.schema, _this.schema) && other.state === _this.state && other.nonce === _this.nonce && other.challenge === _this.challenge && other.method === _this.method && other.verifier === _this.verifier;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(_this.state) + B.JSString_methods.get$hashCode(_this.nonce) + B.JSString_methods.get$hashCode(_this.challenge) + A.Primitives_objectHashCode(_this.method) + B.JSString_methods.get$hashCode(_this.verifier);
    },
    toString$0(_) {
      var _this = this;
      return "ChallengedPKCE[schema=" + A.S(_this.schema) + ", state=" + _this.state + ", nonce=" + _this.nonce + ", challenge=" + _this.challenge + ", method=" + _this.method.toString$0(0) + ", verifier=" + _this.verifier + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "state", _this.state);
      _json.$indexSet(0, "nonce", _this.nonce);
      _json.$indexSet(0, "challenge", _this.challenge);
      _json.$indexSet(0, "method", "S256");
      _json.$indexSet(0, "verifier", _this.verifier);
      return _json;
    }
  };
  A.ChallengedPKCEMethodEnum.prototype = {
    toString$0(_) {
      return "S256";
    },
    toJson$0() {
      return "S256";
    }
  };
  A.ChallengedPKCEMethodEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "S256":
            return B.C_ChallengedPKCEMethodEnum;
        }
      return null;
    }
  };
  A.Classification.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Classification && J.$eq$(other.schema, _this.schema) && other.generic === _this.generic && other.specific === _this.specific && other.rendering == _this.rendering;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = A.Primitives_objectHashCode(_this.generic);
      t3 = A.Primitives_objectHashCode(_this.specific);
      t4 = _this.rendering;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "Classification[schema=" + A.S(_this.schema) + ", generic=" + _this.generic.toString$0(0) + ", specific=" + _this.specific.toString$0(0) + ", rendering=" + A.S(_this.rendering) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "generic", _this.generic.value);
      _json.$indexSet(0, "specific", _this.specific.value);
      t1 = _this.rendering;
      if (t1 != null)
        _json.$indexSet(0, "rendering", t1.value);
      return _json;
    }
  };
  A.ClassificationGenericEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.ClassificationGenericEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "CODE":
            return B.ClassificationGenericEnum_CODE;
          case "TEXT":
            return B.ClassificationGenericEnum_TEXT;
          case "IMAGE":
            return B.ClassificationGenericEnum_IMAGE;
          case "VIDEO":
            return B.ClassificationGenericEnum_VIDEO;
          case "EXTERNAL_RESOURCE_REFERENCE":
            return B.ClassificationGenericEnum_EXTERNAL_RESOURCE_REFERENCE;
          case "UNKNOWN":
            return B.ClassificationGenericEnum_UNKNOWN;
          case "FILE":
            return B.ClassificationGenericEnum_FILE;
        }
      return null;
    }
  };
  A.ClassificationRenderingEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.ClassificationRenderingEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "HTML":
            return B.ClassificationRenderingEnum_HTML;
          case "TWENTY_FOUR_BIT_ANSI_ESCAPED_SEQUENCES":
            return B.ClassificationRenderingEnum_inH;
          case "HIGHLIGHT_JS_HTML":
            return B.ClassificationRenderingEnum_HIGHLIGHT_JS_HTML;
        }
      return null;
    }
  };
  A.ClassificationSpecificEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.ClassificationSpecificEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "csx":
            return B.ClassificationSpecificEnum_csx;
          case "cs":
            return B.ClassificationSpecificEnum_cs;
          case "html":
            return B.ClassificationSpecificEnum_html;
          case "htm":
            return B.ClassificationSpecificEnum_htm;
          case "shtml":
            return B.ClassificationSpecificEnum_shtml;
          case "xhtml":
            return B.ClassificationSpecificEnum_xhtml;
          case "hs":
            return B.ClassificationSpecificEnum_hs;
          case "hs-boot":
            return B.ClassificationSpecificEnum_tWR;
          case "hsig":
            return B.ClassificationSpecificEnum_hsig;
          case "cpp":
            return B.ClassificationSpecificEnum_cpp;
          case "cc":
            return B.ClassificationSpecificEnum_cc;
          case "cp":
            return B.ClassificationSpecificEnum_cp;
          case "cxx":
            return B.ClassificationSpecificEnum_cxx;
          case "c":
            return B.ClassificationSpecificEnum_c;
          case "h":
            return B.ClassificationSpecificEnum_h;
          case "hh":
            return B.ClassificationSpecificEnum_hh;
          case "hpp":
            return B.ClassificationSpecificEnum_hpp;
          case "hxx":
            return B.ClassificationSpecificEnum_hxx;
          case "inl":
            return B.ClassificationSpecificEnum_inl;
          case "ipp":
            return B.ClassificationSpecificEnum_ipp;
          case "ixx":
            return B.ClassificationSpecificEnum_ixx;
          case "cppm":
            return B.ClassificationSpecificEnum_cppm;
          case "csv":
            return B.ClassificationSpecificEnum_csv;
          case "doc":
            return B.ClassificationSpecificEnum_doc;
          case "docm":
            return B.ClassificationSpecificEnum_docm;
          case "docx":
            return B.ClassificationSpecificEnum_docx;
          case "exe":
            return B.ClassificationSpecificEnum_exe;
          case "gif":
            return B.ClassificationSpecificEnum_gif;
          case "ico":
            return B.ClassificationSpecificEnum_ico;
          case "jpe":
            return B.ClassificationSpecificEnum_jpe;
          case "jpeg":
            return B.ClassificationSpecificEnum_jpeg;
          case "jpg":
            return B.ClassificationSpecificEnum_jpg;
          case "jpgm":
            return B.ClassificationSpecificEnum_jpgm;
          case "jpgv":
            return B.ClassificationSpecificEnum_jpgv;
          case "log":
            return B.ClassificationSpecificEnum_log;
          case "mp2":
            return B.ClassificationSpecificEnum_mp2;
          case "mp2a":
            return B.ClassificationSpecificEnum_mp2a;
          case "mp3":
            return B.ClassificationSpecificEnum_mp3;
          case "mp4":
            return B.ClassificationSpecificEnum_mp4;
          case "mp4a":
            return B.ClassificationSpecificEnum_mp4a;
          case "oga":
            return B.ClassificationSpecificEnum_oga;
          case "ogg":
            return B.ClassificationSpecificEnum_ogg;
          case "ogv":
            return B.ClassificationSpecificEnum_ogv;
          case "ogx":
            return B.ClassificationSpecificEnum_ogx;
          case "ppt":
            return B.ClassificationSpecificEnum_ppt;
          case "pptx":
            return B.ClassificationSpecificEnum_pptx;
          case "pptm":
            return B.ClassificationSpecificEnum_pptm;
          case "qt":
            return B.ClassificationSpecificEnum_qt;
          case "text":
            return B.ClassificationSpecificEnum_text;
          case "tif":
            return B.ClassificationSpecificEnum_tif;
          case "tiff":
            return B.ClassificationSpecificEnum_tiff;
          case "txt":
            return B.ClassificationSpecificEnum_txt;
          case "wav":
            return B.ClassificationSpecificEnum_wav;
          case "weba":
            return B.ClassificationSpecificEnum_weba;
          case "webm":
            return B.ClassificationSpecificEnum_webm;
          case "webp":
            return B.ClassificationSpecificEnum_webp;
          case "xla":
            return B.ClassificationSpecificEnum_xla;
          case "xlam":
            return B.ClassificationSpecificEnum_xlam;
          case "xlc":
            return B.ClassificationSpecificEnum_xlc;
          case "xlm":
            return B.ClassificationSpecificEnum_xlm;
          case "xls":
            return B.ClassificationSpecificEnum_xls;
          case "xlsb":
            return B.ClassificationSpecificEnum_xlsb;
          case "xlsm":
            return B.ClassificationSpecificEnum_xlsm;
          case "xlsx":
            return B.ClassificationSpecificEnum_xlsx;
          case "xlt":
            return B.ClassificationSpecificEnum_xlt;
          case "xltm":
            return B.ClassificationSpecificEnum_xltm;
          case "xltx":
            return B.ClassificationSpecificEnum_xltx;
          case "pdf":
            return B.ClassificationSpecificEnum_pdf;
          case "png":
            return B.ClassificationSpecificEnum_png;
          case "rpm":
            return B.ClassificationSpecificEnum_rpm;
          case "zip":
            return B.ClassificationSpecificEnum_zip;
          case "woff":
            return B.ClassificationSpecificEnum_woff;
          case "woff2":
            return B.ClassificationSpecificEnum_woff2;
          case "svgz":
            return B.ClassificationSpecificEnum_svgz;
          case "bin":
            return B.ClassificationSpecificEnum_bin;
          case "bmp":
            return B.ClassificationSpecificEnum_bmp;
          case "eot":
            return B.ClassificationSpecificEnum_eot;
          case "gz":
            return B.ClassificationSpecificEnum_gz;
          case "jar":
            return B.ClassificationSpecificEnum_jar;
          case "mpkg":
            return B.ClassificationSpecificEnum_mpkg;
          case "ai":
            return B.ClassificationSpecificEnum_ai;
          case "eps":
            return B.ClassificationSpecificEnum_eps;
          case "dmg":
            return B.ClassificationSpecificEnum_dmg;
          case "list":
            return B.ClassificationSpecificEnum_list;
          case "rtx":
            return B.ClassificationSpecificEnum_rtx;
          case "uri":
            return B.ClassificationSpecificEnum_uri;
          case "uris":
            return B.ClassificationSpecificEnum_uris;
          case "urls":
            return B.ClassificationSpecificEnum_urls;
          case "css":
            return B.ClassificationSpecificEnum_css;
          case "dart":
            return B.ClassificationSpecificEnum_dart;
          case "java":
            return B.ClassificationSpecificEnum_java;
          case "bsh":
            return B.ClassificationSpecificEnum_bsh;
          case "js":
            return B.ClassificationSpecificEnum_js;
          case "jsx":
            return B.ClassificationSpecificEnum_jsx;
          case "mjs":
            return B.ClassificationSpecificEnum_mjs;
          case "htc":
            return B.ClassificationSpecificEnum_htc;
          case "json":
            return B.ClassificationSpecificEnum_json;
          case "ipynb":
            return B.ClassificationSpecificEnum_ipynb;
          case "gltf":
            return B.ClassificationSpecificEnum_gltf;
          case "jsonml":
            return B.ClassificationSpecificEnum_jsonml;
          case "ps":
            return B.ClassificationSpecificEnum_ps;
          case "ssml":
            return B.ClassificationSpecificEnum_ssml;
          case "wasm":
            return B.ClassificationSpecificEnum_wasm;
          case "rtf":
            return B.ClassificationSpecificEnum_rtf;
          case "cco":
            return B.ClassificationSpecificEnum_cco;
          case "pl":
            return B.ClassificationSpecificEnum_pl;
          case "pc":
            return B.ClassificationSpecificEnum_pc;
          case "pm":
            return B.ClassificationSpecificEnum_pm;
          case "pmc":
            return B.ClassificationSpecificEnum_pmc;
          case "pod":
            return B.ClassificationSpecificEnum_pod;
          case "t":
            return B.ClassificationSpecificEnum_t;
          case "xml":
            return B.ClassificationSpecificEnum_xml;
          case "tld":
            return B.ClassificationSpecificEnum_tld;
          case "dtml":
            return B.ClassificationSpecificEnum_dtml;
          case "rng":
            return B.ClassificationSpecificEnum_rng;
          case "rss":
            return B.ClassificationSpecificEnum_rss;
          case "opml":
            return B.ClassificationSpecificEnum_opml;
          case "svg":
            return B.ClassificationSpecificEnum_svg;
          case "xaml":
            return B.ClassificationSpecificEnum_xaml;
          case "sublime-snippet":
            return B.ClassificationSpecificEnum_kV6;
          case "tmLanguage":
            return B.ClassificationSpecificEnum_tmLanguage;
          case "tmPreferences":
            return B.ClassificationSpecificEnum_tmPreferences;
          case "tmSnippet":
            return B.ClassificationSpecificEnum_tmSnippet;
          case "tmTheme":
            return B.ClassificationSpecificEnum_tmTheme;
          case "csproj":
            return B.ClassificationSpecificEnum_csproj;
          case "fsproj":
            return B.ClassificationSpecificEnum_fsproj;
          case "sqlproj":
            return B.ClassificationSpecificEnum_sqlproj;
          case "vbproj":
            return B.ClassificationSpecificEnum_vbproj;
          case "vcproj":
            return B.ClassificationSpecificEnum_vcproj;
          case "vcxproj":
            return B.ClassificationSpecificEnum_vcxproj;
          case "dae":
            return B.ClassificationSpecificEnum_dae;
          case "props":
            return B.ClassificationSpecificEnum_props;
          case "targets":
            return B.ClassificationSpecificEnum_targets;
          case "xsd":
            return B.ClassificationSpecificEnum_xsd;
          case "xsl":
            return B.ClassificationSpecificEnum_xsl;
          case "xslt":
            return B.ClassificationSpecificEnum_xslt;
          case "ecma":
            return B.ClassificationSpecificEnum_ecma;
          case "node":
            return B.ClassificationSpecificEnum_node;
          case "php":
            return B.ClassificationSpecificEnum_php;
          case "php3":
            return B.ClassificationSpecificEnum_php3;
          case "php4":
            return B.ClassificationSpecificEnum_php4;
          case "php5":
            return B.ClassificationSpecificEnum_php5;
          case "php7":
            return B.ClassificationSpecificEnum_php7;
          case "php8":
            return B.ClassificationSpecificEnum_php8;
          case "phps":
            return B.ClassificationSpecificEnum_phps;
          case "phpt":
            return B.ClassificationSpecificEnum_phpt;
          case "phtml":
            return B.ClassificationSpecificEnum_phtml;
          case "py":
            return B.ClassificationSpecificEnum_py;
          case "py3":
            return B.ClassificationSpecificEnum_py3;
          case "pyw":
            return B.ClassificationSpecificEnum_pyw;
          case "pyi":
            return B.ClassificationSpecificEnum_pyi;
          case "pyx":
            return B.ClassificationSpecificEnum_pyx;
          case "pyx.in":
            return B.ClassificationSpecificEnum_R0t;
          case "pxd":
            return B.ClassificationSpecificEnum_pxd;
          case "pxd.in":
            return B.ClassificationSpecificEnum_Q5s;
          case "pxi":
            return B.ClassificationSpecificEnum_pxi;
          case "pxi.in":
            return B.ClassificationSpecificEnum_chs;
          case "rpy":
            return B.ClassificationSpecificEnum_rpy;
          case "cpy":
            return B.ClassificationSpecificEnum_cpy;
          case "gyp":
            return B.ClassificationSpecificEnum_gyp;
          case "gypi":
            return B.ClassificationSpecificEnum_gypi;
          case "vpy":
            return B.ClassificationSpecificEnum_vpy;
          case "smk":
            return B.ClassificationSpecificEnum_smk;
          case "wscript":
            return B.ClassificationSpecificEnum_wscript;
          case "bazel":
            return B.ClassificationSpecificEnum_bazel;
          case "bzl":
            return B.ClassificationSpecificEnum_bzl;
          case "pyc":
            return B.ClassificationSpecificEnum_pyc;
          case "class":
            return B.ClassificationSpecificEnum_class;
          case "p":
            return B.ClassificationSpecificEnum_p;
          case "pas":
            return B.ClassificationSpecificEnum_pas;
          case "curl":
            return B.ClassificationSpecificEnum_curl;
          case "mcurl":
            return B.ClassificationSpecificEnum_mcurl;
          case "go":
            return B.ClassificationSpecificEnum_go;
          case "swift":
            return B.ClassificationSpecificEnum_swift;
          case "rs":
            return B.ClassificationSpecificEnum_rs;
          case "ts":
            return B.ClassificationSpecificEnum_ts;
          case "tsx":
            return B.ClassificationSpecificEnum_tsx;
          case "rb":
            return B.ClassificationSpecificEnum_rb;
          case "rbi":
            return B.ClassificationSpecificEnum_rbi;
          case "rbx":
            return B.ClassificationSpecificEnum_rbx;
          case "rjs":
            return B.ClassificationSpecificEnum_rjs;
          case "rabl":
            return B.ClassificationSpecificEnum_rabl;
          case "rake":
            return B.ClassificationSpecificEnum_rake;
          case "capfile":
            return B.ClassificationSpecificEnum_capfile;
          case "jbuilder":
            return B.ClassificationSpecificEnum_jbuilder;
          case "gemspec":
            return B.ClassificationSpecificEnum_gemspec;
          case "podspec":
            return B.ClassificationSpecificEnum_podspec;
          case "irbrc":
            return B.ClassificationSpecificEnum_irbrc;
          case "pryrc":
            return B.ClassificationSpecificEnum_pryrc;
          case "prawn":
            return B.ClassificationSpecificEnum_prawn;
          case "thor":
            return B.ClassificationSpecificEnum_thor;
          case "Appfile":
            return B.ClassificationSpecificEnum_Appfile;
          case "Appraisals":
            return B.ClassificationSpecificEnum_Appraisals;
          case "Berksfile":
            return B.ClassificationSpecificEnum_Berksfile;
          case "Brewfile":
            return B.ClassificationSpecificEnum_Brewfile;
          case "Cheffile":
            return B.ClassificationSpecificEnum_Cheffile;
          case "Deliverfile":
            return B.ClassificationSpecificEnum_Deliverfile;
          case "Fastfile":
            return B.ClassificationSpecificEnum_Fastfile;
          case "Gemfile":
            return B.ClassificationSpecificEnum_Gemfile;
          case "Guardfile":
            return B.ClassificationSpecificEnum_Guardfile;
          case "Podfile":
            return B.ClassificationSpecificEnum_Podfile;
          case "Rakefile":
            return B.ClassificationSpecificEnum_Rakefile;
          case "Rantfile":
            return B.ClassificationSpecificEnum_Rantfile;
          case "Scanfile":
            return B.ClassificationSpecificEnum_Scanfile;
          case "simplecov":
            return B.ClassificationSpecificEnum_simplecov;
          case "Snapfile":
            return B.ClassificationSpecificEnum_Snapfile;
          case "Thorfile":
            return B.ClassificationSpecificEnum_Thorfile;
          case "Vagrantfile":
            return B.ClassificationSpecificEnum_Vagrantfile;
          case "scala":
            return B.ClassificationSpecificEnum_scala;
          case "sbt":
            return B.ClassificationSpecificEnum_sbt;
          case "sc":
            return B.ClassificationSpecificEnum_sc;
          case "cmd":
            return B.ClassificationSpecificEnum_cmd;
          case "bat":
            return B.ClassificationSpecificEnum_bat;
          case "coffee":
            return B.ClassificationSpecificEnum_coffee;
          case "erl":
            return B.ClassificationSpecificEnum_erl;
          case "hrl":
            return B.ClassificationSpecificEnum_hrl;
          case "escript":
            return B.ClassificationSpecificEnum_escript;
          case "lua":
            return B.ClassificationSpecificEnum_lua;
          case "md":
            return B.ClassificationSpecificEnum_md;
          case "mdown":
            return B.ClassificationSpecificEnum_mdown;
          case "mdwn":
            return B.ClassificationSpecificEnum_mdwn;
          case "markdown":
            return B.ClassificationSpecificEnum_markdown;
          case "markdn":
            return B.ClassificationSpecificEnum_markdn;
          case "matlab":
            return B.ClassificationSpecificEnum_matlab;
          case "m":
            return B.ClassificationSpecificEnum_m;
          case "ps1":
            return B.ClassificationSpecificEnum_ps1;
          case "sh":
            return B.ClassificationSpecificEnum_sh;
          case "bash":
            return B.ClassificationSpecificEnum_bash;
          case "bashrc":
            return B.ClassificationSpecificEnum_bashrc;
          case "ash":
            return B.ClassificationSpecificEnum_ash;
          case "zsh":
            return B.ClassificationSpecificEnum_zsh;
          case ".bash_aliases":
            return B.ClassificationSpecificEnum_swR;
          case ".bash_completions":
            return B.ClassificationSpecificEnum_GfL;
          case ".bash_functions":
            return B.ClassificationSpecificEnum_kvD;
          case ".bash_login":
            return B.ClassificationSpecificEnum_AKW;
          case ".bash_logout":
            return B.ClassificationSpecificEnum_yHP;
          case ".bash_profile":
            return B.ClassificationSpecificEnum_4CA;
          case ".bash_variables":
            return B.ClassificationSpecificEnum_oCX;
          case ".profile":
            return B.ClassificationSpecificEnum_8pf;
          case ".textmate_init":
            return B.ClassificationSpecificEnum_oyn;
          case ".zlogin":
            return B.ClassificationSpecificEnum_wlp;
          case ".zlogout":
            return B.ClassificationSpecificEnum_7Nb;
          case ".zprofile":
            return B.ClassificationSpecificEnum_bOL;
          case ".zshenv":
            return B.ClassificationSpecificEnum_mlV;
          case ".zshrc":
            return B.ClassificationSpecificEnum_Eht;
          case "PKGBUILD":
            return B.ClassificationSpecificEnum_PKGBUILD;
          case "ebuild":
            return B.ClassificationSpecificEnum_ebuild;
          case "eclass":
            return B.ClassificationSpecificEnum_eclass;
          case "r":
            return B.ClassificationSpecificEnum_r;
          case "sql":
            return B.ClassificationSpecificEnum_sql;
          case "ddl":
            return B.ClassificationSpecificEnum_ddl;
          case "dml":
            return B.ClassificationSpecificEnum_dml;
          case "tex":
            return B.ClassificationSpecificEnum_tex;
          case "ltx":
            return B.ClassificationSpecificEnum_ltx;
          case "sty":
            return B.ClassificationSpecificEnum_sty;
          case "cls":
            return B.ClassificationSpecificEnum_cls;
          case "UNKNOWN":
            return B.ClassificationSpecificEnum_UNKNOWN;
          case "yaml":
            return B.ClassificationSpecificEnum_yaml;
          case "yml":
            return B.ClassificationSpecificEnum_yml;
          case "toml":
            return B.ClassificationSpecificEnum_toml;
          case "tml":
            return B.ClassificationSpecificEnum_tml;
          case "Cargo.lock":
            return B.ClassificationSpecificEnum_2nP;
          case "Gopkg.lock":
            return B.ClassificationSpecificEnum_6tX;
          case "Pipfile":
            return B.ClassificationSpecificEnum_Pipfile;
          case "poetry.lock":
            return B.ClassificationSpecificEnum_Uez;
          case "uniform_resource_locator":
            return B.ClassificationSpecificEnum_uniform_resource_locator;
          case "custom_url_scheme":
            return B.ClassificationSpecificEnum_custom_url_scheme;
          case "unix_file_path":
            return B.ClassificationSpecificEnum_unix_file_path;
          case "windows_file_path":
            return B.ClassificationSpecificEnum_windows_file_path;
          case "uniform_resource_identifier":
            return B.ClassificationSpecificEnum_uniform_resource_identifier;
          case "hljs-1c":
            return B.ClassificationSpecificEnum_Jd2;
          case "hljs-abnf":
            return B.ClassificationSpecificEnum_tAl;
          case "hljs-accesslog":
            return B.ClassificationSpecificEnum_LIV;
          case "hljs-actionscript":
            return B.ClassificationSpecificEnum_SVK;
          case "hljs-ada":
            return B.ClassificationSpecificEnum_RMn;
          case "hljs-angelscript":
            return B.ClassificationSpecificEnum_eAf;
          case "hljs-apache":
            return B.ClassificationSpecificEnum_26m;
          case "hljs-applescript":
            return B.ClassificationSpecificEnum_gkc;
          case "hljs-arcade":
            return B.ClassificationSpecificEnum_oyn0;
          case "hljs-arduino":
            return B.ClassificationSpecificEnum_8kV;
          case "hljs-armasm":
            return B.ClassificationSpecificEnum_oyn1;
          case "hljs-asciidoc":
            return B.ClassificationSpecificEnum_Cjk;
          case "hljs-aspectj":
            return B.ClassificationSpecificEnum_IMP;
          case "hljs-autohotkey":
            return B.ClassificationSpecificEnum_IUx;
          case "hljs-autoit":
            return B.ClassificationSpecificEnum_KHA;
          case "hljs-avrasm":
            return B.ClassificationSpecificEnum_s3P;
          case "hljs-awk":
            return B.ClassificationSpecificEnum_a5W;
          case "hljs-axapta":
            return B.ClassificationSpecificEnum_Ecu;
          case "hljs-bash":
            return B.ClassificationSpecificEnum_0SX;
          case "hljs-basic":
            return B.ClassificationSpecificEnum_vIF;
          case "hljs-bnf":
            return B.ClassificationSpecificEnum_wM5;
          case "hljs-brainfuck":
            return B.ClassificationSpecificEnum_Jsm;
          case "hljs-cal":
            return B.ClassificationSpecificEnum_Gky;
          case "hljs-capnproto":
            return B.ClassificationSpecificEnum_zXC;
          case "hljs-ceylon":
            return B.ClassificationSpecificEnum_MQk;
          case "hljs-clean":
            return B.ClassificationSpecificEnum_Q5s0;
          case "hljs-clojure-repl":
            return B.ClassificationSpecificEnum_rDF;
          case "hljs-clojure":
            return B.ClassificationSpecificEnum_l7R;
          case "hljs-cmake":
            return B.ClassificationSpecificEnum_42e;
          case "hljs-coffeescript":
            return B.ClassificationSpecificEnum_WZn;
          case "hljs-coq":
            return B.ClassificationSpecificEnum_gya;
          case "hljs-cos":
            return B.ClassificationSpecificEnum_gya0;
          case "hljs-cpp":
            return B.ClassificationSpecificEnum_0Tb;
          case "hljs-crmsh":
            return B.ClassificationSpecificEnum_4ys;
          case "hljs-crystal":
            return B.ClassificationSpecificEnum_mpT;
          case "hljs-c":
            return B.ClassificationSpecificEnum_wlp0;
          case "hljs-cs":
            return B.ClassificationSpecificEnum_NQk;
          case "hljs-csp":
            return B.ClassificationSpecificEnum_7Qz;
          case "hljs-css":
            return B.ClassificationSpecificEnum_7Qz0;
          case "hljs-d":
            return B.ClassificationSpecificEnum_wlp1;
          case "hljs-dart":
            return B.ClassificationSpecificEnum_O8Y;
          case "hljs-delphi":
            return B.ClassificationSpecificEnum_O1c;
          case "hljs-diff":
            return B.ClassificationSpecificEnum_IRg;
          case "hljs-django":
            return B.ClassificationSpecificEnum_wlp2;
          case "hljs-dns":
            return B.ClassificationSpecificEnum_wM50;
          case "hljs-dockerfile":
            return B.ClassificationSpecificEnum_iDY;
          case "hljs-dos":
            return B.ClassificationSpecificEnum_gya1;
          case "hljs-dsconfig":
            return B.ClassificationSpecificEnum_ShF;
          case "hljs-dts":
            return B.ClassificationSpecificEnum_T1A;
          case "hljs-dust":
            return B.ClassificationSpecificEnum_qzK;
          case "hljs-ebnf":
            return B.ClassificationSpecificEnum_tAl0;
          case "hljs-elixir":
            return B.ClassificationSpecificEnum_dy2;
          case "hljs-elm":
            return B.ClassificationSpecificEnum_ea2;
          case "hljs-erb":
            return B.ClassificationSpecificEnum_06J;
          case "hljs-erlang-repl":
            return B.ClassificationSpecificEnum_alO;
          case "hljs-erlang":
            return B.ClassificationSpecificEnum_oyn2;
          case "hljs-excel":
            return B.ClassificationSpecificEnum_oCX0;
          case "hljs-fix":
            return B.ClassificationSpecificEnum_9x8;
          case "hljs-flix":
            return B.ClassificationSpecificEnum_kaS;
          case "hljs-fortran":
            return B.ClassificationSpecificEnum_RWw;
          case "hljs-fsharp":
            return B.ClassificationSpecificEnum_sJO;
          case "hljs-gams":
            return B.ClassificationSpecificEnum_6Vn;
          case "hljs-gauss":
            return B.ClassificationSpecificEnum_WZt;
          case "hljs-gcode":
            return B.ClassificationSpecificEnum_AKW0;
          case "hljs-gherkin":
            return B.ClassificationSpecificEnum_3KU;
          case "hljs-glsl":
            return B.ClassificationSpecificEnum_aZ8;
          case "hljs-gml":
            return B.ClassificationSpecificEnum_wlp3;
          case "hljs-go":
            return B.ClassificationSpecificEnum_ekJ;
          case "hljs-golo":
            return B.ClassificationSpecificEnum_gO7;
          case "hljs-gradle":
            return B.ClassificationSpecificEnum_Hro;
          case "hljs-groovy":
            return B.ClassificationSpecificEnum_eUP;
          case "hljs-haml":
            return B.ClassificationSpecificEnum_AKW1;
          case "hljs-handlebars":
            return B.ClassificationSpecificEnum_Art;
          case "hljs-haskell":
            return B.ClassificationSpecificEnum_0;
          case "hljs-haxe":
            return B.ClassificationSpecificEnum_ifx;
          case "hljs-hsp":
            return B.ClassificationSpecificEnum_7Qz1;
          case "hljs-htmlbars":
            return B.ClassificationSpecificEnum_6l8;
          case "hljs-http":
            return B.ClassificationSpecificEnum_NQk0;
          case "hljs-hy":
            return B.ClassificationSpecificEnum_oxB;
          case "hljs-inform7":
            return B.ClassificationSpecificEnum_ViB;
          case "hljs-ini":
            return B.ClassificationSpecificEnum_wM51;
          case "hljs-irpf90":
            return B.ClassificationSpecificEnum_mJC;
          case "hljs-isbl":
            return B.ClassificationSpecificEnum_ES6;
          case "hljs-java":
            return B.ClassificationSpecificEnum_w2d;
          case "hljs-javascript":
            return B.ClassificationSpecificEnum_c4R;
          case "hljs-jboss-cli":
            return B.ClassificationSpecificEnum_ESz;
          case "hljs-json":
            return B.ClassificationSpecificEnum_wsa;
          case "hljs-julia-repl":
            return B.ClassificationSpecificEnum_o3E;
          case "hljs-julia":
            return B.ClassificationSpecificEnum_qh2;
          case "hljs-kotlin":
            return B.ClassificationSpecificEnum_IAG;
          case "hljs-lasso":
            return B.ClassificationSpecificEnum_WZt0;
          case "hljs-ldif":
            return B.ClassificationSpecificEnum_Lri;
          case "hljs-leaf":
            return B.ClassificationSpecificEnum_oyn3;
          case "hljs-less":
            return B.ClassificationSpecificEnum_rh2;
          case "hljs-lisp":
            return B.ClassificationSpecificEnum_ezA;
          case "hljs-livecodeserver":
            return B.ClassificationSpecificEnum_WzB;
          case "hljs-livescript":
            return B.ClassificationSpecificEnum_wEo;
          case "hljs-llvm":
            return B.ClassificationSpecificEnum_4YB;
          case "hljs-lsl":
            return B.ClassificationSpecificEnum_7Qz2;
          case "hljs-lua":
            return B.ClassificationSpecificEnum_Xu7;
          case "hljs-makefile":
            return B.ClassificationSpecificEnum_0kf;
          case "hljs-markdown":
            return B.ClassificationSpecificEnum_S7h;
          case "hljs-mathematica":
            return B.ClassificationSpecificEnum_4t0;
          case "hljs-matlab":
            return B.ClassificationSpecificEnum_AKW2;
          case "hljs-maxima":
            return B.ClassificationSpecificEnum_qBv;
          case "hljs-mel":
            return B.ClassificationSpecificEnum_cuw;
          case "hljs-mercury":
            return B.ClassificationSpecificEnum_6p3;
          case "hljs-mipsasm":
            return B.ClassificationSpecificEnum_SKA;
          case "hljs-mizar":
            return B.ClassificationSpecificEnum_UOR;
          case "hljs-mojolicious":
            return B.ClassificationSpecificEnum_FKj;
          case "hljs-monkey":
            return B.ClassificationSpecificEnum_ijF;
          case "hljs-moonscript":
            return B.ClassificationSpecificEnum_c4p;
          case "hljs-n1ql":
            return B.ClassificationSpecificEnum_ilA;
          case "hljs-nginx":
            return B.ClassificationSpecificEnum_mZn;
          case "hljs-nimrod":
            return B.ClassificationSpecificEnum_woc;
          case "hljs-nix":
            return B.ClassificationSpecificEnum_9x80;
          case "hljs-nsis":
            return B.ClassificationSpecificEnum_kqP;
          case "hljs-objectivec":
            return B.ClassificationSpecificEnum_gvA;
          case "hljs-ocaml":
            return B.ClassificationSpecificEnum_QoN;
          case "hljs-openscad":
            return B.ClassificationSpecificEnum_Uyy;
          case "hljs-oxygene":
            return B.ClassificationSpecificEnum_kjl;
          case "hljs-parser3":
            return B.ClassificationSpecificEnum_K1J;
          case "hljs-perl":
            return B.ClassificationSpecificEnum_d8x;
          case "hljs-pf":
            return B.ClassificationSpecificEnum_wsa0;
          case "hljs-pgsql":
            return B.ClassificationSpecificEnum_AkY;
          case "hljs-php":
            return B.ClassificationSpecificEnum_qQo;
          case "hljs-plaintext":
            return B.ClassificationSpecificEnum_wwP;
          case "hljs-pony":
            return B.ClassificationSpecificEnum_MQu;
          case "hljs-powershell":
            return B.ClassificationSpecificEnum_GB6;
          case "hljs-processing":
            return B.ClassificationSpecificEnum_oAc;
          case "hljs-profile":
            return B.ClassificationSpecificEnum_2rX;
          case "hljs-prolog":
            return B.ClassificationSpecificEnum_EOZ;
          case "hljs-properties":
            return B.ClassificationSpecificEnum_h4A;
          case "hljs-protobuf":
            return B.ClassificationSpecificEnum_EuK;
          case "hljs-puppet":
            return B.ClassificationSpecificEnum_v7D;
          case "hljs-purebasic":
            return B.ClassificationSpecificEnum_ewF;
          case "hljs-python":
            return B.ClassificationSpecificEnum_YDe;
          case "hljs-q":
            return B.ClassificationSpecificEnum_wlp4;
          case "hljs-qml":
            return B.ClassificationSpecificEnum_wlp5;
          case "hljs-r":
            return B.ClassificationSpecificEnum_wlp6;
          case "hljs-reasonml":
            return B.ClassificationSpecificEnum_aQo;
          case "hljs-rib":
            return B.ClassificationSpecificEnum_9x81;
          case "hljs-roboconf":
            return B.ClassificationSpecificEnum_pOB;
          case "hljs-routeros":
            return B.ClassificationSpecificEnum_2No;
          case "hljs-rsl":
            return B.ClassificationSpecificEnum_7Qz3;
          case "hljs-ruby":
            return B.ClassificationSpecificEnum_ZXT;
          case "hljs-ruleslanguage":
            return B.ClassificationSpecificEnum_Ymk;
          case "hljs-rust":
            return B.ClassificationSpecificEnum_qzK0;
          case "hljs-sas":
            return B.ClassificationSpecificEnum_Gky0;
          case "hljs-scala":
            return B.ClassificationSpecificEnum_eAj;
          case "hljs-scheme":
            return B.ClassificationSpecificEnum_MQk0;
          case "hljs-scilab":
            return B.ClassificationSpecificEnum_pOB0;
          case "hljs-scss":
            return B.ClassificationSpecificEnum_7B4;
          case "hljs-shell":
            return B.ClassificationSpecificEnum_EO3;
          case "hljs-smali":
            return B.ClassificationSpecificEnum_n3g;
          case "hljs-smalltalk":
            return B.ClassificationSpecificEnum_mGC;
          case "hljs-sml":
            return B.ClassificationSpecificEnum_wlp7;
          case "hljs-sqf":
            return B.ClassificationSpecificEnum_kvD0;
          case "hljs-sql":
            return B.ClassificationSpecificEnum_kvD1;
          case "hljs-stan":
            return B.ClassificationSpecificEnum_q5A;
          case "hljs-stata":
            return B.ClassificationSpecificEnum_cKo;
          case "hljs-step21":
            return B.ClassificationSpecificEnum_UFf;
          case "hljs-stylus":
            return B.ClassificationSpecificEnum_yHZ;
          case "hljs-subunit":
            return B.ClassificationSpecificEnum_81b;
          case "hljs-swift":
            return B.ClassificationSpecificEnum_jmM;
          case "hljs-taggerscript":
            return B.ClassificationSpecificEnum_Qa6;
          case "hljs-tap":
            return B.ClassificationSpecificEnum_Gky1;
          case "hljs-tcl":
            return B.ClassificationSpecificEnum_V2j;
          case "hljs-tex":
            return B.ClassificationSpecificEnum_cuw0;
          case "hljs-thrift":
            return B.ClassificationSpecificEnum_Avr;
          case "hljs-tp":
            return B.ClassificationSpecificEnum_Oc1;
          case "hljs-twig":
            return B.ClassificationSpecificEnum_wAg;
          case "hljs-typescript":
            return B.ClassificationSpecificEnum_ON8;
          case "hljs-vala":
            return B.ClassificationSpecificEnum_w2d0;
          case "hljs-vbnet":
            return B.ClassificationSpecificEnum_oyU;
          case "hljs-vbscript-html":
            return B.ClassificationSpecificEnum_ftt;
          case "hljs-vbscript":
            return B.ClassificationSpecificEnum_8YE;
          case "hljs-verilog":
            return B.ClassificationSpecificEnum_NQk1;
          case "hljs-vhdl":
            return B.ClassificationSpecificEnum_8Gl;
          case "hljs-vim":
            return B.ClassificationSpecificEnum_9x82;
          case "hljs-x86asm":
            return B.ClassificationSpecificEnum_06J0;
          case "hljs-xl":
            return B.ClassificationSpecificEnum_fhf;
          case "hljs-xml":
            return B.ClassificationSpecificEnum_wlp8;
          case "hljs-xquery":
            return B.ClassificationSpecificEnum_4qR;
          case "hljs-yaml":
            return B.ClassificationSpecificEnum_AKW3;
          case "hljs-toml":
            return B.ClassificationSpecificEnum_MpF;
          case "hljs-zephir":
            return B.ClassificationSpecificEnum_8YO;
          case "hljs-html":
            return B.ClassificationSpecificEnum_p6R;
          case "groovy":
            return B.ClassificationSpecificEnum_groovy;
          case "kt":
            return B.ClassificationSpecificEnum_kt;
          case "el":
            return B.ClassificationSpecificEnum_el;
          case "clj":
            return B.ClassificationSpecificEnum_clj;
          case "ex":
            return B.ClassificationSpecificEnum_ex;
          case "adb":
            return B.ClassificationSpecificEnum_adb;
          case "ads":
            return B.ClassificationSpecificEnum_ads;
          case "agda":
            return B.ClassificationSpecificEnum_agda;
          case "elm":
            return B.ClassificationSpecificEnum_elm;
          case "exs":
            return B.ClassificationSpecificEnum_exs;
          case "glsl":
            return B.ClassificationSpecificEnum_glsl;
          case "ml":
            return B.ClassificationSpecificEnum_ml;
          case "lean":
            return B.ClassificationSpecificEnum_lean;
          case "lisp":
            return B.ClassificationSpecificEnum_lisp;
          case "rkt":
            return B.ClassificationSpecificEnum_rkt;
          case "sparql":
            return B.ClassificationSpecificEnum_sparql;
          case "vhdl":
            return B.ClassificationSpecificEnum_vhdl;
          case "zig":
            return B.ClassificationSpecificEnum_zig;
          case "dockerfile":
            return B.ClassificationSpecificEnum_dockerfile;
          case "f03":
            return B.ClassificationSpecificEnum_f03;
          case "f08":
            return B.ClassificationSpecificEnum_f08;
          case "f18":
            return B.ClassificationSpecificEnum_f18;
          case "f90":
            return B.ClassificationSpecificEnum_f90;
          case "f95":
            return B.ClassificationSpecificEnum_f95;
          case "jl":
            return B.ClassificationSpecificEnum_jl;
          case "mm":
            return B.ClassificationSpecificEnum_mm;
          case "scm":
            return B.ClassificationSpecificEnum_scm;
        }
      return null;
    }
  };
  A.CodeAnalyses.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.CodeAnalyses && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "CodeAnalyses[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.CodeAnalyses_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.CodeAnalyses_toJson_closure.prototype = {
    call$1(element) {
      return type$.CodeAnalysis._as(element).toJson$0();
    },
    $signature: 62
  };
  A.CodeAnalysis.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.CodeAnalysis && J.$eq$(other.schema, _this.schema) && other.tokenized === _this.tokenized && other.language == _this.language && other.type === _this.type && other.prediction === _this.prediction && other.similarity === _this.similarity && other.top5Colors === _this.top5Colors && other.top5Sorted === _this.top5Sorted && other.id === _this.id && other.analysis === _this.analysis && other.model.$eq(0, _this.model);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = J.get$hashCode$(_this.tokenized);
      t3 = _this.language;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.model;
      return t1 + t2 + t3 + A.Primitives_objectHashCode(_this.type) + A.Primitives_objectHashCode(_this.prediction) + A.Primitives_objectHashCode(_this.similarity) + J.get$hashCode$(_this.top5Colors) + J.get$hashCode$(_this.top5Sorted) + B.JSString_methods.get$hashCode(_this.id) + B.JSString_methods.get$hashCode(_this.analysis) + t4.get$hashCode(t4);
    },
    toString$0(_) {
      var _this = this;
      return "CodeAnalysis[schema=" + A.S(_this.schema) + ", tokenized=" + A.S(_this.tokenized) + ", language=" + A.S(_this.language) + ", type=" + _this.type.toString$0(0) + ", prediction=" + _this.prediction.toString$0(0) + ", similarity=" + _this.similarity.toString$0(0) + ", top5Colors=" + A.S(_this.top5Colors) + ", top5Sorted=" + A.S(_this.top5Sorted) + ", id=" + _this.id + ", analysis=" + _this.analysis + ", model=" + _this.model.toString$0(0) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "tokenized", _this.tokenized);
      t1 = _this.language;
      if (t1 != null)
        _json.$indexSet(0, "language", t1);
      _json.$indexSet(0, "type", _this.type.value);
      _json.$indexSet(0, "prediction", _this.prediction);
      _json.$indexSet(0, "similarity", _this.similarity);
      _json.$indexSet(0, "top5Colors", _this.top5Colors);
      _json.$indexSet(0, "top5Sorted", _this.top5Sorted);
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "analysis", _this.analysis);
      _json.$indexSet(0, "model", _this.model.toJson$0());
      return _json;
    }
  };
  A.ConnectorSnapshot.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ConnectorSnapshot && J.$eq$(other.schema, _this.schema) && other.context.$eq(0, _this.context) && other.assets.$eq(0, _this.assets);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.context;
      t3 = this.assets;
      return t1 + t2.get$hashCode(t2) + t3.get$hashCode(t3);
    },
    toString$0(_) {
      return "ConnectorSnapshot[schema=" + A.S(this.schema) + ", context=" + this.context.toString$0(0) + ", assets=" + this.assets.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "context", this.context.toJson$0());
      _json.$indexSet(0, "assets", this.assets.toJson$0());
      return _json;
    }
  };
  A.Context0.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Context0 && J.$eq$(other.schema, _this.schema) && other.os === _this.os && other.application.$eq(0, _this.application) && other.health.$eq(0, _this.health) && J.$eq$(other.user, _this.user);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.os);
      t3 = _this.application;
      t3 = t3.get$hashCode(t3);
      t4 = _this.health;
      t4 = t4.get$hashCode(t4);
      t5 = _this.user;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      return t1 + t2 + t3 + t4 + t5;
    },
    toString$0(_) {
      var _this = this;
      return "Context[schema=" + A.S(_this.schema) + ", os=" + _this.os + ", application=" + _this.application.toString$0(0) + ", health=" + _this.health.toString$0(0) + ", user=" + A.S(_this.user) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "os", _this.os);
      _json.$indexSet(0, "application", _this.application.toJson$0());
      _json.$indexSet(0, "health", _this.health.toJson$0());
      t1 = _this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1.toJson$0());
      return _json;
    }
  };
  A.DiscoveredAsset.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DiscoveredAsset && J.$eq$(other.schema, _this.schema) && J.$eq$(other.file, _this.file) && J.$eq$(other.fragment, _this.fragment) && other.directory == _this.directory && J.$eq$(other.metadata, _this.metadata) && J.$eq$(other.filters, _this.filters);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.file;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.fragment;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.directory;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = _this.metadata;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = _this.filters;
      t6 = t6 == null ? 0 : A.Primitives_objectHashCode(t6.iterable);
      return t1 + t2 + t3 + t4 + t5 + t6;
    },
    toString$0(_) {
      var _this = this;
      return "DiscoveredAsset[schema=" + A.S(_this.schema) + ", file=" + A.S(_this.file) + ", fragment=" + A.S(_this.fragment) + ", directory=" + A.S(_this.directory) + ", metadata=" + A.S(_this.metadata) + ", filters=" + A.S(_this.filters) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.file;
      if (t1 != null)
        _json.$indexSet(0, "file", t1.toJson$0());
      t1 = _this.fragment;
      if (t1 != null)
        _json.$indexSet(0, "fragment", t1.toJson$0());
      t1 = _this.directory;
      if (t1 != null)
        _json.$indexSet(0, "directory", t1);
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      t1 = _this.filters;
      if (t1 != null)
        _json.$indexSet(0, "filters", t1.toJson$0());
      return _json;
    }
  };
  A.DiscoveredAssets.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DiscoveredAssets && J.$eq$(other.schema, _this.schema) && other.application === _this.application && other.iterable === _this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(this.application) + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "DiscoveredAssets[schema=" + A.S(this.schema) + ", application=" + this.application + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "application", this.application);
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.DiscoveredAssets_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.DiscoveredAssets_toJson_closure.prototype = {
    call$1(element) {
      return type$.DiscoveredAsset._as(element).toJson$0();
    },
    $signature: 63
  };
  A.DiscoveredHtmlWebpage.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DiscoveredHtmlWebpage && J.$eq$(other.schema, _this.schema) && other.assets.$eq(0, _this.assets) && other.url === _this.url;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.assets;
      return t1 + t2.get$hashCode(t2) + B.JSString_methods.get$hashCode(this.url);
    },
    toString$0(_) {
      return "DiscoveredHtmlWebpage[schema=" + A.S(this.schema) + ", assets=" + this.assets.toString$0(0) + ", url=" + this.url + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "assets", this.assets.toJson$0());
      _json.$indexSet(0, "url", this.url);
      return _json;
    }
  };
  A.DiscoveredHtmlWebpages.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DiscoveredHtmlWebpages && J.$eq$(other.schema, _this.schema) && other.iterable === _this.iterable && other.application === _this.application;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable) + B.JSString_methods.get$hashCode(this.application);
    },
    toString$0(_) {
      return "DiscoveredHtmlWebpages[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + ", application=" + this.application + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.DiscoveredHtmlWebpages_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      _json.$indexSet(0, "application", this.application);
      return _json;
    }
  };
  A.DiscoveredHtmlWebpages_toJson_closure.prototype = {
    call$1(element) {
      return type$.DiscoveredHtmlWebpage._as(element).toJson$0();
    },
    $signature: 64
  };
  A.DiscoveredRelatedTag.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.DiscoveredRelatedTag && J.$eq$(other.schema, this.schema) && other.seed.$eq(0, this.seed);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.seed;
      return t1 + t2.get$hashCode(t2);
    },
    toString$0(_) {
      return "DiscoveredRelatedTag[schema=" + A.S(this.schema) + ", seed=" + this.seed.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "seed", this.seed.toJson$0());
      return _json;
    }
  };
  A.DiscoveredRelatedTags.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DiscoveredRelatedTags && J.$eq$(other.schema, _this.schema) && other.application === _this.application && other.iterable === _this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(this.application) + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "DiscoveredRelatedTags[schema=" + A.S(this.schema) + ", application=" + this.application + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "application", this.application);
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.DiscoveredRelatedTags_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.DiscoveredRelatedTags_toJson_closure.prototype = {
    call$1(element) {
      return type$.DiscoveredRelatedTag._as(element).toJson$0();
    },
    $signature: 65
  };
  A.DiscoveredSensitive.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DiscoveredSensitive && J.$eq$(other.schema, _this.schema) && other.seed.$eq(0, _this.seed) && other.text === _this.text;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.seed;
      return t1 + t2.get$hashCode(t2) + B.JSString_methods.get$hashCode(this.text);
    },
    toString$0(_) {
      return "DiscoveredSensitive[schema=" + A.S(this.schema) + ", seed=" + this.seed.toString$0(0) + ", text=" + this.text + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "seed", this.seed.toJson$0());
      _json.$indexSet(0, "text", this.text);
      return _json;
    }
  };
  A.DiscoveredSensitives.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DiscoveredSensitives && J.$eq$(other.schema, _this.schema) && other.iterable === _this.iterable && other.application === _this.application;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable) + B.JSString_methods.get$hashCode(this.application);
    },
    toString$0(_) {
      return "DiscoveredSensitives[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + ", application=" + this.application + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.DiscoveredSensitives_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      _json.$indexSet(0, "application", this.application);
      return _json;
    }
  };
  A.DiscoveredSensitives_toJson_closure.prototype = {
    call$1(element) {
      return type$.DiscoveredSensitive._as(element).toJson$0();
    },
    $signature: 66
  };
  A.Distribution.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Distribution && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.share.$eq(0, _this.share) && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted) && J.$eq$(other.mailgun, _this.mailgun) && J.$eq$(other.github, _this.github);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.share;
      t3 = t3.get$hashCode(t3);
      t4 = _this.created;
      t4 = t4.get$hashCode(t4);
      t5 = _this.updated;
      t5 = t5.get$hashCode(t5);
      t6 = _this.deleted;
      t6 = t6 == null ? 0 : t6.get$hashCode(t6);
      t7 = _this.mailgun;
      t7 = t7 == null ? 0 : t7.get$hashCode(t7);
      t8 = _this.github;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8;
    },
    toString$0(_) {
      var _this = this;
      return "Distribution[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", share=" + _this.share.toString$0(0) + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", mailgun=" + A.S(_this.mailgun) + ", github=" + A.S(_this.github) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "share", _this.share.toJson$0());
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      t1 = _this.mailgun;
      if (t1 != null)
        _json.$indexSet(0, "mailgun", t1.toJson$0());
      t1 = _this.github;
      if (t1 != null)
        _json.$indexSet(0, "github", t1.toJson$0());
      return _json;
    }
  };
  A.Distributions.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Distributions && other.iterable === this.iterable && J.$eq$(other.schema, this.schema);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = A.Primitives_objectHashCode(this.iterable),
        t2 = this.schema;
      return t1 + (t2 == null ? 0 : B.JSInt_methods.get$hashCode(t2.migration) + A.Primitives_objectHashCode(t2.semantic));
    },
    toString$0(_) {
      return "Distributions[iterable=" + A.S(this.iterable) + ", schema=" + A.S(this.schema) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.iterable,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Distributions_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      return _json;
    }
  };
  A.Distributions_toJson_closure.prototype = {
    call$1(element) {
      return type$.Distribution._as(element).toJson$0();
    },
    $signature: 67
  };
  A.Edges.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Edges && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Edges[iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.iterable,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Edges_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Edges_toJson_closure.prototype = {
    call$1(element) {
      return type$.Node_2._as(element).toJson$0();
    },
    $signature: 68
  };
  A.EmbeddedModelSchema.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.EmbeddedModelSchema && other.migration === this.migration && other.semantic === this.semantic;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this.migration) + A.Primitives_objectHashCode(this.semantic);
    },
    toString$0(_) {
      return "EmbeddedModelSchema[migration=" + this.migration + ", semantic=" + this.semantic.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "migration", this.migration);
      _json.$indexSet(0, "semantic", "MAJOR_0_MINOR_0_PATCH_1");
      return _json;
    }
  };
  A.EmbeddedModelSchemaSemanticVersionEnum.prototype = {
    toString$0(_) {
      return "MAJOR_0_MINOR_0_PATCH_1";
    },
    toJson$0() {
      return "MAJOR_0_MINOR_0_PATCH_1";
    }
  };
  A.EmbeddedModelSchemaSemanticVersionEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "MAJOR_0_MINOR_0_PATCH_1":
            return B.C_EmbeddedModelSchemaSemanticVersionEnum;
        }
      return null;
    }
  };
  A.Embedding.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Embedding && other.raw === _this.raw && other.model.$eq(0, _this.model) && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t3, t4, t5, _this = this,
        t1 = J.get$hashCode$(_this.raw),
        t2 = _this.model;
      t2 = t2.get$hashCode(t2);
      t3 = _this.created;
      t3 = t3.get$hashCode(t3);
      t4 = _this.updated;
      t4 = t4.get$hashCode(t4);
      t5 = _this.deleted;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      return t1 + t2 + t3 + t4 + t5;
    },
    toString$0(_) {
      var _this = this;
      return "Embedding[raw=" + A.S(_this.raw) + ", model=" + _this.model.toString$0(0) + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + "]";
    },
    toJson$0() {
      var t1, _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "raw", _this.raw);
      _json.$indexSet(0, "model", _this.model.toJson$0());
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      return _json;
    }
  };
  A.Embeddings.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Embeddings && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Embeddings[iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.iterable,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Embeddings_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Embeddings_toJson_closure.prototype = {
    call$1(element) {
      return type$.Embedding._as(element).toJson$0();
    },
    $signature: 69
  };
  A.ExportedAsset.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ExportedAsset && other.name === _this.name && other.description === _this.description && other.created.$eq(0, _this.created) && other.raw.$eq(0, _this.raw);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.created,
        t2 = _this.raw;
      return B.JSString_methods.get$hashCode(_this.name) + B.JSString_methods.get$hashCode(_this.description) + t1.get$hashCode(t1) + t2.get$hashCode(t2);
    },
    toString$0(_) {
      var _this = this;
      return "ExportedAsset[name=" + _this.name + ", description=" + _this.description + ", created=" + _this.created.toString$0(0) + ", raw=" + _this.raw.toString$0(0) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "name", _this.name);
      _json.$indexSet(0, "description", _this.description);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "raw", _this.raw.toJson$0());
      return _json;
    }
  };
  A.ExportedDatabase.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ExportedDatabase && other.analyses === _this.analyses && other.applications === _this.applications && other.assets === _this.assets && other.codeAnalyses === _this.codeAnalyses && other.files === _this.files && other.formatMetrics === _this.formatMetrics && other.formats === _this.formats && other.fragments === _this.fragments && other.imageAnalyses === _this.imageAnalyses && other.models === _this.models && other.ocrAnalyses === _this.ocrAnalyses && other.persons === _this.persons && other.sensitives === _this.sensitives && other.tags === _this.tags && other.websites === _this.websites && other.values.$eq(0, _this.values) && other.version === _this.version && J.$eq$(other.schema, _this.schema) && other.relationships === _this.relationships && other.activities === _this.activities;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t17, t18, _this = this,
        t1 = J.get$hashCode$(_this.analyses),
        t2 = J.get$hashCode$(_this.applications),
        t3 = J.get$hashCode$(_this.assets),
        t4 = J.get$hashCode$(_this.codeAnalyses),
        t5 = J.get$hashCode$(_this.files),
        t6 = J.get$hashCode$(_this.formatMetrics),
        t7 = J.get$hashCode$(_this.formats),
        t8 = J.get$hashCode$(_this.fragments),
        t9 = J.get$hashCode$(_this.imageAnalyses),
        t10 = J.get$hashCode$(_this.models),
        t11 = J.get$hashCode$(_this.ocrAnalyses),
        t12 = J.get$hashCode$(_this.persons),
        t13 = J.get$hashCode$(_this.sensitives),
        t14 = J.get$hashCode$(_this.tags),
        t15 = J.get$hashCode$(_this.websites),
        t16 = _this.values;
      t16 = t16.get$hashCode(t16);
      t17 = B.JSString_methods.get$hashCode(_this.version);
      t18 = _this.schema;
      t18 = t18 == null ? 0 : B.JSInt_methods.get$hashCode(t18.migration) + A.Primitives_objectHashCode(t18.semantic);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12 + t13 + t14 + t15 + t16 + t17 + t18 + J.get$hashCode$(_this.relationships) + J.get$hashCode$(_this.activities);
    },
    toString$0(_) {
      var _this = this;
      return "ExportedDatabase[analyses=" + A.S(_this.analyses) + ", applications=" + A.S(_this.applications) + ", assets=" + A.S(_this.assets) + ", codeAnalyses=" + A.S(_this.codeAnalyses) + ", files=" + A.S(_this.files) + ", formatMetrics=" + A.S(_this.formatMetrics) + ", formats=" + A.S(_this.formats) + ", fragments=" + A.S(_this.fragments) + ", imageAnalyses=" + A.S(_this.imageAnalyses) + ", models=" + A.S(_this.models) + ", ocrAnalyses=" + A.S(_this.ocrAnalyses) + ", persons=" + A.S(_this.persons) + ", sensitives=" + A.S(_this.sensitives) + ", tags=" + A.S(_this.tags) + ", websites=" + A.S(_this.websites) + ", values=" + _this.values.toString$0(0) + ", version=" + _this.version + ", schema=" + A.S(_this.schema) + ", relationships=" + A.S(_this.relationships) + ", activities=" + A.S(_this.activities) + "]";
    },
    toJson$0() {
      var t1, _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "analyses", _this.analyses);
      _json.$indexSet(0, "applications", _this.applications);
      _json.$indexSet(0, "assets", _this.assets);
      _json.$indexSet(0, "codeAnalyses", _this.codeAnalyses);
      _json.$indexSet(0, "files", _this.files);
      _json.$indexSet(0, "formatMetrics", _this.formatMetrics);
      _json.$indexSet(0, "formats", _this.formats);
      _json.$indexSet(0, "fragments", _this.fragments);
      _json.$indexSet(0, "imageAnalyses", _this.imageAnalyses);
      _json.$indexSet(0, "models", _this.models);
      _json.$indexSet(0, "ocrAnalyses", _this.ocrAnalyses);
      _json.$indexSet(0, "persons", _this.persons);
      _json.$indexSet(0, "sensitives", _this.sensitives);
      _json.$indexSet(0, "tags", _this.tags);
      _json.$indexSet(0, "websites", _this.websites);
      _json.$indexSet(0, "values", _this.values.toJson$0());
      _json.$indexSet(0, "version", _this.version);
      t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "relationships", _this.relationships);
      _json.$indexSet(0, "activities", _this.activities);
      return _json;
    }
  };
  A.ExportedDatabaseFormat.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ExportedDatabaseFormat && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.raw === _this.raw;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(this.id) + J.get$hashCode$(this.raw);
    },
    toString$0(_) {
      return "ExportedDatabaseFormat[schema=" + A.S(this.schema) + ", id=" + this.id + ", raw=" + A.S(this.raw) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", this.id);
      _json.$indexSet(0, "raw", this.raw);
      return _json;
    }
  };
  A.ExportedDatabaseFormats.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.ExportedDatabaseFormats && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "ExportedDatabaseFormats[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.ExportedDatabaseFormats_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.ExportedDatabaseFormats_toJson_closure.prototype = {
    call$1(element) {
      return type$.ExportedDatabaseFormat._as(element).toJson$0();
    },
    $signature: 70
  };
  A.ExternalProvider.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ExternalProvider && J.$eq$(other.schema, _this.schema) && other.type === _this.type && other.userId === _this.userId && other.accessToken == _this.accessToken && other.expiresIn == _this.expiresIn && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.profileData, _this.profileData) && other.connection == _this.connection && other.isSocial == _this.isSocial;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = A.Primitives_objectHashCode(_this.type);
      t3 = B.JSString_methods.get$hashCode(_this.userId);
      t4 = _this.accessToken;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = _this.expiresIn;
      t5 = t5 == null ? 0 : B.JSInt_methods.get$hashCode(t5);
      t6 = _this.created;
      t6 = t6.get$hashCode(t6);
      t7 = _this.updated;
      t7 = t7.get$hashCode(t7);
      t8 = _this.profileData;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      t9 = _this.connection;
      t9 = t9 == null ? 0 : B.JSString_methods.get$hashCode(t9);
      t10 = _this.isSocial;
      t10 = t10 == null ? 0 : B.JSBool_methods.get$hashCode(t10);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10;
    },
    toString$0(_) {
      var _this = this;
      return "ExternalProvider[schema=" + A.S(_this.schema) + ", type=" + _this.type.toString$0(0) + ", userId=" + _this.userId + ", accessToken=" + A.S(_this.accessToken) + ", expiresIn=" + A.S(_this.expiresIn) + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", profileData=" + A.S(_this.profileData) + ", connection=" + A.S(_this.connection) + ", isSocial=" + A.S(_this.isSocial) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "type", _this.type.value);
      _json.$indexSet(0, "user_id", _this.userId);
      t1 = _this.accessToken;
      if (t1 != null)
        _json.$indexSet(0, "access_token", t1);
      t1 = _this.expiresIn;
      if (t1 != null)
        _json.$indexSet(0, "expires_in", t1);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.profileData;
      if (t1 != null)
        _json.$indexSet(0, "profileData", t1.toJson$0());
      t1 = _this.connection;
      if (t1 != null)
        _json.$indexSet(0, "connection", t1);
      t1 = _this.isSocial;
      if (t1 != null)
        _json.$indexSet(0, "isSocial", t1);
      return _json;
    }
  };
  A.ExternalProviderProfileData.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ExternalProviderProfileData && other.name == _this.name && other.picture == _this.picture && other.nickname == _this.nickname && other.email == _this.email && other.emailVerified == _this.emailVerified && other.nodeId == _this.nodeId && other.gravatarId == _this.gravatarId && other.url == _this.url && other.htmlUrl == _this.htmlUrl && other.followersUrl == _this.followersUrl && other.followingUrl == _this.followingUrl && other.gistsUrl == _this.gistsUrl && other.starredUrl == _this.starredUrl && other.subscriptionsUrl == _this.subscriptionsUrl && other.organizationsUrl == _this.organizationsUrl && other.reposUrl == _this.reposUrl && other.eventsUrl == _this.eventsUrl && other.receivedEventsUrl == _this.receivedEventsUrl && other.type == _this.type && other.siteAdmin == _this.siteAdmin && other.company == _this.company && other.blog == _this.blog && other.location == _this.location && other.hireable == _this.hireable && other.bio == _this.bio && other.twitterUsername == _this.twitterUsername && other.publicRepos == _this.publicRepos && other.publicGists == _this.publicGists && other.followers == _this.followers && other.following == _this.following && other.createdAt == _this.createdAt && other.updatedAt == _this.updatedAt && other.privateGists == _this.privateGists && other.totalPrivateRepos == _this.totalPrivateRepos && other.ownedPrivateRepos == _this.ownedPrivateRepos && other.diskUsage == _this.diskUsage && other.collaborators == _this.collaborators && other.twoFactorAuthentication == _this.twoFactorAuthentication;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, _this = this,
        t1 = _this.name;
      t1 = t1 == null ? 0 : B.JSString_methods.get$hashCode(t1);
      t2 = _this.picture;
      t2 = t2 == null ? 0 : B.JSString_methods.get$hashCode(t2);
      t3 = _this.nickname;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.email;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = _this.emailVerified;
      t5 = t5 == null ? 0 : B.JSBool_methods.get$hashCode(t5);
      t6 = _this.nodeId;
      t6 = t6 == null ? 0 : B.JSString_methods.get$hashCode(t6);
      t7 = _this.gravatarId;
      t7 = t7 == null ? 0 : B.JSString_methods.get$hashCode(t7);
      t8 = _this.url;
      t8 = t8 == null ? 0 : B.JSString_methods.get$hashCode(t8);
      t9 = _this.htmlUrl;
      t9 = t9 == null ? 0 : B.JSString_methods.get$hashCode(t9);
      t10 = _this.followersUrl;
      t10 = t10 == null ? 0 : B.JSString_methods.get$hashCode(t10);
      t11 = _this.followingUrl;
      t11 = t11 == null ? 0 : B.JSString_methods.get$hashCode(t11);
      t12 = _this.gistsUrl;
      t12 = t12 == null ? 0 : B.JSString_methods.get$hashCode(t12);
      t13 = _this.starredUrl;
      t13 = t13 == null ? 0 : B.JSString_methods.get$hashCode(t13);
      t14 = _this.subscriptionsUrl;
      t14 = t14 == null ? 0 : B.JSString_methods.get$hashCode(t14);
      t15 = _this.organizationsUrl;
      t15 = t15 == null ? 0 : B.JSString_methods.get$hashCode(t15);
      t16 = _this.reposUrl;
      t16 = t16 == null ? 0 : B.JSString_methods.get$hashCode(t16);
      t17 = _this.eventsUrl;
      t17 = t17 == null ? 0 : B.JSString_methods.get$hashCode(t17);
      t18 = _this.receivedEventsUrl;
      t18 = t18 == null ? 0 : B.JSString_methods.get$hashCode(t18);
      t19 = _this.type;
      t19 = t19 == null ? 0 : B.JSString_methods.get$hashCode(t19);
      t20 = _this.siteAdmin;
      t20 = t20 == null ? 0 : B.JSBool_methods.get$hashCode(t20);
      t21 = _this.company;
      t21 = t21 == null ? 0 : B.JSString_methods.get$hashCode(t21);
      t22 = _this.blog;
      t22 = t22 == null ? 0 : B.JSString_methods.get$hashCode(t22);
      t23 = _this.location;
      t23 = t23 == null ? 0 : B.JSString_methods.get$hashCode(t23);
      t24 = _this.hireable;
      t24 = t24 == null ? 0 : B.JSBool_methods.get$hashCode(t24);
      t25 = _this.bio;
      t25 = t25 == null ? 0 : B.JSString_methods.get$hashCode(t25);
      t26 = _this.twitterUsername;
      t26 = t26 == null ? 0 : B.JSString_methods.get$hashCode(t26);
      t27 = _this.publicRepos;
      t27 = t27 == null ? 0 : B.JSInt_methods.get$hashCode(t27);
      t28 = _this.publicGists;
      t28 = t28 == null ? 0 : B.JSInt_methods.get$hashCode(t28);
      t29 = _this.followers;
      t29 = t29 == null ? 0 : B.JSInt_methods.get$hashCode(t29);
      t30 = _this.following;
      t30 = t30 == null ? 0 : B.JSInt_methods.get$hashCode(t30);
      t31 = _this.createdAt;
      t31 = t31 == null ? 0 : B.JSString_methods.get$hashCode(t31);
      t32 = _this.updatedAt;
      t32 = t32 == null ? 0 : B.JSString_methods.get$hashCode(t32);
      t33 = _this.privateGists;
      t33 = t33 == null ? 0 : B.JSInt_methods.get$hashCode(t33);
      t34 = _this.totalPrivateRepos;
      t34 = t34 == null ? 0 : B.JSInt_methods.get$hashCode(t34);
      t35 = _this.ownedPrivateRepos;
      t35 = t35 == null ? 0 : B.JSInt_methods.get$hashCode(t35);
      t36 = _this.diskUsage;
      t36 = t36 == null ? 0 : B.JSInt_methods.get$hashCode(t36);
      t37 = _this.collaborators;
      t37 = t37 == null ? 0 : B.JSInt_methods.get$hashCode(t37);
      t38 = _this.twoFactorAuthentication;
      t38 = t38 == null ? 0 : B.JSBool_methods.get$hashCode(t38);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12 + t13 + t14 + t15 + t16 + t17 + t18 + t19 + t20 + t21 + t22 + t23 + t24 + t25 + t26 + t27 + t28 + t29 + t30 + t31 + t32 + t33 + t34 + t35 + t36 + t37 + t38;
    },
    toString$0(_) {
      var _this = this;
      return "ExternalProviderProfileData[name=" + A.S(_this.name) + ", picture=" + A.S(_this.picture) + ", nickname=" + A.S(_this.nickname) + ", email=" + A.S(_this.email) + ", emailVerified=" + A.S(_this.emailVerified) + ", nodeId=" + A.S(_this.nodeId) + ", gravatarId=" + A.S(_this.gravatarId) + ", url=" + A.S(_this.url) + ", htmlUrl=" + A.S(_this.htmlUrl) + ", followersUrl=" + A.S(_this.followersUrl) + ", followingUrl=" + A.S(_this.followingUrl) + ", gistsUrl=" + A.S(_this.gistsUrl) + ", starredUrl=" + A.S(_this.starredUrl) + ", subscriptionsUrl=" + A.S(_this.subscriptionsUrl) + ", organizationsUrl=" + A.S(_this.organizationsUrl) + ", reposUrl=" + A.S(_this.reposUrl) + ", eventsUrl=" + A.S(_this.eventsUrl) + ", receivedEventsUrl=" + A.S(_this.receivedEventsUrl) + ", type=" + A.S(_this.type) + ", siteAdmin=" + A.S(_this.siteAdmin) + ", company=" + A.S(_this.company) + ", blog=" + A.S(_this.blog) + ", location=" + A.S(_this.location) + ", hireable=" + A.S(_this.hireable) + ", bio=" + A.S(_this.bio) + ", twitterUsername=" + A.S(_this.twitterUsername) + ", publicRepos=" + A.S(_this.publicRepos) + ", publicGists=" + A.S(_this.publicGists) + ", followers=" + A.S(_this.followers) + ", following=" + A.S(_this.following) + ", createdAt=" + A.S(_this.createdAt) + ", updatedAt=" + A.S(_this.updatedAt) + ", privateGists=" + A.S(_this.privateGists) + ", totalPrivateRepos=" + A.S(_this.totalPrivateRepos) + ", ownedPrivateRepos=" + A.S(_this.ownedPrivateRepos) + ", diskUsage=" + A.S(_this.diskUsage) + ", collaborators=" + A.S(_this.collaborators) + ", twoFactorAuthentication=" + A.S(_this.twoFactorAuthentication) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      t1 = _this.picture;
      if (t1 != null)
        _json.$indexSet(0, "picture", t1);
      t1 = _this.nickname;
      if (t1 != null)
        _json.$indexSet(0, "nickname", t1);
      t1 = _this.email;
      if (t1 != null)
        _json.$indexSet(0, "email", t1);
      t1 = _this.emailVerified;
      if (t1 != null)
        _json.$indexSet(0, "email_verified", t1);
      t1 = _this.nodeId;
      if (t1 != null)
        _json.$indexSet(0, "node_id", t1);
      t1 = _this.gravatarId;
      if (t1 != null)
        _json.$indexSet(0, "gravatar_id", t1);
      t1 = _this.url;
      if (t1 != null)
        _json.$indexSet(0, "url", t1);
      t1 = _this.htmlUrl;
      if (t1 != null)
        _json.$indexSet(0, "html_url", t1);
      t1 = _this.followersUrl;
      if (t1 != null)
        _json.$indexSet(0, "followers_url", t1);
      t1 = _this.followingUrl;
      if (t1 != null)
        _json.$indexSet(0, "following_url", t1);
      t1 = _this.gistsUrl;
      if (t1 != null)
        _json.$indexSet(0, "gists_url", t1);
      t1 = _this.starredUrl;
      if (t1 != null)
        _json.$indexSet(0, "starred_url", t1);
      t1 = _this.subscriptionsUrl;
      if (t1 != null)
        _json.$indexSet(0, "subscriptions_url", t1);
      t1 = _this.organizationsUrl;
      if (t1 != null)
        _json.$indexSet(0, "organizations_url", t1);
      t1 = _this.reposUrl;
      if (t1 != null)
        _json.$indexSet(0, "repos_url", t1);
      t1 = _this.eventsUrl;
      if (t1 != null)
        _json.$indexSet(0, "events_url", t1);
      t1 = _this.receivedEventsUrl;
      if (t1 != null)
        _json.$indexSet(0, "received_events_url", t1);
      t1 = _this.type;
      if (t1 != null)
        _json.$indexSet(0, "type", t1);
      t1 = _this.siteAdmin;
      if (t1 != null)
        _json.$indexSet(0, "site_admin", t1);
      t1 = _this.company;
      if (t1 != null)
        _json.$indexSet(0, "company", t1);
      t1 = _this.blog;
      if (t1 != null)
        _json.$indexSet(0, "blog", t1);
      t1 = _this.location;
      if (t1 != null)
        _json.$indexSet(0, "location", t1);
      t1 = _this.hireable;
      if (t1 != null)
        _json.$indexSet(0, "hireable", t1);
      t1 = _this.bio;
      if (t1 != null)
        _json.$indexSet(0, "bio", t1);
      t1 = _this.twitterUsername;
      if (t1 != null)
        _json.$indexSet(0, "twitter_username", t1);
      t1 = _this.publicRepos;
      if (t1 != null)
        _json.$indexSet(0, "public_repos", t1);
      t1 = _this.publicGists;
      if (t1 != null)
        _json.$indexSet(0, "public_gists", t1);
      t1 = _this.followers;
      if (t1 != null)
        _json.$indexSet(0, "followers", t1);
      t1 = _this.following;
      if (t1 != null)
        _json.$indexSet(0, "following", t1);
      t1 = _this.createdAt;
      if (t1 != null)
        _json.$indexSet(0, "created_at", t1);
      t1 = _this.updatedAt;
      if (t1 != null)
        _json.$indexSet(0, "updated_at", t1);
      t1 = _this.privateGists;
      if (t1 != null)
        _json.$indexSet(0, "private_gists", t1);
      t1 = _this.totalPrivateRepos;
      if (t1 != null)
        _json.$indexSet(0, "total_private_repos", t1);
      t1 = _this.ownedPrivateRepos;
      if (t1 != null)
        _json.$indexSet(0, "owned_private_repos", t1);
      t1 = _this.diskUsage;
      if (t1 != null)
        _json.$indexSet(0, "disk_usage", t1);
      t1 = _this.collaborators;
      if (t1 != null)
        _json.$indexSet(0, "collaborators", t1);
      t1 = _this.twoFactorAuthentication;
      if (t1 != null)
        _json.$indexSet(0, "two_factor_authentication", t1);
      return _json;
    }
  };
  A.ExternalProviderTypeEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.ExternalProviderTypeEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "github":
            return B.ExternalProviderTypeEnum_github;
          case "auth0":
            return B.ExternalProviderTypeEnum_auth0;
          case "google-oauth2":
            return B.ExternalProviderTypeEnum_BuK;
          case "bitbucket":
            return B.ExternalProviderTypeEnum_bitbucket;
          case "linkedin":
            return B.ExternalProviderTypeEnum_linkedin;
          case "twitter":
            return B.ExternalProviderTypeEnum_twitter;
          case "facebook":
            return B.ExternalProviderTypeEnum_facebook;
          case "waad":
            return B.ExternalProviderTypeEnum_waad;
        }
      return null;
    }
  };
  A.ExternalProviders.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.ExternalProviders && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "ExternalProviders[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.ExternalProviders_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.ExternalProviders_toJson_closure.prototype = {
    call$1(element) {
      return type$.ExternalProvider._as(element).toJson$0();
    },
    $signature: 71
  };
  A.ExternallySourcedEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.ExternallySourcedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "TWITTER":
            return B.ExternallySourcedEnum_TWITTER;
          case "MEDIUM":
            return B.ExternallySourcedEnum_MEDIUM;
          case "LINKED_IN":
            return B.ExternallySourcedEnum_LINKED_IN;
          case "INSTAGRAM":
            return B.ExternallySourcedEnum_INSTAGRAM;
          case "FACEBOOK":
            return B.ExternallySourcedEnum_FACEBOOK;
          case "REDDIT":
            return B.ExternallySourcedEnum_REDDIT;
          case "DISCORD":
            return B.ExternallySourcedEnum_DISCORD;
          case "BIT_BUCKET":
            return B.ExternallySourcedEnum_BIT_BUCKET;
          case "GIT_LAB":
            return B.ExternallySourcedEnum_GIT_LAB;
          case "GIT_HUB":
            return B.ExternallySourcedEnum_GIT_HUB;
          case "SLACK":
            return B.ExternallySourcedEnum_SLACK;
          case "MAILGUN":
            return B.ExternallySourcedEnum_MAILGUN;
        }
      return null;
    }
  };
  A.FileFormat.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FileFormat && J.$eq$(other.schema, _this.schema) && J.$eq$(other.bytes, _this.bytes) && J.$eq$(other.string, _this.string);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.bytes;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = this.string;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "FileFormat[schema=" + A.S(this.schema) + ", bytes=" + A.S(this.bytes) + ", string=" + A.S(this.string) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.bytes;
      if (t1 != null)
        _json.$indexSet(0, "bytes", t1.toJson$0());
      t1 = this.string;
      if (t1 != null)
        _json.$indexSet(0, "string", t1.toJson$0());
      return _json;
    }
  };
  A.FileMetadata.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FileMetadata && J.$eq$(other.schema, _this.schema) && other.name == _this.name && other.ext == _this.ext && other.size == _this.size;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.name;
      t2 = t2 == null ? 0 : B.JSString_methods.get$hashCode(t2);
      t3 = _this.ext;
      t3 = t3 == null ? 0 : A.Primitives_objectHashCode(t3);
      t4 = _this.size;
      t4 = t4 == null ? 0 : B.JSInt_methods.get$hashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "FileMetadata[schema=" + A.S(_this.schema) + ", name=" + A.S(_this.name) + ", ext=" + A.S(_this.ext) + ", size=" + A.S(_this.size) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      t1 = _this.ext;
      if (t1 != null)
        _json.$indexSet(0, "ext", t1.value);
      t1 = _this.size;
      if (t1 != null)
        _json.$indexSet(0, "size", t1);
      return _json;
    }
  };
  A.FlattenedActivities.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.FlattenedActivities && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "FlattenedActivities[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.FlattenedActivities_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.FlattenedActivities_toJson_closure.prototype = {
    call$1(element) {
      return type$.ReferencedActivity._as(element).toJson$0();
    },
    $signature: 72
  };
  A.FlattenedActivity.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedActivity && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && other.event.$eq(0, _this.event) && other.application.$eq(0, _this.application) && J.$eq$(other.deleted, _this.deleted) && J.$eq$(other.asset, _this.asset) && J.$eq$(other.format, _this.format) && J.$eq$(other.user, _this.user) && other.mechanism === _this.mechanism && other.rank == _this.rank;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.created;
      t3 = t3.get$hashCode(t3);
      t4 = _this.updated;
      t4 = t4.get$hashCode(t4);
      t5 = _this.event;
      t5 = t5.get$hashCode(t5);
      t6 = _this.application;
      t6 = t6.get$hashCode(t6);
      t7 = _this.deleted;
      t7 = t7 == null ? 0 : t7.get$hashCode(t7);
      t8 = _this.asset;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      t9 = _this.format;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      t10 = _this.user;
      t10 = t10 == null ? 0 : t10.get$hashCode(t10);
      t11 = A.Primitives_objectHashCode(_this.mechanism);
      t12 = _this.rank;
      t12 = t12 == null ? 0 : B.JSInt_methods.get$hashCode(t12);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12;
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedActivity[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", event=" + _this.event.toString$0(0) + ", application=" + _this.application.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", asset=" + A.S(_this.asset) + ", format=" + A.S(_this.format) + ", user=" + A.S(_this.user) + ", mechanism=" + _this.mechanism.toString$0(0) + ", rank=" + A.S(_this.rank) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      _json.$indexSet(0, "event", _this.event.toJson$0());
      _json.$indexSet(0, "application", _this.application.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      t1 = _this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      t1 = _this.format;
      if (t1 != null)
        _json.$indexSet(0, "format", t1.toJson$0());
      t1 = _this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1.toJson$0());
      _json.$indexSet(0, "mechanism", _this.mechanism.value);
      t1 = _this.rank;
      if (t1 != null)
        _json.$indexSet(0, "rank", t1);
      return _json;
    }
  };
  A.FlattenedAnalysis.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedAnalysis && J.$eq$(other.schema, _this.schema) && J.$eq$(other.code, _this.code) && other.id === _this.id && other.format === _this.format && J.$eq$(other.image, _this.image);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.code;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = B.JSString_methods.get$hashCode(_this.id);
      t4 = B.JSString_methods.get$hashCode(_this.format);
      t5 = _this.image;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      return t1 + t2 + t3 + t4 + t5;
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedAnalysis[schema=" + A.S(_this.schema) + ", code=" + A.S(_this.code) + ", id=" + _this.id + ", format=" + _this.format + ", image=" + A.S(_this.image) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.code;
      if (t1 != null)
        _json.$indexSet(0, "code", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "format", _this.format);
      t1 = _this.image;
      if (t1 != null)
        _json.$indexSet(0, "image", t1.toJson$0());
      return _json;
    }
  };
  A.FlattenedAsset.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedAsset && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.name == _this.name && other.description == _this.description && other.creator === _this.creator && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.synced, _this.synced) && J.$eq$(other.deleted, _this.deleted) && other.formats.$eq(0, _this.formats) && other.preview.$eq(0, _this.preview) && other.original === _this.original && J.$eq$(other.shares, _this.shares) && other.mechanism === _this.mechanism && J.$eq$(other.websites, _this.websites) && J.$eq$(other.interacted, _this.interacted) && J.$eq$(other.tags, _this.tags) && J.$eq$(other.sensitives, _this.sensitives) && J.$eq$(other.persons, _this.persons) && other.curated == _this.curated && other.discovered == _this.discovered && J.$eq$(other.activities, _this.activities) && J.$eq$(other.score, _this.score) && other.favorited == _this.favorited;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.name;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.description;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = B.JSString_methods.get$hashCode(_this.creator);
      t6 = _this.created;
      t6 = t6.get$hashCode(t6);
      t7 = _this.updated;
      t7 = t7.get$hashCode(t7);
      t8 = _this.synced;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      t9 = _this.deleted;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      t10 = _this.formats;
      t10 = t10.get$hashCode(t10);
      t11 = _this.preview;
      t11 = t11.get$hashCode(t11);
      t12 = B.JSString_methods.get$hashCode(_this.original);
      t13 = _this.shares;
      t13 = t13 == null ? 0 : t13.get$hashCode(t13);
      t14 = A.Primitives_objectHashCode(_this.mechanism);
      t15 = _this.websites;
      t15 = t15 == null ? 0 : t15.get$hashCode(t15);
      t16 = _this.interacted;
      t16 = t16 == null ? 0 : t16.get$hashCode(t16);
      t17 = _this.tags;
      t17 = t17 == null ? 0 : t17.get$hashCode(t17);
      t18 = _this.sensitives;
      t18 = t18 == null ? 0 : t18.get$hashCode(t18);
      t19 = _this.persons;
      t19 = t19 == null ? 0 : t19.get$hashCode(t19);
      t20 = _this.curated;
      t20 = t20 == null ? 0 : B.JSBool_methods.get$hashCode(t20);
      t21 = _this.discovered;
      t21 = t21 == null ? 0 : B.JSBool_methods.get$hashCode(t21);
      t22 = _this.activities;
      t22 = t22 == null ? 0 : t22.get$hashCode(t22);
      t23 = _this.score;
      t23 = t23 == null ? 0 : t23.get$hashCode(t23);
      t24 = _this.favorited;
      t24 = t24 == null ? 0 : B.JSBool_methods.get$hashCode(t24);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12 + t13 + t14 + t15 + t16 + t17 + t18 + t19 + t20 + t21 + t22 + t23 + t24;
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedAsset[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", name=" + A.S(_this.name) + ", description=" + A.S(_this.description) + ", creator=" + _this.creator + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", synced=" + A.S(_this.synced) + ", deleted=" + A.S(_this.deleted) + ", formats=" + _this.formats.toString$0(0) + ", preview=" + _this.preview.toString$0(0) + ", original=" + _this.original + ", shares=" + A.S(_this.shares) + ", mechanism=" + _this.mechanism.toString$0(0) + ", websites=" + A.S(_this.websites) + ", interacted=" + A.S(_this.interacted) + ", tags=" + A.S(_this.tags) + ", sensitives=" + A.S(_this.sensitives) + ", persons=" + A.S(_this.persons) + ", curated=" + A.S(_this.curated) + ", discovered=" + A.S(_this.discovered) + ", activities=" + A.S(_this.activities) + ", score=" + A.S(_this.score) + ", favorited=" + A.S(_this.favorited) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      t1 = _this.description;
      if (t1 != null)
        _json.$indexSet(0, "description", t1);
      _json.$indexSet(0, "creator", _this.creator);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.synced;
      if (t1 != null)
        _json.$indexSet(0, "synced", t1.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      _json.$indexSet(0, "formats", _this.formats.toJson$0());
      _json.$indexSet(0, "preview", _this.preview.toJson$0());
      _json.$indexSet(0, "original", _this.original);
      t1 = _this.shares;
      if (t1 != null)
        _json.$indexSet(0, "shares", t1.toJson$0());
      _json.$indexSet(0, "mechanism", _this.mechanism.value);
      t1 = _this.websites;
      if (t1 != null)
        _json.$indexSet(0, "websites", t1.toJson$0());
      t1 = _this.interacted;
      if (t1 != null)
        _json.$indexSet(0, "interacted", t1.toJson$0());
      t1 = _this.tags;
      if (t1 != null)
        _json.$indexSet(0, "tags", t1.toJson$0());
      t1 = _this.sensitives;
      if (t1 != null)
        _json.$indexSet(0, "sensitives", t1.toJson$0());
      t1 = _this.persons;
      if (t1 != null)
        _json.$indexSet(0, "persons", t1.toJson$0());
      t1 = _this.curated;
      if (t1 != null)
        _json.$indexSet(0, "curated", t1);
      t1 = _this.discovered;
      if (t1 != null)
        _json.$indexSet(0, "discovered", t1);
      t1 = _this.activities;
      if (t1 != null)
        _json.$indexSet(0, "activities", t1.toJson$0());
      t1 = _this.score;
      if (t1 != null)
        _json.$indexSet(0, "score", t1.toJson$0());
      t1 = _this.favorited;
      if (t1 != null)
        _json.$indexSet(0, "favorited", t1);
      return _json;
    }
  };
  A.FlattenedAssets.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.FlattenedAssets && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "FlattenedAssets[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.FlattenedAssets_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.FlattenedAssets_toJson_closure.prototype = {
    call$1(element) {
      return type$.ReferencedAsset._as(element).toJson$0();
    },
    $signature: 73
  };
  A.FlattenedDistribution.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedDistribution && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.share === _this.share && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted) && J.$eq$(other.mailgun, _this.mailgun) && J.$eq$(other.github, _this.github);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = B.JSString_methods.get$hashCode(_this.share);
      t4 = _this.created;
      t4 = t4.get$hashCode(t4);
      t5 = _this.updated;
      t5 = t5.get$hashCode(t5);
      t6 = _this.deleted;
      t6 = t6 == null ? 0 : t6.get$hashCode(t6);
      t7 = _this.mailgun;
      t7 = t7 == null ? 0 : t7.get$hashCode(t7);
      t8 = _this.github;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8;
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedDistribution[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", share=" + _this.share + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", mailgun=" + A.S(_this.mailgun) + ", github=" + A.S(_this.github) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "share", _this.share);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      t1 = _this.mailgun;
      if (t1 != null)
        _json.$indexSet(0, "mailgun", t1.toJson$0());
      t1 = _this.github;
      if (t1 != null)
        _json.$indexSet(0, "github", t1.toJson$0());
      return _json;
    }
  };
  A.FlattenedDistributions.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.FlattenedDistributions && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "FlattenedDistributions[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.FlattenedDistributions_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.FlattenedDistributions_toJson_closure.prototype = {
    call$1(element) {
      return type$.ReferencedDistribution._as(element).toJson$0();
    },
    $signature: 74
  };
  A.FlattenedFormat.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedFormat && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.creator === _this.creator && other.classification.$eq(0, _this.classification) && other.icon == _this.icon && other.role === _this.role && other.application.$eq(0, _this.application) && other.asset === _this.asset && other.bytes.$eq(0, _this.bytes) && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted) && J.$eq$(other.synced, _this.synced) && other.cloud == _this.cloud && J.$eq$(other.fragment, _this.fragment) && J.$eq$(other.file, _this.file) && J.$eq$(other.analysis, _this.analysis) && J.$eq$(other.websites, _this.websites) && J.$eq$(other.tags, _this.tags) && J.$eq$(other.relationship, _this.relationship) && J.$eq$(other.activities, _this.activities);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = B.JSString_methods.get$hashCode(_this.creator);
      t4 = _this.classification;
      t4 = t4.get$hashCode(t4);
      t5 = _this.icon;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      t6 = A.Primitives_objectHashCode(_this.role);
      t7 = _this.application;
      t7 = t7.get$hashCode(t7);
      t8 = B.JSString_methods.get$hashCode(_this.asset);
      t9 = _this.bytes;
      t9 = t9.get$hashCode(t9);
      t10 = _this.created;
      t10 = t10.get$hashCode(t10);
      t11 = _this.updated;
      t11 = t11.get$hashCode(t11);
      t12 = _this.deleted;
      t12 = t12 == null ? 0 : t12.get$hashCode(t12);
      t13 = _this.synced;
      t13 = t13 == null ? 0 : t13.get$hashCode(t13);
      t14 = _this.cloud;
      t14 = t14 == null ? 0 : B.JSString_methods.get$hashCode(t14);
      t15 = _this.fragment;
      t15 = t15 == null ? 0 : t15.get$hashCode(t15);
      t16 = _this.file;
      t16 = t16 == null ? 0 : t16.get$hashCode(t16);
      t17 = _this.analysis;
      t17 = t17 == null ? 0 : t17.get$hashCode(t17);
      t18 = _this.websites;
      t18 = t18 == null ? 0 : t18.get$hashCode(t18);
      t19 = _this.tags;
      t19 = t19 == null ? 0 : t19.get$hashCode(t19);
      t20 = _this.relationship;
      t20 = t20 == null ? 0 : t20.get$hashCode(t20);
      t21 = _this.activities;
      t21 = t21 == null ? 0 : t21.get$hashCode(t21);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12 + t13 + t14 + t15 + t16 + t17 + t18 + t19 + t20 + t21;
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedFormat[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", creator=" + _this.creator + ", classification=" + _this.classification.toString$0(0) + ", icon=" + A.S(_this.icon) + ", role=" + _this.role.toString$0(0) + ", application=" + _this.application.toString$0(0) + ", asset=" + _this.asset + ", bytes=" + _this.bytes.toString$0(0) + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", synced=" + A.S(_this.synced) + ", cloud=" + A.S(_this.cloud) + ", fragment=" + A.S(_this.fragment) + ", file=" + A.S(_this.file) + ", analysis=" + A.S(_this.analysis) + ", websites=" + A.S(_this.websites) + ", tags=" + A.S(_this.tags) + ", relationship=" + A.S(_this.relationship) + ", activities=" + A.S(_this.activities) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "creator", _this.creator);
      _json.$indexSet(0, "classification", _this.classification.toJson$0());
      t1 = _this.icon;
      if (t1 != null)
        _json.$indexSet(0, "icon", t1);
      _json.$indexSet(0, "role", _this.role.value);
      _json.$indexSet(0, "application", _this.application.toJson$0());
      _json.$indexSet(0, "asset", _this.asset);
      _json.$indexSet(0, "bytes", _this.bytes.toJson$0());
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      t1 = _this.synced;
      if (t1 != null)
        _json.$indexSet(0, "synced", t1.toJson$0());
      t1 = _this.cloud;
      if (t1 != null)
        _json.$indexSet(0, "cloud", t1);
      t1 = _this.fragment;
      if (t1 != null)
        _json.$indexSet(0, "fragment", t1.toJson$0());
      t1 = _this.file;
      if (t1 != null)
        _json.$indexSet(0, "file", t1.toJson$0());
      t1 = _this.analysis;
      if (t1 != null)
        _json.$indexSet(0, "analysis", t1.toJson$0());
      t1 = _this.websites;
      if (t1 != null)
        _json.$indexSet(0, "websites", t1.toJson$0());
      t1 = _this.tags;
      if (t1 != null)
        _json.$indexSet(0, "tags", t1.toJson$0());
      t1 = _this.relationship;
      if (t1 != null)
        _json.$indexSet(0, "relationship", t1.toJson$0());
      t1 = _this.activities;
      if (t1 != null)
        _json.$indexSet(0, "activities", t1.toJson$0());
      return _json;
    }
  };
  A.FlattenedFormats.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.FlattenedFormats && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "FlattenedFormats[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.FlattenedFormats_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.FlattenedFormats_toJson_closure.prototype = {
    call$1(element) {
      return type$.ReferencedFormat._as(element).toJson$0();
    },
    $signature: 75
  };
  A.FlattenedImageAnalysis.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedImageAnalysis && J.$eq$(other.schema, _this.schema) && other.id === _this.id && J.$eq$(other.ocr, _this.ocr) && other.analysis === _this.analysis;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.ocr;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3 + B.JSString_methods.get$hashCode(_this.analysis);
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedImageAnalysis[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", ocr=" + A.S(_this.ocr) + ", analysis=" + _this.analysis + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      t1 = _this.ocr;
      if (t1 != null)
        _json.$indexSet(0, "ocr", t1.toJson$0());
      _json.$indexSet(0, "analysis", _this.analysis);
      return _json;
    }
  };
  A.FlattenedOCRAnalysis.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedOCRAnalysis && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.raw.$eq(0, _this.raw) && other.hocr.$eq(0, _this.hocr) && other.model.$eq(0, _this.model) && other.image === _this.image;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.raw;
      t3 = _this.hocr;
      t4 = _this.model;
      return t1 + B.JSString_methods.get$hashCode(_this.id) + t2.get$hashCode(t2) + t3.get$hashCode(t3) + t4.get$hashCode(t4) + B.JSString_methods.get$hashCode(_this.image);
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedOCRAnalysis[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", raw=" + _this.raw.toString$0(0) + ", hocr=" + _this.hocr.toString$0(0) + ", model=" + _this.model.toString$0(0) + ", image=" + _this.image + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "raw", _this.raw.toJson$0());
      _json.$indexSet(0, "hocr", _this.hocr.toJson$0());
      _json.$indexSet(0, "model", _this.model.toJson$0());
      _json.$indexSet(0, "image", _this.image);
      return _json;
    }
  };
  A.FlattenedPerson.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedPerson && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted) && other.access.$eq(0, _this.access) && J.$eq$(other.expiration, _this.expiration) && other.type.$eq(0, _this.type) && J.$eq$(other.asset, _this.asset) && other.mechanism === _this.mechanism && other.interactions == _this.interactions;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.created;
      t3 = t3.get$hashCode(t3);
      t4 = _this.updated;
      t4 = t4.get$hashCode(t4);
      t5 = _this.deleted;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = _this.access;
      t6 = t6.get$hashCode(t6);
      t7 = _this.expiration;
      t7 = t7 == null ? 0 : t7.get$hashCode(t7);
      t8 = _this.type;
      t8 = t8.get$hashCode(t8);
      t9 = _this.asset;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      t10 = A.Primitives_objectHashCode(_this.mechanism);
      t11 = _this.interactions;
      t11 = t11 == null ? 0 : B.JSInt_methods.get$hashCode(t11);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11;
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedPerson[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", access=" + _this.access.toString$0(0) + ", expiration=" + A.S(_this.expiration) + ", type=" + _this.type.toString$0(0) + ", asset=" + A.S(_this.asset) + ", mechanism=" + _this.mechanism.toString$0(0) + ", interactions=" + A.S(_this.interactions) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      _json.$indexSet(0, "access", _this.access.toJson$0());
      t1 = _this.expiration;
      if (t1 != null)
        _json.$indexSet(0, "expiration", t1.toJson$0());
      _json.$indexSet(0, "type", _this.type.toJson$0());
      t1 = _this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      _json.$indexSet(0, "mechanism", _this.mechanism.value);
      t1 = _this.interactions;
      if (t1 != null)
        _json.$indexSet(0, "interactions", t1);
      return _json;
    }
  };
  A.FlattenedPersons.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.FlattenedPersons && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "FlattenedPersons[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.FlattenedPersons_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.FlattenedPersons_toJson_closure.prototype = {
    call$1(element) {
      return type$.ReferencedPerson._as(element).toJson$0();
    },
    $signature: 76
  };
  A.FlattenedPreview.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedPreview && J.$eq$(other.schema, _this.schema) && other.base === _this.base && other.overlay == _this.overlay;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.base);
      t3 = this.overlay;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "FlattenedPreview[schema=" + A.S(this.schema) + ", base=" + this.base + ", overlay=" + A.S(this.overlay) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "base", this.base);
      t1 = this.overlay;
      if (t1 != null)
        _json.$indexSet(0, "overlay", t1);
      return _json;
    }
  };
  A.FlattenedSensitive.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedSensitive && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted) && other.asset.$eq(0, _this.asset) && other.text === _this.text && other.mechanism === _this.mechanism && other.category === _this.category && other.severity === _this.severity && other.name === _this.name && other.description === _this.description && J.$eq$(other.metadata, _this.metadata) && other.interactions == _this.interactions;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.created;
      t3 = t3.get$hashCode(t3);
      t4 = _this.updated;
      t4 = t4.get$hashCode(t4);
      t5 = _this.deleted;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = _this.asset;
      t6 = t6.get$hashCode(t6);
      t7 = B.JSString_methods.get$hashCode(_this.text);
      t8 = A.Primitives_objectHashCode(_this.mechanism);
      t9 = A.Primitives_objectHashCode(_this.category);
      t10 = A.Primitives_objectHashCode(_this.severity);
      t11 = B.JSString_methods.get$hashCode(_this.name);
      t12 = B.JSString_methods.get$hashCode(_this.description);
      t13 = _this.metadata;
      t13 = t13 == null ? 0 : t13.get$hashCode(t13);
      t14 = _this.interactions;
      t14 = t14 == null ? 0 : B.JSInt_methods.get$hashCode(t14);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12 + t13 + t14;
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedSensitive[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", asset=" + _this.asset.toString$0(0) + ", text=" + _this.text + ", mechanism=" + _this.mechanism.toString$0(0) + ", category=" + _this.category.toString$0(0) + ", severity=" + _this.severity.toString$0(0) + ", name=" + _this.name + ", description=" + _this.description + ", metadata=" + A.S(_this.metadata) + ", interactions=" + A.S(_this.interactions) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      _json.$indexSet(0, "asset", _this.asset.toJson$0());
      _json.$indexSet(0, "text", _this.text);
      _json.$indexSet(0, "mechanism", _this.mechanism.value);
      _json.$indexSet(0, "category", _this.category.value);
      _json.$indexSet(0, "severity", _this.severity.value);
      _json.$indexSet(0, "name", _this.name);
      _json.$indexSet(0, "description", _this.description);
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      t1 = _this.interactions;
      if (t1 != null)
        _json.$indexSet(0, "interactions", t1);
      return _json;
    }
  };
  A.FlattenedSensitives.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.FlattenedSensitives && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "FlattenedSensitives[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.FlattenedSensitives_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.FlattenedSensitives_toJson_closure.prototype = {
    call$1(element) {
      return type$.ReferencedSensitive._as(element).toJson$0();
    },
    $signature: 77
  };
  A.FlattenedShare.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedShare && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.asset == _this.asset && other.user == _this.user && other.link === _this.link && other.access === _this.access && other.accessors.$eq(0, _this.accessors) && other.created.$eq(0, _this.created) && other.short === _this.short && other.name == _this.name && J.$eq$(other.assets, _this.assets) && J.$eq$(other.distributions, _this.distributions);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.asset;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.user;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = B.JSString_methods.get$hashCode(_this.link);
      t6 = A.Primitives_objectHashCode(_this.access);
      t7 = _this.accessors;
      t7 = t7.get$hashCode(t7);
      t8 = _this.created;
      t8 = t8.get$hashCode(t8);
      t9 = B.JSString_methods.get$hashCode(_this.short);
      t10 = _this.name;
      t10 = t10 == null ? 0 : B.JSString_methods.get$hashCode(t10);
      t11 = _this.assets;
      t11 = t11 == null ? 0 : t11.get$hashCode(t11);
      t12 = _this.distributions;
      t12 = t12 == null ? 0 : t12.get$hashCode(t12);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12;
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedShare[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", asset=" + A.S(_this.asset) + ", user=" + A.S(_this.user) + ", link=" + _this.link + ", access=" + _this.access.toString$0(0) + ", accessors=" + _this.accessors.toString$0(0) + ", created=" + _this.created.toString$0(0) + ", short=" + _this.short + ", name=" + A.S(_this.name) + ", assets=" + A.S(_this.assets) + ", distributions=" + A.S(_this.distributions) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      t1 = _this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1);
      t1 = _this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1);
      _json.$indexSet(0, "link", _this.link);
      _json.$indexSet(0, "access", _this.access.value);
      _json.$indexSet(0, "accessors", _this.accessors.toJson$0());
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "short", _this.short);
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      t1 = _this.assets;
      if (t1 != null)
        _json.$indexSet(0, "assets", t1.toJson$0());
      t1 = _this.distributions;
      if (t1 != null)
        _json.$indexSet(0, "distributions", t1.toJson$0());
      return _json;
    }
  };
  A.FlattenedShares.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.FlattenedShares && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "FlattenedShares[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.FlattenedShares_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.FlattenedShares_toJson_closure.prototype = {
    call$1(element) {
      return type$.FlattenedShare._as(element).toJson$0();
    },
    $signature: 78
  };
  A.FlattenedTag.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedTag && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.text === _this.text && other.mechanism === _this.mechanism && other.asset.$eq(0, _this.asset) && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.format, _this.format) && J.$eq$(other.deleted, _this.deleted) && other.category === _this.category && J.$eq$(other.relationship, _this.relationship) && other.interactions == _this.interactions;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = B.JSString_methods.get$hashCode(_this.text);
      t4 = A.Primitives_objectHashCode(_this.mechanism);
      t5 = _this.asset;
      t5 = t5.get$hashCode(t5);
      t6 = _this.created;
      t6 = t6.get$hashCode(t6);
      t7 = _this.updated;
      t7 = t7.get$hashCode(t7);
      t8 = _this.format;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      t9 = _this.deleted;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      t10 = A.Primitives_objectHashCode(_this.category);
      t11 = _this.relationship;
      t11 = t11 == null ? 0 : t11.get$hashCode(t11);
      t12 = _this.interactions;
      t12 = t12 == null ? 0 : B.JSInt_methods.get$hashCode(t12);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12;
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedTag[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", text=" + _this.text + ", mechanism=" + _this.mechanism.toString$0(0) + ", asset=" + _this.asset.toString$0(0) + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", format=" + A.S(_this.format) + ", deleted=" + A.S(_this.deleted) + ", category=" + _this.category.toString$0(0) + ", relationship=" + A.S(_this.relationship) + ", interactions=" + A.S(_this.interactions) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "text", _this.text);
      _json.$indexSet(0, "mechanism", _this.mechanism.value);
      _json.$indexSet(0, "asset", _this.asset.toJson$0());
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.format;
      if (t1 != null)
        _json.$indexSet(0, "format", t1.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      _json.$indexSet(0, "category", _this.category.value);
      t1 = _this.relationship;
      if (t1 != null)
        _json.$indexSet(0, "relationship", t1.toJson$0());
      t1 = _this.interactions;
      if (t1 != null)
        _json.$indexSet(0, "interactions", t1);
      return _json;
    }
  };
  A.FlattenedTags.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.FlattenedTags && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "FlattenedTags[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.FlattenedTags_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.FlattenedTags_toJson_closure.prototype = {
    call$1(element) {
      return type$.ReferencedTag._as(element).toJson$0();
    },
    $signature: 79
  };
  A.FlattenedUserProfile.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedUserProfile && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.email == _this.email && other.name == _this.name && other.username == _this.username && other.picture == _this.picture && other.vanityname == _this.vanityname;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.email;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.name;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = _this.username;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      t6 = _this.picture;
      t6 = t6 == null ? 0 : B.JSString_methods.get$hashCode(t6);
      t7 = _this.vanityname;
      t7 = t7 == null ? 0 : B.JSString_methods.get$hashCode(t7);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7;
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedUserProfile[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", email=" + A.S(_this.email) + ", name=" + A.S(_this.name) + ", username=" + A.S(_this.username) + ", picture=" + A.S(_this.picture) + ", vanityname=" + A.S(_this.vanityname) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      t1 = _this.email;
      if (t1 != null)
        _json.$indexSet(0, "email", t1);
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      t1 = _this.username;
      if (t1 != null)
        _json.$indexSet(0, "username", t1);
      t1 = _this.picture;
      if (t1 != null)
        _json.$indexSet(0, "picture", t1);
      t1 = _this.vanityname;
      if (t1 != null)
        _json.$indexSet(0, "vanityname", t1);
      return _json;
    }
  };
  A.FlattenedWebsite.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FlattenedWebsite && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.asset.$eq(0, _this.asset) && other.name === _this.name && other.url === _this.url && J.$eq$(other.format, _this.format) && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted) && other.mechanism === _this.mechanism && other.interactions == _this.interactions;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.asset;
      t3 = t3.get$hashCode(t3);
      t4 = B.JSString_methods.get$hashCode(_this.name);
      t5 = B.JSString_methods.get$hashCode(_this.url);
      t6 = _this.format;
      t6 = t6 == null ? 0 : t6.get$hashCode(t6);
      t7 = _this.created;
      t7 = t7.get$hashCode(t7);
      t8 = _this.updated;
      t8 = t8.get$hashCode(t8);
      t9 = _this.deleted;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      t10 = A.Primitives_objectHashCode(_this.mechanism);
      t11 = _this.interactions;
      t11 = t11 == null ? 0 : B.JSInt_methods.get$hashCode(t11);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11;
    },
    toString$0(_) {
      var _this = this;
      return "FlattenedWebsite[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", asset=" + _this.asset.toString$0(0) + ", name=" + _this.name + ", url=" + _this.url + ", format=" + A.S(_this.format) + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", mechanism=" + _this.mechanism.toString$0(0) + ", interactions=" + A.S(_this.interactions) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "asset", _this.asset.toJson$0());
      _json.$indexSet(0, "name", _this.name);
      _json.$indexSet(0, "url", _this.url);
      t1 = _this.format;
      if (t1 != null)
        _json.$indexSet(0, "format", t1.toJson$0());
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      _json.$indexSet(0, "mechanism", _this.mechanism.value);
      t1 = _this.interactions;
      if (t1 != null)
        _json.$indexSet(0, "interactions", t1);
      return _json;
    }
  };
  A.FlattenedWebsites.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.FlattenedWebsites && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "FlattenedWebsites[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.FlattenedWebsites_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.FlattenedWebsites_toJson_closure.prototype = {
    call$1(element) {
      return type$.ReferencedWebsite._as(element).toJson$0();
    },
    $signature: 80
  };
  A.Font.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Font && J.$eq$(other.schema, this.schema) && other.size === this.size;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSInt_methods.get$hashCode(this.size);
    },
    toString$0(_) {
      return "Font[schema=" + A.S(this.schema) + ", size=" + this.size + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "size", this.size);
      return _json;
    }
  };
  A.Format.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Format && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.creator === _this.creator && other.classification.$eq(0, _this.classification) && other.icon == _this.icon && other.role === _this.role && other.application.$eq(0, _this.application) && other.asset.$eq(0, _this.asset) && other.bytes.$eq(0, _this.bytes) && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted) && J.$eq$(other.synced, _this.synced) && other.cloud == _this.cloud && J.$eq$(other.fragment, _this.fragment) && J.$eq$(other.file, _this.file) && J.$eq$(other.analysis, _this.analysis) && J.$eq$(other.websites, _this.websites) && J.$eq$(other.tags, _this.tags) && J.$eq$(other.relationship, _this.relationship) && J.$eq$(other.activities, _this.activities);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = B.JSString_methods.get$hashCode(_this.creator);
      t4 = _this.classification;
      t4 = t4.get$hashCode(t4);
      t5 = _this.icon;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      t6 = A.Primitives_objectHashCode(_this.role);
      t7 = _this.application;
      t7 = t7.get$hashCode(t7);
      t8 = _this.asset;
      t8 = t8.get$hashCode(t8);
      t9 = _this.bytes;
      t9 = t9.get$hashCode(t9);
      t10 = _this.created;
      t10 = t10.get$hashCode(t10);
      t11 = _this.updated;
      t11 = t11.get$hashCode(t11);
      t12 = _this.deleted;
      t12 = t12 == null ? 0 : t12.get$hashCode(t12);
      t13 = _this.synced;
      t13 = t13 == null ? 0 : t13.get$hashCode(t13);
      t14 = _this.cloud;
      t14 = t14 == null ? 0 : B.JSString_methods.get$hashCode(t14);
      t15 = _this.fragment;
      t15 = t15 == null ? 0 : t15.get$hashCode(t15);
      t16 = _this.file;
      t16 = t16 == null ? 0 : t16.get$hashCode(t16);
      t17 = _this.analysis;
      t17 = t17 == null ? 0 : t17.get$hashCode(t17);
      t18 = _this.websites;
      t18 = t18 == null ? 0 : t18.get$hashCode(t18);
      t19 = _this.tags;
      t19 = t19 == null ? 0 : t19.get$hashCode(t19);
      t20 = _this.relationship;
      t20 = t20 == null ? 0 : t20.get$hashCode(t20);
      t21 = _this.activities;
      t21 = t21 == null ? 0 : t21.get$hashCode(t21);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12 + t13 + t14 + t15 + t16 + t17 + t18 + t19 + t20 + t21;
    },
    toString$0(_) {
      var _this = this;
      return "Format[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", creator=" + _this.creator + ", classification=" + _this.classification.toString$0(0) + ", icon=" + A.S(_this.icon) + ", role=" + _this.role.toString$0(0) + ", application=" + _this.application.toString$0(0) + ", asset=" + _this.asset.toString$0(0) + ", bytes=" + _this.bytes.toString$0(0) + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", synced=" + A.S(_this.synced) + ", cloud=" + A.S(_this.cloud) + ", fragment=" + A.S(_this.fragment) + ", file=" + A.S(_this.file) + ", analysis=" + A.S(_this.analysis) + ", websites=" + A.S(_this.websites) + ", tags=" + A.S(_this.tags) + ", relationship=" + A.S(_this.relationship) + ", activities=" + A.S(_this.activities) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "creator", _this.creator);
      _json.$indexSet(0, "classification", _this.classification.toJson$0());
      t1 = _this.icon;
      if (t1 != null)
        _json.$indexSet(0, "icon", t1);
      _json.$indexSet(0, "role", _this.role.value);
      _json.$indexSet(0, "application", _this.application.toJson$0());
      _json.$indexSet(0, "asset", _this.asset.toJson$0());
      _json.$indexSet(0, "bytes", _this.bytes.toJson$0());
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      t1 = _this.synced;
      if (t1 != null)
        _json.$indexSet(0, "synced", t1.toJson$0());
      t1 = _this.cloud;
      if (t1 != null)
        _json.$indexSet(0, "cloud", t1);
      t1 = _this.fragment;
      if (t1 != null)
        _json.$indexSet(0, "fragment", t1.toJson$0());
      t1 = _this.file;
      if (t1 != null)
        _json.$indexSet(0, "file", t1.toJson$0());
      t1 = _this.analysis;
      if (t1 != null)
        _json.$indexSet(0, "analysis", t1.toJson$0());
      t1 = _this.websites;
      if (t1 != null)
        _json.$indexSet(0, "websites", t1.toJson$0());
      t1 = _this.tags;
      if (t1 != null)
        _json.$indexSet(0, "tags", t1.toJson$0());
      t1 = _this.relationship;
      if (t1 != null)
        _json.$indexSet(0, "relationship", t1.toJson$0());
      t1 = _this.activities;
      if (t1 != null)
        _json.$indexSet(0, "activities", t1.toJson$0());
      return _json;
    }
  };
  A.FormatMetric.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FormatMetric && J.$eq$(other.schema, _this.schema) && other.generic === _this.generic && other.specific === _this.specific && other.identifiers === _this.identifiers;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(_this.generic) + A.Primitives_objectHashCode(_this.specific) + J.get$hashCode$(_this.identifiers);
    },
    toString$0(_) {
      var _this = this;
      return "FormatMetric[schema=" + A.S(_this.schema) + ", generic=" + _this.generic.toString$0(0) + ", specific=" + _this.specific.toString$0(0) + ", identifiers=" + A.S(_this.identifiers) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "generic", _this.generic.value);
      _json.$indexSet(0, "specific", _this.specific.value);
      _json.$indexSet(0, "identifiers", _this.identifiers);
      return _json;
    }
  };
  A.FormatReclassification.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FormatReclassification && J.$eq$(other.schema, _this.schema) && other.ext === _this.ext && other.format.$eq(0, _this.format);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.format;
      return t1 + A.Primitives_objectHashCode(this.ext) + t2.get$hashCode(t2);
    },
    toString$0(_) {
      return "FormatReclassification[schema=" + A.S(this.schema) + ", ext=" + this.ext.toString$0(0) + ", format=" + this.format.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "ext", this.ext.value);
      _json.$indexSet(0, "format", this.format.toJson$0());
      return _json;
    }
  };
  A.Formats.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Formats && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Formats[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Formats_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Formats_toJson_closure.prototype = {
    call$1(element) {
      return type$.Format._as(element).toJson$0();
    },
    $signature: 26
  };
  A.FormatsMetrics.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.FormatsMetrics && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "FormatsMetrics[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.FormatsMetrics_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.FormatsMetrics_toJson_closure.prototype = {
    call$1(element) {
      return type$.FormatMetric._as(element).toJson$0();
    },
    $signature: 81
  };
  A.FragmentFormat.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.FragmentFormat && J.$eq$(other.schema, _this.schema) && J.$eq$(other.string, _this.string) && J.$eq$(other.bytes, _this.bytes) && J.$eq$(other.metadata, _this.metadata);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.string;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.bytes;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.metadata;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "FragmentFormat[schema=" + A.S(_this.schema) + ", string=" + A.S(_this.string) + ", bytes=" + A.S(_this.bytes) + ", metadata=" + A.S(_this.metadata) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.string;
      if (t1 != null)
        _json.$indexSet(0, "string", t1.toJson$0());
      t1 = _this.bytes;
      if (t1 != null)
        _json.$indexSet(0, "bytes", t1.toJson$0());
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      return _json;
    }
  };
  A.FragmentMetadata.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.FragmentMetadata && J.$eq$(other.schema, this.schema) && other.ext == this.ext;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.ext;
      return t1 + (t2 == null ? 0 : A.Primitives_objectHashCode(t2));
    },
    toString$0(_) {
      return "FragmentMetadata[schema=" + A.S(this.schema) + ", ext=" + A.S(this.ext) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.ext;
      if (t1 != null)
        _json.$indexSet(0, "ext", t1.value);
      return _json;
    }
  };
  A.GitHubDistribution.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.GitHubDistribution && J.$eq$(other.schema, this.schema) && J.$eq$(other.gist, this.gist);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.gist;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "GitHubDistribution[schema=" + A.S(this.schema) + ", gist=" + A.S(this.gist) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.gist;
      if (t1 != null)
        _json.$indexSet(0, "gist", t1.toJson$0());
      return _json;
    }
  };
  A.GitHubGistDistribution.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.GitHubGistDistribution && J.$eq$(other.schema, _this.schema) && other.recipients.$eq(0, _this.recipients) && other.$public === _this.$public && other.description == _this.description && other.name === _this.name && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted) && other.githubId === _this.githubId && other.url === _this.url;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.recipients;
      t2 = t2.get$hashCode(t2);
      t3 = B.JSBool_methods.get$hashCode(_this.$public);
      t4 = _this.description;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = B.JSString_methods.get$hashCode(_this.name);
      t6 = _this.created;
      t6 = t6.get$hashCode(t6);
      t7 = _this.updated;
      t7 = t7.get$hashCode(t7);
      t8 = _this.deleted;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + B.JSString_methods.get$hashCode(_this.githubId) + B.JSString_methods.get$hashCode(_this.url);
    },
    toString$0(_) {
      var _this = this;
      return "GitHubGistDistribution[schema=" + A.S(_this.schema) + ", recipients=" + _this.recipients.toString$0(0) + ", public=" + _this.$public + ", description=" + A.S(_this.description) + ", name=" + _this.name + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", githubId=" + _this.githubId + ", url=" + _this.url + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "recipients", _this.recipients.toJson$0());
      _json.$indexSet(0, "public", _this.$public);
      t1 = _this.description;
      if (t1 != null)
        _json.$indexSet(0, "description", t1);
      _json.$indexSet(0, "name", _this.name);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      _json.$indexSet(0, "github_id", _this.githubId);
      _json.$indexSet(0, "url", _this.url);
      return _json;
    }
  };
  A.GraphicalImageDescriptiveStatistics.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.GraphicalImageDescriptiveStatistics && J.$eq$(other.schema, _this.schema) && other.width === _this.width && other.height === _this.height && other.channels === _this.channels && other.asset === _this.asset && other.user == _this.user && other.created === _this.created && other.os === _this.os;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.width);
      t3 = B.JSString_methods.get$hashCode(_this.height);
      t4 = B.JSString_methods.get$hashCode(_this.channels);
      t5 = B.JSString_methods.get$hashCode(_this.asset);
      t6 = _this.user;
      t6 = t6 == null ? 0 : B.JSString_methods.get$hashCode(t6);
      return t1 + t2 + t3 + t4 + t5 + t6 + B.JSString_methods.get$hashCode(_this.created) + B.JSString_methods.get$hashCode(_this.os);
    },
    toString$0(_) {
      var _this = this;
      return "GraphicalImageDescriptiveStatistics[schema=" + A.S(_this.schema) + ", width=" + _this.width + ", height=" + _this.height + ", channels=" + _this.channels + ", asset=" + _this.asset + ", user=" + A.S(_this.user) + ", created=" + _this.created + ", os=" + _this.os + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "width", _this.width);
      _json.$indexSet(0, "height", _this.height);
      _json.$indexSet(0, "channels", _this.channels);
      _json.$indexSet(0, "asset", _this.asset);
      t1 = _this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1);
      _json.$indexSet(0, "created", _this.created);
      _json.$indexSet(0, "os", _this.os);
      return _json;
    }
  };
  A.GraphicalImageProcessing.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.GraphicalImageProcessing && J.$eq$(other.schema, this.schema) && J.$eq$(other.statistics, this.statistics);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.statistics;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "GraphicalImageProcessing[schema=" + A.S(this.schema) + ", statistics=" + A.S(this.statistics) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.statistics;
      if (t1 != null)
        _json.$indexSet(0, "statistics", t1.toJson$0());
      return _json;
    }
  };
  A.GraphicalImageStatistics.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.GraphicalImageStatistics && J.$eq$(other.schema, this.schema) && J.$eq$(other.descriptive, this.descriptive);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.descriptive;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "GraphicalImageStatistics[schema=" + A.S(this.schema) + ", descriptive=" + A.S(this.descriptive) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.descriptive;
      if (t1 != null)
        _json.$indexSet(0, "descriptive", t1.toJson$0());
      return _json;
    }
  };
  A.GraphicalMachineLearningProcessingEvent.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.GraphicalMachineLearningProcessingEvent && J.$eq$(other.schema, _this.schema) && J.$eq$(other.ocr, _this.ocr) && J.$eq$(other.image, _this.image) && J.$eq$(other.svg, _this.svg);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.ocr;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.image;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.svg;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "GraphicalMachineLearningProcessingEvent[schema=" + A.S(_this.schema) + ", ocr=" + A.S(_this.ocr) + ", image=" + A.S(_this.image) + ", svg=" + A.S(_this.svg) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.ocr;
      if (t1 != null)
        _json.$indexSet(0, "ocr", t1.toJson$0());
      t1 = _this.image;
      if (t1 != null)
        _json.$indexSet(0, "image", t1.toJson$0());
      t1 = _this.svg;
      if (t1 != null)
        _json.$indexSet(0, "svg", t1.toJson$0());
      return _json;
    }
  };
  A.GraphicalOCRDescriptiveStatistics.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.GraphicalOCRDescriptiveStatistics && J.$eq$(other.schema, _this.schema) && other.asset === _this.asset && other.user === _this.user && other.model === _this.model && other.created === _this.created && other.os === _this.os && other.confidence.$eq(0, _this.confidence) && other.duration === _this.duration;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(_this.asset) + B.JSString_methods.get$hashCode(_this.user) + B.JSString_methods.get$hashCode(_this.model) + B.JSString_methods.get$hashCode(_this.created) + B.JSString_methods.get$hashCode(_this.os) + B.JSString_methods.get$hashCode(_this.confidence.mean) + B.JSString_methods.get$hashCode(_this.duration);
    },
    toString$0(_) {
      var _this = this;
      return "GraphicalOCRDescriptiveStatistics[schema=" + A.S(_this.schema) + ", asset=" + _this.asset + ", user=" + _this.user + ", model=" + _this.model + ", created=" + _this.created + ", os=" + _this.os + ", confidence=" + _this.confidence.toString$0(0) + ", duration=" + _this.duration + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "asset", _this.asset);
      _json.$indexSet(0, "user", _this.user);
      _json.$indexSet(0, "model", _this.model);
      _json.$indexSet(0, "created", _this.created);
      _json.$indexSet(0, "os", _this.os);
      _json.$indexSet(0, "confidence", _this.confidence.toJson$0());
      _json.$indexSet(0, "duration", _this.duration);
      return _json;
    }
  };
  A.GraphicalOCRDescriptiveStatisticsConfidence.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.GraphicalOCRDescriptiveStatisticsConfidence && other.mean === this.mean;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.JSString_methods.get$hashCode(this.mean);
    },
    toString$0(_) {
      return "GraphicalOCRDescriptiveStatisticsConfidence[mean=" + this.mean + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "mean", this.mean);
      return _json;
    }
  };
  A.GraphicalOCRProcessing.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.GraphicalOCRProcessing && J.$eq$(other.schema, this.schema) && J.$eq$(other.statistics, this.statistics);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.statistics;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "GraphicalOCRProcessing[schema=" + A.S(this.schema) + ", statistics=" + A.S(this.statistics) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.statistics;
      if (t1 != null)
        _json.$indexSet(0, "statistics", t1.toJson$0());
      return _json;
    }
  };
  A.GraphicalOCRStatistics.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.GraphicalOCRStatistics && J.$eq$(other.schema, this.schema) && J.$eq$(other.descriptive, this.descriptive);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.descriptive;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "GraphicalOCRStatistics[schema=" + A.S(this.schema) + ", descriptive=" + A.S(this.descriptive) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.descriptive;
      if (t1 != null)
        _json.$indexSet(0, "descriptive", t1.toJson$0());
      return _json;
    }
  };
  A.GraphicalSVGStatistics.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.GraphicalSVGStatistics && J.$eq$(other.schema, this.schema) && other.id == this.id;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.id;
      return t1 + (t2 == null ? 0 : B.JSString_methods.get$hashCode(t2));
    },
    toString$0(_) {
      return "GraphicalSVGStatistics[schema=" + A.S(this.schema) + ", id=" + A.S(this.id) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.id;
      if (t1 != null)
        _json.$indexSet(0, "id", t1);
      return _json;
    }
  };
  A.GroupedTimestamp.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.GroupedTimestamp && J.$eq$(other.schema, _this.schema) && other.value.$eq(0, _this.value) && other.readable == _this.readable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.value;
      t2 = t2.get$hashCode(t2);
      t3 = this.readable;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "GroupedTimestamp[schema=" + A.S(this.schema) + ", value=" + this.value.toString$0(0) + ", readable=" + A.S(this.readable) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "value", this.value.toUtc$0().toIso8601String$0());
      t1 = this.readable;
      if (t1 != null)
        _json.$indexSet(0, "readable", t1);
      return _json;
    }
  };
  A.Health.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Health && J.$eq$(other.schema, this.schema) && other.os.$eq(0, this.os);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.os;
      return t1 + t2.get$hashCode(t2);
    },
    toString$0(_) {
      return "Health[schema=" + A.S(this.schema) + ", os=" + this.os.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "os", this.os.toJson$0());
      return _json;
    }
  };
  A.ImageAnalyses.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.ImageAnalyses && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "ImageAnalyses[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.ImageAnalyses_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.ImageAnalyses_toJson_closure.prototype = {
    call$1(element) {
      return type$.ImageAnalysis._as(element).toJson$0();
    },
    $signature: 82
  };
  A.ImageAnalysis.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ImageAnalysis && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.analysis === _this.analysis && J.$eq$(other.ocr, _this.ocr);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = B.JSString_methods.get$hashCode(_this.analysis);
      t4 = _this.ocr;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "ImageAnalysis[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", analysis=" + _this.analysis + ", ocr=" + A.S(_this.ocr) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "analysis", _this.analysis);
      t1 = _this.ocr;
      if (t1 != null)
        _json.$indexSet(0, "ocr", t1.toJson$0());
      return _json;
    }
  };
  A.InteractedAsset.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.InteractedAsset && other.asset == this.asset && J.$eq$(other.interactions, this.interactions);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.asset;
      t1 = t1 == null ? 0 : B.JSString_methods.get$hashCode(t1);
      t2 = this.interactions;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "InteractedAsset[asset=" + A.S(this.asset) + ", interactions=" + A.S(this.interactions) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1);
      t1 = this.interactions;
      if (t1 != null)
        _json.$indexSet(0, "interactions", t1.toJson$0());
      return _json;
    }
  };
  A.InteractedAssetInteractions.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.InteractedAssetInteractions && other.viewed === _this.viewed && other.touched === _this.touched && other.scrolled === _this.scrolled;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.JSString_methods.get$hashCode(this.viewed) + B.JSBool_methods.get$hashCode(this.touched) + B.JSBool_methods.get$hashCode(this.scrolled);
    },
    toString$0(_) {
      return "InteractedAssetInteractions[viewed=" + this.viewed + ", touched=" + this.touched + ", scrolled=" + this.scrolled + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "viewed", this.viewed);
      _json.$indexSet(0, "touched", this.touched);
      _json.$indexSet(0, "scrolled", this.scrolled);
      return _json;
    }
  };
  A.InteractedAssets.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.InteractedAssets && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "InteractedAssets[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.InteractedAssets_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.InteractedAssets_toJson_closure.prototype = {
    call$1(element) {
      return type$.InteractedAsset._as(element).toJson$0();
    },
    $signature: 83
  };
  A.Linkify.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Linkify && J.$eq$(other.schema, _this.schema) && J.$eq$(other.seed, _this.seed) && J.$eq$(other.asset, _this.asset) && other.users === _this.users && other.access === _this.access && J.$eq$(other.distributions, _this.distributions);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.seed;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.asset;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = A.Primitives_objectHashCode(_this.users);
      t5 = A.Primitives_objectHashCode(_this.access);
      t6 = _this.distributions;
      t6 = t6 == null ? 0 : t6.get$hashCode(t6);
      return t1 + t2 + t3 + t4 + t5 + t6;
    },
    toString$0(_) {
      var _this = this;
      return "Linkify[schema=" + A.S(_this.schema) + ", seed=" + A.S(_this.seed) + ", asset=" + A.S(_this.asset) + ", users=" + A.S(_this.users) + ", access=" + _this.access.toString$0(0) + ", distributions=" + A.S(_this.distributions) + "]";
    },
    toJson$0() {
      var t2, t3, _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.seed;
      if (t1 != null)
        _json.$indexSet(0, "seed", t1.toJson$0());
      t1 = _this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      t1 = _this.users;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "users", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Linkify_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      _json.$indexSet(0, "access", _this.access.value);
      t1 = _this.distributions;
      if (t1 != null)
        _json.$indexSet(0, "distributions", t1.toJson$0());
      return _json;
    }
  };
  A.Linkify_toJson_closure.prototype = {
    call$1(element) {
      return type$.SeededUser._as(element).toJson$0();
    },
    $signature: 18
  };
  A.LinkifyMultiple.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.LinkifyMultiple && J.$eq$(other.schema, _this.schema) && other.assets === _this.assets && other.users === _this.users && other.access === _this.access && other.name == _this.name;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = J.get$hashCode$(_this.assets);
      t3 = A.Primitives_objectHashCode(_this.users);
      t4 = A.Primitives_objectHashCode(_this.access);
      t5 = _this.name;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      return t1 + t2 + t3 + t4 + t5;
    },
    toString$0(_) {
      var _this = this;
      return "LinkifyMultiple[schema=" + A.S(_this.schema) + ", assets=" + A.S(_this.assets) + ", users=" + A.S(_this.users) + ", access=" + _this.access.toString$0(0) + ", name=" + A.S(_this.name) + "]";
    },
    toJson$0() {
      var t2, t3, _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "assets", _this.assets);
      t1 = _this.users;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "users", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.LinkifyMultiple_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      _json.$indexSet(0, "access", _this.access.value);
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      return _json;
    }
  };
  A.LinkifyMultiple_toJson_closure.prototype = {
    call$1(element) {
      return type$.SeededUser._as(element).toJson$0();
    },
    $signature: 18
  };
  A.MailgunDistribution.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.MailgunDistribution && J.$eq$(other.schema, this.schema) && other.recipients.$eq(0, this.recipients);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.recipients;
      return t1 + t2.get$hashCode(t2);
    },
    toString$0(_) {
      return "MailgunDistribution[schema=" + A.S(this.schema) + ", recipients=" + this.recipients.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "recipients", this.recipients.toJson$0());
      return _json;
    }
  };
  A.MailgunMetadata.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.MailgunMetadata && J.$eq$(other.schema, this.schema) && other.messageId === this.messageId;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(this.messageId);
    },
    toString$0(_) {
      return "MailgunMetadata[schema=" + A.S(this.schema) + ", messageId=" + this.messageId + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "messageId", this.messageId);
      return _json;
    }
  };
  A.MechanismEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.MechanismEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "MANUAL":
            return B.MechanismEnum_MANUAL;
          case "RECOMMENDED":
            return B.MechanismEnum_RECOMMENDED;
          case "AUTOMATIC":
            return B.MechanismEnum_AUTOMATIC;
          case "INTERNAL":
            return B.MechanismEnum_INTERNAL;
        }
      return null;
    }
  };
  A.Model.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Model && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.version === _this.version && other.created.$eq(0, _this.created) && other.name === _this.name && other.description == _this.description && other.cloud === _this.cloud && other.type === _this.type && other.usage === _this.usage;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = B.JSString_methods.get$hashCode(_this.version);
      t4 = _this.created;
      t4 = t4.get$hashCode(t4);
      t5 = B.JSString_methods.get$hashCode(_this.name);
      t6 = _this.description;
      t6 = t6 == null ? 0 : B.JSString_methods.get$hashCode(t6);
      return t1 + t2 + t3 + t4 + t5 + t6 + B.JSBool_methods.get$hashCode(_this.cloud) + A.Primitives_objectHashCode(_this.type) + A.Primitives_objectHashCode(_this.usage);
    },
    toString$0(_) {
      var _this = this;
      return "Model[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", version=" + _this.version + ", created=" + _this.created.toString$0(0) + ", name=" + _this.name + ", description=" + A.S(_this.description) + ", cloud=" + _this.cloud + ", type=" + _this.type.toString$0(0) + ", usage=" + _this.usage.toString$0(0) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "version", _this.version);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "name", _this.name);
      t1 = _this.description;
      if (t1 != null)
        _json.$indexSet(0, "description", t1);
      _json.$indexSet(0, "cloud", _this.cloud);
      _json.$indexSet(0, "type", _this.type.value);
      _json.$indexSet(0, "usage", _this.usage.value);
      return _json;
    }
  };
  A.ModelTypeEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.ModelTypeEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "BALANCED":
            return B.ModelTypeEnum_BALANCED;
          case "SPEED":
            return B.ModelTypeEnum_SPEED;
          case "ACCURACY":
            return B.ModelTypeEnum_ACCURACY;
        }
      return null;
    }
  };
  A.ModelUsageEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.ModelUsageEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "OCR":
            return B.ModelUsageEnum_OCR;
          case "CODE_CLASSIFICATION":
            return B.ModelUsageEnum_CODE_CLASSIFICATION;
          case "TEXT_VS_CODE":
            return B.ModelUsageEnum_TEXT_VS_CODE;
          case "TAGIFY_CODE":
            return B.ModelUsageEnum_TAGIFY_CODE;
          case "TLP_TAG_SEARCH":
            return B.ModelUsageEnum_TLP_TAG_SEARCH;
          case "TLP_NEURAL_CODE_SEARCH":
            return B.ModelUsageEnum_TLP_NEURAL_CODE_SEARCH;
          case "TAGIFY_COLOR_FROM_CODE":
            return B.ModelUsageEnum_TAGIFY_COLOR_FROM_CODE;
          case "CODE_DESCRIPTION":
            return B.ModelUsageEnum_CODE_DESCRIPTION;
        }
      return null;
    }
  };
  A.Models.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Models && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Models[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Models_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Models_toJson_closure.prototype = {
    call$1(element) {
      return type$.Model._as(element).toJson$0();
    },
    $signature: 85
  };
  A.Node.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Node && other.id === _this.id && other.type === _this.type && other.root === _this.root && other.created.$eq(0, _this.created);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.created;
      return B.JSString_methods.get$hashCode(_this.id) + A.Primitives_objectHashCode(_this.type) + B.JSBool_methods.get$hashCode(_this.root) + t1.get$hashCode(t1);
    },
    toString$0(_) {
      var _this = this;
      return "Node[id=" + _this.id + ", type=" + _this.type.toString$0(0) + ", root=" + _this.root + ", created=" + _this.created.toString$0(0) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "type", _this.type.value);
      _json.$indexSet(0, "root", _this.root);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      return _json;
    }
  };
  A.NodeTypeEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.NodeTypeEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "TAG":
            return B.NodeTypeEnum_TAG;
          case "WEBSITE":
            return B.NodeTypeEnum_WEBSITE;
          case "FORMAT":
            return B.NodeTypeEnum_FORMAT;
          case "ASSET":
            return B.NodeTypeEnum_ASSET;
        }
      return null;
    }
  };
  A.Notification.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Notification && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.title == _this.title && other.message == _this.message && other.payload == _this.payload;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSInt_methods.get$hashCode(_this.id);
      t3 = _this.title;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.message;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = _this.payload;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      return t1 + t2 + t3 + t4 + t5;
    },
    toString$0(_) {
      var _this = this;
      return "Notification[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", title=" + A.S(_this.title) + ", message=" + A.S(_this.message) + ", payload=" + A.S(_this.payload) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      t1 = _this.title;
      if (t1 != null)
        _json.$indexSet(0, "title", t1);
      t1 = _this.message;
      if (t1 != null)
        _json.$indexSet(0, "message", t1);
      t1 = _this.payload;
      if (t1 != null)
        _json.$indexSet(0, "payload", t1);
      return _json;
    }
  };
  A.OAuthAccount.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.OAuthAccount && other.clientId === _this.clientId && other.email === _this.email && other.connection === _this.connection && other.username === _this.username && other.givenName === _this.givenName && other.familyName === _this.familyName && other.name === _this.name && other.picture === _this.picture && other.nickname === _this.nickname;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return B.JSString_methods.get$hashCode(_this.clientId) + B.JSString_methods.get$hashCode(_this.email) + B.JSString_methods.get$hashCode(_this.connection) + B.JSString_methods.get$hashCode(_this.username) + B.JSString_methods.get$hashCode(_this.givenName) + B.JSString_methods.get$hashCode(_this.familyName) + B.JSString_methods.get$hashCode(_this.name) + B.JSString_methods.get$hashCode(_this.picture) + B.JSString_methods.get$hashCode(_this.nickname);
    },
    toString$0(_) {
      var _this = this;
      return "OAuthAccount[clientId=" + _this.clientId + ", email=" + _this.email + ", connection=" + _this.connection + ", username=" + _this.username + ", givenName=" + _this.givenName + ", familyName=" + _this.familyName + ", name=" + _this.name + ", picture=" + _this.picture + ", nickname=" + _this.nickname + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "client_id", _this.clientId);
      _json.$indexSet(0, "email", _this.email);
      _json.$indexSet(0, "connection", _this.connection);
      _json.$indexSet(0, "username", _this.username);
      _json.$indexSet(0, "given_name", _this.givenName);
      _json.$indexSet(0, "family_name", _this.familyName);
      _json.$indexSet(0, "name", _this.name);
      _json.$indexSet(0, "picture", _this.picture);
      _json.$indexSet(0, "nickname", _this.nickname);
      return _json;
    }
  };
  A.OAuthGroup.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.OAuthGroup && J.$eq$(other.token, this.token) && J.$eq$(other.account, this.account);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.token;
      t1 = t1 == null ? 0 : t1.get$hashCode(t1);
      t2 = this.account;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "OAuthGroup[token=" + A.S(this.token) + ", account=" + A.S(this.account) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.token;
      if (t1 != null)
        _json.$indexSet(0, "token", t1.toJson$0());
      t1 = this.account;
      if (t1 != null)
        _json.$indexSet(0, "account", t1.toJson$0());
      return _json;
    }
  };
  A.OAuthToken.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.OAuthToken && J.$eq$(other.schema, _this.schema) && other.accessToken === _this.accessToken && other.tokenType === _this.tokenType && other.expiresIn === _this.expiresIn && other.scope === _this.scope && other.refreshToken == _this.refreshToken && other.idToken == _this.idToken;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.accessToken);
      t3 = A.Primitives_objectHashCode(_this.tokenType);
      t4 = B.JSInt_methods.get$hashCode(_this.expiresIn);
      t5 = B.JSString_methods.get$hashCode(_this.scope);
      t6 = _this.refreshToken;
      t6 = t6 == null ? 0 : B.JSString_methods.get$hashCode(t6);
      t7 = _this.idToken;
      t7 = t7 == null ? 0 : B.JSString_methods.get$hashCode(t7);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7;
    },
    toString$0(_) {
      var _this = this;
      return "OAuthToken[schema=" + A.S(_this.schema) + ", accessToken=" + _this.accessToken + ", tokenType=" + _this.tokenType.toString$0(0) + ", expiresIn=" + _this.expiresIn + ", scope=" + _this.scope + ", refreshToken=" + A.S(_this.refreshToken) + ", idToken=" + A.S(_this.idToken) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "access_token", _this.accessToken);
      _json.$indexSet(0, "token_type", "Bearer");
      _json.$indexSet(0, "expires_in", _this.expiresIn);
      _json.$indexSet(0, "scope", _this.scope);
      t1 = _this.refreshToken;
      if (t1 != null)
        _json.$indexSet(0, "refresh_token", t1);
      t1 = _this.idToken;
      if (t1 != null)
        _json.$indexSet(0, "id_token", t1);
      return _json;
    }
  };
  A.OAuthTokenTokenTypeEnum.prototype = {
    toString$0(_) {
      return "Bearer";
    },
    toJson$0() {
      return "Bearer";
    }
  };
  A.OAuthTokenTokenTypeEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "Bearer":
            return B.C_OAuthTokenTokenTypeEnum;
        }
      return null;
    }
  };
  A.OCRAnalyses.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.OCRAnalyses && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "OCRAnalyses[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.OCRAnalyses_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.OCRAnalyses_toJson_closure.prototype = {
    call$1(element) {
      return type$.OCRAnalysis._as(element).toJson$0();
    },
    $signature: 86
  };
  A.OCRAnalysis.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.OCRAnalysis && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.raw.$eq(0, _this.raw) && other.hocr.$eq(0, _this.hocr) && other.image === _this.image && other.model.$eq(0, _this.model);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.raw;
      t3 = _this.hocr;
      t4 = _this.model;
      return t1 + B.JSString_methods.get$hashCode(_this.id) + t2.get$hashCode(t2) + t3.get$hashCode(t3) + B.JSString_methods.get$hashCode(_this.image) + t4.get$hashCode(t4);
    },
    toString$0(_) {
      var _this = this;
      return "OCRAnalysis[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", raw=" + _this.raw.toString$0(0) + ", hocr=" + _this.hocr.toString$0(0) + ", image=" + _this.image + ", model=" + _this.model.toString$0(0) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "raw", _this.raw.toJson$0());
      _json.$indexSet(0, "hocr", _this.hocr.toJson$0());
      _json.$indexSet(0, "image", _this.image);
      _json.$indexSet(0, "model", _this.model.toJson$0());
      return _json;
    }
  };
  A.OrderedMetrics.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.OrderedMetrics && J.$eq$(other.schema, this.schema) && other.ordered === this.ordered;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + J.get$hashCode$(this.ordered);
    },
    toString$0(_) {
      return "OrderedMetrics[schema=" + A.S(this.schema) + ", ordered=" + A.S(this.ordered) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "ordered", this.ordered);
      return _json;
    }
  };
  A.OSHealth.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.OSHealth && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.version === _this.version;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(this.id) + B.JSString_methods.get$hashCode(this.version);
    },
    toString$0(_) {
      return "OSHealth[schema=" + A.S(this.schema) + ", id=" + this.id + ", version=" + this.version + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", this.id);
      _json.$indexSet(0, "version", this.version);
      return _json;
    }
  };
  A.Person.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Person && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted) && other.access.$eq(0, _this.access) && J.$eq$(other.expiration, _this.expiration) && other.type.$eq(0, _this.type) && J.$eq$(other.asset, _this.asset) && other.mechanism === _this.mechanism && other.interactions == _this.interactions;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.created;
      t3 = t3.get$hashCode(t3);
      t4 = _this.updated;
      t4 = t4.get$hashCode(t4);
      t5 = _this.deleted;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = _this.access;
      t6 = t6.get$hashCode(t6);
      t7 = _this.expiration;
      t7 = t7 == null ? 0 : t7.get$hashCode(t7);
      t8 = _this.type;
      t8 = t8.get$hashCode(t8);
      t9 = _this.asset;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      t10 = A.Primitives_objectHashCode(_this.mechanism);
      t11 = _this.interactions;
      t11 = t11 == null ? 0 : B.JSInt_methods.get$hashCode(t11);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11;
    },
    toString$0(_) {
      var _this = this;
      return "Person[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", access=" + _this.access.toString$0(0) + ", expiration=" + A.S(_this.expiration) + ", type=" + _this.type.toString$0(0) + ", asset=" + A.S(_this.asset) + ", mechanism=" + _this.mechanism.toString$0(0) + ", interactions=" + A.S(_this.interactions) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      _json.$indexSet(0, "access", _this.access.toJson$0());
      t1 = _this.expiration;
      if (t1 != null)
        _json.$indexSet(0, "expiration", t1.toJson$0());
      _json.$indexSet(0, "type", _this.type.toJson$0());
      t1 = _this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      _json.$indexSet(0, "mechanism", _this.mechanism.value);
      t1 = _this.interactions;
      if (t1 != null)
        _json.$indexSet(0, "interactions", t1);
      return _json;
    }
  };
  A.PersonAccess.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.PersonAccess && J.$eq$(other.schema, this.schema) && other.scoped == this.scoped;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.scoped;
      return t1 + (t2 == null ? 0 : A.Primitives_objectHashCode(t2));
    },
    toString$0(_) {
      return "PersonAccess[schema=" + A.S(this.schema) + ", scoped=" + A.S(this.scoped) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.scoped;
      if (t1 != null)
        _json.$indexSet(0, "scoped", t1.value);
      return _json;
    }
  };
  A.PersonAccessScopedEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.PersonAccessScopedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "OWNER":
            return B.PersonAccessScopedEnum_OWNER;
          case "EDITOR":
            return B.PersonAccessScopedEnum_EDITOR;
          case "COMMENTER":
            return B.PersonAccessScopedEnum_COMMENTER;
          case "VIEWER":
            return B.PersonAccessScopedEnum_VIEWER;
        }
      return null;
    }
  };
  A.PersonBasicType.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.PersonBasicType && J.$eq$(other.schema, _this.schema) && other.username == _this.username && other.name == _this.name && other.picture == _this.picture && other.email == _this.email && other.sourced == _this.sourced && other.url == _this.url && J.$eq$(other.mailgun, _this.mailgun);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.username;
      t2 = t2 == null ? 0 : B.JSString_methods.get$hashCode(t2);
      t3 = _this.name;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.picture;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = _this.email;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      t6 = _this.sourced;
      t6 = t6 == null ? 0 : A.Primitives_objectHashCode(t6);
      t7 = _this.url;
      t7 = t7 == null ? 0 : B.JSString_methods.get$hashCode(t7);
      t8 = _this.mailgun;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8;
    },
    toString$0(_) {
      var _this = this;
      return "PersonBasicType[schema=" + A.S(_this.schema) + ", username=" + A.S(_this.username) + ", name=" + A.S(_this.name) + ", picture=" + A.S(_this.picture) + ", email=" + A.S(_this.email) + ", sourced=" + A.S(_this.sourced) + ", url=" + A.S(_this.url) + ", mailgun=" + A.S(_this.mailgun) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.username;
      if (t1 != null)
        _json.$indexSet(0, "username", t1);
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      t1 = _this.picture;
      if (t1 != null)
        _json.$indexSet(0, "picture", t1);
      t1 = _this.email;
      if (t1 != null)
        _json.$indexSet(0, "email", t1);
      t1 = _this.sourced;
      if (t1 != null)
        _json.$indexSet(0, "sourced", t1.value);
      t1 = _this.url;
      if (t1 != null)
        _json.$indexSet(0, "url", t1);
      t1 = _this.mailgun;
      if (t1 != null)
        _json.$indexSet(0, "mailgun", t1.toJson$0());
      return _json;
    }
  };
  A.PersonType.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.PersonType && J.$eq$(other.schema, _this.schema) && J.$eq$(other.basic, _this.basic) && J.$eq$(other.platform, _this.platform);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.basic;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = this.platform;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "PersonType[schema=" + A.S(this.schema) + ", basic=" + A.S(this.basic) + ", platform=" + A.S(this.platform) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.basic;
      if (t1 != null)
        _json.$indexSet(0, "basic", t1.toJson$0());
      t1 = this.platform;
      if (t1 != null)
        _json.$indexSet(0, "platform", t1.toJson$0());
      return _json;
    }
  };
  A.Persons.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Persons && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Persons[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Persons_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Persons_toJson_closure.prototype = {
    call$1(element) {
      return type$.Person._as(element).toJson$0();
    },
    $signature: 174
  };
  A.PKCE.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.PKCE && J.$eq$(other.schema, _this.schema) && J.$eq$(other.result, _this.result) && J.$eq$(other.challenge, _this.challenge) && J.$eq$(other.revocation, _this.revocation) && J.$eq$(other.seed, _this.seed) && J.$eq$(other.token, _this.token) && J.$eq$(other.auth0, _this.auth0);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.result;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.challenge;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.revocation;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      t5 = _this.seed;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = _this.token;
      t6 = t6 == null ? 0 : t6.get$hashCode(t6);
      t7 = _this.auth0;
      t7 = t7 == null ? 0 : t7.get$hashCode(t7);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7;
    },
    toString$0(_) {
      var _this = this;
      return "PKCE[schema=" + A.S(_this.schema) + ", result=" + A.S(_this.result) + ", challenge=" + A.S(_this.challenge) + ", revocation=" + A.S(_this.revocation) + ", seed=" + A.S(_this.seed) + ", token=" + A.S(_this.token) + ", auth0=" + A.S(_this.auth0) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.result;
      if (t1 != null)
        _json.$indexSet(0, "result", t1.toJson$0());
      t1 = _this.challenge;
      if (t1 != null)
        _json.$indexSet(0, "challenge", t1.toJson$0());
      t1 = _this.revocation;
      if (t1 != null)
        _json.$indexSet(0, "revocation", t1.toJson$0());
      t1 = _this.seed;
      if (t1 != null)
        _json.$indexSet(0, "seed", t1.toJson$0());
      t1 = _this.token;
      if (t1 != null)
        _json.$indexSet(0, "token", t1.toJson$0());
      t1 = _this.auth0;
      if (t1 != null)
        _json.$indexSet(0, "auth0", t1.toJson$0());
      return _json;
    }
  };
  A.PlatformEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.PlatformEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "WEB":
            return B.PlatformEnum_WEB;
          case "MACOS":
            return B.PlatformEnum_MACOS;
          case "LINUX":
            return B.PlatformEnum_LINUX;
          case "WINDOWS":
            return B.PlatformEnum_WINDOWS;
          case "FUCHSIA":
            return B.PlatformEnum_FUCHSIA;
          case "IOS":
            return B.PlatformEnum_IOS;
          case "ANDROID":
            return B.PlatformEnum_ANDROID;
          case "UNKNOWN":
            return B.PlatformEnum_UNKNOWN;
        }
      return null;
    }
  };
  A.Preview.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Preview && J.$eq$(other.schema, _this.schema) && other.base.$eq(0, _this.base) && J.$eq$(other.overlay, _this.overlay);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.base;
      t2 = t2.get$hashCode(t2);
      t3 = this.overlay;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "Preview[schema=" + A.S(this.schema) + ", base=" + this.base.toString$0(0) + ", overlay=" + A.S(this.overlay) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "base", this.base.toJson$0());
      t1 = this.overlay;
      if (t1 != null)
        _json.$indexSet(0, "overlay", t1.toJson$0());
      return _json;
    }
  };
  A.PrivacyEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.PrivacyEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "OPEN":
            return B.PrivacyEnum_OPEN;
          case "CLOSED":
            return B.PrivacyEnum_CLOSED;
          case "ANONYMOUS":
            return B.PrivacyEnum_ANONYMOUS;
        }
      return null;
    }
  };
  A.Reaction.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Reaction && J.$eq$(other.schema, _this.schema) && other.save === _this.save && J.$eq$(other.reuse, _this.reuse) && other.seed.$eq(0, _this.seed);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSBool_methods.get$hashCode(_this.save);
      t3 = _this.reuse;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.seed;
      return t1 + t2 + t3 + t4.get$hashCode(t4);
    },
    toString$0(_) {
      var _this = this;
      return "Reaction[schema=" + A.S(_this.schema) + ", save=" + _this.save + ", reuse=" + A.S(_this.reuse) + ", seed=" + _this.seed.toString$0(0) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "save", _this.save);
      t1 = _this.reuse;
      if (t1 != null)
        _json.$indexSet(0, "reuse", t1.toJson$0());
      _json.$indexSet(0, "seed", _this.seed.toJson$0());
      return _json;
    }
  };
  A.Recipients.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Recipients && other.iterable === this.iterable && J.$eq$(other.schema, this.schema);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = A.Primitives_objectHashCode(this.iterable),
        t2 = this.schema;
      return t1 + (t2 == null ? 0 : B.JSInt_methods.get$hashCode(t2.migration) + A.Primitives_objectHashCode(t2.semantic));
    },
    toString$0(_) {
      return "Recipients[iterable=" + A.S(this.iterable) + ", schema=" + A.S(this.schema) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.iterable,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Recipients_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      return _json;
    }
  };
  A.Recipients_toJson_closure.prototype = {
    call$1(element) {
      return type$.PersonBasicType._as(element).toJson$0();
    },
    $signature: 88
  };
  A.ReferencedActivity.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ReferencedActivity && J.$eq$(other.schema, _this.schema) && other.id === _this.id && J.$eq$(other.reference, _this.reference);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.id);
      t3 = this.reference;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "ReferencedActivity[schema=" + A.S(this.schema) + ", id=" + this.id + ", reference=" + A.S(this.reference) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", this.id);
      t1 = this.reference;
      if (t1 != null)
        _json.$indexSet(0, "reference", t1.toJson$0());
      return _json;
    }
  };
  A.ReferencedAsset.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ReferencedAsset && J.$eq$(other.schema, _this.schema) && other.id === _this.id && J.$eq$(other.reference, _this.reference);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.id);
      t3 = this.reference;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "ReferencedAsset[schema=" + A.S(this.schema) + ", id=" + this.id + ", reference=" + A.S(this.reference) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", this.id);
      t1 = this.reference;
      if (t1 != null)
        _json.$indexSet(0, "reference", t1.toJson$0());
      return _json;
    }
  };
  A.ReferencedDistribution.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ReferencedDistribution && J.$eq$(other.schema, _this.schema) && other.id === _this.id && J.$eq$(other.reference, _this.reference);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.id);
      t3 = this.reference;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "ReferencedDistribution[schema=" + A.S(this.schema) + ", id=" + this.id + ", reference=" + A.S(this.reference) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", this.id);
      t1 = this.reference;
      if (t1 != null)
        _json.$indexSet(0, "reference", t1.toJson$0());
      return _json;
    }
  };
  A.ReferencedFormat.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ReferencedFormat && J.$eq$(other.schema, _this.schema) && other.id === _this.id && J.$eq$(other.reference, _this.reference);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.id);
      t3 = this.reference;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "ReferencedFormat[schema=" + A.S(this.schema) + ", id=" + this.id + ", reference=" + A.S(this.reference) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", this.id);
      t1 = this.reference;
      if (t1 != null)
        _json.$indexSet(0, "reference", t1.toJson$0());
      return _json;
    }
  };
  A.ReferencedPerson.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ReferencedPerson && J.$eq$(other.schema, _this.schema) && other.id === _this.id && J.$eq$(other.reference, _this.reference);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.id);
      t3 = this.reference;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "ReferencedPerson[schema=" + A.S(this.schema) + ", id=" + this.id + ", reference=" + A.S(this.reference) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", this.id);
      t1 = this.reference;
      if (t1 != null)
        _json.$indexSet(0, "reference", t1.toJson$0());
      return _json;
    }
  };
  A.ReferencedSensitive.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ReferencedSensitive && J.$eq$(other.schema, _this.schema) && other.id === _this.id && J.$eq$(other.reference, _this.reference);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.id);
      t3 = this.reference;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "ReferencedSensitive[schema=" + A.S(this.schema) + ", id=" + this.id + ", reference=" + A.S(this.reference) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", this.id);
      t1 = this.reference;
      if (t1 != null)
        _json.$indexSet(0, "reference", t1.toJson$0());
      return _json;
    }
  };
  A.ReferencedShare.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ReferencedShare && J.$eq$(other.schema, _this.schema) && other.id === _this.id && J.$eq$(other.reference, _this.reference);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.id);
      t3 = this.reference;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "ReferencedShare[schema=" + A.S(this.schema) + ", id=" + this.id + ", reference=" + A.S(this.reference) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", this.id);
      t1 = this.reference;
      if (t1 != null)
        _json.$indexSet(0, "reference", t1.toJson$0());
      return _json;
    }
  };
  A.ReferencedTag.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ReferencedTag && J.$eq$(other.schema, _this.schema) && other.id === _this.id && J.$eq$(other.reference, _this.reference);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.id);
      t3 = this.reference;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "ReferencedTag[schema=" + A.S(this.schema) + ", id=" + this.id + ", reference=" + A.S(this.reference) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", this.id);
      t1 = this.reference;
      if (t1 != null)
        _json.$indexSet(0, "reference", t1.toJson$0());
      return _json;
    }
  };
  A.ReferencedUser.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ReferencedUser && J.$eq$(other.schema, _this.schema) && other.id === _this.id && J.$eq$(other.reference, _this.reference);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.id);
      t3 = this.reference;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "ReferencedUser[schema=" + A.S(this.schema) + ", id=" + this.id + ", reference=" + A.S(this.reference) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", this.id);
      t1 = this.reference;
      if (t1 != null)
        _json.$indexSet(0, "reference", t1.toJson$0());
      return _json;
    }
  };
  A.ReferencedWebsite.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ReferencedWebsite && J.$eq$(other.schema, _this.schema) && other.id === _this.id && J.$eq$(other.reference, _this.reference);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.id);
      t3 = this.reference;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "ReferencedWebsite[schema=" + A.S(this.schema) + ", id=" + this.id + ", reference=" + A.S(this.reference) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", this.id);
      t1 = this.reference;
      if (t1 != null)
        _json.$indexSet(0, "reference", t1.toJson$0());
      return _json;
    }
  };
  A.Relationship.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Relationship && other.id === _this.id && J.$eq$(other.schema, _this.schema) && other.embeddings.$eq(0, _this.embeddings) && other.edges.$eq(0, _this.edges) && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t3, t4, t5, t6, t7, _this = this,
        t1 = B.JSString_methods.get$hashCode(_this.id),
        t2 = _this.schema;
      t2 = t2 == null ? 0 : B.JSInt_methods.get$hashCode(t2.migration) + A.Primitives_objectHashCode(t2.semantic);
      t3 = A.Primitives_objectHashCode(_this.embeddings.iterable);
      t4 = A.Primitives_objectHashCode(_this.edges.iterable);
      t5 = _this.created;
      t5 = t5.get$hashCode(t5);
      t6 = _this.updated;
      t6 = t6.get$hashCode(t6);
      t7 = _this.deleted;
      t7 = t7 == null ? 0 : t7.get$hashCode(t7);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7;
    },
    toString$0(_) {
      var _this = this;
      return "Relationship[id=" + _this.id + ", schema=" + A.S(_this.schema) + ", embeddings=" + _this.embeddings.toString$0(0) + ", edges=" + _this.edges.toString$0(0) + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + "]";
    },
    toJson$0() {
      var t1, _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "id", _this.id);
      t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "embeddings", _this.embeddings.toJson$0());
      _json.$indexSet(0, "edges", _this.edges.toJson$0());
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      return _json;
    }
  };
  A.Relationships.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Relationships && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Relationships[iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.iterable,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Relationships_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Relationships_toJson_closure.prototype = {
    call$1(element) {
      return type$.Relationship._as(element).toJson$0();
    },
    $signature: 89
  };
  A.ResultedPKCE.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ResultedPKCE && J.$eq$(other.schema, _this.schema) && other.code === _this.code && other.state === _this.state;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(this.code) + B.JSString_methods.get$hashCode(this.state);
    },
    toString$0(_) {
      return "ResultedPKCE[schema=" + A.S(this.schema) + ", code=" + this.code + ", state=" + this.state + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "code", this.code);
      _json.$indexSet(0, "state", this.state);
      return _json;
    }
  };
  A.ReturnedUserProfile.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.ReturnedUserProfile && J.$eq$(other.schema, this.schema) && J.$eq$(other.user, this.user);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.user;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "ReturnedUserProfile[schema=" + A.S(this.schema) + ", user=" + A.S(this.user) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1.toJson$0());
      return _json;
    }
  };
  A.ReuseReaction.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.ReuseReaction && J.$eq$(other.schema, this.schema) && other.asset === this.asset;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(this.asset);
    },
    toString$0(_) {
      return "ReuseReaction[schema=" + A.S(this.schema) + ", asset=" + this.asset + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "asset", this.asset);
      return _json;
    }
  };
  A.ReuseSuggestion.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.ReuseSuggestion && J.$eq$(other.schema, _this.schema) && other.suggested === _this.suggested && other.assets.$eq(0, _this.assets);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.assets;
      return t1 + B.JSBool_methods.get$hashCode(this.suggested) + t2.get$hashCode(t2);
    },
    toString$0(_) {
      return "ReuseSuggestion[schema=" + A.S(this.schema) + ", suggested=" + this.suggested + ", assets=" + this.assets.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "suggested", this.suggested);
      _json.$indexSet(0, "assets", this.assets.toJson$0());
      return _json;
    }
  };
  A.RevokedPKCE.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.RevokedPKCE && J.$eq$(other.schema, _this.schema) && other.clientId === _this.clientId && other.token === _this.token;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(this.clientId) + B.JSString_methods.get$hashCode(this.token);
    },
    toString$0(_) {
      return "RevokedPKCE[schema=" + A.S(this.schema) + ", clientId=" + this.clientId + ", token=" + this.token + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "client_id", this.clientId);
      _json.$indexSet(0, "token", this.token);
      return _json;
    }
  };
  A.Role.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.RoleTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "ORIGINAL":
            return B.Role_ORIGINAL;
          case "ADDITIONAL":
            return B.Role_ADDITIONAL;
          case "BOTH":
            return B.Role_BOTH;
          case "PREVIEW":
            return B.Role_PREVIEW;
        }
      return null;
    }
  };
  A.SaveSuggestion.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SaveSuggestion && J.$eq$(other.schema, this.schema) && other.suggested === this.suggested;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSBool_methods.get$hashCode(this.suggested);
    },
    toString$0(_) {
      return "SaveSuggestion[schema=" + A.S(this.schema) + ", suggested=" + this.suggested + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "suggested", this.suggested);
      return _json;
    }
  };
  A.Score.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Score && J.$eq$(other.schema, _this.schema) && other.manual === _this.manual && other.automatic === _this.automatic;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSInt_methods.get$hashCode(this.manual) + B.JSInt_methods.get$hashCode(this.automatic);
    },
    toString$0(_) {
      return "Score[schema=" + A.S(this.schema) + ", manual=" + this.manual + ", automatic=" + this.automatic + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "manual", this.manual);
      _json.$indexSet(0, "automatic", this.automatic);
      return _json;
    }
  };
  A.Searched.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Searched && J.$eq$(other.schema, this.schema) && other.assets.$eq(0, this.assets);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.assets;
      return t1 + t2.get$hashCode(t2);
    },
    toString$0(_) {
      return "Searched[schema=" + A.S(this.schema) + ", assets=" + this.assets.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "assets", this.assets.toJson$0());
      return _json;
    }
  };
  A.SearchedAsset.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SearchedAsset && J.$eq$(other.schema, _this.schema) && J.$eq$(other.asset, _this.asset) && other.exact === _this.exact && other.score === _this.score && other.match === _this.match && other.identifier === _this.identifier;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.asset;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      return t1 + t2 + B.JSBool_methods.get$hashCode(_this.exact) + B.JSNumber_methods.get$hashCode(_this.score) + A.Primitives_objectHashCode(_this.match) + B.JSString_methods.get$hashCode(_this.identifier);
    },
    toString$0(_) {
      var _this = this;
      return "SearchedAsset[schema=" + A.S(_this.schema) + ", asset=" + A.S(_this.asset) + ", exact=" + _this.exact + ", score=" + A.S(_this.score) + ", match=" + _this.match.toString$0(0) + ", identifier=" + _this.identifier + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      _json.$indexSet(0, "exact", _this.exact);
      _json.$indexSet(0, "score", _this.score);
      _json.$indexSet(0, "match", _this.match.value);
      _json.$indexSet(0, "identifier", _this.identifier);
      return _json;
    }
  };
  A.SearchedAssets.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SearchedAssets && J.$eq$(other.schema, _this.schema) && other.iterable === _this.iterable && other.suggested === _this.suggested && other.exact === _this.exact;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(_this.iterable) + B.JSNumber_methods.get$hashCode(_this.suggested) + B.JSNumber_methods.get$hashCode(_this.exact);
    },
    toString$0(_) {
      var _this = this;
      return "SearchedAssets[schema=" + A.S(_this.schema) + ", iterable=" + A.S(_this.iterable) + ", suggested=" + A.S(_this.suggested) + ", exact=" + A.S(_this.exact) + "]";
    },
    toJson$0() {
      var t2, t3, _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SearchedAssets_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      _json.$indexSet(0, "suggested", _this.suggested);
      _json.$indexSet(0, "exact", _this.exact);
      return _json;
    }
  };
  A.SearchedAssets_toJson_closure.prototype = {
    call$1(element) {
      return type$.SearchedAsset._as(element).toJson$0();
    },
    $signature: 90
  };
  A.SearchedMatchEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.SearchedMatchEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "TITLE":
            return B.SearchedMatchEnum_TITLE;
          case "DESCRIPTION":
            return B.SearchedMatchEnum_DESCRIPTION;
          case "CONTENT":
            return B.SearchedMatchEnum_CONTENT;
          case "FUZZY":
            return B.SearchedMatchEnum_FUZZY;
          case "MULTIPLE":
            return B.SearchedMatchEnum_MULTIPLE;
          case "TAGS":
            return B.SearchedMatchEnum_TAGS;
          case "WEBSITES":
            return B.SearchedMatchEnum_WEBSITES;
          case "PERSONS":
            return B.SearchedMatchEnum_PERSONS;
        }
      return null;
    }
  };
  A.Seed.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Seed && J.$eq$(other.schema, _this.schema) && J.$eq$(other.asset, _this.asset) && other.type === _this.type;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.asset;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      return t1 + t2 + A.Primitives_objectHashCode(this.type);
    },
    toString$0(_) {
      return "Seed[schema=" + A.S(this.schema) + ", asset=" + A.S(this.asset) + ", type=" + this.type.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      _json.$indexSet(0, "type", this.type.value);
      return _json;
    }
  };
  A.SeedTypeEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.SeedTypeEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "SEEDED_FORMAT":
            return B.SeedTypeEnum_SEEDED_FORMAT;
          case "SEEDED_ASSET":
            return B.SeedTypeEnum_SEEDED_ASSET;
        }
      return null;
    }
  };
  A.SeededAccessor.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededAccessor && J.$eq$(other.schema, _this.schema) && other.os === _this.os && J.$eq$(other.user, _this.user) && other.share === _this.share;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.os);
      t3 = _this.user;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3 + B.JSString_methods.get$hashCode(_this.share);
    },
    toString$0(_) {
      var _this = this;
      return "SeededAccessor[schema=" + A.S(_this.schema) + ", os=" + _this.os + ", user=" + A.S(_this.user) + ", share=" + _this.share + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "os", _this.os);
      t1 = _this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1.toJson$0());
      _json.$indexSet(0, "share", _this.share);
      return _json;
    }
  };
  A.SeededActivity.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededActivity && other.event.$eq(0, _this.event) && other.application.$eq(0, _this.application) && J.$eq$(other.asset, _this.asset) && J.$eq$(other.user, _this.user) && J.$eq$(other.format, _this.format) && other.mechanism == _this.mechanism;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.event;
      t1 = t1.get$hashCode(t1);
      t2 = _this.application;
      t2 = t2.get$hashCode(t2);
      t3 = _this.asset;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.user;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      t5 = _this.format;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = _this.mechanism;
      t6 = t6 == null ? 0 : A.Primitives_objectHashCode(t6);
      return t1 + t2 + t3 + t4 + t5 + t6;
    },
    toString$0(_) {
      var _this = this;
      return "SeededActivity[event=" + _this.event.toString$0(0) + ", application=" + _this.application.toString$0(0) + ", asset=" + A.S(_this.asset) + ", user=" + A.S(_this.user) + ", format=" + A.S(_this.format) + ", mechanism=" + A.S(_this.mechanism) + "]";
    },
    toJson$0() {
      var t1, _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "event", _this.event.toJson$0());
      _json.$indexSet(0, "application", _this.application.toJson$0());
      t1 = _this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      t1 = _this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1.toJson$0());
      t1 = _this.format;
      if (t1 != null)
        _json.$indexSet(0, "format", t1.toJson$0());
      t1 = _this.mechanism;
      if (t1 != null)
        _json.$indexSet(0, "mechanism", t1.value);
      return _json;
    }
  };
  A.SeededAsset.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededAsset && J.$eq$(other.schema, _this.schema) && J.$eq$(other.metadata, _this.metadata) && other.application.$eq(0, _this.application) && other.format.$eq(0, _this.format) && other.discovered == _this.discovered && J.$eq$(other.available, _this.available);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.metadata;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.application;
      t3 = t3.get$hashCode(t3);
      t4 = _this.format;
      t4 = t4.get$hashCode(t4);
      t5 = _this.discovered;
      t5 = t5 == null ? 0 : B.JSBool_methods.get$hashCode(t5);
      t6 = _this.available;
      t6 = t6 == null ? 0 : t6.get$hashCode(t6);
      return t1 + t2 + t3 + t4 + t5 + t6;
    },
    toString$0(_) {
      var _this = this;
      return "SeededAsset[schema=" + A.S(_this.schema) + ", metadata=" + A.S(_this.metadata) + ", application=" + _this.application.toString$0(0) + ", format=" + _this.format.toString$0(0) + ", discovered=" + A.S(_this.discovered) + ", available=" + A.S(_this.available) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      _json.$indexSet(0, "application", _this.application.toJson$0());
      _json.$indexSet(0, "format", _this.format.toJson$0());
      t1 = _this.discovered;
      if (t1 != null)
        _json.$indexSet(0, "discovered", t1);
      t1 = _this.available;
      if (t1 != null)
        _json.$indexSet(0, "available", t1.toJson$0());
      return _json;
    }
  };
  A.SeededAssetMetadata.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededAssetMetadata && J.$eq$(other.schema, _this.schema) && other.description == _this.description && other.name == _this.name && other.mechanism == _this.mechanism && other.tags === _this.tags && other.websites === _this.websites && other.sensitives === _this.sensitives && other.persons === _this.persons;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.description;
      t2 = t2 == null ? 0 : B.JSString_methods.get$hashCode(t2);
      t3 = _this.name;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.mechanism;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4);
      return t1 + t2 + t3 + t4 + A.Primitives_objectHashCode(_this.tags) + A.Primitives_objectHashCode(_this.websites) + A.Primitives_objectHashCode(_this.sensitives) + A.Primitives_objectHashCode(_this.persons);
    },
    toString$0(_) {
      var _this = this;
      return "SeededAssetMetadata[schema=" + A.S(_this.schema) + ", description=" + A.S(_this.description) + ", name=" + A.S(_this.name) + ", mechanism=" + A.S(_this.mechanism) + ", tags=" + A.S(_this.tags) + ", websites=" + A.S(_this.websites) + ", sensitives=" + A.S(_this.sensitives) + ", persons=" + A.S(_this.persons) + "]";
    },
    toJson$0() {
      var t2, t3, _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.description;
      if (t1 != null)
        _json.$indexSet(0, "description", t1);
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      t1 = _this.mechanism;
      if (t1 != null)
        _json.$indexSet(0, "mechanism", t1.value);
      t1 = _this.tags;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "tags", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SeededAssetMetadata_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      t3 = _this.websites;
      t2 = A._arrayInstanceType(t3);
      t1 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "websites", A.List_List$of(new A.MappedListIterable(t3, t2._eval$1("Object(1)")._as(new A.SeededAssetMetadata_toJson_closure0()), t1), true, t1._eval$1("ListIterable.E")));
      t1 = _this.sensitives;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "sensitives", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SeededAssetMetadata_toJson_closure1()), t3), true, t3._eval$1("ListIterable.E")));
      t3 = _this.persons;
      t2 = A._arrayInstanceType(t3);
      t1 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "persons", A.List_List$of(new A.MappedListIterable(t3, t2._eval$1("Object(1)")._as(new A.SeededAssetMetadata_toJson_closure2()), t1), true, t1._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.SeededAssetMetadata_toJson_closure.prototype = {
    call$1(element) {
      return type$.SeededAssetTag._as(element).toJson$0();
    },
    $signature: 39
  };
  A.SeededAssetMetadata_toJson_closure0.prototype = {
    call$1(element) {
      return type$.SeededAssetWebsite._as(element).toJson$0();
    },
    $signature: 92
  };
  A.SeededAssetMetadata_toJson_closure1.prototype = {
    call$1(element) {
      return type$.SeededAssetSensitive._as(element).toJson$0();
    },
    $signature: 93
  };
  A.SeededAssetMetadata_toJson_closure2.prototype = {
    call$1(element) {
      return type$.SeededPerson._as(element).toJson$0();
    },
    $signature: 94
  };
  A.SeededAssetSensitive.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededAssetSensitive && J.$eq$(other.schema, _this.schema) && other.text === _this.text && other.mechanism == _this.mechanism && other.category === _this.category && other.severity === _this.severity && other.name === _this.name && other.description === _this.description && J.$eq$(other.metadata, _this.metadata);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.text);
      t3 = _this.mechanism;
      t3 = t3 == null ? 0 : A.Primitives_objectHashCode(t3);
      t4 = A.Primitives_objectHashCode(_this.category);
      t5 = A.Primitives_objectHashCode(_this.severity);
      t6 = B.JSString_methods.get$hashCode(_this.name);
      t7 = B.JSString_methods.get$hashCode(_this.description);
      t8 = _this.metadata;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8;
    },
    toString$0(_) {
      var _this = this;
      return "SeededAssetSensitive[schema=" + A.S(_this.schema) + ", text=" + _this.text + ", mechanism=" + A.S(_this.mechanism) + ", category=" + _this.category.toString$0(0) + ", severity=" + _this.severity.toString$0(0) + ", name=" + _this.name + ", description=" + _this.description + ", metadata=" + A.S(_this.metadata) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "text", _this.text);
      t1 = _this.mechanism;
      if (t1 != null)
        _json.$indexSet(0, "mechanism", t1.value);
      _json.$indexSet(0, "category", _this.category.value);
      _json.$indexSet(0, "severity", _this.severity.value);
      _json.$indexSet(0, "name", _this.name);
      _json.$indexSet(0, "description", _this.description);
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      return _json;
    }
  };
  A.SeededAssetTag.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededAssetTag && J.$eq$(other.schema, _this.schema) && other.text === _this.text && other.mechanism == _this.mechanism && other.category == _this.category;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.text);
      t3 = _this.mechanism;
      t3 = t3 == null ? 0 : A.Primitives_objectHashCode(t3);
      t4 = _this.category;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "SeededAssetTag[schema=" + A.S(_this.schema) + ", text=" + _this.text + ", mechanism=" + A.S(_this.mechanism) + ", category=" + A.S(_this.category) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "text", _this.text);
      t1 = _this.mechanism;
      if (t1 != null)
        _json.$indexSet(0, "mechanism", t1.value);
      t1 = _this.category;
      if (t1 != null)
        _json.$indexSet(0, "category", t1.value);
      return _json;
    }
  };
  A.SeededAssetTags.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededAssetTags && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "SeededAssetTags[iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.iterable,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SeededAssetTags_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.SeededAssetTags_toJson_closure.prototype = {
    call$1(element) {
      return type$.SeededAssetTag._as(element).toJson$0();
    },
    $signature: 39
  };
  A.SeededAssetWebsite.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededAssetWebsite && J.$eq$(other.schema, _this.schema) && other.url === _this.url && other.name === _this.name && other.mechanism == _this.mechanism;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.url);
      t3 = B.JSString_methods.get$hashCode(_this.name);
      t4 = _this.mechanism;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "SeededAssetWebsite[schema=" + A.S(_this.schema) + ", url=" + _this.url + ", name=" + _this.name + ", mechanism=" + A.S(_this.mechanism) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "url", _this.url);
      _json.$indexSet(0, "name", _this.name);
      t1 = _this.mechanism;
      if (t1 != null)
        _json.$indexSet(0, "mechanism", t1.value);
      return _json;
    }
  };
  A.SeededAssetsRecommendation.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededAssetsRecommendation && J.$eq$(other.schema, _this.schema) && other.assets.$eq(0, _this.assets) && other.interactions.$eq(0, _this.interactions);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.assets;
      t3 = this.interactions;
      return t1 + t2.get$hashCode(t2) + t3.get$hashCode(t3);
    },
    toString$0(_) {
      return "SeededAssetsRecommendation[schema=" + A.S(this.schema) + ", assets=" + this.assets.toString$0(0) + ", interactions=" + this.interactions.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "assets", this.assets.toJson$0());
      _json.$indexSet(0, "interactions", this.interactions.toJson$0());
      return _json;
    }
  };
  A.SeededClassification.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededClassification && J.$eq$(other.schema, _this.schema) && other.generic == _this.generic && other.specific == _this.specific && other.rendering == _this.rendering;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.generic;
      t2 = t2 == null ? 0 : A.Primitives_objectHashCode(t2);
      t3 = _this.specific;
      t3 = t3 == null ? 0 : A.Primitives_objectHashCode(t3);
      t4 = _this.rendering;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "SeededClassification[schema=" + A.S(_this.schema) + ", generic=" + A.S(_this.generic) + ", specific=" + A.S(_this.specific) + ", rendering=" + A.S(_this.rendering) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.generic;
      if (t1 != null)
        _json.$indexSet(0, "generic", t1.value);
      t1 = _this.specific;
      if (t1 != null)
        _json.$indexSet(0, "specific", t1.value);
      t1 = _this.rendering;
      if (t1 != null)
        _json.$indexSet(0, "rendering", t1.value);
      return _json;
    }
  };
  A.SeededConnectorAsset.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededConnectorAsset && J.$eq$(other.schema, _this.schema) && J.$eq$(other.metadata, _this.metadata) && other.format.$eq(0, _this.format);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.metadata;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = this.format;
      return t1 + t2 + t3.get$hashCode(t3);
    },
    toString$0(_) {
      return "SeededConnectorAsset[schema=" + A.S(this.schema) + ", metadata=" + A.S(this.metadata) + ", format=" + this.format.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      _json.$indexSet(0, "format", this.format.toJson$0());
      return _json;
    }
  };
  A.SeededConnectorConnection.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededConnectorConnection && J.$eq$(other.schema, this.schema) && other.application.$eq(0, this.application);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.application;
      return t1 + t2.get$hashCode(t2);
    },
    toString$0(_) {
      return "SeededConnectorConnection[schema=" + A.S(this.schema) + ", application=" + this.application.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "application", this.application.toJson$0());
      return _json;
    }
  };
  A.SeededConnectorCreation.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededConnectorCreation && J.$eq$(other.schema, this.schema) && J.$eq$(other.asset, this.asset);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.asset;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "SeededConnectorCreation[schema=" + A.S(this.schema) + ", asset=" + A.S(this.asset) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      return _json;
    }
  };
  A.SeededConnectorTracking.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededConnectorTracking && J.$eq$(other.schema, _this.schema) && J.$eq$(other.format, _this.format) && J.$eq$(other.asset, _this.asset) && J.$eq$(other.interaction, _this.interaction) && J.$eq$(other.keyboard, _this.keyboard) && J.$eq$(other.session, _this.session) && J.$eq$(other.assets, _this.assets) && J.$eq$(other.ml, _this.ml) && J.$eq$(other.adoption, _this.adoption);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.format;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.asset;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.interaction;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      t5 = _this.keyboard;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = _this.session;
      t6 = t6 == null ? 0 : t6.get$hashCode(t6);
      t7 = _this.assets;
      t7 = t7 == null ? 0 : t7.get$hashCode(t7);
      t8 = _this.ml;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      t9 = _this.adoption;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9;
    },
    toString$0(_) {
      var _this = this;
      return "SeededConnectorTracking[schema=" + A.S(_this.schema) + ", format=" + A.S(_this.format) + ", asset=" + A.S(_this.asset) + ", interaction=" + A.S(_this.interaction) + ", keyboard=" + A.S(_this.keyboard) + ", session=" + A.S(_this.session) + ", assets=" + A.S(_this.assets) + ", ml=" + A.S(_this.ml) + ", adoption=" + A.S(_this.adoption) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.format;
      if (t1 != null)
        _json.$indexSet(0, "format", t1.toJson$0());
      t1 = _this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      t1 = _this.interaction;
      if (t1 != null)
        _json.$indexSet(0, "interaction", t1.toJson$0());
      t1 = _this.keyboard;
      if (t1 != null)
        _json.$indexSet(0, "keyboard", t1.toJson$0());
      t1 = _this.session;
      if (t1 != null)
        _json.$indexSet(0, "session", t1.toJson$0());
      t1 = _this.assets;
      if (t1 != null)
        _json.$indexSet(0, "assets", t1.toJson$0());
      t1 = _this.ml;
      if (t1 != null)
        _json.$indexSet(0, "ml", t1.toJson$0());
      t1 = _this.adoption;
      if (t1 != null)
        _json.$indexSet(0, "adoption", t1.toJson$0());
      return _json;
    }
  };
  A.SeededDiscoverableAsset.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededDiscoverableAsset && J.$eq$(other.schema, _this.schema) && J.$eq$(other.file, _this.file) && J.$eq$(other.fragment, _this.fragment) && other.directory == _this.directory && J.$eq$(other.filters, _this.filters);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.file;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.fragment;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.directory;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = _this.filters;
      t5 = t5 == null ? 0 : A.Primitives_objectHashCode(t5.iterable);
      return t1 + t2 + t3 + t4 + t5;
    },
    toString$0(_) {
      var _this = this;
      return "SeededDiscoverableAsset[schema=" + A.S(_this.schema) + ", file=" + A.S(_this.file) + ", fragment=" + A.S(_this.fragment) + ", directory=" + A.S(_this.directory) + ", filters=" + A.S(_this.filters) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.file;
      if (t1 != null)
        _json.$indexSet(0, "file", t1.toJson$0());
      t1 = _this.fragment;
      if (t1 != null)
        _json.$indexSet(0, "fragment", t1.toJson$0());
      t1 = _this.directory;
      if (t1 != null)
        _json.$indexSet(0, "directory", t1);
      t1 = _this.filters;
      if (t1 != null)
        _json.$indexSet(0, "filters", t1.toJson$0());
      return _json;
    }
  };
  A.SeededDiscoverableAssets.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededDiscoverableAssets && J.$eq$(other.schema, _this.schema) && other.application === _this.application && other.iterable === _this.iterable && J.$eq$(other.filters, _this.filters);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.application);
      t3 = A.Primitives_objectHashCode(_this.iterable);
      t4 = _this.filters;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4.iterable);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "SeededDiscoverableAssets[schema=" + A.S(_this.schema) + ", application=" + _this.application + ", iterable=" + A.S(_this.iterable) + ", filters=" + A.S(_this.filters) + "]";
    },
    toJson$0() {
      var t2, t3, _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "application", _this.application);
      t1 = _this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SeededDiscoverableAssets_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      t1 = _this.filters;
      if (t1 != null)
        _json.$indexSet(0, "filters", t1.toJson$0());
      return _json;
    }
  };
  A.SeededDiscoverableAssets_toJson_closure.prototype = {
    call$1(element) {
      return type$.SeededDiscoverableAsset._as(element).toJson$0();
    },
    $signature: 95
  };
  A.SeededDiscoverableHtmlWebpage.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededDiscoverableHtmlWebpage && J.$eq$(other.schema, _this.schema) && other.url === _this.url && other.page === _this.page;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(this.url) + B.JSString_methods.get$hashCode(this.page);
    },
    toString$0(_) {
      return "SeededDiscoverableHtmlWebpage[schema=" + A.S(this.schema) + ", url=" + this.url + ", page=" + this.page + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "url", this.url);
      _json.$indexSet(0, "page", this.page);
      return _json;
    }
  };
  A.SeededDiscoverableHtmlWebpages.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededDiscoverableHtmlWebpages && J.$eq$(other.schema, _this.schema) && other.iterable === _this.iterable && other.application === _this.application;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable) + B.JSString_methods.get$hashCode(this.application);
    },
    toString$0(_) {
      return "SeededDiscoverableHtmlWebpages[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + ", application=" + this.application + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SeededDiscoverableHtmlWebpages_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      _json.$indexSet(0, "application", this.application);
      return _json;
    }
  };
  A.SeededDiscoverableHtmlWebpages_toJson_closure.prototype = {
    call$1(element) {
      return type$.SeededDiscoverableHtmlWebpage._as(element).toJson$0();
    },
    $signature: 96
  };
  A.SeededDiscoverableRelatedTag.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededDiscoverableRelatedTag && J.$eq$(other.schema, _this.schema) && other.text === _this.text && other.asset === _this.asset && other.mechanism == _this.mechanism && other.format == _this.format && other.category == _this.category;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.text);
      t3 = B.JSString_methods.get$hashCode(_this.asset);
      t4 = _this.mechanism;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4);
      t5 = _this.format;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      t6 = _this.category;
      t6 = t6 == null ? 0 : A.Primitives_objectHashCode(t6);
      return t1 + t2 + t3 + t4 + t5 + t6;
    },
    toString$0(_) {
      var _this = this;
      return "SeededDiscoverableRelatedTag[schema=" + A.S(_this.schema) + ", text=" + _this.text + ", asset=" + _this.asset + ", mechanism=" + A.S(_this.mechanism) + ", format=" + A.S(_this.format) + ", category=" + A.S(_this.category) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "text", _this.text);
      _json.$indexSet(0, "asset", _this.asset);
      t1 = _this.mechanism;
      if (t1 != null)
        _json.$indexSet(0, "mechanism", t1.value);
      t1 = _this.format;
      if (t1 != null)
        _json.$indexSet(0, "format", t1);
      t1 = _this.category;
      if (t1 != null)
        _json.$indexSet(0, "category", t1.value);
      return _json;
    }
  };
  A.SeededDiscoverableRelatedTags.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededDiscoverableRelatedTags && J.$eq$(other.schema, _this.schema) && other.iterable === _this.iterable && other.application === _this.application;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable) + B.JSString_methods.get$hashCode(this.application);
    },
    toString$0(_) {
      return "SeededDiscoverableRelatedTags[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + ", application=" + this.application + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SeededDiscoverableRelatedTags_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      _json.$indexSet(0, "application", this.application);
      return _json;
    }
  };
  A.SeededDiscoverableRelatedTags_toJson_closure.prototype = {
    call$1(element) {
      return type$.SeededDiscoverableRelatedTag._as(element).toJson$0();
    },
    $signature: 97
  };
  A.SeededDiscoverableSensitive.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededDiscoverableSensitive && J.$eq$(other.schema, _this.schema) && other.asset === _this.asset && other.text === _this.text && other.mechanism == _this.mechanism && other.category == _this.category && other.severity == _this.severity && other.name == _this.name && other.description == _this.description && J.$eq$(other.metadata, _this.metadata);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.asset);
      t3 = B.JSString_methods.get$hashCode(_this.text);
      t4 = _this.mechanism;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4);
      t5 = _this.category;
      t5 = t5 == null ? 0 : A.Primitives_objectHashCode(t5);
      t6 = _this.severity;
      t6 = t6 == null ? 0 : A.Primitives_objectHashCode(t6);
      t7 = _this.name;
      t7 = t7 == null ? 0 : B.JSString_methods.get$hashCode(t7);
      t8 = _this.description;
      t8 = t8 == null ? 0 : B.JSString_methods.get$hashCode(t8);
      t9 = _this.metadata;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9;
    },
    toString$0(_) {
      var _this = this;
      return "SeededDiscoverableSensitive[schema=" + A.S(_this.schema) + ", asset=" + _this.asset + ", text=" + _this.text + ", mechanism=" + A.S(_this.mechanism) + ", category=" + A.S(_this.category) + ", severity=" + A.S(_this.severity) + ", name=" + A.S(_this.name) + ", description=" + A.S(_this.description) + ", metadata=" + A.S(_this.metadata) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "asset", _this.asset);
      _json.$indexSet(0, "text", _this.text);
      t1 = _this.mechanism;
      if (t1 != null)
        _json.$indexSet(0, "mechanism", t1.value);
      t1 = _this.category;
      if (t1 != null)
        _json.$indexSet(0, "category", t1.value);
      t1 = _this.severity;
      if (t1 != null)
        _json.$indexSet(0, "severity", t1.value);
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      t1 = _this.description;
      if (t1 != null)
        _json.$indexSet(0, "description", t1);
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      return _json;
    }
  };
  A.SeededDiscoverableSensitives.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededDiscoverableSensitives && J.$eq$(other.schema, _this.schema) && other.iterable === _this.iterable && other.application === _this.application;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable) + B.JSString_methods.get$hashCode(this.application);
    },
    toString$0(_) {
      return "SeededDiscoverableSensitives[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + ", application=" + this.application + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SeededDiscoverableSensitives_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      _json.$indexSet(0, "application", this.application);
      return _json;
    }
  };
  A.SeededDiscoverableSensitives_toJson_closure.prototype = {
    call$1(element) {
      return type$.SeededDiscoverableSensitive._as(element).toJson$0();
    },
    $signature: 98
  };
  A.SeededDistribution.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededDistribution && J.$eq$(other.schema, _this.schema) && J.$eq$(other.mailgun, _this.mailgun) && J.$eq$(other.github, _this.github);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.mailgun;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = this.github;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "SeededDistribution[schema=" + A.S(this.schema) + ", mailgun=" + A.S(this.mailgun) + ", github=" + A.S(this.github) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.mailgun;
      if (t1 != null)
        _json.$indexSet(0, "mailgun", t1.toJson$0());
      t1 = this.github;
      if (t1 != null)
        _json.$indexSet(0, "github", t1.toJson$0());
      return _json;
    }
  };
  A.SeededDistributions.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededDistributions && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "SeededDistributions[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SeededDistributions_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.SeededDistributions_toJson_closure.prototype = {
    call$1(element) {
      return type$.SeededDistribution._as(element).toJson$0();
    },
    $signature: 99
  };
  A.SeededExternalProvider.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededExternalProvider && other.type === this.type;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this.type);
    },
    toString$0(_) {
      return "SeededExternalProvider[type=" + this.type.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "type", this.type.value);
      return _json;
    }
  };
  A.SeededFile.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededFile && J.$eq$(other.schema, _this.schema) && J.$eq$(other.bytes, _this.bytes) && J.$eq$(other.string, _this.string) && J.$eq$(other.metadata, _this.metadata);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.bytes;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.string;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.metadata;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "SeededFile[schema=" + A.S(_this.schema) + ", bytes=" + A.S(_this.bytes) + ", string=" + A.S(_this.string) + ", metadata=" + A.S(_this.metadata) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.bytes;
      if (t1 != null)
        _json.$indexSet(0, "bytes", t1.toJson$0());
      t1 = _this.string;
      if (t1 != null)
        _json.$indexSet(0, "string", t1.toJson$0());
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      return _json;
    }
  };
  A.SeededFormat.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededFormat && J.$eq$(other.schema, _this.schema) && J.$eq$(other.file, _this.file) && J.$eq$(other.fragment, _this.fragment) && other.websites === _this.websites && J.$eq$(other.classification, _this.classification) && other.tags === _this.tags;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.file;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.fragment;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = A.Primitives_objectHashCode(_this.websites);
      t5 = _this.classification;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      return t1 + t2 + t3 + t4 + t5 + A.Primitives_objectHashCode(_this.tags);
    },
    toString$0(_) {
      var _this = this;
      return "SeededFormat[schema=" + A.S(_this.schema) + ", file=" + A.S(_this.file) + ", fragment=" + A.S(_this.fragment) + ", websites=" + A.S(_this.websites) + ", classification=" + A.S(_this.classification) + ", tags=" + A.S(_this.tags) + "]";
    },
    toJson$0() {
      var t2, t3, _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.file;
      if (t1 != null)
        _json.$indexSet(0, "file", t1.toJson$0());
      t1 = _this.fragment;
      if (t1 != null)
        _json.$indexSet(0, "fragment", t1.toJson$0());
      t1 = _this.websites;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "websites", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SeededFormat_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      t1 = _this.classification;
      if (t1 != null)
        _json.$indexSet(0, "classification", t1.toJson$0());
      t1 = _this.tags;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "tags", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SeededFormat_toJson_closure0()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.SeededFormat_toJson_closure.prototype = {
    call$1(element) {
      return type$.SeededWebsite._as(element).toJson$0();
    },
    $signature: 100
  };
  A.SeededFormat_toJson_closure0.prototype = {
    call$1(element) {
      return type$.SeededTag._as(element).toJson$0();
    },
    $signature: 101
  };
  A.SeededFragment.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededFragment && J.$eq$(other.schema, _this.schema) && J.$eq$(other.string, _this.string) && J.$eq$(other.bytes, _this.bytes) && J.$eq$(other.metadata, _this.metadata);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.string;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.bytes;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.metadata;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "SeededFragment[schema=" + A.S(_this.schema) + ", string=" + A.S(_this.string) + ", bytes=" + A.S(_this.bytes) + ", metadata=" + A.S(_this.metadata) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.string;
      if (t1 != null)
        _json.$indexSet(0, "string", t1.toJson$0());
      t1 = _this.bytes;
      if (t1 != null)
        _json.$indexSet(0, "bytes", t1.toJson$0());
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      return _json;
    }
  };
  A.SeededGitHubDistribution.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededGitHubDistribution && J.$eq$(other.schema, this.schema) && J.$eq$(other.gist, this.gist);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.gist;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "SeededGitHubDistribution[schema=" + A.S(this.schema) + ", gist=" + A.S(this.gist) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.gist;
      if (t1 != null)
        _json.$indexSet(0, "gist", t1.toJson$0());
      return _json;
    }
  };
  A.SeededGitHubGistDistribution.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededGitHubGistDistribution && J.$eq$(other.schema, _this.schema) && J.$eq$(other.recipients, _this.recipients) && other.$public == _this.$public && other.description == _this.description && other.name === _this.name;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.recipients;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.$public;
      t3 = t3 == null ? 0 : B.JSBool_methods.get$hashCode(t3);
      t4 = _this.description;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      return t1 + t2 + t3 + t4 + B.JSString_methods.get$hashCode(_this.name);
    },
    toString$0(_) {
      var _this = this;
      return "SeededGitHubGistDistribution[schema=" + A.S(_this.schema) + ", recipients=" + A.S(_this.recipients) + ", public=" + A.S(_this.$public) + ", description=" + A.S(_this.description) + ", name=" + _this.name + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.recipients;
      if (t1 != null)
        _json.$indexSet(0, "recipients", t1.toJson$0());
      t1 = _this.$public;
      if (t1 != null)
        _json.$indexSet(0, "public", t1);
      t1 = _this.description;
      if (t1 != null)
        _json.$indexSet(0, "description", t1);
      _json.$indexSet(0, "name", _this.name);
      return _json;
    }
  };
  A.SeededGithubGistsImport.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededGithubGistsImport && J.$eq$(other.schema, _this.schema) && other.application === _this.application && other.$public == _this.$public;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.application);
      t3 = this.$public;
      t3 = t3 == null ? 0 : B.JSBool_methods.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "SeededGithubGistsImport[schema=" + A.S(this.schema) + ", application=" + this.application + ", public=" + A.S(this.$public) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "application", this.application);
      t1 = this.$public;
      if (t1 != null)
        _json.$indexSet(0, "public", t1);
      return _json;
    }
  };
  A.SeededMacOSAsset.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededMacOSAsset && J.$eq$(other.schema, _this.schema) && J.$eq$(other.application, _this.application) && other.value === _this.value;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.application;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      return t1 + t2 + B.JSString_methods.get$hashCode(this.value);
    },
    toString$0(_) {
      return "SeededMacOSAsset[schema=" + A.S(this.schema) + ", application=" + A.S(this.application) + ", value=" + this.value + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.application;
      if (t1 != null)
        _json.$indexSet(0, "application", t1.toJson$0());
      _json.$indexSet(0, "value", this.value);
      return _json;
    }
  };
  A.SeededModel.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededModel && J.$eq$(other.schema, _this.schema) && other.version === _this.version && other.created.$eq(0, _this.created) && other.name === _this.name && other.description == _this.description && other.cloud === _this.cloud && other.type === _this.type && other.usage === _this.usage;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.version);
      t3 = _this.created;
      t3 = t3.get$hashCode(t3);
      t4 = B.JSString_methods.get$hashCode(_this.name);
      t5 = _this.description;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      return t1 + t2 + t3 + t4 + t5 + B.JSBool_methods.get$hashCode(_this.cloud) + A.Primitives_objectHashCode(_this.type) + A.Primitives_objectHashCode(_this.usage);
    },
    toString$0(_) {
      var _this = this;
      return "SeededModel[schema=" + A.S(_this.schema) + ", version=" + _this.version + ", created=" + _this.created.toString$0(0) + ", name=" + _this.name + ", description=" + A.S(_this.description) + ", cloud=" + _this.cloud + ", type=" + _this.type.toString$0(0) + ", usage=" + _this.usage.toString$0(0) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "version", _this.version);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "name", _this.name);
      t1 = _this.description;
      if (t1 != null)
        _json.$indexSet(0, "description", t1);
      _json.$indexSet(0, "cloud", _this.cloud);
      _json.$indexSet(0, "type", _this.type.value);
      _json.$indexSet(0, "usage", _this.usage.value);
      return _json;
    }
  };
  A.SeededPerson.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededPerson && J.$eq$(other.schema, _this.schema) && other.asset == _this.asset && other.mechanism == _this.mechanism && J.$eq$(other.expiration, _this.expiration) && other.access.$eq(0, _this.access) && other.type.$eq(0, _this.type);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.asset;
      t2 = t2 == null ? 0 : B.JSString_methods.get$hashCode(t2);
      t3 = _this.mechanism;
      t3 = t3 == null ? 0 : A.Primitives_objectHashCode(t3);
      t4 = _this.expiration;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      t5 = _this.access;
      t6 = _this.type;
      return t1 + t2 + t3 + t4 + t5.get$hashCode(t5) + t6.get$hashCode(t6);
    },
    toString$0(_) {
      var _this = this;
      return "SeededPerson[schema=" + A.S(_this.schema) + ", asset=" + A.S(_this.asset) + ", mechanism=" + A.S(_this.mechanism) + ", expiration=" + A.S(_this.expiration) + ", access=" + _this.access.toString$0(0) + ", type=" + _this.type.toString$0(0) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1);
      t1 = _this.mechanism;
      if (t1 != null)
        _json.$indexSet(0, "mechanism", t1.value);
      t1 = _this.expiration;
      if (t1 != null)
        _json.$indexSet(0, "expiration", t1.toJson$0());
      _json.$indexSet(0, "access", _this.access.toJson$0());
      _json.$indexSet(0, "type", _this.type.toJson$0());
      return _json;
    }
  };
  A.SeededPKCE.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededPKCE && J.$eq$(other.schema, _this.schema) && other.responseType === _this.responseType && other.state === _this.state && other.nonce === _this.nonce && other.redirectUri == _this.redirectUri && other.codeChallenge === _this.codeChallenge && other.codeChallengeMethod === _this.codeChallengeMethod && other.domain == _this.domain && other.audience == _this.audience && other.screenHint == _this.screenHint && other.prompt == _this.prompt && other.organization == _this.organization && other.invitation == _this.invitation && other.scope === _this.scope && other.clientId === _this.clientId && J.$eq$(other.ADDITIONAL_PARAMETERS, _this.ADDITIONAL_PARAMETERS) && other.responseMode == _this.responseMode;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = A.Primitives_objectHashCode(_this.responseType);
      t3 = B.JSString_methods.get$hashCode(_this.state);
      t4 = B.JSString_methods.get$hashCode(_this.nonce);
      t5 = _this.redirectUri;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      t6 = B.JSString_methods.get$hashCode(_this.codeChallenge);
      t7 = A.Primitives_objectHashCode(_this.codeChallengeMethod);
      t8 = _this.domain;
      t8 = t8 == null ? 0 : B.JSString_methods.get$hashCode(t8);
      t9 = _this.audience;
      t9 = t9 == null ? 0 : B.JSString_methods.get$hashCode(t9);
      t10 = _this.screenHint;
      t10 = t10 == null ? 0 : A.Primitives_objectHashCode(t10);
      t11 = _this.prompt;
      t11 = t11 == null ? 0 : A.Primitives_objectHashCode(t11);
      t12 = _this.organization;
      t12 = t12 == null ? 0 : B.JSString_methods.get$hashCode(t12);
      t13 = _this.invitation;
      t13 = t13 == null ? 0 : B.JSString_methods.get$hashCode(t13);
      t14 = A.Primitives_objectHashCode(_this.scope);
      t15 = B.JSString_methods.get$hashCode(_this.clientId);
      t16 = _this.ADDITIONAL_PARAMETERS;
      t16 = t16 == null ? 0 : t16.get$hashCode(t16);
      t17 = _this.responseMode;
      t17 = t17 == null ? 0 : A.Primitives_objectHashCode(t17);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12 + t13 + t14 + t15 + t16 + t17;
    },
    toString$0(_) {
      var _this = this;
      return "SeededPKCE[schema=" + A.S(_this.schema) + ", responseType=" + _this.responseType.toString$0(0) + ", state=" + _this.state + ", nonce=" + _this.nonce + ", redirectUri=" + A.S(_this.redirectUri) + ", codeChallenge=" + _this.codeChallenge + ", codeChallengeMethod=" + _this.codeChallengeMethod.toString$0(0) + ", domain=" + A.S(_this.domain) + ", audience=" + A.S(_this.audience) + ", screenHint=" + A.S(_this.screenHint) + ", prompt=" + A.S(_this.prompt) + ", organization=" + A.S(_this.organization) + ", invitation=" + A.S(_this.invitation) + ", scope=" + A.S(_this.scope) + ", clientId=" + _this.clientId + ", ADDITIONAL_PARAMETERS=" + A.S(_this.ADDITIONAL_PARAMETERS) + ", responseMode=" + A.S(_this.responseMode) + "]";
    },
    toJson$0() {
      var t2, t3, _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "response_type", _this.responseType.value);
      _json.$indexSet(0, "state", _this.state);
      _json.$indexSet(0, "nonce", _this.nonce);
      t1 = _this.redirectUri;
      if (t1 != null)
        _json.$indexSet(0, "redirect_uri", t1);
      _json.$indexSet(0, "code_challenge", _this.codeChallenge);
      _json.$indexSet(0, "code_challenge_method", "S256");
      t1 = _this.domain;
      if (t1 != null)
        _json.$indexSet(0, "domain", t1);
      t1 = _this.audience;
      if (t1 != null)
        _json.$indexSet(0, "audience", t1);
      if (_this.screenHint != null)
        _json.$indexSet(0, "screen_hint", "signup");
      t1 = _this.prompt;
      if (t1 != null)
        _json.$indexSet(0, "prompt", t1.value);
      t1 = _this.organization;
      if (t1 != null)
        _json.$indexSet(0, "organization", t1);
      t1 = _this.invitation;
      if (t1 != null)
        _json.$indexSet(0, "invitation", t1);
      t1 = _this.scope;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "scope", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SeededPKCE_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      _json.$indexSet(0, "client_id", _this.clientId);
      t1 = _this.ADDITIONAL_PARAMETERS;
      if (t1 != null)
        _json.$indexSet(0, "ADDITIONAL_PARAMETERS", t1.toJson$0());
      t1 = _this.responseMode;
      if (t1 != null)
        _json.$indexSet(0, "response_mode", t1.value);
      return _json;
    }
  };
  A.SeededPKCE_toJson_closure.prototype = {
    call$1(element) {
      return type$.SeededPKCEScopeEnum._as(element).value;
    },
    $signature: 102
  };
  A.SeededPKCEResponseTypeEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.SeededPKCEResponseTypeEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "code":
            return B.SeededPKCEResponseTypeEnum_code;
          case "token":
            return B.SeededPKCEResponseTypeEnum_token;
          case "id_token":
            return B.SeededPKCEResponseTypeEnum_id_token;
        }
      return null;
    }
  };
  A.SeededPKCECodeChallengeMethodEnum.prototype = {
    toString$0(_) {
      return "S256";
    },
    toJson$0() {
      return "S256";
    }
  };
  A.SeededPKCECodeChallengeMethodEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "S256":
            return B.C_SeededPKCECodeChallengeMethodEnum;
        }
      return null;
    }
  };
  A.SeededPKCEScreenHintEnum.prototype = {
    toString$0(_) {
      return "signup";
    },
    toJson$0() {
      return "signup";
    }
  };
  A.SeededPKCEScreenHintEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "signup":
            return B.C_SeededPKCEScreenHintEnum;
        }
      return null;
    }
  };
  A.SeededPKCEPromptEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.SeededPKCEPromptEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "login":
            return B.SeededPKCEPromptEnum_login;
          case "none":
            return B.SeededPKCEPromptEnum_none;
        }
      return null;
    }
  };
  A.SeededPKCEScopeEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.SeededPKCEScopeEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "offline_access":
            return B.SeededPKCEScopeEnum_offline_access;
          case "email":
            return B.SeededPKCEScopeEnum_email;
          case "profile":
            return B.SeededPKCEScopeEnum_profile;
          case "openid":
            return B.SeededPKCEScopeEnum_openid;
        }
      return null;
    }
  };
  A.SeededPKCEResponseModeEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.SeededPKCEResponseModeEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "form_post":
            return B.SeededPKCEResponseModeEnum_form_post;
          case "web_message":
            return B.SeededPKCEResponseModeEnum_web_message;
          case "fragment":
            return B.SeededPKCEResponseModeEnum_fragment;
          case "query":
            return B.SeededPKCEResponseModeEnum_query;
        }
      return null;
    }
  };
  A.SeededPKCEADDITIONALPARAMETERS.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededPKCEADDITIONALPARAMETERS && other.accessType == this.accessType && other.display == this.display;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.accessType;
      t1 = t1 == null ? 0 : A.Primitives_objectHashCode(t1);
      t2 = this.display;
      return t1 + (t2 == null ? 0 : A.Primitives_objectHashCode(t2));
    },
    toString$0(_) {
      return "SeededPKCEADDITIONALPARAMETERS[accessType=" + A.S(this.accessType) + ", display=" + A.S(this.display) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      if (this.accessType != null)
        _json.$indexSet(0, "access_type", "offline");
      if (this.display != null)
        _json.$indexSet(0, "display", "popup");
      return _json;
    }
  };
  A.SeededPKCEADDITIONALPARAMETERSAccessTypeEnum.prototype = {
    toString$0(_) {
      return "offline";
    },
    toJson$0() {
      return "offline";
    }
  };
  A.SeededPKCEADDITIONALPARAMETERSAccessTypeEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "offline":
            return B.C_SeededPKCEADDITIONALPARAMETERSAccessTypeEnum;
        }
      return null;
    }
  };
  A.SeededPKCEADDITIONALPARAMETERSDisplayEnum.prototype = {
    toString$0(_) {
      return "popup";
    },
    toJson$0() {
      return "popup";
    }
  };
  A.SeededPKCEADDITIONALPARAMETERSDisplayEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "popup":
            return B.C_SeededPKCEADDITIONALPARAMETERSDisplayEnum;
        }
      return null;
    }
  };
  A.SeededSensitive.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededSensitive && J.$eq$(other.schema, _this.schema) && other.asset === _this.asset && other.text === _this.text && other.mechanism == _this.mechanism && other.category === _this.category && other.severity === _this.severity && other.name === _this.name && other.description === _this.description && J.$eq$(other.metadata, _this.metadata);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.asset);
      t3 = B.JSString_methods.get$hashCode(_this.text);
      t4 = _this.mechanism;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4);
      t5 = A.Primitives_objectHashCode(_this.category);
      t6 = A.Primitives_objectHashCode(_this.severity);
      t7 = B.JSString_methods.get$hashCode(_this.name);
      t8 = B.JSString_methods.get$hashCode(_this.description);
      t9 = _this.metadata;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9;
    },
    toString$0(_) {
      var _this = this;
      return "SeededSensitive[schema=" + A.S(_this.schema) + ", asset=" + _this.asset + ", text=" + _this.text + ", mechanism=" + A.S(_this.mechanism) + ", category=" + _this.category.toString$0(0) + ", severity=" + _this.severity.toString$0(0) + ", name=" + _this.name + ", description=" + _this.description + ", metadata=" + A.S(_this.metadata) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "asset", _this.asset);
      _json.$indexSet(0, "text", _this.text);
      t1 = _this.mechanism;
      if (t1 != null)
        _json.$indexSet(0, "mechanism", t1.value);
      _json.$indexSet(0, "category", _this.category.value);
      _json.$indexSet(0, "severity", _this.severity.value);
      _json.$indexSet(0, "name", _this.name);
      _json.$indexSet(0, "description", _this.description);
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      return _json;
    }
  };
  A.SeededShare.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededShare && J.$eq$(other.schema, _this.schema) && J.$eq$(other.asset, _this.asset) && other.users === _this.users && other.access === _this.access && J.$eq$(other.assets, _this.assets) && other.name == _this.name;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.asset;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = A.Primitives_objectHashCode(_this.users);
      t4 = A.Primitives_objectHashCode(_this.access);
      t5 = _this.assets;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = _this.name;
      t6 = t6 == null ? 0 : B.JSString_methods.get$hashCode(t6);
      return t1 + t2 + t3 + t4 + t5 + t6;
    },
    toString$0(_) {
      var _this = this;
      return "SeededShare[schema=" + A.S(_this.schema) + ", asset=" + A.S(_this.asset) + ", users=" + A.S(_this.users) + ", access=" + _this.access.toString$0(0) + ", assets=" + A.S(_this.assets) + ", name=" + A.S(_this.name) + "]";
    },
    toJson$0() {
      var t2, t3, _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      t1 = _this.users;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "users", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.SeededShare_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      _json.$indexSet(0, "access", _this.access.value);
      t1 = _this.assets;
      if (t1 != null)
        _json.$indexSet(0, "assets", t1.toJson$0());
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      return _json;
    }
  };
  A.SeededShare_toJson_closure.prototype = {
    call$1(element) {
      return type$.SeededUser._as(element).toJson$0();
    },
    $signature: 18
  };
  A.SeededTag.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededTag && J.$eq$(other.schema, _this.schema) && other.text === _this.text && other.asset === _this.asset && other.mechanism == _this.mechanism && other.format == _this.format && other.category == _this.category;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.text);
      t3 = B.JSString_methods.get$hashCode(_this.asset);
      t4 = _this.mechanism;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4);
      t5 = _this.format;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      t6 = _this.category;
      t6 = t6 == null ? 0 : A.Primitives_objectHashCode(t6);
      return t1 + t2 + t3 + t4 + t5 + t6;
    },
    toString$0(_) {
      var _this = this;
      return "SeededTag[schema=" + A.S(_this.schema) + ", text=" + _this.text + ", asset=" + _this.asset + ", mechanism=" + A.S(_this.mechanism) + ", format=" + A.S(_this.format) + ", category=" + A.S(_this.category) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "text", _this.text);
      _json.$indexSet(0, "asset", _this.asset);
      t1 = _this.mechanism;
      if (t1 != null)
        _json.$indexSet(0, "mechanism", t1.value);
      t1 = _this.format;
      if (t1 != null)
        _json.$indexSet(0, "format", t1);
      t1 = _this.category;
      if (t1 != null)
        _json.$indexSet(0, "category", t1.value);
      return _json;
    }
  };
  A.SeededTrackedAdoptionEvent.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededTrackedAdoptionEvent && J.$eq$(other.schema, this.schema) && J.$eq$(other.identifierDescriptionPair, this.identifierDescriptionPair);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.identifierDescriptionPair;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "SeededTrackedAdoptionEvent[schema=" + A.S(this.schema) + ", identifierDescriptionPair=" + A.S(this.identifierDescriptionPair) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.identifierDescriptionPair;
      if (t1 != null)
        _json.$indexSet(0, "identifier_description_pair", t1.toJson$0());
      return _json;
    }
  };
  A.SeededTrackedApplication.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededTrackedApplication && J.$eq$(other.schema, _this.schema) && other.name === _this.name && other.version === _this.version && other.platform === _this.platform && other.capabilities == _this.capabilities && other.privacy == _this.privacy;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = A.Primitives_objectHashCode(_this.name);
      t3 = B.JSString_methods.get$hashCode(_this.version);
      t4 = A.Primitives_objectHashCode(_this.platform);
      t5 = _this.capabilities;
      t5 = t5 == null ? 0 : A.Primitives_objectHashCode(t5);
      t6 = _this.privacy;
      t6 = t6 == null ? 0 : A.Primitives_objectHashCode(t6);
      return t1 + t2 + t3 + t4 + t5 + t6;
    },
    toString$0(_) {
      var _this = this;
      return "SeededTrackedApplication[schema=" + A.S(_this.schema) + ", name=" + _this.name.toString$0(0) + ", version=" + _this.version + ", platform=" + _this.platform.toString$0(0) + ", capabilities=" + A.S(_this.capabilities) + ", privacy=" + A.S(_this.privacy) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "name", _this.name.value);
      _json.$indexSet(0, "version", _this.version);
      _json.$indexSet(0, "platform", _this.platform.value);
      t1 = _this.capabilities;
      if (t1 != null)
        _json.$indexSet(0, "capabilities", t1.value);
      t1 = _this.privacy;
      if (t1 != null)
        _json.$indexSet(0, "privacy", t1.value);
      return _json;
    }
  };
  A.SeededTrackedAssetEvent.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededTrackedAssetEvent && J.$eq$(other.schema, _this.schema) && other.asset.$eq(0, _this.asset) && other.identifierDescriptionPair.$eq(0, _this.identifierDescriptionPair) && J.$eq$(other.metadata, _this.metadata);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.asset;
      t2 = t2.get$hashCode(t2);
      t3 = _this.identifierDescriptionPair;
      t3 = t3.get$hashCode(t3);
      t4 = _this.metadata;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "SeededTrackedAssetEvent[schema=" + A.S(_this.schema) + ", asset=" + _this.asset.toString$0(0) + ", identifierDescriptionPair=" + _this.identifierDescriptionPair.toString$0(0) + ", metadata=" + A.S(_this.metadata) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "asset", _this.asset.toJson$0());
      _json.$indexSet(0, "identifier_description_pair", _this.identifierDescriptionPair.toJson$0());
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      return _json;
    }
  };
  A.SeededTrackedAssetsEvent.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededTrackedAssetsEvent && J.$eq$(other.schema, _this.schema) && J.$eq$(other.identifierDescriptionPair, _this.identifierDescriptionPair) && J.$eq$(other.metadata, _this.metadata);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.identifierDescriptionPair;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = this.metadata;
      if (t3 == null)
        t3 = 0;
      else {
        t3 = t3.search;
        t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      }
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "SeededTrackedAssetsEvent[schema=" + A.S(this.schema) + ", identifierDescriptionPair=" + A.S(this.identifierDescriptionPair) + ", metadata=" + A.S(this.metadata) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.identifierDescriptionPair;
      if (t1 != null)
        _json.$indexSet(0, "identifier_description_pair", t1.toJson$0());
      t1 = this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      return _json;
    }
  };
  A.SeededTrackedAssetsEventMetadata.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededTrackedAssetsEventMetadata && J.$eq$(other.search, this.search);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.search;
      return t1 == null ? 0 : t1.get$hashCode(t1);
    },
    toString$0(_) {
      return "SeededTrackedAssetsEventMetadata[search=" + A.S(this.search) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.search;
      if (t1 != null)
        _json.$indexSet(0, "search", t1.toJson$0());
      return _json;
    }
  };
  A.SeededTrackedFormatEvent.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededTrackedFormatEvent && J.$eq$(other.schema, _this.schema) && other.identifierDescriptionPair.$eq(0, _this.identifierDescriptionPair) && other.format.$eq(0, _this.format) && J.$eq$(other.metadata, _this.metadata);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.identifierDescriptionPair;
      t2 = t2.get$hashCode(t2);
      t3 = _this.format;
      t3 = t3.get$hashCode(t3);
      t4 = _this.metadata;
      if (t4 == null)
        t4 = 0;
      else {
        t4 = t4.reclassification;
        t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      }
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "SeededTrackedFormatEvent[schema=" + A.S(_this.schema) + ", identifierDescriptionPair=" + _this.identifierDescriptionPair.toString$0(0) + ", format=" + _this.format.toString$0(0) + ", metadata=" + A.S(_this.metadata) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "identifier_description_pair", _this.identifierDescriptionPair.toJson$0());
      _json.$indexSet(0, "format", _this.format.toJson$0());
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      return _json;
    }
  };
  A.SeededTrackedInteractionEvent.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededTrackedInteractionEvent && J.$eq$(other.schema, _this.schema) && other.description === _this.description && other.element == _this.element && J.$eq$(other.identifierDescriptionPair, _this.identifierDescriptionPair);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.description);
      t3 = _this.element;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.identifierDescriptionPair;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "SeededTrackedInteractionEvent[schema=" + A.S(_this.schema) + ", description=" + _this.description + ", element=" + A.S(_this.element) + ", identifierDescriptionPair=" + A.S(_this.identifierDescriptionPair) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "description", _this.description);
      t1 = _this.element;
      if (t1 != null)
        _json.$indexSet(0, "element", t1);
      t1 = _this.identifierDescriptionPair;
      if (t1 != null)
        _json.$indexSet(0, "identifier_description_pair", t1.toJson$0());
      return _json;
    }
  };
  A.SeededTrackedInteractionEventIdentifierDescriptionPairs.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededTrackedInteractionEventIdentifierDescriptionPairs && J.$eq$(other.schema, this.schema) && other.assetsListRefreshed == this.assetsListRefreshed;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.assetsListRefreshed;
      return t1 + (t2 == null ? 0 : A.Primitives_objectHashCode(t2));
    },
    toString$0(_) {
      return "SeededTrackedInteractionEventIdentifierDescriptionPairs[schema=" + A.S(this.schema) + ", assetsListRefreshed=" + A.S(this.assetsListRefreshed) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      if (this.assetsListRefreshed != null)
        _json.$indexSet(0, "assets_list_refreshed", string$.the_asu);
      return _json;
    }
  };
  A.SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnum.prototype = {
    toString$0(_) {
      return string$.the_asu;
    },
    toJson$0() {
      return string$.the_asu;
    }
  };
  A.SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.the_asu:
            return B.C_SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnum;
        }
      return null;
    }
  };
  A.SeededTrackedKeyboardEvent.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededTrackedKeyboardEvent && J.$eq$(other.schema, _this.schema) && other.description === _this.description && other.shortcut === _this.shortcut && J.$eq$(other.identifierDescriptionPair, _this.identifierDescriptionPair);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.description);
      t3 = J.get$hashCode$(_this.shortcut);
      t4 = _this.identifierDescriptionPair;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "SeededTrackedKeyboardEvent[schema=" + A.S(_this.schema) + ", description=" + _this.description + ", shortcut=" + A.S(_this.shortcut) + ", identifierDescriptionPair=" + A.S(_this.identifierDescriptionPair) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "description", _this.description);
      _json.$indexSet(0, "shortcut", _this.shortcut);
      t1 = _this.identifierDescriptionPair;
      if (t1 != null)
        _json.$indexSet(0, "identifier_description_pair", t1.toJson$0());
      return _json;
    }
  };
  A.SeededTrackedKeyboardEventIdentifierDescriptionPairs.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededTrackedKeyboardEventIdentifierDescriptionPairs && J.$eq$(other.schema, this.schema) && other.assetsListRefreshed == this.assetsListRefreshed;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.assetsListRefreshed;
      return t1 + (t2 == null ? 0 : A.Primitives_objectHashCode(t2));
    },
    toString$0(_) {
      return "SeededTrackedKeyboardEventIdentifierDescriptionPairs[schema=" + A.S(this.schema) + ", assetsListRefreshed=" + A.S(this.assetsListRefreshed) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      if (this.assetsListRefreshed != null)
        _json.$indexSet(0, "assets_list_refreshed", string$.the_asa);
      return _json;
    }
  };
  A.SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnum.prototype = {
    toString$0(_) {
      return string$.the_asa;
    },
    toJson$0() {
      return string$.the_asa;
    }
  };
  A.SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.the_asa:
            return B.C_SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnum;
        }
      return null;
    }
  };
  A.SeededTrackedMachineLearningEvent.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededTrackedMachineLearningEvent && J.$eq$(other.schema, _this.schema) && J.$eq$(other.tlp, _this.tlp) && J.$eq$(other.graphical, _this.graphical);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.tlp;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = this.graphical;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "SeededTrackedMachineLearningEvent[schema=" + A.S(this.schema) + ", tlp=" + A.S(this.tlp) + ", graphical=" + A.S(this.graphical) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.tlp;
      if (t1 != null)
        _json.$indexSet(0, "tlp", t1.toJson$0());
      t1 = this.graphical;
      if (t1 != null)
        _json.$indexSet(0, "graphical", t1.toJson$0());
      return _json;
    }
  };
  A.SeededTrackedSessionEvent.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededTrackedSessionEvent && J.$eq$(other.schema, this.schema) && other.identifierDescriptionPair.$eq(0, this.identifierDescriptionPair);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.identifierDescriptionPair;
      return t1 + t2.get$hashCode(t2);
    },
    toString$0(_) {
      return "SeededTrackedSessionEvent[schema=" + A.S(this.schema) + ", identifierDescriptionPair=" + this.identifierDescriptionPair.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "identifier_description_pair", this.identifierDescriptionPair.toJson$0());
      return _json;
    }
  };
  A.SeededUltraSuiteAsset.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededUltraSuiteAsset && J.$eq$(other.schema, _this.schema) && other.name == _this.name && other.ext == _this.ext && other.format.$eq(0, _this.format) && other.description == _this.description;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.name;
      t2 = t2 == null ? 0 : B.JSString_methods.get$hashCode(t2);
      t3 = _this.ext;
      t3 = t3 == null ? 0 : A.Primitives_objectHashCode(t3);
      t4 = _this.format;
      t4 = t4.get$hashCode(t4);
      t5 = _this.description;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      return t1 + t2 + t3 + t4 + t5;
    },
    toString$0(_) {
      var _this = this;
      return "SeededUltraSuiteAsset[schema=" + A.S(_this.schema) + ", name=" + A.S(_this.name) + ", ext=" + A.S(_this.ext) + ", format=" + _this.format.toString$0(0) + ", description=" + A.S(_this.description) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      t1 = _this.ext;
      if (t1 != null)
        _json.$indexSet(0, "ext", t1.value);
      _json.$indexSet(0, "format", _this.format.toJson$0());
      t1 = _this.description;
      if (t1 != null)
        _json.$indexSet(0, "description", t1);
      return _json;
    }
  };
  A.SeededUser.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.SeededUser && J.$eq$(other.schema, this.schema) && other.emails === this.emails;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + J.get$hashCode$(this.emails);
    },
    toString$0(_) {
      return "SeededUser[schema=" + A.S(this.schema) + ", emails=" + A.S(this.emails) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "emails", this.emails);
      return _json;
    }
  };
  A.SeededWebsite.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SeededWebsite && J.$eq$(other.schema, _this.schema) && other.asset === _this.asset && other.url === _this.url && other.name === _this.name && other.format == _this.format && other.mechanism == _this.mechanism;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.asset);
      t3 = B.JSString_methods.get$hashCode(_this.url);
      t4 = B.JSString_methods.get$hashCode(_this.name);
      t5 = _this.format;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      t6 = _this.mechanism;
      t6 = t6 == null ? 0 : A.Primitives_objectHashCode(t6);
      return t1 + t2 + t3 + t4 + t5 + t6;
    },
    toString$0(_) {
      var _this = this;
      return "SeededWebsite[schema=" + A.S(_this.schema) + ", asset=" + _this.asset + ", url=" + _this.url + ", name=" + _this.name + ", format=" + A.S(_this.format) + ", mechanism=" + A.S(_this.mechanism) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "asset", _this.asset);
      _json.$indexSet(0, "url", _this.url);
      _json.$indexSet(0, "name", _this.name);
      t1 = _this.format;
      if (t1 != null)
        _json.$indexSet(0, "format", t1);
      t1 = _this.mechanism;
      if (t1 != null)
        _json.$indexSet(0, "mechanism", t1.value);
      return _json;
    }
  };
  A.Seeds.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Seeds && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Seeds[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Seeds_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Seeds_toJson_closure.prototype = {
    call$1(element) {
      return type$.Seed._as(element).toJson$0();
    },
    $signature: 103
  };
  A.Sensitive.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Sensitive && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted) && other.asset.$eq(0, _this.asset) && other.text === _this.text && other.mechanism === _this.mechanism && other.category === _this.category && other.severity === _this.severity && other.name === _this.name && other.description === _this.description && J.$eq$(other.metadata, _this.metadata) && other.interactions == _this.interactions;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.created;
      t3 = t3.get$hashCode(t3);
      t4 = _this.updated;
      t4 = t4.get$hashCode(t4);
      t5 = _this.deleted;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = _this.asset;
      t6 = t6.get$hashCode(t6);
      t7 = B.JSString_methods.get$hashCode(_this.text);
      t8 = A.Primitives_objectHashCode(_this.mechanism);
      t9 = A.Primitives_objectHashCode(_this.category);
      t10 = A.Primitives_objectHashCode(_this.severity);
      t11 = B.JSString_methods.get$hashCode(_this.name);
      t12 = B.JSString_methods.get$hashCode(_this.description);
      t13 = _this.metadata;
      t13 = t13 == null ? 0 : t13.get$hashCode(t13);
      t14 = _this.interactions;
      t14 = t14 == null ? 0 : B.JSInt_methods.get$hashCode(t14);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12 + t13 + t14;
    },
    toString$0(_) {
      var _this = this;
      return "Sensitive[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", asset=" + _this.asset.toString$0(0) + ", text=" + _this.text + ", mechanism=" + _this.mechanism.toString$0(0) + ", category=" + _this.category.toString$0(0) + ", severity=" + _this.severity.toString$0(0) + ", name=" + _this.name + ", description=" + _this.description + ", metadata=" + A.S(_this.metadata) + ", interactions=" + A.S(_this.interactions) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      _json.$indexSet(0, "asset", _this.asset.toJson$0());
      _json.$indexSet(0, "text", _this.text);
      _json.$indexSet(0, "mechanism", _this.mechanism.value);
      _json.$indexSet(0, "category", _this.category.value);
      _json.$indexSet(0, "severity", _this.severity.value);
      _json.$indexSet(0, "name", _this.name);
      _json.$indexSet(0, "description", _this.description);
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      t1 = _this.interactions;
      if (t1 != null)
        _json.$indexSet(0, "interactions", t1);
      return _json;
    }
  };
  A.SensitiveCategoryEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.SensitiveCategoryEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "SECRET":
            return B.SensitiveCategoryEnum_SECRET;
          case "API_KEY":
            return B.SensitiveCategoryEnum_API_KEY;
          case "CLIENT_ID":
            return B.SensitiveCategoryEnum_CLIENT_ID;
          case "CLIENT_SECRET":
            return B.SensitiveCategoryEnum_CLIENT_SECRET;
          case "SECRET_KEY":
            return B.SensitiveCategoryEnum_SECRET_KEY;
          case "API_TOKEN":
            return B.SensitiveCategoryEnum_API_TOKEN;
          case "ACCESS_KEY":
            return B.SensitiveCategoryEnum_ACCESS_KEY;
          case "ACCESS_TOKEN":
            return B.SensitiveCategoryEnum_ACCESS_TOKEN;
          case "URL":
            return B.SensitiveCategoryEnum_URL;
          case "PUBLIC_KEY":
            return B.SensitiveCategoryEnum_PUBLIC_KEY;
          case "PRIVATE_KEY":
            return B.SensitiveCategoryEnum_PRIVATE_KEY;
          case "API_ID":
            return B.SensitiveCategoryEnum_API_ID;
          case "WEB_HOOK_URL":
            return B.SensitiveCategoryEnum_WEB_HOOK_URL;
        }
      return null;
    }
  };
  A.SensitiveMetadata.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SensitiveMetadata && J.$eq$(other.schema, _this.schema) && J.$eq$(other.match, _this.match) && other.entropy === _this.entropy;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.match;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = B.JSNumber_methods.get$hashCode(this.entropy);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "SensitiveMetadata[schema=" + A.S(this.schema) + ", match=" + A.S(this.match) + ", entropy=" + A.S(this.entropy) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.match;
      if (t1 != null)
        _json.$indexSet(0, "match", t1.toJson$0());
      _json.$indexSet(0, "entropy", this.entropy);
      return _json;
    }
  };
  A.SensitiveSeverityEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.SensitiveSeverityEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "LOW":
            return B.SensitiveSeverityEnum_LOW;
          case "MODERATE":
            return B.SensitiveSeverityEnum_MODERATE;
          case "HIGH":
            return B.SensitiveSeverityEnum_HIGH;
        }
      return null;
    }
  };
  A.Sensitives.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Sensitives && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Sensitives[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Sensitives_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Sensitives_toJson_closure.prototype = {
    call$1(element) {
      return type$.Sensitive._as(element).toJson$0();
    },
    $signature: 104
  };
  A.Session.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Session && other.id === _this.id && other.opened.$eq(0, _this.opened) && J.$eq$(other.closed, _this.closed);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t3,
        t1 = B.JSString_methods.get$hashCode(this.id),
        t2 = this.opened;
      t2 = t2.get$hashCode(t2);
      t3 = this.closed;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "Session[id=" + this.id + ", opened=" + this.opened.toString$0(0) + ", closed=" + A.S(this.closed) + "]";
    },
    toJson$0() {
      var t1,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "id", this.id);
      _json.$indexSet(0, "opened", this.opened.toJson$0());
      t1 = this.closed;
      if (t1 != null)
        _json.$indexSet(0, "closed", t1.toJson$0());
      return _json;
    }
  };
  A.Share.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Share && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.user == _this.user && J.$eq$(other.asset, _this.asset) && J.$eq$(other.assets, _this.assets) && other.link === _this.link && other.access === _this.access && other.accessors.$eq(0, _this.accessors) && other.created.$eq(0, _this.created) && other.short === _this.short && other.name == _this.name && J.$eq$(other.distributions, _this.distributions);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.user;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.asset;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      t5 = _this.assets;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = B.JSString_methods.get$hashCode(_this.link);
      t7 = A.Primitives_objectHashCode(_this.access);
      t8 = _this.accessors;
      t8 = t8.get$hashCode(t8);
      t9 = _this.created;
      t9 = t9.get$hashCode(t9);
      t10 = B.JSString_methods.get$hashCode(_this.short);
      t11 = _this.name;
      t11 = t11 == null ? 0 : B.JSString_methods.get$hashCode(t11);
      t12 = _this.distributions;
      t12 = t12 == null ? 0 : t12.get$hashCode(t12);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12;
    },
    toString$0(_) {
      var _this = this;
      return "Share[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", user=" + A.S(_this.user) + ", asset=" + A.S(_this.asset) + ", assets=" + A.S(_this.assets) + ", link=" + _this.link + ", access=" + _this.access.toString$0(0) + ", accessors=" + _this.accessors.toString$0(0) + ", created=" + _this.created.toString$0(0) + ", short=" + _this.short + ", name=" + A.S(_this.name) + ", distributions=" + A.S(_this.distributions) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      t1 = _this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1);
      t1 = _this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      t1 = _this.assets;
      if (t1 != null)
        _json.$indexSet(0, "assets", t1.toJson$0());
      _json.$indexSet(0, "link", _this.link);
      _json.$indexSet(0, "access", _this.access.value);
      _json.$indexSet(0, "accessors", _this.accessors.toJson$0());
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "short", _this.short);
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      t1 = _this.distributions;
      if (t1 != null)
        _json.$indexSet(0, "distributions", t1.toJson$0());
      return _json;
    }
  };
  A.Shares.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Shares && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Shares[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Shares_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Shares_toJson_closure.prototype = {
    call$1(element) {
      return type$.Share._as(element).toJson$0();
    },
    $signature: 105
  };
  A.Space.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Space && other.size == this.size && other.duration == this.duration;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.size;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1);
      t2 = this.duration;
      return t1 + (t2 == null ? 0 : B.JSInt_methods.get$hashCode(t2));
    },
    toString$0(_) {
      return "Space[size=" + A.S(this.size) + ", duration=" + A.S(this.duration) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.size;
      if (t1 != null)
        _json.$indexSet(0, "size", t1);
      t1 = this.duration;
      if (t1 != null)
        _json.$indexSet(0, "duration", t1);
      return _json;
    }
  };
  A.StreamedIdentifier.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.StreamedIdentifier && J.$eq$(other.asset, this.asset) && other.deleted == this.deleted;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.asset;
      t1 = t1 == null ? 0 : t1.get$hashCode(t1);
      t2 = this.deleted;
      return t1 + (t2 == null ? 0 : B.JSBool_methods.get$hashCode(t2));
    },
    toString$0(_) {
      return "StreamedIdentifier[asset=" + A.S(this.asset) + ", deleted=" + A.S(this.deleted) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.asset;
      if (t1 != null)
        _json.$indexSet(0, "asset", t1.toJson$0());
      t1 = this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1);
      return _json;
    }
  };
  A.StreamedIdentifiers.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.StreamedIdentifiers && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "StreamedIdentifiers[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.StreamedIdentifiers_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.StreamedIdentifiers_toJson_closure.prototype = {
    call$1(element) {
      return type$.StreamedIdentifier._as(element).toJson$0();
    },
    $signature: 106
  };
  A.Suggestion.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Suggestion && J.$eq$(other.schema, _this.schema) && other.reuse.$eq(0, _this.reuse) && other.save.$eq(0, _this.save) && other.target.$eq(0, _this.target) && other.assets.$eq(0, _this.assets) && other.distribution === _this.distribution;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.reuse;
      t3 = _this.save;
      t4 = _this.target;
      t5 = _this.assets;
      return t1 + t2.get$hashCode(t2) + t3.get$hashCode(t3) + t4.get$hashCode(t4) + t5.get$hashCode(t5) + A.Primitives_objectHashCode(_this.distribution);
    },
    toString$0(_) {
      var _this = this;
      return "Suggestion[schema=" + A.S(_this.schema) + ", reuse=" + _this.reuse.toString$0(0) + ", save=" + _this.save.toString$0(0) + ", target=" + _this.target.toString$0(0) + ", assets=" + _this.assets.toString$0(0) + ", distribution=" + _this.distribution.toString$0(0) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "reuse", _this.reuse.toJson$0());
      _json.$indexSet(0, "save", _this.save.toJson$0());
      _json.$indexSet(0, "target", _this.target.toJson$0());
      _json.$indexSet(0, "assets", _this.assets.toJson$0());
      _json.$indexSet(0, "distribution", _this.distribution);
      return _json;
    }
  };
  A.SuggestionTarget.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SuggestionTarget && J.$eq$(other.schema, _this.schema) && other.seed.$eq(0, _this.seed) && other.vector === _this.vector;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.seed;
      return t1 + t2.get$hashCode(t2) + B.JSInt_methods.get$hashCode(this.vector);
    },
    toString$0(_) {
      return "SuggestionTarget[schema=" + A.S(this.schema) + ", seed=" + this.seed.toString$0(0) + ", vector=" + this.vector + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "seed", this.seed.toJson$0());
      _json.$indexSet(0, "vector", this.vector);
      return _json;
    }
  };
  A.SystemExecutionCpuInformation.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SystemExecutionCpuInformation && other.count === _this.count && other.brand === _this.brand && other.frequency === _this.frequency;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this.count) + B.JSString_methods.get$hashCode(this.brand) + B.JSInt_methods.get$hashCode(this.frequency);
    },
    toString$0(_) {
      return "SystemExecutionCpuInformation[count=" + this.count + ", brand=" + this.brand + ", frequency=" + this.frequency + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "count", this.count);
      _json.$indexSet(0, "brand", this.brand);
      _json.$indexSet(0, "frequency", this.frequency);
      return _json;
    }
  };
  A.SystemExecutionInformation.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.SystemExecutionInformation && other.memory === _this.memory && other.os === _this.os && other.kernel === _this.kernel && other.cpu.$eq(0, _this.cpu);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.cpu;
      return B.JSInt_methods.get$hashCode(_this.memory) + B.JSString_methods.get$hashCode(_this.os) + B.JSString_methods.get$hashCode(_this.kernel) + t1.get$hashCode(t1);
    },
    toString$0(_) {
      var _this = this;
      return "SystemExecutionInformation[memory=" + _this.memory + ", os=" + _this.os + ", kernel=" + _this.kernel + ", cpu=" + _this.cpu.toString$0(0) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "memory", _this.memory);
      _json.$indexSet(0, "os", _this.os);
      _json.$indexSet(0, "kernel", _this.kernel);
      _json.$indexSet(0, "cpu", _this.cpu.toJson$0());
      return _json;
    }
  };
  A.Tag.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Tag && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.text === _this.text && other.mechanism === _this.mechanism && other.asset.$eq(0, _this.asset) && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.format, _this.format) && J.$eq$(other.deleted, _this.deleted) && other.category === _this.category && J.$eq$(other.relationship, _this.relationship) && other.interactions == _this.interactions;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = B.JSString_methods.get$hashCode(_this.text);
      t4 = A.Primitives_objectHashCode(_this.mechanism);
      t5 = _this.asset;
      t5 = t5.get$hashCode(t5);
      t6 = _this.created;
      t6 = t6.get$hashCode(t6);
      t7 = _this.updated;
      t7 = t7.get$hashCode(t7);
      t8 = _this.format;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      t9 = _this.deleted;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      t10 = A.Primitives_objectHashCode(_this.category);
      t11 = _this.relationship;
      t11 = t11 == null ? 0 : t11.get$hashCode(t11);
      t12 = _this.interactions;
      t12 = t12 == null ? 0 : B.JSInt_methods.get$hashCode(t12);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12;
    },
    toString$0(_) {
      var _this = this;
      return "Tag[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", text=" + _this.text + ", mechanism=" + _this.mechanism.toString$0(0) + ", asset=" + _this.asset.toString$0(0) + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", format=" + A.S(_this.format) + ", deleted=" + A.S(_this.deleted) + ", category=" + _this.category.toString$0(0) + ", relationship=" + A.S(_this.relationship) + ", interactions=" + A.S(_this.interactions) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "text", _this.text);
      _json.$indexSet(0, "mechanism", _this.mechanism.value);
      _json.$indexSet(0, "asset", _this.asset.toJson$0());
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.format;
      if (t1 != null)
        _json.$indexSet(0, "format", t1.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      _json.$indexSet(0, "category", _this.category.value);
      t1 = _this.relationship;
      if (t1 != null)
        _json.$indexSet(0, "relationship", t1.toJson$0());
      t1 = _this.interactions;
      if (t1 != null)
        _json.$indexSet(0, "interactions", t1);
      return _json;
    }
  };
  A.TagCategoryEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.TagCategoryEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "HANDLE":
            return B.TagCategoryEnum_HANDLE;
          case "EMAIL":
            return B.TagCategoryEnum_EMAIL;
          case "UNKNOWN":
            return B.TagCategoryEnum_UNKNOWN;
        }
      return null;
    }
  };
  A.Tags.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Tags && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Tags[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Tags_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Tags_toJson_closure.prototype = {
    call$1(element) {
      return type$.Tag._as(element).toJson$0();
    },
    $signature: 107
  };
  A.TextLocation.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TextLocation && J.$eq$(other.schema, _this.schema) && other.text === _this.text && other.start === _this.start && other.end === _this.end;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(_this.text) + B.JSInt_methods.get$hashCode(_this.start) + B.JSInt_methods.get$hashCode(_this.end);
    },
    toString$0(_) {
      var _this = this;
      return "TextLocation[schema=" + A.S(_this.schema) + ", text=" + _this.text + ", start=" + _this.start + ", end=" + _this.end + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "text", _this.text);
      _json.$indexSet(0, "start", _this.start);
      _json.$indexSet(0, "end", _this.end);
      return _json;
    }
  };
  A.TextMatch.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TextMatch && J.$eq$(other.schema, _this.schema) && other.group.$eq(0, _this.group) && J.$eq$(other.subgroup, _this.subgroup);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.group;
      t2 = t2.get$hashCode(t2);
      t3 = this.subgroup;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "TextMatch[schema=" + A.S(this.schema) + ", group=" + this.group.toString$0(0) + ", subgroup=" + A.S(this.subgroup) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "group", this.group.toJson$0());
      t1 = this.subgroup;
      if (t1 != null)
        _json.$indexSet(0, "subgroup", t1.toJson$0());
      return _json;
    }
  };
  A.Theme.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Theme && J.$eq$(other.schema, this.schema) && other.dark === this.dark;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSBool_methods.get$hashCode(this.dark);
    },
    toString$0(_) {
      return "Theme[schema=" + A.S(this.schema) + ", dark=" + this.dark + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "dark", this.dark);
      return _json;
    }
  };
  A.TLPCodeDirectoryAnalytics.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.TLPCodeDirectoryAnalytics && J.$eq$(other.schema, this.schema) && other.id == this.id;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.id;
      return t1 + (t2 == null ? 0 : B.JSString_methods.get$hashCode(t2));
    },
    toString$0(_) {
      return "TLPCodeDirectoryAnalytics[schema=" + A.S(this.schema) + ", id=" + A.S(this.id) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.id;
      if (t1 != null)
        _json.$indexSet(0, "id", t1);
      return _json;
    }
  };
  A.TLPCodeFileAnalytics.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.TLPCodeFileAnalytics && J.$eq$(other.schema, this.schema) && other.id == this.id;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.id;
      return t1 + (t2 == null ? 0 : B.JSString_methods.get$hashCode(t2));
    },
    toString$0(_) {
      return "TLPCodeFileAnalytics[schema=" + A.S(this.schema) + ", id=" + A.S(this.id) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.id;
      if (t1 != null)
        _json.$indexSet(0, "id", t1);
      return _json;
    }
  };
  A.TLPCodeFragmentClassification.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TLPCodeFragmentClassification && J.$eq$(other.schema, _this.schema) && other.asset === _this.asset && other.model === _this.model && other.created === _this.created && other.classification === _this.classification && other.probability === _this.probability && other.context === _this.context && other.distribution == _this.distribution && J.$eq$(other.metadata, _this.metadata) && other.user === _this.user && other.latency === _this.latency && J.$eq$(other.system, _this.system);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.asset);
      t3 = B.JSString_methods.get$hashCode(_this.model);
      t4 = B.JSString_methods.get$hashCode(_this.created);
      t5 = B.JSString_methods.get$hashCode(_this.classification);
      t6 = B.JSNumber_methods.get$hashCode(_this.probability);
      t7 = B.JSString_methods.get$hashCode(_this.context);
      t8 = _this.distribution;
      t8 = t8 == null ? 0 : B.JSString_methods.get$hashCode(t8);
      t9 = _this.metadata;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      t10 = B.JSString_methods.get$hashCode(_this.user);
      t11 = B.JSNumber_methods.get$hashCode(_this.latency);
      t12 = _this.system;
      t12 = t12 == null ? 0 : t12.get$hashCode(t12);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12;
    },
    toString$0(_) {
      var _this = this;
      return "TLPCodeFragmentClassification[schema=" + A.S(_this.schema) + ", asset=" + _this.asset + ", model=" + _this.model + ", created=" + _this.created + ", classification=" + _this.classification + ", probability=" + A.S(_this.probability) + ", context=" + _this.context + ", distribution=" + A.S(_this.distribution) + ", metadata=" + A.S(_this.metadata) + ", user=" + _this.user + ", latency=" + A.S(_this.latency) + ", system=" + A.S(_this.system) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "asset", _this.asset);
      _json.$indexSet(0, "model", _this.model);
      _json.$indexSet(0, "created", _this.created);
      _json.$indexSet(0, "classification", _this.classification);
      _json.$indexSet(0, "probability", _this.probability);
      _json.$indexSet(0, "context", _this.context);
      t1 = _this.distribution;
      if (t1 != null)
        _json.$indexSet(0, "distribution", t1);
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      _json.$indexSet(0, "user", _this.user);
      _json.$indexSet(0, "latency", _this.latency);
      t1 = _this.system;
      if (t1 != null)
        _json.$indexSet(0, "system", t1.toJson$0());
      return _json;
    }
  };
  A.TLPCodeFragmentClassificationMetadata.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TLPCodeFragmentClassificationMetadata && J.$eq$(other.schema, _this.schema) && J.$eq$(other.context, _this.context) && J.$eq$(other.prior, _this.prior);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.context;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = this.prior;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "TLPCodeFragmentClassificationMetadata[schema=" + A.S(this.schema) + ", context=" + A.S(this.context) + ", prior=" + A.S(this.prior) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.context;
      if (t1 != null)
        _json.$indexSet(0, "context", t1.toJson$0());
      t1 = this.prior;
      if (t1 != null)
        _json.$indexSet(0, "prior", t1.toJson$0());
      return _json;
    }
  };
  A.TLPCodeFragmentDescription.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TLPCodeFragmentDescription && other.description == _this.description && other.asset === _this.asset && other.created === _this.created && other.model === _this.model && other.latency === _this.latency && other.user === _this.user && other.context == _this.context && other.os == _this.os;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, _this = this,
        t1 = _this.description;
      t1 = t1 == null ? 0 : B.JSString_methods.get$hashCode(t1);
      t2 = B.JSString_methods.get$hashCode(_this.asset);
      t3 = B.JSString_methods.get$hashCode(_this.created);
      t4 = B.JSString_methods.get$hashCode(_this.model);
      t5 = B.JSNumber_methods.get$hashCode(_this.latency);
      t6 = B.JSString_methods.get$hashCode(_this.user);
      t7 = _this.context;
      t7 = t7 == null ? 0 : B.JSString_methods.get$hashCode(t7);
      t8 = _this.os;
      t8 = t8 == null ? 0 : B.JSString_methods.get$hashCode(t8);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8;
    },
    toString$0(_) {
      var _this = this;
      return "TLPCodeFragmentDescription[description=" + A.S(_this.description) + ", asset=" + _this.asset + ", created=" + _this.created + ", model=" + _this.model + ", latency=" + A.S(_this.latency) + ", user=" + _this.user + ", context=" + A.S(_this.context) + ", os=" + A.S(_this.os) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.description;
      if (t1 != null)
        _json.$indexSet(0, "description", t1);
      _json.$indexSet(0, "asset", _this.asset);
      _json.$indexSet(0, "created", _this.created);
      _json.$indexSet(0, "model", _this.model);
      _json.$indexSet(0, "latency", _this.latency);
      _json.$indexSet(0, "user", _this.user);
      t1 = _this.context;
      if (t1 != null)
        _json.$indexSet(0, "context", t1);
      t1 = _this.os;
      if (t1 != null)
        _json.$indexSet(0, "os", t1);
      return _json;
    }
  };
  A.TLPCodeFragmentDescriptiveStatistics.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TLPCodeFragmentDescriptiveStatistics && J.$eq$(other.schema, _this.schema) && other.user === _this.user && other.os === _this.os && other.language === _this.language && other.length === _this.length && other.ast === _this.ast && other.timestamp === _this.timestamp && other.asset === _this.asset && other.context === _this.context && other.snippet === _this.snippet;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(_this.user) + B.JSString_methods.get$hashCode(_this.os) + B.JSString_methods.get$hashCode(_this.language) + B.JSNumber_methods.get$hashCode(_this.length) + B.JSString_methods.get$hashCode(_this.ast) + B.JSString_methods.get$hashCode(_this.timestamp) + B.JSString_methods.get$hashCode(_this.asset) + B.JSString_methods.get$hashCode(_this.context) + B.JSString_methods.get$hashCode(_this.snippet);
    },
    toString$0(_) {
      var _this = this;
      return "TLPCodeFragmentDescriptiveStatistics[schema=" + A.S(_this.schema) + ", user=" + _this.user + ", os=" + _this.os + ", language=" + _this.language + ", length=" + A.S(_this.length) + ", ast=" + _this.ast + ", timestamp=" + _this.timestamp + ", asset=" + _this.asset + ", context=" + _this.context + ", snippet=" + _this.snippet + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "user", _this.user);
      _json.$indexSet(0, "os", _this.os);
      _json.$indexSet(0, "language", _this.language);
      _json.$indexSet(0, "length", _this.length);
      _json.$indexSet(0, "ast", _this.ast);
      _json.$indexSet(0, "timestamp", _this.timestamp);
      _json.$indexSet(0, "asset", _this.asset);
      _json.$indexSet(0, "context", _this.context);
      _json.$indexSet(0, "snippet", _this.snippet);
      return _json;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.TLPCodeFragmentReclassification.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TLPCodeFragmentReclassification && J.$eq$(other.schema, _this.schema) && other.asset === _this.asset && other.model === _this.model && other.created === _this.created && other.updates.$eq(0, _this.updates) && other.user === _this.user && other.context === _this.context;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.updates;
      return t1 + B.JSString_methods.get$hashCode(_this.asset) + B.JSString_methods.get$hashCode(_this.model) + B.JSString_methods.get$hashCode(_this.created) + t2.get$hashCode(t2) + B.JSString_methods.get$hashCode(_this.user) + B.JSString_methods.get$hashCode(_this.context);
    },
    toString$0(_) {
      var _this = this;
      return "TLPCodeFragmentReclassification[schema=" + A.S(_this.schema) + ", asset=" + _this.asset + ", model=" + _this.model + ", created=" + _this.created + ", updates=" + _this.updates.toString$0(0) + ", user=" + _this.user + ", context=" + _this.context + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "asset", _this.asset);
      _json.$indexSet(0, "model", _this.model);
      _json.$indexSet(0, "created", _this.created);
      _json.$indexSet(0, "updates", _this.updates.toJson$0());
      _json.$indexSet(0, "user", _this.user);
      _json.$indexSet(0, "context", _this.context);
      return _json;
    }
  };
  A.TLPCodeFragmentReclassificationUpdates.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TLPCodeFragmentReclassificationUpdates && J.$eq$(other.schema, _this.schema) && other.previous.$eq(0, _this.previous) && other.current.$eq(0, _this.current);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.previous;
      t3 = this.current;
      return t1 + t2.get$hashCode(t2) + t3.get$hashCode(t3);
    },
    toString$0(_) {
      return "TLPCodeFragmentReclassificationUpdates[schema=" + A.S(this.schema) + ", previous=" + this.previous.toString$0(0) + ", current=" + this.current.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "previous", this.previous.toJson$0());
      _json.$indexSet(0, "current", this.current.toJson$0());
      return _json;
    }
  };
  A.TLPCodeFragmentStatistics.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.TLPCodeFragmentStatistics && J.$eq$(other.schema, this.schema) && J.$eq$(other.descriptive, this.descriptive);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.descriptive;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "TLPCodeFragmentStatistics[schema=" + A.S(this.schema) + ", descriptive=" + A.S(this.descriptive) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.descriptive;
      if (t1 != null)
        _json.$indexSet(0, "descriptive", t1.toJson$0());
      return _json;
    }
  };
  A.TLPCodeFragmentSuggestedReuse.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.TLPCodeFragmentSuggestedReuse && J.$eq$(other.schema, this.schema) && other.id == this.id;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.id;
      return t1 + (t2 == null ? 0 : B.JSString_methods.get$hashCode(t2));
    },
    toString$0(_) {
      return "TLPCodeFragmentSuggestedReuse[schema=" + A.S(this.schema) + ", id=" + A.S(this.id) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.id;
      if (t1 != null)
        _json.$indexSet(0, "id", t1);
      return _json;
    }
  };
  A.TLPCodeFragmentSuggestedSave.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TLPCodeFragmentSuggestedSave && J.$eq$(other.schema, _this.schema) && other.asset === _this.asset && other.user === _this.user && other.model === _this.model && other.created === _this.created && other.os === _this.os && other.context == _this.context && other.score === _this.score && other.candidates == _this.candidates;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.asset);
      t3 = B.JSString_methods.get$hashCode(_this.user);
      t4 = B.JSString_methods.get$hashCode(_this.model);
      t5 = B.JSString_methods.get$hashCode(_this.created);
      t6 = B.JSString_methods.get$hashCode(_this.os);
      t7 = _this.context;
      t7 = t7 == null ? 0 : B.JSString_methods.get$hashCode(t7);
      t8 = B.JSNumber_methods.get$hashCode(_this.score);
      t9 = _this.candidates;
      t9 = t9 == null ? 0 : B.JSInt_methods.get$hashCode(t9);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9;
    },
    toString$0(_) {
      var _this = this;
      return "TLPCodeFragmentSuggestedSave[schema=" + A.S(_this.schema) + ", asset=" + _this.asset + ", user=" + _this.user + ", model=" + _this.model + ", created=" + _this.created + ", os=" + _this.os + ", context=" + A.S(_this.context) + ", score=" + A.S(_this.score) + ", candidates=" + A.S(_this.candidates) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "asset", _this.asset);
      _json.$indexSet(0, "user", _this.user);
      _json.$indexSet(0, "model", _this.model);
      _json.$indexSet(0, "created", _this.created);
      _json.$indexSet(0, "os", _this.os);
      t1 = _this.context;
      if (t1 != null)
        _json.$indexSet(0, "context", t1);
      _json.$indexSet(0, "score", _this.score);
      t1 = _this.candidates;
      if (t1 != null)
        _json.$indexSet(0, "candidates", t1);
      return _json;
    }
  };
  A.TLPCodeFragmentTagify.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.TLPCodeFragmentTagify && J.$eq$(other.schema, this.schema) && J.$eq$(other.code, this.code);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.code;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "TLPCodeFragmentTagify[schema=" + A.S(this.schema) + ", code=" + A.S(this.code) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.code;
      if (t1 != null)
        _json.$indexSet(0, "code", t1.toJson$0());
      return _json;
    }
  };
  A.TLPCodeProcessing.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TLPCodeProcessing && J.$eq$(other.schema, _this.schema) && J.$eq$(other.fragment, _this.fragment) && J.$eq$(other.file, _this.file) && J.$eq$(other.directory, _this.directory) && J.$eq$(other.repository, _this.repository);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.fragment;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.file;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.directory;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      t5 = _this.repository;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      return t1 + t2 + t3 + t4 + t5;
    },
    toString$0(_) {
      var _this = this;
      return "TLPCodeProcessing[schema=" + A.S(_this.schema) + ", fragment=" + A.S(_this.fragment) + ", file=" + A.S(_this.file) + ", directory=" + A.S(_this.directory) + ", repository=" + A.S(_this.repository) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.fragment;
      if (t1 != null)
        _json.$indexSet(0, "fragment", t1.toJson$0());
      t1 = _this.file;
      if (t1 != null)
        _json.$indexSet(0, "file", t1.toJson$0());
      t1 = _this.directory;
      if (t1 != null)
        _json.$indexSet(0, "directory", t1.toJson$0());
      t1 = _this.repository;
      if (t1 != null)
        _json.$indexSet(0, "repository", t1.toJson$0());
      return _json;
    }
  };
  A.TLPCodeRepositoryAnalytics.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.TLPCodeRepositoryAnalytics && J.$eq$(other.schema, this.schema) && other.id == this.id;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.id;
      return t1 + (t2 == null ? 0 : B.JSString_methods.get$hashCode(t2));
    },
    toString$0(_) {
      return "TLPCodeRepositoryAnalytics[schema=" + A.S(this.schema) + ", id=" + A.S(this.id) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.id;
      if (t1 != null)
        _json.$indexSet(0, "id", t1);
      return _json;
    }
  };
  A.TLPCodeSnippetAnalytics.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TLPCodeSnippetAnalytics && J.$eq$(other.schema, _this.schema) && J.$eq$(other.statistics, _this.statistics) && J.$eq$(other.classification, _this.classification) && J.$eq$(other.reclassification, _this.reclassification) && J.$eq$(other.suggested, _this.suggested) && J.$eq$(other.tagify, _this.tagify) && J.$eq$(other.description, _this.description);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.statistics;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.classification;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.reclassification;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      t5 = _this.suggested;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = _this.tagify;
      t6 = t6 == null ? 0 : t6.get$hashCode(t6);
      t7 = _this.description;
      t7 = t7 == null ? 0 : t7.get$hashCode(t7);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7;
    },
    toString$0(_) {
      var _this = this;
      return "TLPCodeSnippetAnalytics[schema=" + A.S(_this.schema) + ", statistics=" + A.S(_this.statistics) + ", classification=" + A.S(_this.classification) + ", reclassification=" + A.S(_this.reclassification) + ", suggested=" + A.S(_this.suggested) + ", tagify=" + A.S(_this.tagify) + ", description=" + A.S(_this.description) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.statistics;
      if (t1 != null)
        _json.$indexSet(0, "statistics", t1.toJson$0());
      t1 = _this.classification;
      if (t1 != null)
        _json.$indexSet(0, "classification", t1.toJson$0());
      t1 = _this.reclassification;
      if (t1 != null)
        _json.$indexSet(0, "reclassification", t1.toJson$0());
      t1 = _this.suggested;
      if (t1 != null)
        _json.$indexSet(0, "suggested", t1.toJson$0());
      t1 = _this.tagify;
      if (t1 != null)
        _json.$indexSet(0, "tagify", t1.toJson$0());
      t1 = _this.description;
      if (t1 != null)
        _json.$indexSet(0, "description", t1.toJson$0());
      return _json;
    }
  };
  A.TLPCodeSnippetSuggestedInteractions.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TLPCodeSnippetSuggestedInteractions && J.$eq$(other.schema, _this.schema) && J.$eq$(other.save, _this.save) && J.$eq$(other.reuse, _this.reuse);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.save;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = this.reuse;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "TLPCodeSnippetSuggestedInteractions[schema=" + A.S(this.schema) + ", save=" + A.S(this.save) + ", reuse=" + A.S(this.reuse) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.save;
      if (t1 != null)
        _json.$indexSet(0, "save", t1.toJson$0());
      t1 = this.reuse;
      if (t1 != null)
        _json.$indexSet(0, "reuse", t1.toJson$0());
      return _json;
    }
  };
  A.TLPCodeSnippetTagifyCode.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TLPCodeSnippetTagifyCode && J.$eq$(other.schema, _this.schema) && other.distribution === _this.distribution && other.inferredDistribution === _this.inferredDistribution && other.tags === _this.tags && other.inferredTags === _this.inferredTags && other.model === _this.model && other.labelVersion === _this.labelVersion && other.threshold === _this.threshold && other.inferredThreshold === _this.inferredThreshold && other.context === _this.context && other.asset === _this.asset;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(_this.distribution) + B.JSString_methods.get$hashCode(_this.inferredDistribution) + B.JSString_methods.get$hashCode(_this.tags) + B.JSString_methods.get$hashCode(_this.inferredTags) + B.JSString_methods.get$hashCode(_this.model) + B.JSString_methods.get$hashCode(_this.labelVersion) + B.JSNumber_methods.get$hashCode(_this.threshold) + B.JSNumber_methods.get$hashCode(_this.inferredThreshold) + B.JSString_methods.get$hashCode(_this.context) + B.JSString_methods.get$hashCode(_this.asset);
    },
    toString$0(_) {
      var _this = this;
      return "TLPCodeSnippetTagifyCode[schema=" + A.S(_this.schema) + ", distribution=" + _this.distribution + ", inferredDistribution=" + _this.inferredDistribution + ", tags=" + _this.tags + ", inferredTags=" + _this.inferredTags + ", model=" + _this.model + ", labelVersion=" + _this.labelVersion + ", threshold=" + A.S(_this.threshold) + ", inferredThreshold=" + A.S(_this.inferredThreshold) + ", context=" + _this.context + ", asset=" + _this.asset + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "distribution", _this.distribution);
      _json.$indexSet(0, "inferred_distribution", _this.inferredDistribution);
      _json.$indexSet(0, "tags", _this.tags);
      _json.$indexSet(0, "inferred_tags", _this.inferredTags);
      _json.$indexSet(0, "model", _this.model);
      _json.$indexSet(0, "label_version", _this.labelVersion);
      _json.$indexSet(0, "threshold", _this.threshold);
      _json.$indexSet(0, "inferred_threshold", _this.inferredThreshold);
      _json.$indexSet(0, "context", _this.context);
      _json.$indexSet(0, "asset", _this.asset);
      return _json;
    }
  };
  A.TLPDirectedDiscoveryFilter.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.TLPDirectedDiscoveryFilter && other.name === this.name;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this.name);
    },
    toString$0(_) {
      return "TLPDirectedDiscoveryFilter[name=" + this.name.toString$0(0) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "name", this.name.value);
      return _json;
    }
  };
  A.TLPDirectedDiscoveryFilterEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.TLPDirectedDiscoveryFilterEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "FUNCTION":
            return B.TLPDirectedDiscoveryFilterEnum_FUNCTION;
          case "METHOD":
            return B.TLPDirectedDiscoveryFilterEnum_METHOD;
          case "CLASS":
            return B.TLPDirectedDiscoveryFilterEnum_CLASS;
          case "STRUCT":
            return B.TLPDirectedDiscoveryFilterEnum_STRUCT;
          case "ABSTRACT":
            return B.TLPDirectedDiscoveryFilterEnum_ABSTRACT;
          case "COMMENT":
            return B.TLPDirectedDiscoveryFilterEnum_COMMENT;
          case "IMPORT":
            return B.TLPDirectedDiscoveryFilterEnum_IMPORT;
          case "IF":
            return B.TLPDirectedDiscoveryFilterEnum_IF;
          case "LOOP":
            return B.TLPDirectedDiscoveryFilterEnum_LOOP;
          case "RETURN":
            return B.TLPDirectedDiscoveryFilterEnum_RETURN;
        }
      return null;
    }
  };
  A.TLPDirectedDiscoveryFilters.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.TLPDirectedDiscoveryFilters && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "TLPDirectedDiscoveryFilters[iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.iterable,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.TLPDirectedDiscoveryFilters_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.TLPDirectedDiscoveryFilters_toJson_closure.prototype = {
    call$1(element) {
      return type$.TLPDirectedDiscoveryFilter._as(element).toJson$0();
    },
    $signature: 108
  };
  A.TLPMachineLearningProcessingEvent.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.TLPMachineLearningProcessingEvent && J.$eq$(other.schema, this.schema) && J.$eq$(other.code, this.code);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.code;
      return t1 + (t2 == null ? 0 : t2.get$hashCode(t2));
    },
    toString$0(_) {
      return "TLPMachineLearningProcessingEvent[schema=" + A.S(this.schema) + ", code=" + A.S(this.code) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.code;
      if (t1 != null)
        _json.$indexSet(0, "code", t1.toJson$0());
      return _json;
    }
  };
  A.TokenizedPKCE.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TokenizedPKCE && J.$eq$(other.schema, _this.schema) && other.grantType === _this.grantType && other.clientId === _this.clientId && other.code === _this.code && other.redirectUri === _this.redirectUri && other.codeVerifier === _this.codeVerifier && other.audience == _this.audience;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = A.Primitives_objectHashCode(_this.grantType);
      t3 = B.JSString_methods.get$hashCode(_this.clientId);
      t4 = B.JSString_methods.get$hashCode(_this.code);
      t5 = B.JSString_methods.get$hashCode(_this.redirectUri);
      t6 = B.JSString_methods.get$hashCode(_this.codeVerifier);
      t7 = _this.audience;
      t7 = t7 == null ? 0 : B.JSString_methods.get$hashCode(t7);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7;
    },
    toString$0(_) {
      var _this = this;
      return "TokenizedPKCE[schema=" + A.S(_this.schema) + ", grantType=" + _this.grantType.toString$0(0) + ", clientId=" + _this.clientId + ", code=" + _this.code + ", redirectUri=" + _this.redirectUri + ", codeVerifier=" + _this.codeVerifier + ", audience=" + A.S(_this.audience) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "grant_type", _this.grantType.value);
      _json.$indexSet(0, "client_id", _this.clientId);
      _json.$indexSet(0, "code", _this.code);
      _json.$indexSet(0, "redirect_uri", _this.redirectUri);
      _json.$indexSet(0, "code_verifier", _this.codeVerifier);
      t1 = _this.audience;
      if (t1 != null)
        _json.$indexSet(0, "audience", t1);
      return _json;
    }
  };
  A.TokenizedPKCEGrantTypeEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.TokenizedPKCEGrantTypeEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "refresh_token":
            return B.TokenizedPKCEGrantTypeEnum_refresh_token;
          case "authorization_code":
            return B.TokenizedPKCEGrantTypeEnum_authorization_code;
        }
      return null;
    }
  };
  A.TrackedApplication.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedApplication && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.name === _this.name && other.version === _this.version && other.platform === _this.platform;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(_this.id) + A.Primitives_objectHashCode(_this.name) + B.JSString_methods.get$hashCode(_this.version) + A.Primitives_objectHashCode(_this.platform);
    },
    toString$0(_) {
      var _this = this;
      return "TrackedApplication[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", name=" + _this.name.toString$0(0) + ", version=" + _this.version + ", platform=" + _this.platform.toString$0(0) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "name", _this.name.value);
      _json.$indexSet(0, "version", _this.version);
      _json.$indexSet(0, "platform", _this.platform.value);
      return _json;
    }
  };
  A.TrackedApplicationInstall.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedApplicationInstall && J.$eq$(other.schema, _this.schema) && other.application.$eq(0, _this.application) && J.$eq$(other.user, _this.user);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.application;
      t2 = t2.get$hashCode(t2);
      t3 = this.user;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "TrackedApplicationInstall[schema=" + A.S(this.schema) + ", application=" + this.application.toString$0(0) + ", user=" + A.S(this.user) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "application", this.application.toJson$0());
      t1 = this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1.toJson$0());
      return _json;
    }
  };
  A.TrackedApplicationUpdate.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedApplicationUpdate && J.$eq$(other.schema, _this.schema) && other.current.$eq(0, _this.current) && J.$eq$(other.previous, _this.previous) && J.$eq$(other.user, _this.user);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.current;
      t2 = t2.get$hashCode(t2);
      t3 = _this.previous;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.user;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "TrackedApplicationUpdate[schema=" + A.S(_this.schema) + ", current=" + _this.current.toString$0(0) + ", previous=" + A.S(_this.previous) + ", user=" + A.S(_this.user) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "current", _this.current.toJson$0());
      t1 = _this.previous;
      if (t1 != null)
        _json.$indexSet(0, "previous", t1.toJson$0());
      t1 = _this.user;
      if (t1 != null)
        _json.$indexSet(0, "user", t1.toJson$0());
      return _json;
    }
  };
  A.TrackedAssetEventCreationMetadata.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedAssetEventCreationMetadata && J.$eq$(other.schema, _this.schema) && J.$eq$(other.clipboard, _this.clipboard) && J.$eq$(other.file, _this.file);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.clipboard;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = this.file;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "TrackedAssetEventCreationMetadata[schema=" + A.S(this.schema) + ", clipboard=" + A.S(this.clipboard) + ", file=" + A.S(this.file) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.clipboard;
      if (t1 != null)
        _json.$indexSet(0, "clipboard", t1.toJson$0());
      t1 = this.file;
      if (t1 != null)
        _json.$indexSet(0, "file", t1.toJson$0());
      return _json;
    }
  };
  A.TrackedAssetEventCreationMetadataClipboard.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedAssetEventCreationMetadataClipboard && J.$eq$(other.schema, _this.schema) && other.keyboard == _this.keyboard && other.interaction == _this.interaction;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.keyboard;
      t2 = t2 == null ? 0 : B.JSBool_methods.get$hashCode(t2);
      t3 = this.interaction;
      t3 = t3 == null ? 0 : B.JSBool_methods.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "TrackedAssetEventCreationMetadataClipboard[schema=" + A.S(this.schema) + ", keyboard=" + A.S(this.keyboard) + ", interaction=" + A.S(this.interaction) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.keyboard;
      if (t1 != null)
        _json.$indexSet(0, "keyboard", t1);
      t1 = this.interaction;
      if (t1 != null)
        _json.$indexSet(0, "interaction", t1);
      return _json;
    }
  };
  A.TrackedAssetEventCreationMetadataFile.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedAssetEventCreationMetadataFile && other.keyboard == _this.keyboard && other.dragAndDrop == _this.dragAndDrop && other.interaction == _this.interaction;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.keyboard;
      t1 = t1 == null ? 0 : B.JSBool_methods.get$hashCode(t1);
      t2 = this.dragAndDrop;
      t2 = t2 == null ? 0 : B.JSBool_methods.get$hashCode(t2);
      t3 = this.interaction;
      t3 = t3 == null ? 0 : B.JSBool_methods.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "TrackedAssetEventCreationMetadataFile[keyboard=" + A.S(this.keyboard) + ", dragAndDrop=" + A.S(this.dragAndDrop) + ", interaction=" + A.S(this.interaction) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.keyboard;
      if (t1 != null)
        _json.$indexSet(0, "keyboard", t1);
      t1 = this.dragAndDrop;
      if (t1 != null)
        _json.$indexSet(0, "drag_and_drop", t1);
      t1 = this.interaction;
      if (t1 != null)
        _json.$indexSet(0, "interaction", t1);
      return _json;
    }
  };
  A.TrackedAssetEventFormatReclassificationMetadata.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedAssetEventFormatReclassificationMetadata && J.$eq$(other.schema, _this.schema) && J.$eq$(other.previous, _this.previous) && J.$eq$(other.current, _this.current);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.previous;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = this.current;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "TrackedAssetEventFormatReclassificationMetadata[schema=" + A.S(this.schema) + ", previous=" + A.S(this.previous) + ", current=" + A.S(this.current) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.previous;
      if (t1 != null)
        _json.$indexSet(0, "previous", t1.toJson$0());
      t1 = this.current;
      if (t1 != null)
        _json.$indexSet(0, "current", t1.toJson$0());
      return _json;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairs.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedAssetEventIdentifierDescriptionPairs && J.$eq$(other.schema, _this.schema) && other.assetCreated == _this.assetCreated && other.assetViewed == _this.assetViewed && other.assetFormatCopied == _this.assetFormatCopied && other.assetFormatDownloaded == _this.assetFormatDownloaded && other.assetDeleted == _this.assetDeleted && other.assetDescriptionUpdated == _this.assetDescriptionUpdated && other.assetNameUpdated == _this.assetNameUpdated && other.assetFormatGenericClassificationUpdated == _this.assetFormatGenericClassificationUpdated && other.assetFormatSpecificClassificationUpdated == _this.assetFormatSpecificClassificationUpdated && other.assetCreationFailed == _this.assetCreationFailed && other.assetTagAdded == _this.assetTagAdded && other.assetLinkAdded == _this.assetLinkAdded && other.assetLinkGenerated == _this.assetLinkGenerated && other.assetLinkDeleted == _this.assetLinkDeleted && other.assetTagDeleted == _this.assetTagDeleted && other.assetUpdated == _this.assetUpdated && other.assetFormatValueEdited == _this.assetFormatValueEdited && other.assetFormatUpdated == _this.assetFormatUpdated && other.assetLinkRevoked == _this.assetLinkRevoked && other.assetPersonAdded == _this.assetPersonAdded && other.assetPersonDeleted == _this.assetPersonDeleted && other.assetSensitiveAdded == _this.assetSensitiveAdded && other.assetSensitiveDeleted == _this.assetSensitiveDeleted && other.suggestedAssetReferenced == _this.suggestedAssetReferenced && other.searchedAssetReferenced == _this.searchedAssetReferenced && other.assetReferenced == _this.assetReferenced && other.activityAssetReferenced == _this.activityAssetReferenced;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.assetCreated;
      t2 = t2 == null ? 0 : A.Primitives_objectHashCode(t2);
      t3 = _this.assetViewed;
      t3 = t3 == null ? 0 : A.Primitives_objectHashCode(t3);
      t4 = _this.assetFormatCopied;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4);
      t5 = _this.assetFormatDownloaded;
      t5 = t5 == null ? 0 : A.Primitives_objectHashCode(t5);
      t6 = _this.assetDeleted;
      t6 = t6 == null ? 0 : A.Primitives_objectHashCode(t6);
      t7 = _this.assetDescriptionUpdated;
      t7 = t7 == null ? 0 : A.Primitives_objectHashCode(t7);
      t8 = _this.assetNameUpdated;
      t8 = t8 == null ? 0 : A.Primitives_objectHashCode(t8);
      t9 = _this.assetFormatGenericClassificationUpdated;
      t9 = t9 == null ? 0 : A.Primitives_objectHashCode(t9);
      t10 = _this.assetFormatSpecificClassificationUpdated;
      t10 = t10 == null ? 0 : A.Primitives_objectHashCode(t10);
      t11 = _this.assetCreationFailed;
      t11 = t11 == null ? 0 : A.Primitives_objectHashCode(t11);
      t12 = _this.assetTagAdded;
      t12 = t12 == null ? 0 : A.Primitives_objectHashCode(t12);
      t13 = _this.assetLinkAdded;
      t13 = t13 == null ? 0 : A.Primitives_objectHashCode(t13);
      t14 = _this.assetLinkGenerated;
      t14 = t14 == null ? 0 : A.Primitives_objectHashCode(t14);
      t15 = _this.assetLinkDeleted;
      t15 = t15 == null ? 0 : A.Primitives_objectHashCode(t15);
      t16 = _this.assetTagDeleted;
      t16 = t16 == null ? 0 : A.Primitives_objectHashCode(t16);
      t17 = _this.assetUpdated;
      t17 = t17 == null ? 0 : A.Primitives_objectHashCode(t17);
      t18 = _this.assetFormatValueEdited;
      t18 = t18 == null ? 0 : A.Primitives_objectHashCode(t18);
      t19 = _this.assetFormatUpdated;
      t19 = t19 == null ? 0 : A.Primitives_objectHashCode(t19);
      t20 = _this.assetLinkRevoked;
      t20 = t20 == null ? 0 : A.Primitives_objectHashCode(t20);
      t21 = _this.assetPersonAdded;
      t21 = t21 == null ? 0 : A.Primitives_objectHashCode(t21);
      t22 = _this.assetPersonDeleted;
      t22 = t22 == null ? 0 : A.Primitives_objectHashCode(t22);
      t23 = _this.assetSensitiveAdded;
      t23 = t23 == null ? 0 : A.Primitives_objectHashCode(t23);
      t24 = _this.assetSensitiveDeleted;
      t24 = t24 == null ? 0 : A.Primitives_objectHashCode(t24);
      t25 = _this.suggestedAssetReferenced;
      t25 = t25 == null ? 0 : A.Primitives_objectHashCode(t25);
      t26 = _this.searchedAssetReferenced;
      t26 = t26 == null ? 0 : A.Primitives_objectHashCode(t26);
      t27 = _this.assetReferenced;
      t27 = t27 == null ? 0 : A.Primitives_objectHashCode(t27);
      t28 = _this.activityAssetReferenced;
      t28 = t28 == null ? 0 : A.Primitives_objectHashCode(t28);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12 + t13 + t14 + t15 + t16 + t17 + t18 + t19 + t20 + t21 + t22 + t23 + t24 + t25 + t26 + t27 + t28;
    },
    toString$0(_) {
      var _this = this;
      return "TrackedAssetEventIdentifierDescriptionPairs[schema=" + A.S(_this.schema) + ", assetCreated=" + A.S(_this.assetCreated) + ", assetViewed=" + A.S(_this.assetViewed) + ", assetFormatCopied=" + A.S(_this.assetFormatCopied) + ", assetFormatDownloaded=" + A.S(_this.assetFormatDownloaded) + ", assetDeleted=" + A.S(_this.assetDeleted) + ", assetDescriptionUpdated=" + A.S(_this.assetDescriptionUpdated) + ", assetNameUpdated=" + A.S(_this.assetNameUpdated) + ", assetFormatGenericClassificationUpdated=" + A.S(_this.assetFormatGenericClassificationUpdated) + ", assetFormatSpecificClassificationUpdated=" + A.S(_this.assetFormatSpecificClassificationUpdated) + ", assetCreationFailed=" + A.S(_this.assetCreationFailed) + ", assetTagAdded=" + A.S(_this.assetTagAdded) + ", assetLinkAdded=" + A.S(_this.assetLinkAdded) + ", assetLinkGenerated=" + A.S(_this.assetLinkGenerated) + ", assetLinkDeleted=" + A.S(_this.assetLinkDeleted) + ", assetTagDeleted=" + A.S(_this.assetTagDeleted) + ", assetUpdated=" + A.S(_this.assetUpdated) + ", assetFormatValueEdited=" + A.S(_this.assetFormatValueEdited) + ", assetFormatUpdated=" + A.S(_this.assetFormatUpdated) + ", assetLinkRevoked=" + A.S(_this.assetLinkRevoked) + ", assetPersonAdded=" + A.S(_this.assetPersonAdded) + ", assetPersonDeleted=" + A.S(_this.assetPersonDeleted) + ", assetSensitiveAdded=" + A.S(_this.assetSensitiveAdded) + ", assetSensitiveDeleted=" + A.S(_this.assetSensitiveDeleted) + ", suggestedAssetReferenced=" + A.S(_this.suggestedAssetReferenced) + ", searchedAssetReferenced=" + A.S(_this.searchedAssetReferenced) + ", assetReferenced=" + A.S(_this.assetReferenced) + ", activityAssetReferenced=" + A.S(_this.activityAssetReferenced) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      if (_this.assetCreated != null)
        _json.$indexSet(0, "asset_created", "an_asset_was_created");
      if (_this.assetViewed != null)
        _json.$indexSet(0, "asset_viewed", "an_asset_was_viewed");
      if (_this.assetFormatCopied != null)
        _json.$indexSet(0, "asset_format_copied", "an_asset_preview_format_was_copied");
      if (_this.assetFormatDownloaded != null)
        _json.$indexSet(0, "asset_format_downloaded", "an_asset_format_was_downloaded");
      if (_this.assetDeleted != null)
        _json.$indexSet(0, "asset_deleted", "an_asset_was_deleted");
      if (_this.assetDescriptionUpdated != null)
        _json.$indexSet(0, "asset_description_updated", "an_asset_was_redescribed_by_the_user");
      if (_this.assetNameUpdated != null)
        _json.$indexSet(0, "asset_name_updated", "an_asset_was_renamed_by_the_user");
      if (_this.assetFormatGenericClassificationUpdated != null)
        _json.$indexSet(0, string$.asset_g, string$.a_gene);
      if (_this.assetFormatSpecificClassificationUpdated != null)
        _json.$indexSet(0, string$.asset_s, string$.a_specc);
      if (_this.assetCreationFailed != null)
        _json.$indexSet(0, "asset_creation_failed", "an_asset_failed_to_be_created");
      if (_this.assetTagAdded != null)
        _json.$indexSet(0, "asset_tag_added", "a_tag_was_added_by_the_user");
      if (_this.assetLinkAdded != null)
        _json.$indexSet(0, "asset_link_added", "a_link_was_added_by_the_user");
      if (_this.assetLinkGenerated != null)
        _json.$indexSet(0, "asset_link_generated", "an_asset_link_was_generated");
      if (_this.assetLinkDeleted != null)
        _json.$indexSet(0, "asset_link_deleted", "a_link_was_deleted_by_the_user");
      if (_this.assetTagDeleted != null)
        _json.$indexSet(0, "asset_tag_deleted", "a_tag_was_deleted_by_the_user");
      if (_this.assetUpdated != null)
        _json.$indexSet(0, "asset_updated", "an_asset_was_updated");
      if (_this.assetFormatValueEdited != null)
        _json.$indexSet(0, "asset_format_value_edited", string$.a_specfv);
      if (_this.assetFormatUpdated != null)
        _json.$indexSet(0, "asset_format_updated", string$.a_specfw);
      if (_this.assetLinkRevoked != null)
        _json.$indexSet(0, "asset_link_revoked", "an_asset_link_was_revoked");
      if (_this.assetPersonAdded != null)
        _json.$indexSet(0, "asset_person_added", "a_person_was_added_by_the_user");
      if (_this.assetPersonDeleted != null)
        _json.$indexSet(0, "asset_person_deleted", "a_person_was_deleted_by_the_user");
      if (_this.assetSensitiveAdded != null)
        _json.$indexSet(0, "asset_sensitive_added", "a_sensitive_was_added_by_the_user");
      if (_this.assetSensitiveDeleted != null)
        _json.$indexSet(0, "asset_sensitive_deleted", "a_sensitive_was_deleted_by_the_user");
      if (_this.suggestedAssetReferenced != null)
        _json.$indexSet(0, "suggested_asset_referenced", string$.a_sugg);
      if (_this.searchedAssetReferenced != null)
        _json.$indexSet(0, "searched_asset_referenced", string$.a_sear);
      if (_this.assetReferenced != null)
        _json.$indexSet(0, "asset_referenced", "an_asset_was_referenced_by_the_user");
      if (_this.activityAssetReferenced != null)
        _json.$indexSet(0, "activity_asset_referenced", string$.an_act);
      return _json;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnum.prototype = {
    toString$0(_) {
      return "an_asset_was_created";
    },
    toJson$0() {
      return "an_asset_was_created";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "an_asset_was_created":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnum.prototype = {
    toString$0(_) {
      return "an_asset_was_viewed";
    },
    toJson$0() {
      return "an_asset_was_viewed";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "an_asset_was_viewed":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnum.prototype = {
    toString$0(_) {
      return "an_asset_preview_format_was_copied";
    },
    toJson$0() {
      return "an_asset_preview_format_was_copied";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "an_asset_preview_format_was_copied":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnum.prototype = {
    toString$0(_) {
      return "an_asset_format_was_downloaded";
    },
    toJson$0() {
      return "an_asset_format_was_downloaded";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "an_asset_format_was_downloaded":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnum.prototype = {
    toString$0(_) {
      return "an_asset_was_deleted";
    },
    toJson$0() {
      return "an_asset_was_deleted";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "an_asset_was_deleted":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnum.prototype = {
    toString$0(_) {
      return "an_asset_was_redescribed_by_the_user";
    },
    toJson$0() {
      return "an_asset_was_redescribed_by_the_user";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "an_asset_was_redescribed_by_the_user":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnum.prototype = {
    toString$0(_) {
      return "an_asset_was_renamed_by_the_user";
    },
    toJson$0() {
      return "an_asset_was_renamed_by_the_user";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "an_asset_was_renamed_by_the_user":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnum.prototype = {
    toString$0(_) {
      return string$.a_gene;
    },
    toJson$0() {
      return string$.a_gene;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_gene:
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnum.prototype = {
    toString$0(_) {
      return string$.a_specc;
    },
    toJson$0() {
      return string$.a_specc;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_specc:
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnum.prototype = {
    toString$0(_) {
      return "an_asset_failed_to_be_created";
    },
    toJson$0() {
      return "an_asset_failed_to_be_created";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "an_asset_failed_to_be_created":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnum.prototype = {
    toString$0(_) {
      return "a_tag_was_added_by_the_user";
    },
    toJson$0() {
      return "a_tag_was_added_by_the_user";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_tag_was_added_by_the_user":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnum.prototype = {
    toString$0(_) {
      return "a_link_was_added_by_the_user";
    },
    toJson$0() {
      return "a_link_was_added_by_the_user";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_link_was_added_by_the_user":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnum.prototype = {
    toString$0(_) {
      return "an_asset_link_was_generated";
    },
    toJson$0() {
      return "an_asset_link_was_generated";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "an_asset_link_was_generated":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnum.prototype = {
    toString$0(_) {
      return "a_link_was_deleted_by_the_user";
    },
    toJson$0() {
      return "a_link_was_deleted_by_the_user";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_link_was_deleted_by_the_user":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnum.prototype = {
    toString$0(_) {
      return "a_tag_was_deleted_by_the_user";
    },
    toJson$0() {
      return "a_tag_was_deleted_by_the_user";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_tag_was_deleted_by_the_user":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnum.prototype = {
    toString$0(_) {
      return "an_asset_was_updated";
    },
    toJson$0() {
      return "an_asset_was_updated";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "an_asset_was_updated":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnum.prototype = {
    toString$0(_) {
      return string$.a_specfv;
    },
    toJson$0() {
      return string$.a_specfv;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_specfv:
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnum.prototype = {
    toString$0(_) {
      return string$.a_specfw;
    },
    toJson$0() {
      return string$.a_specfw;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_specfw:
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnum.prototype = {
    toString$0(_) {
      return "an_asset_link_was_revoked";
    },
    toJson$0() {
      return "an_asset_link_was_revoked";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "an_asset_link_was_revoked":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnum.prototype = {
    toString$0(_) {
      return "a_person_was_added_by_the_user";
    },
    toJson$0() {
      return "a_person_was_added_by_the_user";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_person_was_added_by_the_user":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnum.prototype = {
    toString$0(_) {
      return "a_person_was_deleted_by_the_user";
    },
    toJson$0() {
      return "a_person_was_deleted_by_the_user";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_person_was_deleted_by_the_user":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnum.prototype = {
    toString$0(_) {
      return "a_sensitive_was_added_by_the_user";
    },
    toJson$0() {
      return "a_sensitive_was_added_by_the_user";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_sensitive_was_added_by_the_user":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnum.prototype = {
    toString$0(_) {
      return "a_sensitive_was_deleted_by_the_user";
    },
    toJson$0() {
      return "a_sensitive_was_deleted_by_the_user";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_sensitive_was_deleted_by_the_user":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnum.prototype = {
    toString$0(_) {
      return string$.a_sugg;
    },
    toJson$0() {
      return string$.a_sugg;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_sugg:
            return B.C_TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnum.prototype = {
    toString$0(_) {
      return string$.a_sear;
    },
    toJson$0() {
      return string$.a_sear;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_sear:
            return B.C_TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnum.prototype = {
    toString$0(_) {
      return "an_asset_was_referenced_by_the_user";
    },
    toJson$0() {
      return "an_asset_was_referenced_by_the_user";
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "an_asset_was_referenced_by_the_user":
            return B.C_TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnum.prototype = {
    toString$0(_) {
      return string$.an_act;
    },
    toJson$0() {
      return string$.an_act;
    }
  };
  A.TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.an_act:
            return B.C_TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetEventMetadata.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedAssetEventMetadata && J.$eq$(other.reclassification, _this.reclassification) && J.$eq$(other.creation, _this.creation) && J.$eq$(other.rename, _this.rename) && J.$eq$(other.tag, _this.tag) && J.$eq$(other.website, _this.website) && J.$eq$(other.person, _this.person) && J.$eq$(other.sensitive, _this.sensitive) && J.$eq$(other.share, _this.share) && J.$eq$(other.search, _this.search);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = _this.reclassification;
      t1 = t1 == null ? 0 : t1.get$hashCode(t1);
      t2 = _this.creation;
      t2 = t2 == null ? 0 : t2.get$hashCode(t2);
      t3 = _this.rename;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.tag;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      t5 = _this.website;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = _this.person;
      t6 = t6 == null ? 0 : t6.get$hashCode(t6);
      t7 = _this.sensitive;
      t7 = t7 == null ? 0 : t7.get$hashCode(t7);
      t8 = _this.share;
      t8 = t8 == null ? 0 : t8.get$hashCode(t8);
      t9 = _this.search;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9;
    },
    toString$0(_) {
      var _this = this;
      return "TrackedAssetEventMetadata[reclassification=" + A.S(_this.reclassification) + ", creation=" + A.S(_this.creation) + ", rename=" + A.S(_this.rename) + ", tag=" + A.S(_this.tag) + ", website=" + A.S(_this.website) + ", person=" + A.S(_this.person) + ", sensitive=" + A.S(_this.sensitive) + ", share=" + A.S(_this.share) + ", search=" + A.S(_this.search) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.reclassification;
      if (t1 != null)
        _json.$indexSet(0, "reclassification", t1.toJson$0());
      t1 = _this.creation;
      if (t1 != null)
        _json.$indexSet(0, "creation", t1.toJson$0());
      t1 = _this.rename;
      if (t1 != null)
        _json.$indexSet(0, "rename", t1.toJson$0());
      t1 = _this.tag;
      if (t1 != null)
        _json.$indexSet(0, "tag", t1.toJson$0());
      t1 = _this.website;
      if (t1 != null)
        _json.$indexSet(0, "website", t1.toJson$0());
      t1 = _this.person;
      if (t1 != null)
        _json.$indexSet(0, "person", t1.toJson$0());
      t1 = _this.sensitive;
      if (t1 != null)
        _json.$indexSet(0, "sensitive", t1.toJson$0());
      t1 = _this.share;
      if (t1 != null)
        _json.$indexSet(0, "share", t1.toJson$0());
      t1 = _this.search;
      if (t1 != null)
        _json.$indexSet(0, "search", t1.toJson$0());
      return _json;
    }
  };
  A.TrackedAssetEventRenameMetadata.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedAssetEventRenameMetadata && J.$eq$(other.schema, _this.schema) && other.previous === _this.previous && other.current === _this.current;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(this.previous) + B.JSString_methods.get$hashCode(this.current);
    },
    toString$0(_) {
      return "TrackedAssetEventRenameMetadata[schema=" + A.S(this.schema) + ", previous=" + this.previous + ", current=" + this.current + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "previous", this.previous);
      _json.$indexSet(0, "current", this.current);
      return _json;
    }
  };
  A.TrackedAssetsEventIdentifierDescriptionPairs.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.TrackedAssetsEventIdentifierDescriptionPairs && J.$eq$(other.schema, this.schema) && other.assetsSearched == this.assetsSearched;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.assetsSearched;
      return t1 + (t2 == null ? 0 : A.Primitives_objectHashCode(t2));
    },
    toString$0(_) {
      return "TrackedAssetsEventIdentifierDescriptionPairs[schema=" + A.S(this.schema) + ", assetsSearched=" + A.S(this.assetsSearched) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      if (this.assetsSearched != null)
        _json.$indexSet(0, "assets_searched", "assets_were_searched");
      return _json;
    }
  };
  A.TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnum.prototype = {
    toString$0(_) {
      return "assets_were_searched";
    },
    toJson$0() {
      return "assets_were_searched";
    }
  };
  A.TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "assets_were_searched":
            return B.C_TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnum;
        }
      return null;
    }
  };
  A.TrackedAssetsEventSearchMetadata.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedAssetsEventSearchMetadata && J.$eq$(other.schema, _this.schema) && other.query == _this.query && J.$eq$(other.results, _this.results);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = this.query;
      t2 = t2 == null ? 0 : B.JSString_methods.get$hashCode(t2);
      t3 = this.results;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "TrackedAssetsEventSearchMetadata[schema=" + A.S(this.schema) + ", query=" + A.S(this.query) + ", results=" + A.S(this.results) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.query;
      if (t1 != null)
        _json.$indexSet(0, "query", t1);
      t1 = this.results;
      if (t1 != null)
        _json.$indexSet(0, "results", t1.toJson$0());
      return _json;
    }
  };
  A.TrackedAssetsEventSearchMetadataResults.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedAssetsEventSearchMetadataResults && other.fuzzy === _this.fuzzy && other.exact === _this.exact && J.$eq$(other.assets, _this.assets) && J.$eq$(other.space, _this.space);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t4, _this = this,
        t1 = B.JSNumber_methods.get$hashCode(_this.fuzzy),
        t2 = B.JSNumber_methods.get$hashCode(_this.exact),
        t3 = _this.assets;
      t3 = t3 == null ? 0 : t3.get$hashCode(t3);
      t4 = _this.space;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "TrackedAssetsEventSearchMetadataResults[fuzzy=" + A.S(_this.fuzzy) + ", exact=" + A.S(_this.exact) + ", assets=" + A.S(_this.assets) + ", space=" + A.S(_this.space) + "]";
    },
    toJson$0() {
      var t1, _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      _json.$indexSet(0, "fuzzy", _this.fuzzy);
      _json.$indexSet(0, "exact", _this.exact);
      t1 = _this.assets;
      if (t1 != null)
        _json.$indexSet(0, "assets", t1.toJson$0());
      t1 = _this.space;
      if (t1 != null)
        _json.$indexSet(0, "space", t1.toJson$0());
      return _json;
    }
  };
  A.TrackedFormat.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedFormat && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.classification.$eq(0, _this.classification) && other.role === _this.role && other.asset === _this.asset && other.fragment === _this.fragment && other.file === _this.file;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.classification;
      return t1 + B.JSString_methods.get$hashCode(_this.id) + t2.get$hashCode(t2) + A.Primitives_objectHashCode(_this.role) + B.JSString_methods.get$hashCode(_this.asset) + B.JSBool_methods.get$hashCode(_this.fragment) + B.JSBool_methods.get$hashCode(_this.file);
    },
    toString$0(_) {
      var _this = this;
      return "TrackedFormat[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", classification=" + _this.classification.toString$0(0) + ", role=" + _this.role.toString$0(0) + ", asset=" + _this.asset + ", fragment=" + _this.fragment + ", file=" + _this.file + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "classification", _this.classification.toJson$0());
      _json.$indexSet(0, "role", _this.role.value);
      _json.$indexSet(0, "asset", _this.asset);
      _json.$indexSet(0, "fragment", _this.fragment);
      _json.$indexSet(0, "file", _this.file);
      return _json;
    }
  };
  A.TrackedFormatEvent.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedFormatEvent && J.$eq$(other.schema, _this.schema) && other.format.$eq(0, _this.format) && other.identifierDescriptionPair.$eq(0, _this.identifierDescriptionPair) && J.$eq$(other.metadata, _this.metadata);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.format;
      t2 = t2.get$hashCode(t2);
      t3 = _this.identifierDescriptionPair;
      t3 = t3.get$hashCode(t3);
      t4 = _this.metadata;
      if (t4 == null)
        t4 = 0;
      else {
        t4 = t4.reclassification;
        t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      }
      return t1 + t2 + t3 + t4;
    },
    toString$0(_) {
      var _this = this;
      return "TrackedFormatEvent[schema=" + A.S(_this.schema) + ", format=" + _this.format.toString$0(0) + ", identifierDescriptionPair=" + _this.identifierDescriptionPair.toString$0(0) + ", metadata=" + A.S(_this.metadata) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, " format", _this.format.toJson$0());
      _json.$indexSet(0, "identifier_description_pair", _this.identifierDescriptionPair.toJson$0());
      t1 = _this.metadata;
      if (t1 != null)
        _json.$indexSet(0, "metadata", t1.toJson$0());
      return _json;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairs.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedFormatEventIdentifierDescriptionPairs && J.$eq$(other.schema, _this.schema) && other.formatCreated == _this.formatCreated && other.formatCopied == _this.formatCopied && other.formatPartiallyCopied == _this.formatPartiallyCopied && other.formatDownloaded == _this.formatDownloaded && other.formatDeleted == _this.formatDeleted && other.formatGenericClassificationUpdated == _this.formatGenericClassificationUpdated && other.formatSpecificClassificationUpdated == _this.formatSpecificClassificationUpdated && other.formatUpdated == _this.formatUpdated && other.formatInserted == _this.formatInserted && other.formatValueEdited == _this.formatValueEdited;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.formatCreated;
      t2 = t2 == null ? 0 : A.Primitives_objectHashCode(t2);
      t3 = _this.formatCopied;
      t3 = t3 == null ? 0 : A.Primitives_objectHashCode(t3);
      t4 = _this.formatPartiallyCopied;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4);
      t5 = _this.formatDownloaded;
      t5 = t5 == null ? 0 : A.Primitives_objectHashCode(t5);
      t6 = _this.formatDeleted;
      t6 = t6 == null ? 0 : A.Primitives_objectHashCode(t6);
      t7 = _this.formatGenericClassificationUpdated;
      t7 = t7 == null ? 0 : A.Primitives_objectHashCode(t7);
      t8 = _this.formatSpecificClassificationUpdated;
      t8 = t8 == null ? 0 : A.Primitives_objectHashCode(t8);
      t9 = _this.formatUpdated;
      t9 = t9 == null ? 0 : A.Primitives_objectHashCode(t9);
      t10 = _this.formatInserted;
      t10 = t10 == null ? 0 : A.Primitives_objectHashCode(t10);
      t11 = _this.formatValueEdited;
      t11 = t11 == null ? 0 : A.Primitives_objectHashCode(t11);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11;
    },
    toString$0(_) {
      var _this = this;
      return "TrackedFormatEventIdentifierDescriptionPairs[schema=" + A.S(_this.schema) + ", formatCreated=" + A.S(_this.formatCreated) + ", formatCopied=" + A.S(_this.formatCopied) + ", formatPartiallyCopied=" + A.S(_this.formatPartiallyCopied) + ", formatDownloaded=" + A.S(_this.formatDownloaded) + ", formatDeleted=" + A.S(_this.formatDeleted) + ", formatGenericClassificationUpdated=" + A.S(_this.formatGenericClassificationUpdated) + ", formatSpecificClassificationUpdated=" + A.S(_this.formatSpecificClassificationUpdated) + ", formatUpdated=" + A.S(_this.formatUpdated) + ", formatInserted=" + A.S(_this.formatInserted) + ", formatValueEdited=" + A.S(_this.formatValueEdited) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      if (_this.formatCreated != null)
        _json.$indexSet(0, "format_created", "a_format_was_created");
      if (_this.formatCopied != null)
        _json.$indexSet(0, "format_copied", "if_a_format_was_entirely_copied");
      if (_this.formatPartiallyCopied != null)
        _json.$indexSet(0, "format_partially_copied", "if_a_format_was_partially_copied");
      if (_this.formatDownloaded != null)
        _json.$indexSet(0, "format_downloaded", "if_a_format_was_downloaded");
      if (_this.formatDeleted != null)
        _json.$indexSet(0, "format_deleted", "if_a_format_was_deleted");
      if (_this.formatGenericClassificationUpdated != null)
        _json.$indexSet(0, "format_generic_classification_updated", string$.if_a_g);
      if (_this.formatSpecificClassificationUpdated != null)
        _json.$indexSet(0, "format_specific_classification_updated", string$.if_a_s);
      if (_this.formatUpdated != null)
        _json.$indexSet(0, "format_updated", "a_format_was_updated");
      if (_this.formatInserted != null)
        _json.$indexSet(0, "format_inserted", "a_format_was_inserted");
      if (_this.formatValueEdited != null)
        _json.$indexSet(0, "format_value_edited", "a_format_value_was_edited");
      return _json;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnum.prototype = {
    toString$0(_) {
      return "a_format_was_created";
    },
    toJson$0() {
      return "a_format_was_created";
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_format_was_created":
            return B.C_TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnum;
        }
      return null;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnum.prototype = {
    toString$0(_) {
      return "if_a_format_was_entirely_copied";
    },
    toJson$0() {
      return "if_a_format_was_entirely_copied";
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "if_a_format_was_entirely_copied":
            return B.C_TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnum;
        }
      return null;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnum.prototype = {
    toString$0(_) {
      return "if_a_format_was_partially_copied";
    },
    toJson$0() {
      return "if_a_format_was_partially_copied";
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "if_a_format_was_partially_copied":
            return B.C_TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnum;
        }
      return null;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnum.prototype = {
    toString$0(_) {
      return "if_a_format_was_downloaded";
    },
    toJson$0() {
      return "if_a_format_was_downloaded";
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "if_a_format_was_downloaded":
            return B.C_TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnum;
        }
      return null;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnum.prototype = {
    toString$0(_) {
      return "if_a_format_was_deleted";
    },
    toJson$0() {
      return "if_a_format_was_deleted";
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "if_a_format_was_deleted":
            return B.C_TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnum;
        }
      return null;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnum.prototype = {
    toString$0(_) {
      return string$.if_a_g;
    },
    toJson$0() {
      return string$.if_a_g;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.if_a_g:
            return B.C_TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnum;
        }
      return null;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnum.prototype = {
    toString$0(_) {
      return string$.if_a_s;
    },
    toJson$0() {
      return string$.if_a_s;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.if_a_s:
            return B.C_TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnum;
        }
      return null;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnum.prototype = {
    toString$0(_) {
      return "a_format_was_updated";
    },
    toJson$0() {
      return "a_format_was_updated";
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_format_was_updated":
            return B.C_TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnum;
        }
      return null;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnum.prototype = {
    toString$0(_) {
      return "a_format_was_inserted";
    },
    toJson$0() {
      return "a_format_was_inserted";
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_format_was_inserted":
            return B.C_TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnum;
        }
      return null;
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnum.prototype = {
    toString$0(_) {
      return "a_format_value_was_edited";
    },
    toJson$0() {
      return "a_format_value_was_edited";
    }
  };
  A.TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_format_value_was_edited":
            return B.C_TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnum;
        }
      return null;
    }
  };
  A.TrackedFormatEventMetadata.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.TrackedFormatEventMetadata && J.$eq$(other.reclassification, this.reclassification);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.reclassification;
      return t1 == null ? 0 : t1.get$hashCode(t1);
    },
    toString$0(_) {
      return "TrackedFormatEventMetadata[reclassification=" + A.S(this.reclassification) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.reclassification;
      if (t1 != null)
        _json.$indexSet(0, "reclassification", t1.toJson$0());
      return _json;
    }
  };
  A.TrackedInteractionEvent.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedInteractionEvent && J.$eq$(other.schema, _this.schema) && other.description === _this.description && other.element == _this.element;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3,
        t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(this.description);
      t3 = this.element;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      return t1 + t2 + t3;
    },
    toString$0(_) {
      return "TrackedInteractionEvent[schema=" + A.S(this.schema) + ", description=" + this.description + ", element=" + A.S(this.element) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "description", this.description);
      t1 = this.element;
      if (t1 != null)
        _json.$indexSet(0, "element", t1);
      return _json;
    }
  };
  A.TrackedKeyboardEvent.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedKeyboardEvent && J.$eq$(other.schema, _this.schema) && other.description === _this.description && other.shortcut === _this.shortcut;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + B.JSString_methods.get$hashCode(this.description) + J.get$hashCode$(this.shortcut);
    },
    toString$0(_) {
      return "TrackedKeyboardEvent[schema=" + A.S(this.schema) + ", description=" + this.description + ", shortcut=" + A.S(this.shortcut) + "]";
    },
    toJson$0() {
      var _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "description", this.description);
      _json.$indexSet(0, "shortcut", this.shortcut);
      return _json;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairs.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedSessionEventIdentifierDescriptionPairs && J.$eq$(other.schema, _this.schema) && other.sessionInitialized == _this.sessionInitialized && other.sessionLocalConnectionSucceeded == _this.sessionLocalConnectionSucceeded && other.sessionLocalConnectionFailed == _this.sessionLocalConnectionFailed && other.sessionInactive == _this.sessionInactive && other.sessionActive == _this.sessionActive && other.sessionTerminated == _this.sessionTerminated && other.sessionAuthenticatedWithSignIn == _this.sessionAuthenticatedWithSignIn && other.sessionUnauthenticatedWithSignOut == _this.sessionUnauthenticatedWithSignOut && other.sessionUnauthenticatedWithDismiss == _this.sessionUnauthenticatedWithDismiss && other.sessionUnauthenticatedWithRemind == _this.sessionUnauthenticatedWithRemind && other.sessionOnboardingInitialized == _this.sessionOnboardingInitialized && other.sessionOnboardingCompleted == _this.sessionOnboardingCompleted;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.sessionInitialized;
      t2 = t2 == null ? 0 : A.Primitives_objectHashCode(t2);
      t3 = _this.sessionLocalConnectionSucceeded;
      t3 = t3 == null ? 0 : A.Primitives_objectHashCode(t3);
      t4 = _this.sessionLocalConnectionFailed;
      t4 = t4 == null ? 0 : A.Primitives_objectHashCode(t4);
      t5 = _this.sessionInactive;
      t5 = t5 == null ? 0 : A.Primitives_objectHashCode(t5);
      t6 = _this.sessionActive;
      t6 = t6 == null ? 0 : A.Primitives_objectHashCode(t6);
      t7 = _this.sessionTerminated;
      t7 = t7 == null ? 0 : A.Primitives_objectHashCode(t7);
      t8 = _this.sessionAuthenticatedWithSignIn;
      t8 = t8 == null ? 0 : A.Primitives_objectHashCode(t8);
      t9 = _this.sessionUnauthenticatedWithSignOut;
      t9 = t9 == null ? 0 : A.Primitives_objectHashCode(t9);
      t10 = _this.sessionUnauthenticatedWithDismiss;
      t10 = t10 == null ? 0 : A.Primitives_objectHashCode(t10);
      t11 = _this.sessionUnauthenticatedWithRemind;
      t11 = t11 == null ? 0 : A.Primitives_objectHashCode(t11);
      t12 = _this.sessionOnboardingInitialized;
      t12 = t12 == null ? 0 : A.Primitives_objectHashCode(t12);
      t13 = _this.sessionOnboardingCompleted;
      t13 = t13 == null ? 0 : A.Primitives_objectHashCode(t13);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12 + t13;
    },
    toString$0(_) {
      var _this = this;
      return "TrackedSessionEventIdentifierDescriptionPairs[schema=" + A.S(_this.schema) + ", sessionInitialized=" + A.S(_this.sessionInitialized) + ", sessionLocalConnectionSucceeded=" + A.S(_this.sessionLocalConnectionSucceeded) + ", sessionLocalConnectionFailed=" + A.S(_this.sessionLocalConnectionFailed) + ", sessionInactive=" + A.S(_this.sessionInactive) + ", sessionActive=" + A.S(_this.sessionActive) + ", sessionTerminated=" + A.S(_this.sessionTerminated) + ", sessionAuthenticatedWithSignIn=" + A.S(_this.sessionAuthenticatedWithSignIn) + ", sessionUnauthenticatedWithSignOut=" + A.S(_this.sessionUnauthenticatedWithSignOut) + ", sessionUnauthenticatedWithDismiss=" + A.S(_this.sessionUnauthenticatedWithDismiss) + ", sessionUnauthenticatedWithRemind=" + A.S(_this.sessionUnauthenticatedWithRemind) + ", sessionOnboardingInitialized=" + A.S(_this.sessionOnboardingInitialized) + ", sessionOnboardingCompleted=" + A.S(_this.sessionOnboardingCompleted) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      if (_this.sessionInitialized != null)
        _json.$indexSet(0, "session_initialized", string$.a_sesshi);
      if (_this.sessionLocalConnectionSucceeded != null)
        _json.$indexSet(0, "session_local_connection_succeeded", string$.one_ors);
      if (_this.sessionLocalConnectionFailed != null)
        _json.$indexSet(0, "session_local_connection_failed", string$.one_orf);
      if (_this.sessionInactive != null)
        _json.$indexSet(0, "session_inactive", string$.a_sessii);
      if (_this.sessionActive != null)
        _json.$indexSet(0, "session_active", string$.a_sessia);
      if (_this.sessionTerminated != null)
        _json.$indexSet(0, "session_terminated", string$.a_sesshe);
      if (_this.sessionAuthenticatedWithSignIn != null)
        _json.$indexSet(0, "session_authenticated_with_sign_in", string$.a_userh);
      if (_this.sessionUnauthenticatedWithSignOut != null)
        _json.$indexSet(0, "session_unauthenticated_with_sign_out", "a_user_has_signed_out_of_this_session");
      if (_this.sessionUnauthenticatedWithDismiss != null)
        _json.$indexSet(0, "session_unauthenticated_with_dismiss", string$.a_userdd);
      if (_this.sessionUnauthenticatedWithRemind != null)
        _json.$indexSet(0, "session_unauthenticated_with_remind", string$.a_userdr);
      if (_this.sessionOnboardingInitialized != null)
        _json.$indexSet(0, "session_onboarding_initialized", string$.onboari);
      if (_this.sessionOnboardingCompleted != null)
        _json.$indexSet(0, "session_onboarding_completed", string$.onboarc);
      return _json;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnum.prototype = {
    toString$0(_) {
      return string$.a_sesshi;
    },
    toJson$0() {
      return string$.a_sesshi;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_sesshi:
            return B.C_TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnum;
        }
      return null;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnum.prototype = {
    toString$0(_) {
      return string$.one_ors;
    },
    toJson$0() {
      return string$.one_ors;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.one_ors:
            return B.C_TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnum;
        }
      return null;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnum.prototype = {
    toString$0(_) {
      return string$.one_orf;
    },
    toJson$0() {
      return string$.one_orf;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.one_orf:
            return B.C_TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnum;
        }
      return null;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnum.prototype = {
    toString$0(_) {
      return string$.a_sessii;
    },
    toJson$0() {
      return string$.a_sessii;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_sessii:
            return B.C_TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnum;
        }
      return null;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnum.prototype = {
    toString$0(_) {
      return string$.a_sessia;
    },
    toJson$0() {
      return string$.a_sessia;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_sessia:
            return B.C_TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnum;
        }
      return null;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnum.prototype = {
    toString$0(_) {
      return string$.a_sesshe;
    },
    toJson$0() {
      return string$.a_sesshe;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_sesshe:
            return B.C_TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnum;
        }
      return null;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnum.prototype = {
    toString$0(_) {
      return string$.a_userh;
    },
    toJson$0() {
      return string$.a_userh;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_userh:
            return B.C_TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnum;
        }
      return null;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnum.prototype = {
    toString$0(_) {
      return "a_user_has_signed_out_of_this_session";
    },
    toJson$0() {
      return "a_user_has_signed_out_of_this_session";
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "a_user_has_signed_out_of_this_session":
            return B.C_TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnum;
        }
      return null;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnum.prototype = {
    toString$0(_) {
      return string$.a_userdd;
    },
    toJson$0() {
      return string$.a_userdd;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_userdd:
            return B.C_TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnum;
        }
      return null;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnum.prototype = {
    toString$0(_) {
      return string$.a_userdr;
    },
    toJson$0() {
      return string$.a_userdr;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.a_userdr:
            return B.C_TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnum;
        }
      return null;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnum.prototype = {
    toString$0(_) {
      return string$.onboari;
    },
    toJson$0() {
      return string$.onboari;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.onboari:
            return B.C_TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnum;
        }
      return null;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnum.prototype = {
    toString$0(_) {
      return string$.onboarc;
    },
    toJson$0() {
      return string$.onboarc;
    }
  };
  A.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case string$.onboarc:
            return B.C_TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnum;
        }
      return null;
    }
  };
  A.TrackedUserProfile.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TrackedUserProfile && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.username === _this.username && other.email == _this.email && other.granularity === _this.granularity;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = B.JSString_methods.get$hashCode(_this.username);
      t4 = _this.email;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      return t1 + t2 + t3 + t4 + A.Primitives_objectHashCode(_this.granularity);
    },
    toString$0(_) {
      var _this = this;
      return "TrackedUserProfile[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", username=" + _this.username + ", email=" + A.S(_this.email) + ", granularity=" + _this.granularity.toString$0(0) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "username", _this.username);
      t1 = _this.email;
      if (t1 != null)
        _json.$indexSet(0, "email", t1);
      _json.$indexSet(0, "granularity", _this.granularity.value);
      return _json;
    }
  };
  A.TrackedUserProfileGranularityEnum.prototype = {
    toString$0(_) {
      return this.value;
    },
    toJson$0() {
      return this.value;
    }
  };
  A.TrackedUserProfileGranularityEnumTypeTransformer.prototype = {
    decode$1(_, data) {
      if (data != null)
        switch (J.toString$0$(data)) {
          case "DEVICE":
            return B.TrackedUserProfileGranularityEnum_DEVICE;
          case "ACCOUNT":
            return B.TrackedUserProfileGranularityEnum_ACCOUNT;
          case "ANONYMOUS":
            return B.TrackedUserProfileGranularityEnum_ANONYMOUS;
        }
      return null;
    }
  };
  A.TransferableBytes.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TransferableBytes && J.$eq$(other.schema, _this.schema) && other.raw === _this.raw && other.base64 === _this.base64 && other.base64Url === _this.base64Url && other.dataUrl === _this.dataUrl;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + J.get$hashCode$(_this.raw) + J.get$hashCode$(_this.base64) + J.get$hashCode$(_this.base64Url) + J.get$hashCode$(_this.dataUrl);
    },
    toString$0(_) {
      var _this = this;
      return "TransferableBytes[schema=" + A.S(_this.schema) + ", raw=" + A.S(_this.raw) + ", base64=" + A.S(_this.base64) + ", base64Url=" + A.S(_this.base64Url) + ", dataUrl=" + A.S(_this.dataUrl) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "raw", _this.raw);
      _json.$indexSet(0, "base64", _this.base64);
      _json.$indexSet(0, "base64_url", _this.base64Url);
      _json.$indexSet(0, "data_url", _this.dataUrl);
      return _json;
    }
  };
  A.TransferableString.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.TransferableString && J.$eq$(other.schema, _this.schema) && other.raw == _this.raw && other.base64 == _this.base64 && other.base64Url == _this.base64Url && other.dataUrl == _this.dataUrl;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = _this.raw;
      t2 = t2 == null ? 0 : B.JSString_methods.get$hashCode(t2);
      t3 = _this.base64;
      t3 = t3 == null ? 0 : B.JSString_methods.get$hashCode(t3);
      t4 = _this.base64Url;
      t4 = t4 == null ? 0 : B.JSString_methods.get$hashCode(t4);
      t5 = _this.dataUrl;
      t5 = t5 == null ? 0 : B.JSString_methods.get$hashCode(t5);
      return t1 + t2 + t3 + t4 + t5;
    },
    toString$0(_) {
      var _this = this;
      return "TransferableString[schema=" + A.S(_this.schema) + ", raw=" + A.S(_this.raw) + ", base64=" + A.S(_this.base64) + ", base64Url=" + A.S(_this.base64Url) + ", dataUrl=" + A.S(_this.dataUrl) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = _this.raw;
      if (t1 != null)
        _json.$indexSet(0, "raw", t1);
      t1 = _this.base64;
      if (t1 != null)
        _json.$indexSet(0, "base64", t1);
      t1 = _this.base64Url;
      if (t1 != null)
        _json.$indexSet(0, "base64_url", t1);
      t1 = _this.dataUrl;
      if (t1 != null)
        _json.$indexSet(0, "data_url", t1);
      return _json;
    }
  };
  A.UserProfile.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.UserProfile && J.$eq$(other.schema, _this.schema) && other.picture === _this.picture && other.email === _this.email && J.$eq$(other.created, _this.created) && J.$eq$(other.updated, _this.updated) && other.username == _this.username && other.id === _this.id && other.name == _this.name && other.aesthetics.$eq(0, _this.aesthetics) && other.vanityname == _this.vanityname && J.$eq$(other.allocation, _this.allocation) && J.$eq$(other.providers, _this.providers);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.picture);
      t3 = B.JSString_methods.get$hashCode(_this.email);
      t4 = _this.created;
      t4 = t4 == null ? 0 : t4.get$hashCode(t4);
      t5 = _this.updated;
      t5 = t5 == null ? 0 : t5.get$hashCode(t5);
      t6 = _this.username;
      t6 = t6 == null ? 0 : B.JSString_methods.get$hashCode(t6);
      t7 = B.JSString_methods.get$hashCode(_this.id);
      t8 = _this.name;
      t8 = t8 == null ? 0 : B.JSString_methods.get$hashCode(t8);
      t9 = _this.aesthetics;
      t9 = t9.get$hashCode(t9);
      t10 = _this.vanityname;
      t10 = t10 == null ? 0 : B.JSString_methods.get$hashCode(t10);
      t11 = _this.allocation;
      t11 = t11 == null ? 0 : t11.get$hashCode(t11);
      t12 = _this.providers;
      t12 = t12 == null ? 0 : t12.get$hashCode(t12);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11 + t12;
    },
    toString$0(_) {
      var _this = this;
      return "UserProfile[schema=" + A.S(_this.schema) + ", picture=" + _this.picture + ", email=" + _this.email + ", created=" + A.S(_this.created) + ", updated=" + A.S(_this.updated) + ", username=" + A.S(_this.username) + ", id=" + _this.id + ", name=" + A.S(_this.name) + ", aesthetics=" + _this.aesthetics.toString$0(0) + ", vanityname=" + A.S(_this.vanityname) + ", allocation=" + A.S(_this.allocation) + ", providers=" + A.S(_this.providers) + "]";
    },
    toJson$0() {
      var _this = this, _null = null,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "picture", _this.picture);
      _json.$indexSet(0, "email", _this.email);
      t1 = _this.created;
      if (t1 != null)
        _json.$indexSet(0, "created", t1.toJson$0());
      t1 = _this.updated;
      if (t1 != null)
        _json.$indexSet(0, "updated", t1.toJson$0());
      t1 = _this.username;
      if (t1 != null)
        _json.$indexSet(0, "username", t1);
      _json.$indexSet(0, "id", _this.id);
      t1 = _this.name;
      if (t1 != null)
        _json.$indexSet(0, "name", t1);
      _json.$indexSet(0, "aesthetics", _this.aesthetics.toJson$0());
      t1 = _this.vanityname;
      if (t1 != null)
        _json.$indexSet(0, "vanityname", t1);
      t1 = _this.allocation;
      if (t1 != null)
        _json.$indexSet(0, "allocation", t1.toJson$0());
      t1 = _this.providers;
      if (t1 != null)
        _json.$indexSet(0, "providers", t1.toJson$0());
      return _json;
    }
  };
  A.Users.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Users && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Users[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Users_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Users_toJson_closure.prototype = {
    call$1(element) {
      return type$.UserProfile._as(element).toJson$0();
    },
    $signature: 109
  };
  A.Website.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Website && J.$eq$(other.schema, _this.schema) && other.id === _this.id && other.asset.$eq(0, _this.asset) && other.url === _this.url && other.name === _this.name && J.$eq$(other.format, _this.format) && other.created.$eq(0, _this.created) && other.updated.$eq(0, _this.updated) && J.$eq$(other.deleted, _this.deleted) && other.mechanism === _this.mechanism && other.interactions == _this.interactions;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, _this = this,
        t1 = _this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      t2 = B.JSString_methods.get$hashCode(_this.id);
      t3 = _this.asset;
      t3 = t3.get$hashCode(t3);
      t4 = B.JSString_methods.get$hashCode(_this.url);
      t5 = B.JSString_methods.get$hashCode(_this.name);
      t6 = _this.format;
      t6 = t6 == null ? 0 : t6.get$hashCode(t6);
      t7 = _this.created;
      t7 = t7.get$hashCode(t7);
      t8 = _this.updated;
      t8 = t8.get$hashCode(t8);
      t9 = _this.deleted;
      t9 = t9 == null ? 0 : t9.get$hashCode(t9);
      t10 = A.Primitives_objectHashCode(_this.mechanism);
      t11 = _this.interactions;
      t11 = t11 == null ? 0 : B.JSInt_methods.get$hashCode(t11);
      return t1 + t2 + t3 + t4 + t5 + t6 + t7 + t8 + t9 + t10 + t11;
    },
    toString$0(_) {
      var _this = this;
      return "Website[schema=" + A.S(_this.schema) + ", id=" + _this.id + ", asset=" + _this.asset.toString$0(0) + ", url=" + _this.url + ", name=" + _this.name + ", format=" + A.S(_this.format) + ", created=" + _this.created.toString$0(0) + ", updated=" + _this.updated.toString$0(0) + ", deleted=" + A.S(_this.deleted) + ", mechanism=" + _this.mechanism.toString$0(0) + ", interactions=" + A.S(_this.interactions) + "]";
    },
    toJson$0() {
      var _this = this,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      _json.$indexSet(0, "id", _this.id);
      _json.$indexSet(0, "asset", _this.asset.toJson$0());
      _json.$indexSet(0, "url", _this.url);
      _json.$indexSet(0, "name", _this.name);
      t1 = _this.format;
      if (t1 != null)
        _json.$indexSet(0, "format", t1.toJson$0());
      _json.$indexSet(0, "created", _this.created.toJson$0());
      _json.$indexSet(0, "updated", _this.updated.toJson$0());
      t1 = _this.deleted;
      if (t1 != null)
        _json.$indexSet(0, "deleted", t1.toJson$0());
      _json.$indexSet(0, "mechanism", _this.mechanism.value);
      t1 = _this.interactions;
      if (t1 != null)
        _json.$indexSet(0, "interactions", t1);
      return _json;
    }
  };
  A.Websites.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A.Websites && J.$eq$(other.schema, this.schema) && other.iterable === this.iterable;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.schema;
      t1 = t1 == null ? 0 : B.JSInt_methods.get$hashCode(t1.migration) + A.Primitives_objectHashCode(t1.semantic);
      return t1 + A.Primitives_objectHashCode(this.iterable);
    },
    toString$0(_) {
      return "Websites[schema=" + A.S(this.schema) + ", iterable=" + A.S(this.iterable) + "]";
    },
    toJson$0() {
      var t2, t3,
        _json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = this.schema;
      if (t1 != null)
        _json.$indexSet(0, "schema", t1.toJson$0());
      t1 = this.iterable;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Object>");
      _json.$indexSet(0, "iterable", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Object(1)")._as(new A.Websites_toJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      return _json;
    }
  };
  A.Websites_toJson_closure.prototype = {
    call$1(element) {
      return type$.Website._as(element).toJson$0();
    },
    $signature: 110
  };
  A.ClientReport.prototype = {
    toJson$0() {
      var t1, t2, t3, eventsJson,
        json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      json.$indexSet(0, "timestamp", A.formatDateAsIso8601WithMillisPrecision(this.timestamp));
      t1 = this.discardedEvents;
      t2 = A._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Map<String,@>>");
      t3 = new A.MappedListIterable(t1, t2._eval$1("Map<String,@>(1)")._as(new A.ClientReport_toJson_closure()), t3).super$Iterable$where(0, t3._eval$1("bool(ListIterable.E)")._as(new A.ClientReport_toJson_closure0()));
      eventsJson = A.List_List$of(t3, false, t3.$ti._eval$1("Iterable.E"));
      if (eventsJson.length !== 0)
        json.$indexSet(0, "discarded_events", eventsJson);
      return json;
    }
  };
  A.ClientReport_toJson_closure.prototype = {
    call$1(e) {
      return type$.DiscardedEvent._as(e).toJson$0();
    },
    $signature: 111
  };
  A.ClientReport_toJson_closure0.prototype = {
    call$1(e) {
      type$.Map_String_dynamic._as(e);
      return e.get$isNotEmpty(e);
    },
    $signature: 19
  };
  A.ClientReportRecorder.prototype = {
    recordLostEvent$2(reason, category) {
      var key = new A._QuantityKey(reason, category),
        t1 = this._quantities,
        current = t1.$index(0, key);
      t1.$indexSet(0, key, (current == null ? 0 : current) + 1);
    },
    flush$0() {
      var t2, events,
        t1 = this._quantities;
      if (t1.__js_helper$_length === 0)
        return null;
      t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>");
      t2 = A.MappedIterable_MappedIterable(new A.LinkedHashMapKeyIterable(t1, t2), t2._eval$1("DiscardedEvent(Iterable.E)")._as(new A.ClientReportRecorder_flush_closure(this)), t2._eval$1("Iterable.E"), type$.DiscardedEvent);
      events = A.List_List$of(t2, false, A._instanceType(t2)._eval$1("Iterable.E"));
      t1.clear$0(0);
      return new A.ClientReport(this._client_report_recorder$_clock.call$0(), events);
    }
  };
  A.ClientReportRecorder_flush_closure.prototype = {
    call$1(key) {
      var quantity;
      type$._QuantityKey._as(key);
      quantity = this.$this._quantities.$index(0, key);
      if (quantity == null)
        quantity = 0;
      return new A.DiscardedEvent(key.reason, key.category, quantity);
    },
    $signature: 113
  };
  A._QuantityKey.prototype = {
    get$hashCode(_) {
      var t1 = A.Primitives_objectHashCode(this.reason),
        t2 = A.Primitives_objectHashCode(this.category),
        hash = A._combine(A._combine($.$get$_hashSeed0(), t1), t2);
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._QuantityKey && other.reason === this.reason && other.category === this.category;
    }
  };
  A.DiscardReason.prototype = {
    toString$0(_) {
      return "DiscardReason." + this._name;
    }
  };
  A.DiscardedEvent.prototype = {
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["reason", A.OutcomeExtension_toStringValue(this.reason), "category", A.DataCategoryExtension_toStringValue(this.category), "quantity", this.quantity], type$.String, type$.dynamic);
    }
  };
  A.NoOpClientReportRecorder.prototype = {
    flush$0() {
      return null;
    },
    recordLostEvent$2(reason, category) {
    },
    $isClientReportRecorder: 1
  };
  A.WebEnvironmentVariables.prototype = {};
  A.EnvironmentVariables.prototype = {
    environmentForMode$1(checker) {
      return "debug";
    }
  };
  A.EventProcessor.prototype = {};
  A.DeduplicationEventProcessor.prototype = {
    apply$2$hint($event, hint) {
      return this._deduplicate$1($event);
    },
    _deduplicate$1($event) {
      var exception = $event.get$throwable(),
        exceptionHashCode = J.get$hashCode$(exception),
        t1 = this._exceptionToDeduplicate;
      if (t1.contains$1(0, exceptionHashCode)) {
        this._deduplication_event_processor$_options.logger$2(B.SentryLevel_info, "Duplicated exception detected. Event " + $event.eventId.toString$0(0) + " will be discarded.");
        return null;
      }
      t1._add$1(0, t1.$ti._precomputed1._as(exceptionHashCode));
      if (t1.get$length(t1) > 5)
        t1.removeFirst$0();
      return $event;
    }
  };
  A.WebEnricherEventProcessor.prototype = {
    apply$2$hint($event, hint) {
      var t7, size, memoryByteSize, t8, t9, t10, t11, contexts, _this = this, _null = null,
        t1 = $event.contexts,
        t2 = t1._collection$_map,
        t3 = type$.nullable_SentryDevice._as(t2.$index(0, "device")),
        t4 = t3 == null,
        t5 = t4 ? A.SentryDevice$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null) : t3,
        t6 = t4 ? _null : t3.online;
      if (t6 == null)
        t6 = _this._window.navigator.onLine;
      t7 = t4 ? _null : t3.memorySize;
      if (t7 == null) {
        size = _this._window.navigator.deviceMemory;
        if (size == null)
          size = _null;
        memoryByteSize = size != null ? size * 1024 * 1024 * 1024 : _null;
        t7 = memoryByteSize == null ? _null : B.JSNumber_methods.toInt$0(memoryByteSize);
      }
      t8 = t4 ? _null : t3.orientation;
      if (t8 == null)
        t8 = _this._getScreenOrientation$0();
      t9 = t4 ? _null : t3.screenHeightPixels;
      if (t9 == null) {
        t9 = _this._window.screen;
        t9 = t9 == null ? _null : B.JSInt_methods.toInt$0(B.Screen_methods.get$available(t9).height);
      }
      t10 = t4 ? _null : t3.screenWidthPixels;
      if (t10 == null) {
        t10 = _this._window.screen;
        t10 = t10 == null ? _null : B.JSInt_methods.toInt$0(B.Screen_methods.get$available(t10).width);
      }
      t11 = t4 ? _null : t3.screenDensity;
      if (t11 == null)
        t11 = _this._window.devicePixelRatio;
      t3 = t4 ? _null : t3.timezone;
      if (t3 == null)
        t3 = new A.DateTime(Date.now(), false).get$timeZoneName();
      t4 = t8 == null ? t5.orientation : t8;
      t8 = t9 == null ? t5.screenHeightPixels : t9;
      t9 = t10 == null ? t5.screenWidthPixels : t10;
      if (t6 == null)
        t6 = t5.online;
      if (t7 == null)
        t7 = t5.memorySize;
      t3 = A.SentryDevice$(t5.arch, t5.batteryLevel, t5.batteryStatus, t5.bootTime, t5.brand, t5.charging, t5.cpuDescription, t5.deviceType, t5.deviceUniqueIdentifier, t5.externalFreeStorage, t5.externalStorageSize, t5.family, t5.freeMemory, t5.freeStorage, t5.language, t5.lowMemory, t5.manufacturer, t7, t5.model, t5.modelId, t5.name, t6, t4, t5.processorCount, t5.processorFrequency, t11, t5.screenDpi, t8, t5.screenResolution, t9, t5.simulator, t5.storageSize, t5.supportsAccelerometer, t5.supportsAudio, t5.supportsGyroscope, t5.supportsLocationService, t5.supportsVibration, t5.theme, t3, t5.usableMemory);
      t2 = type$.nullable_SentryCulture._as(t2.$index(0, "culture"));
      t4 = t2 == null;
      t5 = t4 ? new A.SentryCulture(_null, _null, _null, _null, _null) : t2;
      t2 = t4 ? _null : t2.timezone;
      if (t2 == null)
        t2 = new A.DateTime(Date.now(), false).get$timeZoneName();
      contexts = t1.copyWith$2$culture$device(new A.SentryCulture(t5.calendar, t5.displayName, t5.locale, t5.is24HourFormat, t2), t3);
      t1 = "debug";
      t1 = A.LinkedHashMap_LinkedHashMap$_literal(["compile_mode", t1], type$.String, type$.dynamic);
      t2 = A._instanceType(contexts);
      contexts._collection$_map.$indexSet(0, t2._eval$1("MapView.K")._as("dart_context"), t2._eval$1("MapView.V")._as(t1));
      t1 = _this._getRequest$1($event.request);
      t2 = $event.transaction;
      return $event.copyWith$3$contexts$request$transaction(contexts, t1, t2 == null ? type$.Location._as(_this._window.location).pathname : t2);
    },
    _getRequest$1(request) {
      var t3, _null = null,
        t1 = request == null,
        requestHeader = t1 ? _null : request.get$headers(request),
        t2 = type$.String,
        header = requestHeader == null ? A.LinkedHashMap_LinkedHashMap$_empty(t2, t2) : A.LinkedHashMap_LinkedHashMap$from(requestHeader, t2, t2);
      header.putIfAbsent$2("User-Agent", new A.WebEnricherEventProcessor__getRequest_closure(this));
      t2 = t1 ? A.SentryRequest$(_null, _null, _null, _null, _null, _null, _null, _null, _null) : request;
      t1 = t1 ? _null : request.url;
      if (t1 == null)
        t1 = String(type$.Location._as(this._window.location));
      t3 = type$.nullable_Map_String_String;
      t3._as(null);
      t3._as(header);
      return A.SentryRequest$(t2.cookies, t2._sentry_request$_data, t2._env, _null, header, t2.method, t2._other, t2.queryString, t1);
    },
    _getScreenOrientation$0() {
      var t2, t3, _null = null,
        t1 = this._window.screen,
        screenOrientation = t1 == null ? _null : t1.orientation;
      if (screenOrientation != null) {
        t1 = screenOrientation.type;
        t2 = t1 == null;
        t3 = t2 ? _null : B.JSString_methods.startsWith$1(t1, "portrait");
        if (t3 === true)
          return B.SentryOrientation_0;
        t1 = t2 ? _null : B.JSString_methods.startsWith$1(t1, "landscape");
        if (t1 === true)
          return B.SentryOrientation_1;
      }
      return _null;
    },
    $isEventProcessor: 1
  };
  A.WebEnricherEventProcessor__getRequest_closure.prototype = {
    call$0() {
      return this.$this._window.navigator.userAgent;
    },
    $signature: 38
  };
  A.WebExcptionEventProcessor.prototype = {
    apply$2$hint($event, hint) {
      return $event;
    },
    $isEventProcessor: 1
  };
  A.Hub.prototype = {
    get$isEnabled() {
      return this._isEnabled;
    },
    captureException$4$hint$stackTrace$withScope(throwable, hint, stackTrace, withScope) {
      return this.captureException$body$Hub(throwable, hint, stackTrace, type$.nullable_void_Function_Scope._as(withScope));
    },
    captureException$body$Hub(throwable, hint, stackTrace, withScope) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.SentryId),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, item, scope, $event, exception, stackTrace0, t1, exception0, sentryId, $async$exception0;
      var $async$captureException$4$hint$stackTrace$withScope = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              sentryId = new A.SentryId("00000000000000000000000000000000");
              $async$goto = !$async$self._isEnabled ? 3 : 5;
              break;
            case 3:
              // then
              $async$self._hub$_options.logger$2(B.SentryLevel_warning, "Instance is disabled and this 'captureException' call is a no-op.");
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              t1 = $async$self._stack;
              t1 = t1.get$first(t1);
              item = t1;
              $async$goto = 6;
              return A._asyncAwait($async$self._cloneAndRunWithScope$2(item.scope, withScope), $async$captureException$4$hint$stackTrace$withScope);
            case 6:
              // returning from await.
              scope = $async$result;
              $async$handler = 8;
              $event = A.SentryEvent$(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, throwable, A.getUtcDateTime(), null, null, null);
              $async$goto = 11;
              return A._asyncAwait(item.client.captureEvent$4$hint$scope$stackTrace($event, hint, scope, stackTrace), $async$captureException$4$hint$stackTrace$withScope);
            case 11:
              // returning from await.
              sentryId = $async$result;
              $async$next.push(10);
              // goto finally
              $async$goto = 9;
              break;
            case 8:
              // catch
              $async$handler = 7;
              $async$exception0 = $async$currentError;
              exception = A.unwrapException($async$exception0);
              stackTrace0 = A.getTraceFromException($async$exception0);
              $async$self._hub$_options.logger$4$exception$stackTrace(B.SentryLevel_error, "Error while capturing exception", exception, stackTrace0);
              $async$next.push(10);
              // goto finally
              $async$goto = 9;
              break;
            case 7:
              // uncaught
              $async$next = [2];
            case 9:
              // finally
              $async$handler = 2;
              $async$self.set$_lastEventId(sentryId);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 10:
              // after finally
            case 4:
              // join
              $async$returnValue = sentryId;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$captureException$4$hint$stackTrace$withScope, $async$completer);
    },
    _cloneAndRunWithScope$2(scope, withScope) {
      return this._cloneAndRunWithScope$body$Hub(scope, type$.nullable_void_Function_Scope._as(withScope));
    },
    _cloneAndRunWithScope$body$Hub(scope, withScope) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Scope),
        $async$returnValue;
      var $async$_cloneAndRunWithScope$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = scope;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_cloneAndRunWithScope$2, $async$completer);
    },
    close$0(_) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, item, exception, stackTrace, t1, t2, _i, exception0;
      var $async$close$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = !$async$self._isEnabled ? 2 : 4;
              break;
            case 2:
              // then
              $async$self._hub$_options.logger$2(B.SentryLevel_warning, "Instance is disabled and this 'close' call is a no-op.");
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              t1 = $async$self._hub$_options, t2 = A.List_List$unmodifiable(t1._sentry_options$_integrations, type$.Integration_SentryOptions).length, _i = 0;
            case 5:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              $async$goto = 8;
              return A._asyncAwait(null, $async$close$0);
            case 8:
              // returning from await.
            case 6:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 5;
              break;
            case 7:
              // after for
              t2 = $async$self._stack;
              item = t2.get$first(t2);
              try {
                item.client._sentry_client$_options.httpClient.close$0(0);
              } catch (exception0) {
                exception = A.unwrapException(exception0);
                stackTrace = A.getTraceFromException(exception0);
                t1.logger$4$exception$stackTrace(B.SentryLevel_error, "Error while closing the Hub", exception, stackTrace);
              }
              $async$self._isEnabled = false;
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$close$0, $async$completer);
    },
    set$_lastEventId(_lastEventId) {
      this._lastEventId = type$.SentryId._as(_lastEventId);
    }
  };
  A._StackItem.prototype = {};
  A._WeakMap.prototype = {};
  A.HubAdapter.prototype = {
    captureException$4$hint$stackTrace$withScope(throwable, hint, stackTrace, withScope) {
      type$.nullable_void_Function_Scope._as(withScope);
      return $.$get$Sentry__hub().captureException$4$hint$stackTrace$withScope(throwable, hint, stackTrace, withScope);
    },
    close$0(_) {
      return A.Sentry_close();
    },
    get$isEnabled() {
      return $.$get$Sentry__hub().get$isEnabled();
    }
  };
  A.NoOpClient.prototype = {
    close$0(_) {
    },
    delete$3$body$headers(url, body, headers) {
      type$.nullable_Map_String_String._as(headers);
      return $.$get$NoOpClient__response();
    },
    $get$2$headers(url, headers) {
      type$.nullable_Map_String_String._as(headers);
      return $.$get$NoOpClient__response();
    },
    head$2$headers(_, url, headers) {
      type$.nullable_Map_String_String._as(headers);
      return $.$get$NoOpClient__response();
    },
    patch$3$body$headers(url, body, headers) {
      type$.nullable_Map_String_String._as(headers);
      return $.$get$NoOpClient__response();
    },
    put$3$body$headers(url, body, headers) {
      type$.nullable_Map_String_String._as(headers);
      return $.$get$NoOpClient__response();
    },
    send$1(_, request) {
      return $.$get$NoOpClient__streamedResponse();
    },
    $isClient: 1
  };
  A.NoOpHub.prototype = {
    captureException$4$hint$stackTrace$withScope(throwable, hint, stackTrace, withScope) {
      return this.captureException$body$NoOpHub(throwable, hint, stackTrace, type$.nullable_void_Function_Scope._as(withScope));
    },
    captureException$body$NoOpHub(throwable, hint, stackTrace, withScope) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.SentryId),
        $async$returnValue;
      var $async$captureException$4$hint$stackTrace$withScope = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = new A.SentryId("00000000000000000000000000000000");
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$captureException$4$hint$stackTrace$withScope, $async$completer);
    },
    close$0(_) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$close$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$close$0, $async$completer);
    },
    get$isEnabled() {
      return false;
    }
  };
  A.WebPlatform.prototype = {
    _browserPlatform$0() {
      var _s7_ = "android",
        t1 = window.navigator.platform,
        navigatorPlatform = t1 == null ? null : t1.toLowerCase();
      if (navigatorPlatform == null)
        navigatorPlatform = "";
      if (B.JSString_methods.startsWith$1(navigatorPlatform, "mac"))
        return "macos";
      if (B.JSString_methods.startsWith$1(navigatorPlatform, "win"))
        return "windows";
      if (B.JSString_methods.contains$1(navigatorPlatform, "iphone") || B.JSString_methods.contains$1(navigatorPlatform, "ipad") || B.JSString_methods.contains$1(navigatorPlatform, "ipod"))
        return "ios";
      if (B.JSString_methods.contains$1(navigatorPlatform, _s7_))
        return _s7_;
      if (B.JSString_methods.contains$1(navigatorPlatform, "fuchsia"))
        return "fuchsia";
      if (window.matchMedia("only screen and (pointer: fine)").matches)
        return "linux";
      return _s7_;
    }
  };
  A.Platform.prototype = {};
  A.PlatformChecker.prototype = {};
  A.Contexts.prototype = {
    get$runtimes() {
      var t1 = this._collection$_map.$index(0, "runtimes");
      if (t1 == null)
        t1 = [];
      return A.List_List$unmodifiable(type$.Iterable_dynamic._as(t1), type$.SentryRuntime);
    },
    toJson$0() {
      var json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      this._collection$_map.forEach$1(0, A._instanceType(this)._eval$1("~(MapView.K,MapView.V)")._as(new A.Contexts_toJson_closure(this, json)));
      return json;
    },
    clone$0(_) {
      var t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41,
        t1 = this._collection$_map,
        t2 = type$.nullable_SentryDevice._as(t1.$index(0, "device"));
      if (t2 == null)
        t2 = null;
      else {
        t3 = t2.name;
        t4 = t2.family;
        t5 = t2.model;
        t6 = t2.modelId;
        t7 = t2.arch;
        t8 = t2.batteryLevel;
        t9 = t2.orientation;
        t10 = t2.manufacturer;
        t11 = t2.brand;
        t12 = t2.screenHeightPixels;
        t13 = t2.screenWidthPixels;
        t14 = t2.screenDensity;
        t15 = t2.screenDpi;
        t16 = t2.online;
        t17 = t2.charging;
        t18 = t2.lowMemory;
        t19 = t2.simulator;
        t20 = t2.memorySize;
        t21 = t2.freeMemory;
        t22 = t2.usableMemory;
        t23 = t2.storageSize;
        t24 = t2.freeStorage;
        t25 = t2.externalStorageSize;
        t26 = t2.externalFreeStorage;
        t27 = t2.bootTime;
        t28 = t2.processorCount;
        t29 = t2.cpuDescription;
        t30 = t2.processorFrequency;
        t31 = t2.deviceType;
        t32 = t2.batteryStatus;
        t33 = t2.deviceUniqueIdentifier;
        t34 = t2.supportsVibration;
        t35 = t2.supportsAccelerometer;
        t36 = t2.supportsGyroscope;
        t37 = t2.supportsAudio;
        t38 = t2.supportsLocationService;
        t39 = t2.screenResolution;
        t40 = t2.timezone;
        t41 = t2.theme;
        t22 = A.SentryDevice$(t7, t8, t32, t27, t11, t17, t29, t31, t33, t26, t25, t4, t21, t24, t2.language, t18, t10, t20, t5, t6, t3, t16, t9, t28, t30, t14, t15, t12, t39, t13, t19, t23, t35, t37, t36, t38, t34, t41, t40, t22);
        t2 = t22;
      }
      type$.nullable_SentryOperatingSystem._as(t1.$index(0, "os"));
      type$.nullable_SentryApp._as(t1.$index(0, "app"));
      type$.nullable_SentryBrowser._as(t1.$index(0, "browser"));
      t3 = type$.nullable_SentryCulture._as(t1.$index(0, "culture"));
      t3 = t3 == null ? null : new A.SentryCulture(t3.calendar, t3.displayName, t3.locale, t3.is24HourFormat, t3.timezone);
      type$.nullable_SentryGpu._as(t1.$index(0, "gpu"));
      type$.nullable_SentryTraceContext._as(t1.$index(0, "trace"));
      type$.nullable_SentryResponse._as(t1.$index(0, "response"));
      t4 = this.get$runtimes();
      t5 = A._arrayInstanceType(t4);
      t6 = t5._eval$1("MappedListIterable<1,SentryRuntime>");
      t6 = A.List_List$of(new A.MappedListIterable(t4, t5._eval$1("SentryRuntime(1)")._as(new A.Contexts_clone_closure()), t6), true, t6._eval$1("ListIterable.E"));
      t2 = A.LinkedHashMap_LinkedHashMap$_literal(["device", t2, "os", null, "runtimes", t6, "app", null, "browser", null, "gpu", null, "culture", t3, "trace", null, "response", null], type$.String, type$.dynamic);
      t2.addEntries$1(type$.Contexts._eval$1("Iterable<MapEntry<MapView.K,MapView.V>>")._as(t1.get$entries(t1).where$1(0, new A.Contexts_clone_closure0())));
      return new A.Contexts(t2);
    },
    copyWith$2$culture$device(culture, device) {
      var t1 = this._collection$_map,
        t2 = type$.nullable_SentryOperatingSystem._as(t1.$index(0, "os")),
        t3 = this.get$runtimes(),
        t4 = type$.nullable_SentryApp._as(t1.$index(0, "app")),
        t5 = type$.nullable_SentryBrowser._as(t1.$index(0, "browser")),
        t6 = type$.nullable_SentryGpu._as(t1.$index(0, "gpu")),
        t7 = type$.nullable_SentryTraceContext._as(t1.$index(0, "trace")),
        t8 = type$.nullable_SentryResponse._as(t1.$index(0, "response"));
      t2 = A.LinkedHashMap_LinkedHashMap$_literal(["device", device, "os", t2, "runtimes", t3, "app", t4, "browser", t5, "gpu", t6, "culture", culture, "trace", t7, "response", t8], type$.String, type$.dynamic);
      t2.addEntries$1(type$.Contexts._eval$1("Iterable<MapEntry<MapView.K,MapView.V>>")._as(t1.get$entries(t1).where$1(0, new A.Contexts_copyWith_closure())));
      return new A.Contexts(t2);
    }
  };
  A.Contexts_toJson_closure.prototype = {
    call$2(key, value) {
      var t1, deviceMap, cultureMap, runtime, runtimeMap, t2, t3, t4, _i, k, _this = this, _null = null;
      A._asString(key);
      if (value == null)
        return;
      switch (key) {
        case "device":
          t1 = type$.nullable_SentryDevice._as(_this.$this._collection$_map.$index(0, "device"));
          deviceMap = t1 == null ? _null : t1.toJson$0();
          t1 = deviceMap == null ? _null : deviceMap.__js_helper$_length !== 0;
          if (t1 === true)
            _this.json.$indexSet(0, "device", deviceMap);
          break;
        case "os":
          type$.nullable_SentryOperatingSystem._as(_this.$this._collection$_map.$index(0, "os"));
          break;
        case "app":
          type$.nullable_SentryApp._as(_this.$this._collection$_map.$index(0, "app"));
          break;
        case "browser":
          type$.nullable_SentryBrowser._as(_this.$this._collection$_map.$index(0, "browser"));
          break;
        case "culture":
          t1 = type$.nullable_SentryCulture._as(_this.$this._collection$_map.$index(0, "culture"));
          cultureMap = t1 == null ? _null : t1.toJson$0();
          t1 = cultureMap == null ? _null : cultureMap.__js_helper$_length !== 0;
          if (t1 === true)
            _this.json.$indexSet(0, "culture", cultureMap);
          break;
        case "gpu":
          type$.nullable_SentryGpu._as(_this.$this._collection$_map.$index(0, "gpu"));
          break;
        case "response":
          type$.nullable_SentryResponse._as(_this.$this._collection$_map.$index(0, "response"));
          break;
        case "trace":
          type$.nullable_SentryTraceContext._as(_this.$this._collection$_map.$index(0, "trace"));
          break;
        case "runtimes":
          t1 = _this.$this;
          if (t1.get$runtimes().length === 1) {
            t1 = t1.get$runtimes();
            if (0 >= t1.length)
              return A.ioore(t1, 0);
            runtime = t1[0];
            runtimeMap = runtime.toJson$0();
            if (runtimeMap.get$isNotEmpty(runtimeMap)) {
              key = runtime.get$key(runtime);
              _this.json.$indexSet(0, key, runtimeMap);
            }
          } else if (t1.get$runtimes().length > 1)
            for (t1 = t1.get$runtimes(), t2 = t1.length, t3 = _this.json, t4 = type$.String, _i = 0; _i < t2; ++_i) {
              runtime = t1[_i];
              runtimeMap = runtime.toJson$0();
              if (runtimeMap.get$isNotEmpty(runtimeMap)) {
                key = J.get$key$z(runtime);
                if (t3.containsKey$1(key))
                  for (k = 0; t3.containsKey$1(key);) {
                    key += k;
                    ++k;
                  }
                runtimeMap.addAll$1(0, A.LinkedHashMap_LinkedHashMap$_literal(["type", "runtime"], t4, t4));
                t3.$indexSet(0, key, runtimeMap);
              }
            }
          break;
        default:
          _this.json.$indexSet(0, key, value);
      }
    },
    $signature: 13
  };
  A.Contexts_clone_closure.prototype = {
    call$1(runtime) {
      return type$.SentryRuntime._as(runtime).clone$0(0);
    },
    $signature: 115
  };
  A.Contexts_clone_closure0.prototype = {
    call$1(element) {
      return !B.JSArray_methods.contains$1(B.List_AVy, type$.MapEntry_String_dynamic._as(element).key);
    },
    $signature: 23
  };
  A.Contexts_copyWith_closure.prototype = {
    call$1(element) {
      return !B.JSArray_methods.contains$1(B.List_AVy, type$.MapEntry_String_dynamic._as(element).key);
    },
    $signature: 23
  };
  A.Dsn.prototype = {};
  A.SdkVersion.prototype = {
    toJson$0() {
      var t3, t4, t5, _this = this,
        t1 = type$.String,
        t2 = A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.dynamic);
      t2.$indexSet(0, "name", _this.name);
      t2.$indexSet(0, "version", _this.version);
      t3 = _this._packages;
      t4 = type$.SentryPackage;
      if (A.List_List$unmodifiable(t3, t4).length !== 0) {
        t3 = A.List_List$unmodifiable(t3, t4);
        t4 = A._arrayInstanceType(t3);
        t5 = t4._eval$1("MappedListIterable<1,Map<String,@>>");
        t2.$indexSet(0, "packages", A.List_List$of(new A.MappedListIterable(t3, t4._eval$1("Map<String,@>(1)")._as(new A.SdkVersion_toJson_closure()), t5), false, t5._eval$1("ListIterable.E")));
      }
      t3 = _this._integrations;
      if (A.List_List$unmodifiable(t3, t1).length !== 0)
        t2.$indexSet(0, "integrations", A.List_List$unmodifiable(t3, t1));
      return t2;
    }
  };
  A.SdkVersion_toJson_closure.prototype = {
    call$1(p) {
      return type$.SentryPackage._as(p).toJson$0();
    },
    $signature: 117
  };
  A.SentryCulture.prototype = {
    toJson$0() {
      var t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t2 = this.timezone;
      if (t2 != null)
        t1.$indexSet(0, "timezone", t2);
      return t1;
    }
  };
  A.SentryOrientation.prototype = {
    toString$0(_) {
      return "SentryOrientation." + this._name;
    }
  };
  A.SentryDevice.prototype = {
    toJson$0() {
      var orientation, t1, t2, _this = this;
      switch (_this.orientation) {
        case B.SentryOrientation_0:
          orientation = "portait";
          break;
        case B.SentryOrientation_1:
          orientation = "landscape";
          break;
        case null:
          orientation = null;
          break;
        default:
          orientation = null;
      }
      t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      if (orientation != null)
        t1.$indexSet(0, "orientation", orientation);
      t2 = _this.screenWidthPixels;
      if (t2 != null)
        t1.$indexSet(0, "screen_width_pixels", t2);
      t2 = _this.screenHeightPixels;
      if (t2 != null)
        t1.$indexSet(0, "screen_height_pixels", t2);
      t2 = _this.screenDensity;
      if (t2 != null)
        t1.$indexSet(0, "screen_density", t2);
      t2 = _this.online;
      if (t2 != null)
        t1.$indexSet(0, "online", t2);
      t2 = _this.memorySize;
      if (t2 != null)
        t1.$indexSet(0, "memory_size", t2);
      t2 = _this.timezone;
      if (t2 != null)
        t1.$indexSet(0, "timezone", t2);
      return t1;
    }
  };
  A.SentryEvent.prototype = {
    get$throwable() {
      var t1 = this._throwable;
      return t1 instanceof A.ThrowableMechanism ? t1._throwable_mechanism$_throwable : t1;
    },
    copyWith$17$breadcrumbs$contexts$dist$environment$exceptions$extra$fingerprint$level$platform$release$request$sdk$serverName$tags$threads$transaction$user(breadcrumbs, contexts, dist, environment, exceptions, extra, fingerprint, level, platform, release, request, sdk, serverName, tags, threads, transaction, user) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _this = this, _null = null;
      type$.nullable_Map_String_String._as(tags);
      type$.nullable_Map_String_dynamic._as(extra);
      type$.nullable_List_String._as(fingerprint);
      type$.nullable_List_Breadcrumb._as(breadcrumbs);
      type$.nullable_List_SentryException._as(exceptions);
      type$.nullable_List_SentryThread._as(threads);
      t1 = platform == null ? _this.platform : platform;
      t2 = environment == null ? _this.environment : environment;
      t3 = transaction == null ? _this.transaction : transaction;
      t4 = level == null ? _this.level : level;
      if (tags != null) {
        t5 = type$.String;
        t5 = A.LinkedHashMap_LinkedHashMap$from(tags, t5, t5);
      } else
        t5 = _null;
      if (t5 == null)
        t5 = _this.tags;
      t6 = extra != null ? A.LinkedHashMap_LinkedHashMap$from(extra, type$.String, type$.dynamic) : _null;
      if (t6 == null)
        t6 = _this.extra;
      t7 = fingerprint != null ? A.List_List$from(fingerprint, true, type$.String) : _null;
      if (t7 == null)
        t7 = _this.fingerprint;
      t8 = user == null ? _this.user : user;
      t9 = contexts == null ? _this.contexts : contexts;
      t10 = breadcrumbs != null ? A.List_List$from(breadcrumbs, true, type$.Breadcrumb) : _null;
      if (t10 == null)
        t10 = _this.breadcrumbs;
      t11 = sdk == null ? _this.sdk : sdk;
      t12 = request == null ? _this.request : request;
      t13 = exceptions != null ? A.List_List$from(exceptions, true, type$.SentryException) : _null;
      if (t13 == null)
        t13 = _this.exceptions;
      t14 = threads != null ? A.List_List$from(threads, true, type$.SentryThread) : _null;
      if (t14 == null)
        t14 = _this.threads;
      return A.SentryEvent$(t10, t9, _this.culprit, _this.debugMeta, _this.dist, t2, _this.eventId, t13, t6, t7, t4, _this.logger, _this.message, _this.modules, t1, _this.release, t12, t11, _this.serverName, t5, t14, _this._throwable, _this.timestamp, t3, _this.type, t8);
    },
    copyWith$1$breadcrumbs(breadcrumbs) {
      return this.copyWith$17$breadcrumbs$contexts$dist$environment$exceptions$extra$fingerprint$level$platform$release$request$sdk$serverName$tags$threads$transaction$user(breadcrumbs, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    },
    copyWith$5$breadcrumbs$extra$tags$transaction$user(breadcrumbs, extra, tags, transaction, user) {
      return this.copyWith$17$breadcrumbs$contexts$dist$environment$exceptions$extra$fingerprint$level$platform$release$request$sdk$serverName$tags$threads$transaction$user(breadcrumbs, null, null, null, null, extra, null, null, null, null, null, null, null, tags, null, transaction, user);
    },
    copyWith$2$fingerprint$level(fingerprint, level) {
      return this.copyWith$17$breadcrumbs$contexts$dist$environment$exceptions$extra$fingerprint$level$platform$release$request$sdk$serverName$tags$threads$transaction$user(null, null, null, null, null, null, fingerprint, level, null, null, null, null, null, null, null, null, null);
    },
    copyWith$6$dist$environment$platform$release$sdk$serverName(dist, environment, platform, release, sdk, serverName) {
      return this.copyWith$17$breadcrumbs$contexts$dist$environment$exceptions$extra$fingerprint$level$platform$release$request$sdk$serverName$tags$threads$transaction$user(null, null, dist, environment, null, null, null, null, platform, release, null, sdk, serverName, null, null, null, null);
    },
    copyWith$1$exceptions(exceptions) {
      return this.copyWith$17$breadcrumbs$contexts$dist$environment$exceptions$extra$fingerprint$level$platform$release$request$sdk$serverName$tags$threads$transaction$user(null, null, null, null, exceptions, null, null, null, null, null, null, null, null, null, null, null, null);
    },
    copyWith$3$contexts$request$transaction(contexts, request, transaction) {
      return this.copyWith$17$breadcrumbs$contexts$dist$environment$exceptions$extra$fingerprint$level$platform$release$request$sdk$serverName$tags$threads$transaction$user(null, contexts, null, null, null, null, null, null, null, null, request, null, null, null, null, transaction, null);
    },
    toJson$0() {
      var sdkMap, requestMap, t2, exceptionsJson, t3, t4, threadIds, threadJson, t5, _this = this, _null = null,
        contextsMap = _this.contexts.toJson$0(),
        t1 = _this.user,
        userMap = t1 == null ? _null : t1.toJson$0();
      t1 = _this.sdk;
      sdkMap = t1 == null ? _null : t1.toJson$0();
      t1 = _this.request;
      requestMap = t1 == null ? _null : t1.toJson$0();
      t1 = _this.exceptions;
      t2 = t1 == null;
      if (t2)
        exceptionsJson = _null;
      else {
        t3 = A._arrayInstanceType(t1);
        t4 = t3._eval$1("MappedListIterable<1,Map<String,@>>");
        t4 = new A.MappedListIterable(t1, t3._eval$1("Map<String,@>(1)")._as(new A.SentryEvent_toJson_closure()), t4).super$Iterable$where(0, t4._eval$1("bool(ListIterable.E)")._as(new A.SentryEvent_toJson_closure0()));
        exceptionsJson = A.List_List$of(t4, false, t4.$ti._eval$1("Iterable.E"));
      }
      if (t2)
        threadIds = _null;
      else {
        t2 = A._arrayInstanceType(t1);
        t3 = t2._eval$1("MappedListIterable<1,int?>");
        t3 = new A.MappedListIterable(t1, t2._eval$1("int?(1)")._as(new A.SentryEvent_toJson_closure1()), t3).super$Iterable$where(0, t3._eval$1("bool(ListIterable.E)")._as(new A.SentryEvent_toJson_closure2()));
        threadIds = A.LinkedHashSet_LinkedHashSet$of(t3, t3.$ti._eval$1("Iterable.E"));
      }
      t1 = _this.threads;
      if (t1 == null)
        threadJson = _null;
      else {
        t2 = A._arrayInstanceType(t1);
        t3 = t2._eval$1("MappedListIterable<1,Map<String,@>>");
        t3 = new A.MappedListIterable(t1, t2._eval$1("Map<String,@>(1)")._as(new A.SentryEvent_toJson_closure3(threadIds)), t3).super$Iterable$where(0, t3._eval$1("bool(ListIterable.E)")._as(new A.SentryEvent_toJson_closure4()));
        threadJson = A.List_List$of(t3, false, t3.$ti._eval$1("Iterable.E"));
      }
      t1 = type$.String;
      t2 = A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.dynamic);
      t2.$indexSet(0, "event_id", _this.eventId._id);
      t2.$indexSet(0, "timestamp", A.formatDateAsIso8601WithMillisPrecision(_this.timestamp));
      t3 = _this.platform;
      if (t3 != null)
        t2.$indexSet(0, "platform", t3);
      t3 = _this.environment;
      if (t3 != null)
        t2.$indexSet(0, "environment", t3);
      t3 = _this.modules;
      if (t3 != null && t3.__js_helper$_length !== 0)
        t2.$indexSet(0, "modules", t3);
      t3 = _this.transaction;
      if (t3 != null)
        t2.$indexSet(0, "transaction", t3);
      t3 = _this.level;
      if (t3 != null)
        t2.$indexSet(0, "level", t3.name);
      t3 = _this.tags;
      t4 = t3 == null ? _null : t3.__js_helper$_length !== 0;
      if (t4 === true)
        t2.$indexSet(0, "tags", t3);
      t3 = _this.extra;
      t4 = t3 == null ? _null : t3.__js_helper$_length !== 0;
      if (t4 === true)
        t2.$indexSet(0, "extra", t3);
      t3 = _this.fingerprint;
      t4 = t3 == null ? _null : t3.length !== 0;
      if (t4 === true)
        t2.$indexSet(0, "fingerprint", t3);
      t3 = _this.breadcrumbs;
      t4 = t3 == null;
      t5 = t4 ? _null : t3.length !== 0;
      if (t5 === true) {
        if (t4)
          t3 = _null;
        else {
          t4 = A._arrayInstanceType(t3);
          t5 = t4._eval$1("MappedListIterable<1,Map<String,@>>");
          t5 = A.List_List$of(new A.MappedListIterable(t3, t4._eval$1("Map<String,@>(1)")._as(new A.SentryEvent_toJson_closure5()), t5), false, t5._eval$1("ListIterable.E"));
          t3 = t5;
        }
        t2.$indexSet(0, "breadcrumbs", t3);
      }
      if (contextsMap.__js_helper$_length !== 0)
        t2.$indexSet(0, "contexts", contextsMap);
      t3 = userMap == null ? _null : userMap.__js_helper$_length !== 0;
      if (t3 === true)
        t2.$indexSet(0, "user", userMap);
      t3 = sdkMap == null ? _null : sdkMap.__js_helper$_length !== 0;
      if (t3 === true)
        t2.$indexSet(0, "sdk", sdkMap);
      t3 = requestMap == null ? _null : requestMap.__js_helper$_length !== 0;
      if (t3 === true)
        t2.$indexSet(0, "request", requestMap);
      t3 = exceptionsJson == null ? _null : exceptionsJson.length !== 0;
      if (t3 === true)
        t2.$indexSet(0, "exception", A.LinkedHashMap_LinkedHashMap$_literal(["values", exceptionsJson], t1, type$.nullable_List_Map_String_dynamic));
      t3 = threadJson == null ? _null : threadJson.length !== 0;
      if (t3 === true)
        t2.$indexSet(0, "threads", A.LinkedHashMap_LinkedHashMap$_literal(["values", threadJson], t1, type$.nullable_List_Map_String_dynamic));
      return t2;
    }
  };
  A.SentryEvent_toJson_closure.prototype = {
    call$1(e) {
      return type$.SentryException._as(e).toJson$0();
    },
    $signature: 118
  };
  A.SentryEvent_toJson_closure0.prototype = {
    call$1(e) {
      type$.Map_String_dynamic._as(e);
      return e.get$isNotEmpty(e);
    },
    $signature: 19
  };
  A.SentryEvent_toJson_closure1.prototype = {
    call$1(element) {
      return type$.SentryException._as(element).threadId;
    },
    $signature: 119
  };
  A.SentryEvent_toJson_closure2.prototype = {
    call$1(element) {
      return A._asIntQ(element) != null;
    },
    $signature: 120
  };
  A.SentryEvent_toJson_closure3.prototype = {
    call$1(element) {
      var t1, json;
      type$.SentryThread._as(element);
      t1 = this.threadIds;
      t1 = t1 == null ? null : t1.contains$1(0, element.id);
      if (t1 === true) {
        json = element.toJson$0();
        json.remove$1(0, "stacktrace");
        return json;
      }
      return element.toJson$0();
    },
    $signature: 121
  };
  A.SentryEvent_toJson_closure4.prototype = {
    call$1(e) {
      type$.Map_String_dynamic._as(e);
      return e.get$isNotEmpty(e);
    },
    $signature: 19
  };
  A.SentryEvent_toJson_closure5.prototype = {
    call$1(b) {
      return type$.Breadcrumb._as(b).toJson$0();
    },
    $signature: 122
  };
  A._SentryEvent_Object_SentryEventLike.prototype = {};
  A.SentryException.prototype = {
    toJson$0() {
      var t2, _this = this,
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t1.$indexSet(0, "type", _this.type);
      t2 = _this.value;
      if (t2 != null)
        t1.$indexSet(0, "value", t2);
      t2 = _this.stackTrace;
      if (t2 != null)
        t1.$indexSet(0, "stacktrace", t2.toJson$0());
      t2 = _this.mechanism;
      if (t2 != null)
        t1.$indexSet(0, "mechanism", t2.toJson$0());
      return t1;
    }
  };
  A.SentryId.prototype = {
    toString$0(_) {
      return this._id;
    },
    get$hashCode(_) {
      return B.JSString_methods.get$hashCode(this._id);
    },
    $eq(_, o) {
      if (o == null)
        return false;
      if (o instanceof A.SentryId)
        return o._id === this._id;
      return false;
    }
  };
  A.SentryLevel.prototype = {
    toDartLogLevel$0() {
      switch (this) {
        case B.SentryLevel_fatal:
          return 1200;
        case B.SentryLevel_error:
          return 1000;
        case B.SentryLevel_warning:
          return 900;
        case B.SentryLevel_info:
          return 800;
        case B.SentryLevel_debug:
          return 700;
      }
      return 700;
    }
  };
  A.SentryPackage.prototype = {
    toJson$0() {
      var t1 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$_literal(["name", this.name, "version", this.version], t1, t1);
    }
  };
  A.SentryRequest.prototype = {
    get$headers(_) {
      var t2,
        t1 = this._sentry_request$_headers;
      if (t1 == null)
        t1 = B.Map_empty2;
      t2 = type$.String;
      return A.ConstantMap_ConstantMap$from(t1, t2, t2);
    },
    get$env() {
      var t2,
        t1 = this._env;
      if (t1 == null)
        t1 = B.Map_empty2;
      t2 = type$.String;
      return A.ConstantMap_ConstantMap$from(t1, t2, t2);
    },
    get$other() {
      var t2,
        t1 = this._other;
      if (t1 == null)
        t1 = B.Map_empty2;
      t2 = type$.String;
      return A.ConstantMap_ConstantMap$from(t1, t2, t2);
    },
    toJson$0() {
      var _this = this,
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t2 = _this.url;
      if (t2 != null)
        t1.$indexSet(0, "url", t2);
      t2 = _this.cookies;
      if (t2 != null)
        t1.$indexSet(0, "cookies", t2);
      t2 = _this.get$headers(_this);
      if (t2.get$isNotEmpty(t2))
        t1.$indexSet(0, "headers", _this.get$headers(_this));
      t2 = _this.get$env();
      if (t2.get$isNotEmpty(t2))
        t1.$indexSet(0, "env", _this.get$env());
      t2 = _this.get$other();
      if (t2.get$isNotEmpty(t2))
        t1.$indexSet(0, "other", _this.get$other());
      return t1;
    }
  };
  A.SentryRequest_closure.prototype = {
    call$1(e) {
      return type$.MapEntry_String_String._as(e).key.toLowerCase() === "cookie";
    },
    $signature: 123
  };
  A.SentryStackFrame.prototype = {
    toJson$0() {
      var _this = this, _null = null,
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t2 = _this._preContext,
        t3 = t2 == null ? _null : t2.length !== 0;
      if (t3 === true)
        t1.$indexSet(0, "pre_context", t2);
      t2 = _this._postContext;
      t3 = t2 == null ? _null : t2.length !== 0;
      if (t3 === true)
        t1.$indexSet(0, "post_context", t2);
      t2 = _this._vars;
      t3 = t2 == null ? _null : t2.__js_helper$_length !== 0;
      if (t3 === true)
        t1.$indexSet(0, "vars", t2);
      t2 = _this._framesOmitted;
      t3 = t2 == null ? _null : t2.length !== 0;
      if (t3 === true)
        t1.$indexSet(0, "frames_omitted", t2);
      t2 = _this.fileName;
      if (t2 != null)
        t1.$indexSet(0, "filename", t2);
      t2 = _this.$package;
      if (t2 != null)
        t1.$indexSet(0, "package", t2);
      t2 = _this.$function;
      if (t2 != null)
        t1.$indexSet(0, "function", t2);
      t2 = _this.lineNo;
      if (t2 != null)
        t1.$indexSet(0, "lineno", t2);
      t2 = _this.colNo;
      if (t2 != null)
        t1.$indexSet(0, "colno", t2);
      t2 = _this.absPath;
      if (t2 != null)
        t1.$indexSet(0, "abs_path", t2);
      t2 = _this.inApp;
      if (t2 != null)
        t1.$indexSet(0, "in_app", t2);
      t2 = _this.platform;
      if (t2 != null)
        t1.$indexSet(0, "platform", t2);
      t2 = _this.instructionAddr;
      if (t2 != null)
        t1.$indexSet(0, "instruction_addr", t2);
      return t1;
    },
    copyWith$2$colNo$lineNo(colNo, lineNo) {
      var _this = this,
        t1 = lineNo == null ? _this.lineNo : lineNo,
        t2 = colNo == null ? _this.colNo : colNo;
      return A.SentryStackFrame$(_this.absPath, t2, _this.contextLine, _this.fileName, _this._framesOmitted, _this.$function, _this.imageAddr, _this.inApp, _this.instructionAddr, t1, _this.module, _this.native, _this.$package, _this.platform, _this._postContext, _this._preContext, _this.rawFunction, null, null, _this.symbolAddr, _this._vars);
    },
    copyWith$1$lineNo(lineNo) {
      return this.copyWith$2$colNo$lineNo(null, lineNo);
    },
    copyWith$1$colNo(colNo) {
      return this.copyWith$2$colNo$lineNo(colNo, null);
    }
  };
  A.SentryStackTrace.prototype = {
    toJson$0() {
      var t4,
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t2 = this._frames,
        t3 = t2.length;
      if (t3 !== 0) {
        t3 = A._arrayInstanceType(t2);
        t4 = t3._eval$1("MappedListIterable<1,Map<String,@>>");
        t4 = A.List_List$of(new A.MappedListIterable(t2, t3._eval$1("Map<String,@>(1)")._as(new A.SentryStackTrace_toJson_closure()), t4), false, t4._eval$1("ListIterable.E"));
        t1.$indexSet(0, "frames", t4);
      }
      t2 = this._registers;
      t3 = t2.__js_helper$_length;
      if (t3 !== 0)
        t1.$indexSet(0, "registers", t2);
      return t1;
    }
  };
  A.SentryStackTrace_toJson_closure.prototype = {
    call$1(frame) {
      return type$.SentryStackFrame._as(frame).toJson$0();
    },
    $signature: 124
  };
  A.Scope.prototype = {
    applyToEvent$2$hint($event, hint) {
      return this.applyToEvent$body$Scope($event, hint);
    },
    applyToEvent$body$Scope($event, hint) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_SentryEvent),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, processedEvent, processor, exception, stackTrace, t1, t2, t3, t4, t5, _i, exception0, _box_0, $async$exception0;
      var $async$applyToEvent$2$hint = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              _box_0.event = $event;
              t1 = $event.transaction;
              if (t1 == null)
                t1 = $async$self._transaction;
              t2 = $async$self._mergeUsers$2($async$self._user, $event.user);
              t3 = $event.breadcrumbs;
              t4 = t3 == null ? null : t3.length !== 0;
              t3 = t4 === true ? t3 : A.List_List$from($async$self._breadcrumbs, true, type$.Breadcrumb);
              t4 = type$.String;
              t5 = A.ConstantMap_ConstantMap$from($async$self._tags, t4, t4);
              t5 = t5.get$isNotEmpty(t5) ? $async$self._mergeEventTags$1($event) : $event.tags;
              t4 = A.ConstantMap_ConstantMap$from($async$self._extra, t4, type$.dynamic);
              $event = _box_0.event = $event.copyWith$5$breadcrumbs$extra$tags$transaction$user(t3, t4.get$isNotEmpty(t4) ? $async$self._mergeEventExtra$1($event) : $event.extra, t5, t1, t2);
              t1 = $event.fingerprint;
              t2 = t1 == null ? null : t1.length !== 0;
              t1 = t2 === true ? t1 : $async$self._fingerprint;
              _box_0.event = $event.copyWith$2$fingerprint$level(t1, $event.level);
              t1 = $async$self._contexts.clone$0(0);
              t1._collection$_map.forEach$1(0, A._instanceType(t1)._eval$1("~(MapView.K,MapView.V)")._as(new A.Scope_applyToEvent_closure(_box_0, $async$self)));
              type$.nullable_SentryTraceContext._as(_box_0.event.contexts._collection$_map.$index(0, "trace"));
              processedEvent = _box_0.event;
              t1 = $async$self._scope$_eventProcessors, t2 = t1.length, t3 = $async$self._scope$_options, _i = 0;
            case 3:
              // for condition
              if (!(_i < t1.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              processor = t1[_i];
              $async$handler = 7;
              t4 = processedEvent;
              t4.toString;
              $async$goto = 10;
              return A._asyncAwait(processor.apply$2$hint(t4, hint), $async$applyToEvent$2$hint);
            case 10:
              // returning from await.
              processedEvent = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 9;
              break;
            case 7:
              // catch
              $async$handler = 6;
              $async$exception0 = $async$currentError;
              exception = A.unwrapException($async$exception0);
              stackTrace = A.getTraceFromException($async$exception0);
              t3.logger$4$exception$stackTrace(B.SentryLevel_error, string$.An_exc, exception, stackTrace);
              // goto after finally
              $async$goto = 9;
              break;
            case 6:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 9:
              // after finally
              if (processedEvent == null) {
                t3.logger$2(B.SentryLevel_debug, "Event was dropped by a processor");
                // goto after for
                $async$goto = 5;
                break;
              }
            case 4:
              // for update
              t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = processedEvent;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$applyToEvent$2$hint, $async$completer);
    },
    _mergeEventContextsRuntimes$2(values, $event) {
      var t1, t2, t3;
      for (t1 = J.get$iterator$ax(type$.List_SentryRuntime._as(values)), t2 = $event.contexts._collection$_map; t1.moveNext$0();) {
        t3 = t1.get$current();
        J.add$1$ax(t2.$index(0, "runtimes"), t3);
      }
    },
    _mergeEventTags$1($event) {
      var t1 = type$.String,
        t2 = A.ConstantMap_ConstantMap$from(this._tags, t1, t1).map$2$1(0, new A.Scope__mergeEventTags_closure(), t1, t1),
        t3 = $event.tags;
      t2.addAll$1(0, t3 == null ? A.LinkedHashMap_LinkedHashMap$_empty(t1, t1) : t3);
      return t2;
    },
    _mergeEventExtra$1($event) {
      var t1 = type$.String,
        t2 = type$.dynamic,
        t3 = A.ConstantMap_ConstantMap$from(this._extra, t1, t2).map$2$1(0, new A.Scope__mergeEventExtra_closure(), t1, t2),
        t4 = $event.extra;
      t3.addAll$1(0, t4 == null ? A.LinkedHashMap_LinkedHashMap$_empty(t1, t2) : t4);
      return t3;
    },
    _mergeUsers$2(scopeUser, eventUser) {
      if (eventUser != null)
        return eventUser;
      return null;
    }
  };
  A.Scope_applyToEvent_closure.prototype = {
    call$2(key, value) {
      var t1, t2, _this = this;
      A._asString(key);
      t1 = key === "runtimes";
      if (t1 && type$.List_SentryRuntime._is(value) && J.get$isNotEmpty$asx(value))
        _this.$this._mergeEventContextsRuntimes$2(value, _this._box_0.event);
      else {
        if (!t1) {
          t1 = _this._box_0;
          t1 = (!t1.event.contexts._collection$_map.containsKey$1(key) || t1.event.contexts._collection$_map.$index(0, key) == null) && value != null;
        } else
          t1 = false;
        if (t1) {
          t1 = _this._box_0.event.contexts;
          t2 = A._instanceType(t1);
          t1._collection$_map.$indexSet(0, t2._eval$1("MapView.K")._as(key), t2._eval$1("MapView.V")._as(value));
        }
      }
    },
    $signature: 13
  };
  A.Scope__mergeEventTags_closure.prototype = {
    call$2(key, value) {
      return new A.MapEntry(A._asString(key), A._asString(value), type$.MapEntry_String_String);
    },
    $signature: 125
  };
  A.Scope__mergeEventExtra_closure.prototype = {
    call$2(key, value) {
      return new A.MapEntry(A._asString(key), value, type$.MapEntry_String_dynamic);
    },
    $signature: 126
  };
  A.SentryClient.prototype = {
    captureEvent$4$hint$scope$stackTrace($event, hint, scope, stackTrace) {
      return this.captureEvent$body$SentryClient($event, hint, scope, stackTrace);
    },
    captureEvent$body$SentryClient($event, hint, scope, stackTrace) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.SentryId),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, preparedEvent, beforeSend, exception, stackTrace0, preparedEvent0, t1, beforeSendEvent, exception0, value, t2, attachments, t3, t4, envelope, clientReport, id, $async$exception0;
      var $async$captureEvent$4$hint$scope$stackTrace = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._sampleRate$0();
              preparedEvent = $async$self._prepareEvent$2$stackTrace($event, stackTrace);
              $async$goto = 3;
              return A._asyncAwait(scope.applyToEvent$2$hint(preparedEvent, hint), $async$captureEvent$4$hint$scope$stackTrace);
            case 3:
              // returning from await.
              preparedEvent0 = $async$result;
              preparedEvent = preparedEvent0;
              if (preparedEvent == null) {
                $async$returnValue = $.$get$SentryClient__sentryId();
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = $async$self._sentry_client$_options;
              $async$goto = 4;
              return A._asyncAwait($async$self._processEvent$3$eventProcessors$hint(preparedEvent, A.List_List$unmodifiable(t1._eventProcessors, type$.EventProcessor), hint), $async$captureEvent$4$hint$scope$stackTrace);
            case 4:
              // returning from await.
              preparedEvent = $async$result;
              if (preparedEvent == null) {
                $async$returnValue = $.$get$SentryClient__sentryId();
                // goto return
                $async$goto = 1;
                break;
              }
              beforeSend = null;
              $async$goto = beforeSend != null ? 5 : 6;
              break;
            case 5:
              // then
              beforeSendEvent = preparedEvent;
              $async$handler = 8;
              $async$goto = 11;
              return A._asyncAwait(beforeSend.call$2$hint(preparedEvent, hint), $async$captureEvent$4$hint$scope$stackTrace);
            case 11:
              // returning from await.
              preparedEvent = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 10;
              break;
            case 8:
              // catch
              $async$handler = 7;
              $async$exception0 = $async$currentError;
              exception = A.unwrapException($async$exception0);
              stackTrace0 = A.getTraceFromException($async$exception0);
              t1.logger$4$exception$stackTrace(B.SentryLevel_error, "The BeforeSend callback threw an exception", exception, stackTrace0);
              // goto after finally
              $async$goto = 10;
              break;
            case 7:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 10:
              // after finally
              if (preparedEvent == null) {
                $async$self._recordLostEvent$2(beforeSendEvent, B.DiscardReason_0);
                t1.logger$2(B.SentryLevel_debug, "Event was dropped by BeforeSend callback");
                $async$returnValue = $.$get$SentryClient__sentryId();
                // goto return
                $async$goto = 1;
                break;
              }
            case 6:
              // join
              if (B.C_WebPlatform._browserPlatform$0() === "android" && true)
                preparedEvent = $async$self._eventWithRemovedBreadcrumbsIfHandled$1(preparedEvent);
              value = t1.__SentryOptions_clientAttachmentProcessor_AI;
              if (value === $)
                value = t1.__SentryOptions_clientAttachmentProcessor_AI = new A.SentryClientAttachmentProcessor();
              t2 = A.List_List$unmodifiable(scope._attachments, type$.SentryAttachment);
              $async$goto = 12;
              return A._asyncAwait(value.processAttachments$2(t2, preparedEvent), $async$captureEvent$4$hint$scope$stackTrace);
            case 12:
              // returning from await.
              attachments = $async$result;
              t2 = preparedEvent;
              t3 = t1.__SentryOptions_sdk_A;
              t3 === $ && A.throwLateFieldNI("sdk");
              t4 = t1.dsn;
              envelope = A.SentryEnvelope_SentryEnvelope$fromEvent(t2, t3, J.get$isNotEmpty$asx(attachments) ? attachments : null, t4, null);
              clientReport = t1.get$recorder().flush$0();
              if (clientReport != null)
                B.JSArray_methods.add$1(envelope.items, A.SentryEnvelopeItem_SentryEnvelopeItem$fromClientReport(clientReport));
              $async$goto = 13;
              return A._asyncAwait(t1.transport.send$1(0, envelope), $async$captureEvent$4$hint$scope$stackTrace);
            case 13:
              // returning from await.
              id = $async$result;
              $async$returnValue = id == null ? new A.SentryId("00000000000000000000000000000000") : id;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$captureEvent$4$hint$scope$stackTrace, $async$completer);
    },
    _prepareEvent$2$stackTrace($event, stackTrace) {
      var t4, t5, t6, value, throwable, throwable0, mechanism, $frames, sentryStackTrace, _null = null,
        t1 = this._sentry_client$_options,
        t2 = t1.dist,
        t3 = $event.environment;
      if (t3 == null)
        t3 = t1.environment;
      t4 = t1.release;
      t5 = $event.sdk;
      if (t5 == null) {
        t5 = t1.__SentryOptions_sdk_A;
        t5 === $ && A.throwLateFieldNI("sdk");
      }
      t6 = $event.platform;
      if (t6 == null)
        t6 = "javascript";
      $event = this._applyDefaultPii$1($event.copyWith$6$dist$environment$platform$release$sdk$serverName(t2, t3, t6, t4, t5, _null));
      t2 = $event.exceptions;
      t3 = t2 == null;
      t4 = t3 ? _null : t2.length !== 0;
      if (t4 === true)
        return $event;
      value = t1.__SentryOptions_exceptionFactory_AI;
      if (value === $)
        value = t1.__SentryOptions_exceptionFactory_AI = new A.SentryExceptionFactory(t1);
      throwable = $event._throwable;
      if (throwable instanceof A.ThrowableMechanism) {
        throwable0 = throwable._throwable_mechanism$_throwable;
        mechanism = throwable._mechanism;
        throwable = throwable0;
      } else
        mechanism = _null;
      if (type$.Error._is(throwable))
        stackTrace = stackTrace == null ? throwable.get$stackTrace() : stackTrace;
      stackTrace = stackTrace == null ? A.StackTrace_current() : stackTrace;
      if (stackTrace != null) {
        $frames = value._sentry_exception_factory$_options.get$stackTraceFactory().getStackFrames$1(stackTrace);
        sentryStackTrace = $frames.length !== 0 ? A.SentryStackTrace$($frames, _null) : _null;
      } else
        sentryStackTrace = _null;
      t1 = J.getInterceptor$(throwable);
      t4 = A._rtiToString(t1.get$runtimeType(throwable)._rti, _null);
      t1 = t1.toString$0(throwable);
      t5 = A._setArrayType([], type$.JSArray_SentryException);
      if (!t3)
        B.JSArray_methods.addAll$1(t5, t2);
      t5.push(new A.SentryException(t4, t1, _null, sentryStackTrace, mechanism, _null));
      return $event.copyWith$1$exceptions(t5);
    },
    _applyDefaultPii$1($event) {
      return $event;
    },
    _processEvent$3$eventProcessors$hint($event, eventProcessors, hint) {
      return this._processEvent$body$SentryClient($event, type$.List_EventProcessor._as(eventProcessors), hint);
    },
    _processEvent$body$SentryClient($event, eventProcessors, hint) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_SentryEvent),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, processor, exception, stackTrace, t1, t2, _i, t3, exception0, value, processedEvent, $async$exception0;
      var $async$_processEvent$3$eventProcessors$hint = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              processedEvent = $event;
              t1 = eventProcessors.length, t2 = $async$self._sentry_client$_options, _i = 0;
            case 3:
              // for condition
              if (!(_i < t1)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              processor = eventProcessors[_i];
              $async$handler = 7;
              t3 = processedEvent;
              t3.toString;
              $async$goto = 10;
              return A._asyncAwait(processor.apply$2$hint(t3, hint), $async$_processEvent$3$eventProcessors$hint);
            case 10:
              // returning from await.
              processedEvent = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 9;
              break;
            case 7:
              // catch
              $async$handler = 6;
              $async$exception0 = $async$currentError;
              exception = A.unwrapException($async$exception0);
              stackTrace = A.getTraceFromException($async$exception0);
              t2.logger$4$exception$stackTrace(B.SentryLevel_error, string$.An_exc, exception, stackTrace);
              // goto after finally
              $async$goto = 9;
              break;
            case 6:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 9:
              // after finally
              if (processedEvent == null) {
                value = t2.__SentryOptions_recorder_AI;
                (value === $ ? t2.__SentryOptions_recorder_AI = new A.NoOpClientReportRecorder() : value).recordLostEvent$2(B.DiscardReason_1, B.DataCategory_2);
                t2.logger$2(B.SentryLevel_debug, "Event was dropped by a processor");
                // goto after for
                $async$goto = 5;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = processedEvent;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_processEvent$3$eventProcessors$hint, $async$completer);
    },
    _sampleRate$0() {
      return false;
    },
    _recordLostEvent$2($event, reason) {
      this._sentry_client$_options.get$recorder().recordLostEvent$2(reason, B.DataCategory_2);
    },
    _eventWithRemovedBreadcrumbsIfHandled$1($event) {
      var t2, mechanisms, hasOnlyHandledMechanism,
        t1 = $event.exceptions;
      if (t1 == null)
        t1 = A._setArrayType([], type$.JSArray_SentryException);
      t2 = A._arrayInstanceType(t1);
      mechanisms = new A.WhereTypeIterable(new A.MappedListIterable(t1, t2._eval$1("Mechanism?(1)")._as(new A.SentryClient__eventWithRemovedBreadcrumbsIfHandled_closure()), t2._eval$1("MappedListIterable<1,Mechanism?>")), type$.WhereTypeIterable_Mechanism);
      t2 = mechanisms.get$iterator(mechanisms).moveNext$0();
      hasOnlyHandledMechanism = mechanisms.every$1(0, new A.SentryClient__eventWithRemovedBreadcrumbsIfHandled_closure0());
      if (!t2 || hasOnlyHandledMechanism)
        return $event.copyWith$1$breadcrumbs(A._setArrayType([], type$.JSArray_Breadcrumb));
      else
        return $event;
    }
  };
  A.SentryClient__eventWithRemovedBreadcrumbsIfHandled_closure.prototype = {
    call$1(e) {
      return type$.SentryException._as(e).mechanism;
    },
    $signature: 127
  };
  A.SentryClient__eventWithRemovedBreadcrumbsIfHandled_closure0.prototype = {
    call$1(e) {
      type$.Mechanism._as(e);
      return true;
    },
    $signature: 128
  };
  A.SentryClientAttachmentProcessor.prototype = {
    processAttachments$2(attachments, $event) {
      return this.processAttachments$body$SentryClientAttachmentProcessor(type$.List_SentryAttachment._as(attachments), $event);
    },
    processAttachments$body$SentryClientAttachmentProcessor(attachments, $event) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.List_SentryAttachment),
        $async$returnValue;
      var $async$processAttachments$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = attachments;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$processAttachments$2, $async$completer);
    }
  };
  A.SentryEnvelope.prototype = {
    envelopeStream$1(options) {
      var $async$envelopeStream$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        switch ($async$errorCode) {
          case 2:
            $async$next = $async$nextWhenCanceled;
            $async$goto = $async$next.pop();
            break;
          case 1:
            $async$currentError = $async$result;
            $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              $async$nextWhenCanceled = [1];
              return A._asyncStarHelper(A._IterationMarker_yieldSingle($.$get$utf8JsonEncoder().convert$1($async$self.header.toJson$0())), $async$envelopeStream$1, $async$controller);
            case 3:
              // after yield
              type$.Utf8Codec._eval$1("Codec.S")._as("\n");
              newLineData = B.C_Utf8Codec.get$encoder().convert$1("\n");
              t1 = $async$self.items, t2 = t1.length, _i = 0;
            case 4:
              // for condition
              if (!(_i < t1.length)) {
                // goto after for
                $async$goto = 6;
                break;
              }
              item = t1[_i];
              t3 = item.header;
              $async$goto = 7;
              return A._asyncStarHelper(t3.length.call$0(), $async$envelopeStream$1, $async$controller);
            case 7:
              // returning from await.
              if ($async$result < 0) {
                // goto for update
                $async$goto = 5;
                break;
              }
              $async$goto = t3.type === "attachment" ? 8 : 9;
              break;
            case 8:
              // then
              $async$goto = 10;
              return A._asyncStarHelper(t3.length.call$0(), $async$envelopeStream$1, $async$controller);
            case 10:
              // returning from await.
              t3 = $async$result;
              if (typeof t3 !== "number") {
                t3.$gt();
                // goto return
                $async$goto = 1;
                break;
              }
              if (t3 > 20971520) {
                // goto for update
                $async$goto = 5;
                break;
              }
            case 9:
              // join
              $async$goto = 11;
              return A._asyncStarHelper(item.envelopeItemStream$0(), $async$envelopeStream$1, $async$controller);
            case 11:
              // returning from await.
              itemStream = $async$result;
              $async$goto = J.get$isNotEmpty$asx(itemStream) ? 12 : 13;
              break;
            case 12:
              // then
              $async$goto = 14;
              $async$nextWhenCanceled = [1];
              return A._asyncStarHelper(A._IterationMarker_yieldSingle(newLineData), $async$envelopeStream$1, $async$controller);
            case 14:
              // after yield
              $async$goto = 15;
              $async$nextWhenCanceled = [1];
              return A._asyncStarHelper(A._IterationMarker_yieldSingle(itemStream), $async$envelopeStream$1, $async$controller);
            case 15:
              // after yield
            case 13:
              // join
            case 5:
              // for update
              t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i;
              // goto for condition
              $async$goto = 4;
              break;
            case 6:
              // after for
            case 1:
              // return
              return A._asyncStarHelper(null, 0, $async$controller);
            case 2:
              // rethrow
              return A._asyncStarHelper($async$currentError, 1, $async$controller);
          }
      });
      var $async$goto = 0,
        $async$controller = A._makeAsyncStarStreamController($async$envelopeStream$1, type$.List_int),
        $async$nextWhenCanceled, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, newLineData, t1, t2, _i, item, t3, itemStream;
      return A._streamOfController($async$controller);
    }
  };
  A.SentryEnvelope_SentryEnvelope$fromEvent_closure.prototype = {
    call$1(e) {
      return A.SentryEnvelopeItem_SentryEnvelopeItem$fromAttachment(type$.SentryAttachment._as(e));
    },
    $signature: 129
  };
  A.SentryEnvelopeHeader.prototype = {
    toJson$0() {
      var t1,
        json = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      json.$indexSet(0, "event_id", this.eventId._id);
      json.$indexSet(0, "sdk", this.sdkVersion.toJson$0());
      t1 = this.dsn;
      if (t1 != null)
        json.$indexSet(0, "dsn", t1);
      return json;
    }
  };
  A.SentryEnvelopeItem.prototype = {
    envelopeItemStream$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.List_int),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, itemHeader, newLine, data, t1, exception, $async$exception, $async$temp1;
      var $async$envelopeItemStream$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$temp1 = $.$get$utf8JsonEncoder();
              $async$goto = 7;
              return A._asyncAwait($async$self.header.toJson$0(), $async$envelopeItemStream$0);
            case 7:
              // returning from await.
              itemHeader = $async$temp1.convert$1($async$result);
              type$.Utf8Codec._eval$1("Codec.S")._as("\n");
              newLine = B.C_Utf8Codec.get$encoder().convert$1("\n");
              $async$goto = 8;
              return A._asyncAwait($async$self.dataFactory.call$0(), $async$envelopeItemStream$0);
            case 8:
              // returning from await.
              data = $async$result;
              t1 = A.List_List$of(itemHeader, true, type$.int);
              J.addAll$1$ax(t1, newLine);
              J.addAll$1$ax(t1, data);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = A._setArrayType([], type$.JSArray_int);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$envelopeItemStream$0, $async$completer);
    }
  };
  A.SentryEnvelopeItem_SentryEnvelopeItem$fromAttachment_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Uint8List),
        $async$returnValue, $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.attachment.get$bytes(), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 130
  };
  A.SentryEnvelopeItem_SentryEnvelopeItem$fromEvent_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.List_int),
        $async$returnValue, $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.$get$utf8JsonEncoder().convert$1($async$self.event.toJson$0());
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 20
  };
  A.SentryEnvelopeItem_SentryEnvelopeItem$fromClientReport_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.List_int),
        $async$returnValue, $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.$get$utf8JsonEncoder().convert$1($async$self.clientReport.toJson$0());
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 20
  };
  A._CachedItem.prototype = {
    getData$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.List_int),
        $async$returnValue, $async$self = this, t1;
      var $async$getData$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = $async$self._sentry_envelope_item$_data == null ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncAwait($async$self._dataFactory.call$0(), $async$getData$0);
            case 5:
              // returning from await.
              $async$self.set$_sentry_envelope_item$_data($async$result);
            case 4:
              // join
              t1 = $async$self._sentry_envelope_item$_data;
              t1.toString;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$getData$0, $async$completer);
    },
    getDataLength$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.int),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, t1, exception, $async$exception, $async$temp1;
      var $async$getDataLength$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$temp1 = J;
              $async$goto = 7;
              return A._asyncAwait($async$self.getData$0(), $async$getDataLength$0);
            case 7:
              // returning from await.
              t1 = $async$temp1.get$length$asx($async$result);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              $async$returnValue = -1;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$getDataLength$0, $async$completer);
    },
    set$_sentry_envelope_item$_data(_data) {
      this._sentry_envelope_item$_data = type$.nullable_List_int._as(_data);
    }
  };
  A.SentryEnvelopeItemHeader.prototype = {
    toJson$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$toJson$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
              t1.$indexSet(0, "content_type", $async$self.contentType);
              t1.$indexSet(0, "type", $async$self.type);
              $async$temp1 = t1;
              $async$goto = 3;
              return A._asyncAwait($async$self.length.call$0(), $async$toJson$0);
            case 3:
              // returning from await.
              $async$temp1.$indexSet(0, "length", $async$result);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$toJson$0, $async$completer);
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.SentryEventLike.prototype = {};
  A.SentryExceptionFactory.prototype = {};
  A.SentryOptions.prototype = {
    get$logger() {
      return this._logger;
    },
    get$recorder() {
      var value = this.__SentryOptions_recorder_AI;
      return value === $ ? this.__SentryOptions_recorder_AI = new A.NoOpClientReportRecorder() : value;
    },
    get$stackTraceFactory() {
      var value = this.__SentryOptions_stackTraceFactory_AI;
      return value === $ ? this.__SentryOptions_stackTraceFactory_AI = new A.SentryStackTraceFactory(this, A.RegExp_RegExp("^\\s*#[0-9]+ +abs +([A-Fa-f0-9]+)", false), A.RegExp_RegExp("^\\s*#", true)) : value;
    },
    _debugLogger$5$exception$logger$stackTrace(level, message, exception, logger, stackTrace) {
      type$.SentryLevel._as(level);
      A._asString(message);
      A._asStringQ(logger);
      type$.nullable_StackTrace._as(stackTrace);
      level.toDartLogLevel$0();
      A.getUtcDateTime();
    },
    _debugLogger$2(level, message) {
      return this._debugLogger$5$exception$logger$stackTrace(level, message, null, null, null);
    },
    _debugLogger$4$exception$stackTrace(level, message, exception, stackTrace) {
      return this._debugLogger$5$exception$logger$stackTrace(level, message, exception, null, stackTrace);
    },
    set$_logger(_logger) {
      this._logger = type$.void_Function_2_SentryLevel_and_String_$named_exception_nullable_Object_and_logger_nullable_String_and_stackTrace_nullable_StackTrace._as(_logger);
    },
    logger$4$exception$stackTrace(arg0, arg1, arg2, arg3) {
      return this.get$logger().call$4$exception$stackTrace(arg0, arg1, arg2, arg3);
    },
    logger$2(arg0, arg1) {
      return this.get$logger().call$2(arg0, arg1);
    }
  };
  A.SentryStackTraceFactory.prototype = {
    getStackFrames$1(stackTrace) {
      var t, t1, t2, _i, frame,
        chain = this._parseStackTrace$1(stackTrace),
        $frames = A._setArrayType([], type$.JSArray_SentryStackFrame);
      for (t = 0; t < chain.get$traces().length; ++t) {
        t1 = chain.get$traces();
        if (!(t < t1.length))
          return A.ioore(t1, t);
        for (t1 = t1[t].get$frames(), t2 = t1.length, _i = 0; _i < t2; ++_i) {
          frame = t1[_i];
          if (frame.get$$package() != null && B.JSArray_methods.contains$1(B.List_pQJ, frame.get$$package()))
            continue;
          B.JSArray_methods.add$1($frames, this.encodeStackTraceFrame$1(frame));
        }
        if (t < chain.get$traces().length - 1)
          B.JSArray_methods.add$1($frames, $.$get$SentryStackFrame_asynchronousGapFrameJson());
      }
      t1 = type$.ReversedListIterable_SentryStackFrame;
      return A.List_List$of(new A.ReversedListIterable($frames, t1), true, t1._eval$1("ListIterable.E"));
    },
    _parseStackTrace$1(stackTrace) {
      var t1, startOffset;
      if (type$.Chain._is(stackTrace) || type$.Trace._is(stackTrace))
        return A.Chain_Chain$forTrace(type$.StackTrace._as(stackTrace));
      if (type$.StackTrace._is(stackTrace))
        stackTrace = stackTrace.toString$0(0);
      if (typeof stackTrace == "string") {
        t1 = this._frameRegex.firstMatch$1(stackTrace);
        startOffset = t1 == null ? null : t1._match.index;
        if (startOffset == null)
          startOffset = 0;
        return A.Chain_Chain$parse(startOffset === 0 ? stackTrace : B.JSString_methods.substring$1(stackTrace, startOffset));
      }
      return new A.Chain(A.List_List$unmodifiable(A._setArrayType([], type$.JSArray_Trace), type$.Trace));
    },
    encodeStackTraceFrame$1(frame) {
      var match, t1, fileName, sentryStackFrame, _null = null,
        member = frame.get$member();
      if (frame instanceof A.UnparsedFrame && member != null) {
        match = this._absRegex.firstMatch$1(member);
        if (match != null) {
          t1 = match._match;
          if (1 >= t1.length)
            return A.ioore(t1, 1);
          t1 = t1[1];
          t1.toString;
          return A.SentryStackFrame$(_null, _null, _null, _null, _null, _null, _null, _null, "0x" + t1, _null, _null, _null, _null, "native", _null, _null, _null, _null, _null, _null, _null);
        }
      }
      fileName = frame.get$uri().get$pathSegments().length !== 0 ? B.JSArray_methods.get$last(frame.get$uri().get$pathSegments()) : _null;
      sentryStackFrame = A.SentryStackFrame$(B.Location_methods.get$origin(type$.Location._as(window.location)) + "/" + this._absolutePathForCrashReport$1(frame), _null, _null, fileName, _null, member, _null, this.isInApp$1(frame), _null, _null, _null, _null, frame.get$$package(), _null, _null, _null, _null, _null, _null, _null, _null);
      if (frame.get$line() != null) {
        t1 = frame.get$line();
        t1.toString;
        t1 = t1 >= 0;
      } else
        t1 = false;
      if (t1)
        sentryStackFrame = sentryStackFrame.copyWith$1$lineNo(frame.get$line());
      if (frame.get$column() != null) {
        t1 = frame.get$column();
        t1.toString;
        t1 = t1 >= 0;
      } else
        t1 = false;
      return t1 ? sentryStackFrame.copyWith$1$colNo(frame.get$column()) : sentryStackFrame;
    },
    _absolutePathForCrashReport$1(frame) {
      if (frame.get$uri().get$scheme() !== "dart" && frame.get$uri().get$scheme() !== "package" && frame.get$uri().get$pathSegments().length !== 0)
        return B.JSArray_methods.get$last(frame.get$uri().get$pathSegments());
      return frame.get$uri().toString$0(0);
    },
    isInApp$1(frame) {
      var $package, t1, t2;
      if (frame.get$uri().get$scheme().length === 0)
        return true;
      $package = frame.get$$package();
      if ($package != null) {
        t1 = this._sentry_stack_trace_factory$_options;
        t2 = type$.String;
        if (B.JSArray_methods.contains$1(A.List_List$unmodifiable(t1._inAppIncludes, t2), $package))
          return true;
        if (B.JSArray_methods.contains$1(A.List_List$unmodifiable(t1._inAppExcludes, t2), $package))
          return false;
      }
      if (frame.get$isCore())
        return false;
      if (frame.get$$package() === "flutter")
        return false;
      return true;
    }
  };
  A.SentryTracesSampler.prototype = {};
  A.ThrowableMechanism.prototype = {};
  A.DataCategory.prototype = {
    toString$0(_) {
      return "DataCategory." + this._name;
    }
  };
  A.HttpTransport.prototype = {
    send$1(_, envelope) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_SentryId),
        $async$returnValue, $async$self = this, streamedRequest, t2, response, t3, retryAfterHeader, sentryRateLimitHeader, t4, eventId, options, rng, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t1, filteredEnvelope;
      var $async$send$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._rateLimiter;
              filteredEnvelope = t1.filter$1(0, envelope);
              if (filteredEnvelope == null) {
                $async$returnValue = new A.SentryId("00000000000000000000000000000000");
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return A._asyncAwait($async$self._createStreamedRequest$1(filteredEnvelope), $async$send$1);
            case 3:
              // returning from await.
              streamedRequest = $async$result;
              t2 = $async$self._http_transport$_options;
              $async$goto = 4;
              return A._asyncAwait(t2.httpClient.send$1(0, streamedRequest).then$1$1(A.response_Response_fromStream$closure(), type$.Response), $async$send$1);
            case 4:
              // returning from await.
              response = $async$result;
              t3 = response.headers;
              retryAfterHeader = t3.$index(0, "Retry-After");
              sentryRateLimitHeader = t3.$index(0, "X-Sentry-Rate-Limits");
              t4 = response.statusCode;
              t1.updateRetryAfterLimits$3(sentryRateLimitHeader, retryAfterHeader, t4);
              if (t4 !== 200) {
                if (t4 >= 400 && t4 !== 429)
                  $async$self._recorder.recordLostEvent$2(B.DiscardReason_3, B.DataCategory_2);
                $async$returnValue = new A.SentryId("00000000000000000000000000000000");
                // goto return
                $async$goto = 1;
                break;
              } else
                t2.logger$2(B.SentryLevel_debug, "Envelope " + envelope.header.eventId.toString$0(0) + " was sent successfully.");
              eventId = J.$index$asx(B.C_JsonCodec.decode$1(0, A.encodingForCharset(A._contentTypeForHeaders(t3).parameters._collection$_map.$index(0, "charset")).decode$1(0, response.bodyBytes)), "id");
              if (eventId == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              A._asString(eventId);
              t1 = A.stringReplaceAllUnchecked(eventId, "-", "");
              if (t1 == null) {
                t1 = $.$get$SentryId__uuidGenerator();
                type$.nullable_Map_String_dynamic._as(null);
                options = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
                t1._initV4$0();
                options.$index(0, "positionalArgs");
                options.$index(0, "namedArgs");
                options.$index(0, "rng");
                t1 = t1.get$_uuid$_state().$index(0, "globalRNG");
                t1.toString;
                rng = type$.List_int._as(type$.dynamic_Function._as(t1).call$0());
                options.$index(0, "random");
                t1 = J.getInterceptor$asx(rng);
                t2 = t1.$index(rng, 6);
                if (typeof t2 !== "number") {
                  $async$returnValue = t2.$and();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1.$indexSet(rng, 6, t2 & 15 | 64);
                t2 = t1.$index(rng, 8);
                if (typeof t2 !== "number") {
                  $async$returnValue = t2.$and();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1.$indexSet(rng, 8, t2 & 63 | 128);
                if (t1.get$length(rng) !== 16)
                  A.throwExpression(A.Exception_Exception(string$.The_pr));
                t2 = $.$get$Uuid__byteToHex();
                t3 = B.JSArray_methods.$index(t2, t1.$index(rng, 0));
                t4 = B.JSArray_methods.$index(t2, t1.$index(rng, 1));
                t5 = B.JSArray_methods.$index(t2, t1.$index(rng, 2));
                t6 = B.JSArray_methods.$index(t2, t1.$index(rng, 3));
                t7 = B.JSArray_methods.$index(t2, t1.$index(rng, 4));
                t8 = B.JSArray_methods.$index(t2, t1.$index(rng, 5));
                t9 = B.JSArray_methods.$index(t2, t1.$index(rng, 6));
                t10 = B.JSArray_methods.$index(t2, t1.$index(rng, 7));
                t11 = B.JSArray_methods.$index(t2, t1.$index(rng, 8));
                t12 = B.JSArray_methods.$index(t2, t1.$index(rng, 9));
                t13 = B.JSArray_methods.$index(t2, t1.$index(rng, 10));
                t14 = B.JSArray_methods.$index(t2, t1.$index(rng, 11));
                t15 = B.JSArray_methods.$index(t2, t1.$index(rng, 12));
                t16 = B.JSArray_methods.$index(t2, t1.$index(rng, 13));
                t17 = B.JSArray_methods.$index(t2, t1.$index(rng, 14));
                t1 = B.JSArray_methods.$index(t2, t1.$index(rng, 15));
                t1 = A.stringReplaceAllUnchecked(t3 + t4 + t5 + t6 + "-" + t7 + t8 + "-" + t9 + t10 + "-" + t11 + t12 + "-" + t13 + t14 + t15 + t16 + t17 + t1, "-", "");
              }
              $async$returnValue = new A.SentryId(t1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$send$1, $async$completer);
    },
    _createStreamedRequest$1(envelope) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.StreamedRequest),
        $async$returnValue, $async$self = this, t2, port, pathLength, apiPath, streamedRequest, compressionSink, t3, t1, uriCopy;
      var $async$_createStreamedRequest$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._dsn;
              uriCopy = t1.uri;
              if (uriCopy.get$hasPort())
                if (!(uriCopy.get$scheme() === "http" && uriCopy.get$port(uriCopy) !== 80))
                  t2 = uriCopy.get$scheme() === "https" && uriCopy.get$port(uriCopy) !== 443;
                else
                  t2 = true;
              else
                t2 = false;
              port = t2 ? ":" + uriCopy.get$port(uriCopy) : "";
              pathLength = uriCopy.get$pathSegments().length;
              apiPath = pathLength > 1 ? B.JSArray_methods.join$1(B.JSArray_methods.$add(B.JSArray_methods.sublist$2(uriCopy.get$pathSegments(), 0, pathLength - 1), A._setArrayType(["api"], type$.JSArray_String)), "/") : "api";
              streamedRequest = A.StreamedRequest$("POST", A.Uri_parse(uriCopy.get$scheme() + "://" + uriCopy.get$host(uriCopy) + port + "/" + apiPath + "/" + t1.projectId + "/envelope/"));
              t1 = streamedRequest._streamed_request$_controller;
              compressionSink = new A._StreamSinkWrapper(t1, A._instanceType(t1)._eval$1("_StreamSinkWrapper<1>"));
              envelope.envelopeStream$1($async$self._http_transport$_options).listen$1(type$.void_Function_List_int._as(compressionSink.get$add(compressionSink))).onDone$1(compressionSink.get$close(compressionSink));
              t1 = $async$self.__HttpTransport__credentialBuilder_A;
              t1 === $ && A.throwLateFieldNI("_credentialBuilder");
              t2 = type$.Map_String_String._as($async$self._headers);
              t3 = type$.String;
              t2.addAll$1(0, A.LinkedHashMap_LinkedHashMap$_literal(["X-Sentry-Auth", t1._authHeader + ", sentry_timestamp=" + t1._clock.call$0()._value], t3, t3));
              streamedRequest.headers.addAll$1(0, t2);
              $async$returnValue = streamedRequest;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_createStreamedRequest$1, $async$completer);
    },
    $isTransport: 1
  };
  A._CredentialBuilder.prototype = {};
  A.NoOpTransport.prototype = {
    send$1(_, envelope) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_SentryId),
        $async$returnValue;
      var $async$send$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$send$1, $async$completer);
    },
    $isTransport: 1
  };
  A.RateLimit.prototype = {};
  A.RateLimitParser.prototype = {
    parseRateLimitHeader$0() {
      var rateLimits, rateLimitValues, t1, _i, durationAndCategories, t2, duration, allCategories, categoryValues, _i0, category,
        rateLimitHeader = this._header;
      if (rateLimitHeader == null)
        return A._setArrayType([], type$.JSArray_RateLimit);
      rateLimits = A._setArrayType([], type$.JSArray_RateLimit);
      rateLimitValues = rateLimitHeader.toLowerCase().split(",");
      for (t1 = rateLimitValues.length, _i = 0; _i < rateLimitValues.length; rateLimitValues.length === t1 || (0, A.throwConcurrentModificationError)(rateLimitValues), ++_i) {
        durationAndCategories = J.trim$0$s(rateLimitValues[_i]).split(":");
        t2 = durationAndCategories.length;
        if (t2 === 0)
          continue;
        if (0 >= t2)
          return A.ioore(durationAndCategories, 0);
        duration = A.RateLimitParser__parseRetryAfterOrDefault(durationAndCategories[0]);
        if (t2 <= 1)
          continue;
        allCategories = durationAndCategories[1];
        if (allCategories.length !== 0) {
          categoryValues = allCategories.split(";");
          for (t2 = categoryValues.length, _i0 = 0; _i0 < t2; ++_i0) {
            category = A.DataCategoryExtension_fromStringValue(categoryValues[_i0]);
            if (category !== B.DataCategory_7)
              B.JSArray_methods.add$1(rateLimits, new A.RateLimit(category, duration));
          }
        } else
          B.JSArray_methods.add$1(rateLimits, new A.RateLimit(B.DataCategory_0, duration));
      }
      return rateLimits;
    }
  };
  A.RateLimiter.prototype = {
    filter$1(_, envelope) {
      var t1, t2, t3, t4, dropItems, _i, item, t5, value, toSend;
      for (t1 = envelope.items, t2 = t1.length, t3 = this._rate_limiter$_options, t4 = type$.JSArray_SentryEnvelopeItem, dropItems = null, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        item = t1[_i];
        t5 = item.header.type;
        if (this._isRetryAfter$1(t5)) {
          if (dropItems == null)
            dropItems = A._setArrayType([], t4);
          B.JSArray_methods.add$1(dropItems, item);
          value = t3.__SentryOptions_recorder_AI;
          if (value === $)
            value = t3.__SentryOptions_recorder_AI = new A.NoOpClientReportRecorder();
          value.recordLostEvent$2(B.DiscardReason_6, this._categoryFromItemType$1(t5));
        }
      }
      if (dropItems != null) {
        toSend = A._setArrayType([], t4);
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          item = t1[_i];
          if (!B.JSArray_methods.contains$1(dropItems, item))
            B.JSArray_methods.add$1(toSend, item);
        }
        if (toSend.length === 0)
          return null;
        return new A.SentryEnvelope(envelope.header, toSend);
      } else
        return envelope;
    },
    updateRetryAfterLimits$3(sentryRateLimitHeader, retryAfterHeader, errorCode) {
      var currentDateTime, t1, rateLimits, t2, _i, rateLimit, t3, t4, t5, oldDate;
      A.getUtcDateTime();
      currentDateTime = A.getUtcDateTime()._value;
      t1 = type$.JSArray_RateLimit;
      rateLimits = A._setArrayType([], t1);
      if (sentryRateLimitHeader != null)
        rateLimits = new A.RateLimitParser(sentryRateLimitHeader).parseRateLimitHeader$0();
      else if (errorCode === 429)
        rateLimits = A._setArrayType([new A.RateLimit(B.DataCategory_0, A.RateLimitParser__parseRetryAfterOrDefault(retryAfterHeader))], t1);
      for (t1 = rateLimits.length, t2 = this._rateLimitedUntil, _i = 0; _i < rateLimits.length; rateLimits.length === t1 || (0, A.throwConcurrentModificationError)(rateLimits), ++_i) {
        rateLimit = rateLimits[_i];
        t3 = rateLimit.category;
        t4 = currentDateTime + B.JSInt_methods._tdivFast$1(rateLimit.duration._duration, 1000);
        t5 = new A.DateTime(t4, false);
        t5.DateTime$_withValue$2$isUtc(t4, false);
        oldDate = t2.$index(0, t3);
        if (oldDate == null || t4 > oldDate._value)
          t2.$indexSet(0, t3, t5);
      }
    },
    _isRetryAfter$1(itemType) {
      var currentDate, t1, dateAllCategories, dateCategory,
        dataCategory = this._categoryFromItemType$1(itemType);
      A.getUtcDateTime();
      currentDate = A.DateTime$fromMillisecondsSinceEpoch(A.getUtcDateTime()._value, false);
      t1 = this._rateLimitedUntil;
      dateAllCategories = t1.$index(0, B.DataCategory_0);
      if (dateAllCategories != null)
        if (currentDate._value <= dateAllCategories._value)
          return true;
      if (B.DataCategory_7 === dataCategory)
        return false;
      dateCategory = t1.$index(0, dataCategory);
      if (dateCategory != null)
        return currentDate._value <= dateCategory._value;
      return false;
    },
    _categoryFromItemType$1(itemType) {
      switch (itemType) {
        case "event":
          return B.DataCategory_2;
        case "session":
          return B.DataCategory_3;
        case "attachment":
          return B.DataCategory_5;
        case "transaction":
          return B.DataCategory_4;
        default:
          return B.DataCategory_7;
      }
    }
  };
  A.SourceFile.prototype = {
    get$length(_) {
      return this._decodedChars.length;
    },
    get$lines() {
      return this._lineStarts.length;
    },
    SourceFile$decoded$2$url(decodedChars, url) {
      var t1, t2, t3, i, c, j, t4;
      for (t1 = this._decodedChars, t2 = t1.length, t3 = this._lineStarts, i = 0; i < t2; ++i) {
        c = t1[i];
        if (c === 13) {
          j = i + 1;
          if (j < t2) {
            if (!(j < t2))
              return A.ioore(t1, j);
            t4 = t1[j] !== 10;
          } else
            t4 = true;
          if (t4)
            c = 10;
        }
        if (c === 10)
          B.JSArray_methods.add$1(t3, i + 1);
      }
    },
    getLine$1(offset) {
      var t1, _this = this;
      if (offset < 0)
        throw A.wrapException(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw A.wrapException(A.RangeError$("Offset " + offset + string$.x20must_ + _this.get$length(_this) + "."));
      t1 = _this._lineStarts;
      if (offset < B.JSArray_methods.get$first(t1))
        return -1;
      if (offset >= B.JSArray_methods.get$last(t1))
        return t1.length - 1;
      if (_this._isNearCachedLine$1(offset)) {
        t1 = _this._cachedLine;
        t1.toString;
        return t1;
      }
      return _this._cachedLine = _this._binarySearch$1(offset) - 1;
    },
    _isNearCachedLine$1(offset) {
      var t2, t3, t4,
        t1 = this._cachedLine;
      if (t1 == null)
        return false;
      t2 = this._lineStarts;
      t3 = t2.length;
      if (t1 >>> 0 !== t1 || t1 >= t3)
        return A.ioore(t2, t1);
      if (offset < t2[t1])
        return false;
      if (!(t1 >= t3 - 1)) {
        t4 = t1 + 1;
        if (!(t4 < t3))
          return A.ioore(t2, t4);
        t4 = offset < t2[t4];
      } else
        t4 = true;
      if (t4)
        return true;
      if (!(t1 >= t3 - 2)) {
        t4 = t1 + 2;
        if (!(t4 < t3))
          return A.ioore(t2, t4);
        t4 = offset < t2[t4];
        t2 = t4;
      } else
        t2 = true;
      if (t2) {
        this._cachedLine = t1 + 1;
        return true;
      }
      return false;
    },
    _binarySearch$1(offset) {
      var min, half,
        t1 = this._lineStarts,
        t2 = t1.length,
        max = t2 - 1;
      for (min = 0; min < max;) {
        half = min + B.JSInt_methods._tdivFast$1(max - min, 2);
        if (!(half >= 0 && half < t2))
          return A.ioore(t1, half);
        if (t1[half] > offset)
          max = half;
        else
          min = half + 1;
      }
      return max;
    },
    getColumn$1(offset) {
      var line, t1, lineStart, _this = this;
      if (offset < 0)
        throw A.wrapException(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw A.wrapException(A.RangeError$("Offset " + offset + " must be not be greater than the number of characters in the file, " + _this.get$length(_this) + "."));
      line = _this.getLine$1(offset);
      t1 = _this._lineStarts;
      if (!(line >= 0 && line < t1.length))
        return A.ioore(t1, line);
      lineStart = t1[line];
      if (lineStart > offset)
        throw A.wrapException(A.RangeError$("Line " + line + " comes after offset " + offset + "."));
      return offset - lineStart;
    },
    getOffset$1(line) {
      var t1, t2, result, t3;
      if (line < 0)
        throw A.wrapException(A.RangeError$("Line may not be negative, was " + line + "."));
      else {
        t1 = this._lineStarts;
        t2 = t1.length;
        if (line >= t2)
          throw A.wrapException(A.RangeError$("Line " + line + " must be less than the number of lines in the file, " + this.get$lines() + "."));
      }
      result = t1[line];
      if (result <= this._decodedChars.length) {
        t3 = line + 1;
        t1 = t3 < t2 && result >= t1[t3];
      } else
        t1 = true;
      if (t1)
        throw A.wrapException(A.RangeError$("Line " + line + " doesn't have 0 columns."));
      return result;
    }
  };
  A.FileLocation.prototype = {
    get$sourceUrl() {
      return this.file.url;
    },
    get$line() {
      return this.file.getLine$1(this.offset);
    },
    get$column() {
      return this.file.getColumn$1(this.offset);
    },
    get$offset(receiver) {
      return this.offset;
    }
  };
  A._FileSpan.prototype = {
    get$sourceUrl() {
      return this.file.url;
    },
    get$length(_) {
      return this._end - this._file$_start;
    },
    get$start(_) {
      return A.FileLocation$_(this.file, this._file$_start);
    },
    get$end() {
      return A.FileLocation$_(this.file, this._end);
    },
    get$text(_) {
      return A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(this.file._decodedChars, this._file$_start, this._end), 0, null);
    },
    get$context() {
      var _this = this,
        t1 = _this.file,
        endOffset = _this._end,
        endLine = t1.getLine$1(endOffset);
      if (t1.getColumn$1(endOffset) === 0 && endLine !== 0) {
        if (endOffset - _this._file$_start === 0)
          return endLine === t1._lineStarts.length - 1 ? "" : A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(endLine), t1.getOffset$1(endLine + 1)), 0, null);
      } else
        endOffset = endLine === t1._lineStarts.length - 1 ? t1._decodedChars.length : t1.getOffset$1(endLine + 1);
      return A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(t1.getLine$1(_this._file$_start)), endOffset), 0, null);
    },
    compareTo$1(_, other) {
      var result;
      type$.SourceSpan._as(other);
      if (!(other instanceof A._FileSpan))
        return this.super$SourceSpanMixin$compareTo(0, other);
      result = B.JSInt_methods.compareTo$1(this._file$_start, other._file$_start);
      return result === 0 ? B.JSInt_methods.compareTo$1(this._end, other._end) : result;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!type$.FileSpan._is(other))
        return _this.super$SourceSpanMixin$$eq(0, other);
      return _this._file$_start === other._file$_start && _this._end === other._end && J.$eq$(_this.file.url, other.file.url);
    },
    get$hashCode(_) {
      return A.Object_hash(this._file$_start, this._end, this.file.url);
    },
    $isFileSpan: 1,
    $isSourceSpanWithContext: 1
  };
  A.Highlighter.prototype = {
    highlight$0(_) {
      var t2, highlightsByColumn, t3, t4, i, line, lastLine, t5, t6, t7, t8, t9, t10, t11, index, primaryIdx, primary, _i, _this = this, _null = null,
        t1 = _this._lines;
      _this._writeFileStart$1(B.JSArray_methods.get$first(t1).url);
      t2 = _this._maxMultilineSpans;
      highlightsByColumn = A.List_List$filled(t2, _null, false, type$.nullable__Highlight);
      for (t3 = _this._buffer, t2 = t2 !== 0, t4 = _this._primaryColor, i = 0; i < t1.length; ++i) {
        line = t1[i];
        if (i > 0) {
          lastLine = t1[i - 1];
          t5 = lastLine.url;
          t6 = line.url;
          if (!J.$eq$(t5, t6)) {
            _this._writeSidebar$1$end("\u2575");
            t3._contents += "\n";
            _this._writeFileStart$1(t6);
          } else if (lastLine.number + 1 !== line.number) {
            _this._writeSidebar$1$text("...");
            t3._contents += "\n";
          }
        }
        for (t5 = line.highlights, t6 = A._arrayInstanceType(t5)._eval$1("ReversedListIterable<1>"), t7 = new A.ReversedListIterable(t5, t6), t7 = new A.ListIterator(t7, t7.get$length(t7), t6._eval$1("ListIterator<ListIterable.E>")), t6 = t6._eval$1("ListIterable.E"), t8 = line.number, t9 = line.text; t7.moveNext$0();) {
          t10 = t7.__internal$_current;
          if (t10 == null)
            t10 = t6._as(t10);
          t11 = t10.span;
          if (t11.get$start(t11).get$line() !== t11.get$end().get$line() && t11.get$start(t11).get$line() === t8 && _this._isOnlyWhitespace$1(B.JSString_methods.substring$2(t9, 0, t11.get$start(t11).get$column()))) {
            index = B.JSArray_methods.indexOf$1(highlightsByColumn, _null);
            if (index < 0)
              A.throwExpression(A.ArgumentError$(A.S(highlightsByColumn) + " contains no null elements.", _null));
            B.JSArray_methods.$indexSet(highlightsByColumn, index, t10);
          }
        }
        _this._writeSidebar$1$line(t8);
        t3._contents += " ";
        _this._writeMultilineHighlights$2(line, highlightsByColumn);
        if (t2)
          t3._contents += " ";
        primaryIdx = B.JSArray_methods.indexWhere$1(t5, new A.Highlighter_highlight_closure());
        if (primaryIdx === -1)
          primary = _null;
        else {
          if (!(primaryIdx >= 0 && primaryIdx < t5.length))
            return A.ioore(t5, primaryIdx);
          primary = t5[primaryIdx];
        }
        t6 = primary != null;
        if (t6) {
          t7 = primary.span;
          t10 = t7.get$start(t7).get$line() === t8 ? t7.get$start(t7).get$column() : 0;
          _this._writeHighlightedText$4$color(t9, t10, t7.get$end().get$line() === t8 ? t7.get$end().get$column() : t9.length, t4);
        } else
          _this._writeText$1(t9);
        t3._contents += "\n";
        if (t6)
          _this._writeIndicator$3(line, primary, highlightsByColumn);
        for (t6 = t5.length, _i = 0; _i < t6; ++_i) {
          t5[_i].toString;
          continue;
        }
      }
      _this._writeSidebar$1$end("\u2575");
      t1 = t3._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _writeFileStart$1(url) {
      var _this = this;
      if (!_this._multipleFiles || !type$.Uri._is(url))
        _this._writeSidebar$1$end("\u2577");
      else {
        _this._writeSidebar$1$end("\u250c");
        _this._colorize$2$color(new A.Highlighter__writeFileStart_closure(_this), "\x1b[34m");
        _this._buffer._contents += " " + $.$get$context().prettyUri$1(url);
      }
      _this._buffer._contents += "\n";
    },
    _writeMultilineHighlights$3$current(line, highlightsByColumn, current) {
      var t1, currentColor, t2, t3, t4, foundCurrent, _i, highlight, t5, startLine, t6, endLine, _this = this, _box_0 = {};
      type$.List_nullable__Highlight._as(highlightsByColumn);
      _box_0.openedOnThisLine = false;
      _box_0.openedOnThisLineColor = null;
      t1 = current == null;
      if (t1)
        currentColor = null;
      else
        currentColor = _this._primaryColor;
      for (t2 = highlightsByColumn.length, t3 = _this._primaryColor, t1 = !t1, t4 = _this._buffer, foundCurrent = false, _i = 0; _i < t2; ++_i) {
        highlight = highlightsByColumn[_i];
        t5 = highlight == null;
        if (t5)
          startLine = null;
        else {
          t6 = highlight.span;
          startLine = t6.get$start(t6).get$line();
        }
        endLine = t5 ? null : highlight.span.get$end().get$line();
        if (t1 && highlight === current) {
          _this._colorize$2$color(new A.Highlighter__writeMultilineHighlights_closure(_this, startLine, line), currentColor);
          foundCurrent = true;
        } else if (foundCurrent)
          _this._colorize$2$color(new A.Highlighter__writeMultilineHighlights_closure0(_this, highlight), currentColor);
        else if (t5)
          if (_box_0.openedOnThisLine)
            _this._colorize$2$color(new A.Highlighter__writeMultilineHighlights_closure1(_this), _box_0.openedOnThisLineColor);
          else
            t4._contents += " ";
        else
          _this._colorize$2$color(new A.Highlighter__writeMultilineHighlights_closure2(_box_0, _this, current, startLine, line, highlight, endLine), t3);
      }
    },
    _writeMultilineHighlights$2(line, highlightsByColumn) {
      return this._writeMultilineHighlights$3$current(line, highlightsByColumn, null);
    },
    _writeHighlightedText$4$color(text, startColumn, endColumn, color) {
      var _this = this;
      _this._writeText$1(B.JSString_methods.substring$2(text, 0, startColumn));
      _this._colorize$2$color(new A.Highlighter__writeHighlightedText_closure(_this, text, startColumn, endColumn), color);
      _this._writeText$1(B.JSString_methods.substring$2(text, endColumn, text.length));
    },
    _writeIndicator$3(line, highlight, highlightsByColumn) {
      var color, t1, t2, coversWholeLine, _this = this;
      type$.List_nullable__Highlight._as(highlightsByColumn);
      color = _this._primaryColor;
      t1 = highlight.span;
      if (t1.get$start(t1).get$line() === t1.get$end().get$line()) {
        _this._writeSidebar$0();
        t1 = _this._buffer;
        t1._contents += " ";
        _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
        if (highlightsByColumn.length !== 0)
          t1._contents += " ";
        _this._colorize$2$color(new A.Highlighter__writeIndicator_closure(_this, line, highlight), color);
        t1._contents += "\n";
      } else {
        t2 = line.number;
        if (t1.get$start(t1).get$line() === t2) {
          if (B.JSArray_methods.contains$1(highlightsByColumn, highlight))
            return;
          A.replaceFirstNull(highlightsByColumn, highlight, type$._Highlight);
          _this._writeSidebar$0();
          t1 = _this._buffer;
          t1._contents += " ";
          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
          _this._colorize$2$color(new A.Highlighter__writeIndicator_closure0(_this, line, highlight), color);
          t1._contents += "\n";
        } else if (t1.get$end().get$line() === t2) {
          coversWholeLine = t1.get$end().get$column() === line.text.length;
          if (coversWholeLine && true) {
            A.replaceWithNull(highlightsByColumn, highlight, type$._Highlight);
            return;
          }
          _this._writeSidebar$0();
          t1 = _this._buffer;
          t1._contents += " ";
          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
          _this._colorize$2$color(new A.Highlighter__writeIndicator_closure1(_this, coversWholeLine, line, highlight), color);
          t1._contents += "\n";
          A.replaceWithNull(highlightsByColumn, highlight, type$._Highlight);
        }
      }
    },
    _writeArrow$3$beginning(line, column, beginning) {
      var t1 = beginning ? 0 : 1,
        t2 = this._buffer;
      t1 = t2._contents += B.JSString_methods.$mul("\u2500", 1 + column + this._countTabs$1(B.JSString_methods.substring$2(line.text, 0, column + t1)) * 3);
      t2._contents = t1 + "^";
    },
    _writeArrow$2(line, column) {
      return this._writeArrow$3$beginning(line, column, true);
    },
    _writeText$1(text) {
      var t1, t2, t3, t4;
      for (t1 = new A.CodeUnits(text), t2 = type$.CodeUnits, t1 = new A.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t3 = this._buffer, t2 = t2._eval$1("ListMixin.E"); t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        if (t4 == null)
          t4 = t2._as(t4);
        if (t4 === 9)
          t3._contents += B.JSString_methods.$mul(" ", 4);
        else
          t3._contents += A.Primitives_stringFromCharCode(t4);
      }
    },
    _writeSidebar$3$end$line$text(end, line, text) {
      var t1 = {};
      t1.text = text;
      if (line != null)
        t1.text = B.JSInt_methods.toString$0(line + 1);
      this._colorize$2$color(new A.Highlighter__writeSidebar_closure(t1, this, end), "\x1b[34m");
    },
    _writeSidebar$1$end(end) {
      return this._writeSidebar$3$end$line$text(end, null, null);
    },
    _writeSidebar$1$text(text) {
      return this._writeSidebar$3$end$line$text(null, null, text);
    },
    _writeSidebar$1$line(line) {
      return this._writeSidebar$3$end$line$text(null, line, null);
    },
    _writeSidebar$0() {
      return this._writeSidebar$3$end$line$text(null, null, null);
    },
    _countTabs$1(text) {
      var t1, t2, count, t3;
      for (t1 = new A.CodeUnits(text), t2 = type$.CodeUnits, t1 = new A.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"), count = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if ((t3 == null ? t2._as(t3) : t3) === 9)
          ++count;
      }
      return count;
    },
    _isOnlyWhitespace$1(text) {
      var t1, t2, t3;
      for (t1 = new A.CodeUnits(text), t2 = type$.CodeUnits, t1 = new A.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 !== 32 && t3 !== 9)
          return false;
      }
      return true;
    },
    _colorize$2$color(callback, color) {
      var t1;
      type$.void_Function._as(callback);
      t1 = this._primaryColor != null;
      if (t1 && color != null)
        this._buffer._contents += color;
      callback.call$0();
      if (t1 && color != null)
        this._buffer._contents += "\x1b[0m";
    }
  };
  A.Highlighter_closure.prototype = {
    call$0() {
      return this.color;
    },
    $signature: 134
  };
  A.Highlighter$__closure.prototype = {
    call$1(line) {
      var t1 = type$._Line._as(line).highlights,
        t2 = A._arrayInstanceType(t1);
      t2 = new A.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Highlighter$___closure()), t2._eval$1("WhereIterable<1>"));
      return t2.get$length(t2);
    },
    $signature: 135
  };
  A.Highlighter$___closure.prototype = {
    call$1(highlight) {
      var t1 = type$._Highlight._as(highlight).span;
      return t1.get$start(t1).get$line() !== t1.get$end().get$line();
    },
    $signature: 21
  };
  A.Highlighter$__closure0.prototype = {
    call$1(line) {
      return type$._Line._as(line).url;
    },
    $signature: 137
  };
  A.Highlighter__collateLines_closure.prototype = {
    call$1(highlight) {
      var t1 = type$._Highlight._as(highlight).span.get$sourceUrl();
      return t1 == null ? new A.Object() : t1;
    },
    $signature: 138
  };
  A.Highlighter__collateLines_closure0.prototype = {
    call$2(highlight1, highlight2) {
      var t1 = type$._Highlight;
      return t1._as(highlight1).span.compareTo$1(0, t1._as(highlight2).span);
    },
    $signature: 139
  };
  A.Highlighter__collateLines_closure1.prototype = {
    call$1(entry) {
      var url, highlightsForFile, lines, t1, t2, t3, t4, context, t5, linesBeforeSpan, lineNumber, _i, line, activeHighlights, highlightIndex, oldHighlightLength, t6;
      type$.MapEntry_of_Object_and_List__Highlight._as(entry);
      url = entry.key;
      highlightsForFile = entry.value;
      lines = A._setArrayType([], type$.JSArray__Line);
      for (t1 = J.getInterceptor$ax(highlightsForFile), t2 = t1.get$iterator(highlightsForFile), t3 = type$.JSArray__Highlight; t2.moveNext$0();) {
        t4 = t2.get$current().span;
        context = t4.get$context();
        t5 = A.findLineStart(context, t4.get$text(t4), t4.get$start(t4).get$column());
        t5.toString;
        t5 = B.JSString_methods.allMatches$1("\n", B.JSString_methods.substring$2(context, 0, t5));
        linesBeforeSpan = t5.get$length(t5);
        lineNumber = t4.get$start(t4).get$line() - linesBeforeSpan;
        for (t4 = context.split("\n"), t5 = t4.length, _i = 0; _i < t5; ++_i) {
          line = t4[_i];
          if (lines.length === 0 || lineNumber > B.JSArray_methods.get$last(lines).number)
            B.JSArray_methods.add$1(lines, new A._Line(line, lineNumber, url, A._setArrayType([], t3)));
          ++lineNumber;
        }
      }
      activeHighlights = A._setArrayType([], t3);
      for (t2 = lines.length, t3 = type$.bool_Function__Highlight, highlightIndex = 0, _i = 0; _i < lines.length; lines.length === t2 || (0, A.throwConcurrentModificationError)(lines), ++_i) {
        line = lines[_i];
        t4 = t3._as(new A.Highlighter__collateLines__closure(line));
        if (!!activeHighlights.fixed$length)
          A.throwExpression(A.UnsupportedError$("removeWhere"));
        B.JSArray_methods._removeWhere$2(activeHighlights, t4, true);
        oldHighlightLength = activeHighlights.length;
        for (t4 = t1.skip$1(highlightsForFile, highlightIndex), t4 = t4.get$iterator(t4); t4.moveNext$0();) {
          t5 = t4.get$current();
          t6 = t5.span;
          if (t6.get$start(t6).get$line() > line.number)
            break;
          B.JSArray_methods.add$1(activeHighlights, t5);
        }
        highlightIndex += activeHighlights.length - oldHighlightLength;
        B.JSArray_methods.addAll$1(line.highlights, activeHighlights);
      }
      return lines;
    },
    $signature: 140
  };
  A.Highlighter__collateLines__closure.prototype = {
    call$1(highlight) {
      return type$._Highlight._as(highlight).span.get$end().get$line() < this.line.number;
    },
    $signature: 21
  };
  A.Highlighter_highlight_closure.prototype = {
    call$1(highlight) {
      type$._Highlight._as(highlight);
      return true;
    },
    $signature: 21
  };
  A.Highlighter__writeFileStart_closure.prototype = {
    call$0() {
      this.$this._buffer._contents += B.JSString_methods.$mul("\u2500", 2) + ">";
      return null;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure.prototype = {
    call$0() {
      var t1 = this.startLine === this.line.number ? "\u250c" : "\u2514";
      this.$this._buffer._contents += t1;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure0.prototype = {
    call$0() {
      var t1 = this.highlight == null ? "\u2500" : "\u253c";
      this.$this._buffer._contents += t1;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure1.prototype = {
    call$0() {
      this.$this._buffer._contents += "\u2500";
      return null;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure2.prototype = {
    call$0() {
      var t2, t3, _this = this,
        t1 = _this._box_0,
        vertical = t1.openedOnThisLine ? "\u253c" : "\u2502";
      if (_this.current != null)
        _this.$this._buffer._contents += vertical;
      else {
        t2 = _this.line;
        t3 = t2.number;
        if (_this.startLine === t3) {
          t2 = _this.$this;
          t2._colorize$2$color(new A.Highlighter__writeMultilineHighlights__closure(t1, t2), t1.openedOnThisLineColor);
          t1.openedOnThisLine = true;
          if (t1.openedOnThisLineColor == null)
            t1.openedOnThisLineColor = t2._primaryColor;
        } else {
          t2 = _this.endLine === t3 && _this.highlight.span.get$end().get$column() === t2.text.length;
          t3 = _this.$this;
          if (t2)
            t3._buffer._contents += "\u2514";
          else
            t3._colorize$2$color(new A.Highlighter__writeMultilineHighlights__closure0(t3, vertical), t1.openedOnThisLineColor);
        }
      }
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights__closure.prototype = {
    call$0() {
      var t1 = this._box_0.openedOnThisLine ? "\u252c" : "\u250c";
      this.$this._buffer._contents += t1;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights__closure0.prototype = {
    call$0() {
      this.$this._buffer._contents += this.vertical;
    },
    $signature: 0
  };
  A.Highlighter__writeHighlightedText_closure.prototype = {
    call$0() {
      var _this = this;
      return _this.$this._writeText$1(B.JSString_methods.substring$2(_this.text, _this.startColumn, _this.endColumn));
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure.prototype = {
    call$0() {
      var tabsBefore, tabsInside,
        t1 = this.$this,
        t2 = this.highlight.span,
        startColumn = t2.get$start(t2).get$column(),
        endColumn = t2.get$end().get$column();
      t2 = this.line.text;
      tabsBefore = t1._countTabs$1(B.JSString_methods.substring$2(t2, 0, startColumn));
      tabsInside = t1._countTabs$1(B.JSString_methods.substring$2(t2, startColumn, endColumn));
      startColumn += tabsBefore * 3;
      t1 = t1._buffer;
      t1._contents += B.JSString_methods.$mul(" ", startColumn);
      t1._contents += B.JSString_methods.$mul("^", Math.max(endColumn + (tabsBefore + tabsInside) * 3 - startColumn, 1));
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure0.prototype = {
    call$0() {
      var t1 = this.highlight.span;
      return this.$this._writeArrow$2(this.line, t1.get$start(t1).get$column());
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure1.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this;
      if (_this.coversWholeLine)
        t1._buffer._contents += B.JSString_methods.$mul("\u2500", 3);
      else
        t1._writeArrow$3$beginning(_this.line, Math.max(_this.highlight.span.get$end().get$column() - 1, 0), false);
    },
    $signature: 0
  };
  A.Highlighter__writeSidebar_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._buffer,
        t3 = this._box_0.text;
      if (t3 == null)
        t3 = "";
      t1 = t2._contents += B.JSString_methods.padRight$1(t3, t1._paddingBeforeSidebar);
      t3 = this.end;
      t2._contents = t1 + (t3 == null ? "\u2502" : t3);
    },
    $signature: 0
  };
  A._Highlight.prototype = {
    toString$0(_) {
      var t1 = this.span;
      t1 = "" + "primary " + ("" + t1.get$start(t1).get$line() + ":" + t1.get$start(t1).get$column() + "-" + t1.get$end().get$line() + ":" + t1.get$end().get$column());
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._Highlight_closure.prototype = {
    call$0() {
      var t2, t3, t4, t5,
        t1 = this.span;
      if (!(type$.SourceSpanWithContext._is(t1) && A.findLineStart(t1.get$context(), t1.get$text(t1), t1.get$start(t1).get$column()) != null)) {
        t2 = t1.get$start(t1);
        t2 = A.SourceLocation$(t2.get$offset(t2), 0, 0, t1.get$sourceUrl());
        t3 = t1.get$end();
        t3 = t3.get$offset(t3);
        t4 = t1.get$sourceUrl();
        t5 = A.countCodeUnits(t1.get$text(t1), 10);
        t1 = A.SourceSpanWithContext$(t2, A.SourceLocation$(t3, A._Highlight__lastLineLength(t1.get$text(t1)), t5, t4), t1.get$text(t1), t1.get$text(t1));
      }
      return A._Highlight__normalizeEndOfLine(A._Highlight__normalizeTrailingNewline(A._Highlight__normalizeNewlines(t1)));
    },
    $signature: 141
  };
  A._Line.prototype = {
    toString$0(_) {
      return "" + this.number + ': "' + this.text + '" (' + B.JSArray_methods.join$1(this.highlights, ", ") + ")";
    }
  };
  A.SourceLocation.prototype = {
    distance$1(other) {
      var t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(t1) + '" and "' + A.S(other.get$sourceUrl()) + "\" don't match.", null));
      return Math.abs(this.offset - other.get$offset(other));
    },
    compareTo$1(_, other) {
      var t1;
      type$.SourceLocation._as(other);
      t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(t1) + '" and "' + A.S(other.get$sourceUrl()) + "\" don't match.", null));
      return this.offset - other.get$offset(other);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceLocation._is(other) && J.$eq$(this.sourceUrl, other.get$sourceUrl()) && this.offset === other.get$offset(other);
    },
    get$hashCode(_) {
      var t1 = this.sourceUrl;
      t1 = t1 == null ? null : t1.get$hashCode(t1);
      if (t1 == null)
        t1 = 0;
      return t1 + this.offset;
    },
    toString$0(_) {
      var _this = this,
        t1 = A.getRuntimeType(_this).toString$0(0),
        source = _this.sourceUrl;
      return "<" + t1 + ": " + _this.offset + " " + (A.S(source == null ? "unknown source" : source) + ":" + (_this.line + 1) + ":" + (_this.column + 1)) + ">";
    },
    $isComparable: 1,
    get$sourceUrl() {
      return this.sourceUrl;
    },
    get$offset(receiver) {
      return this.offset;
    },
    get$line() {
      return this.line;
    },
    get$column() {
      return this.column;
    }
  };
  A.SourceLocationMixin.prototype = {
    distance$1(other) {
      if (!J.$eq$(this.file.url, other.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(this.get$sourceUrl()) + '" and "' + A.S(other.get$sourceUrl()) + "\" don't match.", null));
      return Math.abs(this.offset - other.get$offset(other));
    },
    compareTo$1(_, other) {
      type$.SourceLocation._as(other);
      if (!J.$eq$(this.file.url, other.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(this.get$sourceUrl()) + '" and "' + A.S(other.get$sourceUrl()) + "\" don't match.", null));
      return this.offset - other.get$offset(other);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceLocation._is(other) && J.$eq$(this.file.url, other.get$sourceUrl()) && this.offset === other.get$offset(other);
    },
    get$hashCode(_) {
      var t1 = this.file.url;
      t1 = t1 == null ? null : t1.get$hashCode(t1);
      if (t1 == null)
        t1 = 0;
      return t1 + this.offset;
    },
    toString$0(_) {
      var t1 = A.getRuntimeType(this).toString$0(0),
        t2 = this.offset,
        t3 = this.file,
        source = t3.url;
      return "<" + t1 + ": " + t2 + " " + (A.S(source == null ? "unknown source" : source) + ":" + (t3.getLine$1(t2) + 1) + ":" + (t3.getColumn$1(t2) + 1)) + ">";
    },
    $isComparable: 1,
    $isSourceLocation: 1
  };
  A.SourceSpanBase.prototype = {
    SourceSpanBase$3(start, end, text) {
      var t3,
        t1 = this.end,
        t2 = this.start;
      if (!J.$eq$(t1.get$sourceUrl(), t2.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(t2.get$sourceUrl()) + '" and  "' + A.S(t1.get$sourceUrl()) + "\" don't match.", null));
      else if (t1.get$offset(t1) < t2.get$offset(t2))
        throw A.wrapException(A.ArgumentError$("End " + t1.toString$0(0) + " must come after start " + t2.toString$0(0) + ".", null));
      else {
        t3 = this.text;
        if (t3.length !== t2.distance$1(t1))
          throw A.wrapException(A.ArgumentError$('Text "' + t3 + '" must be ' + t2.distance$1(t1) + " characters long.", null));
      }
    },
    get$start(receiver) {
      return this.start;
    },
    get$end() {
      return this.end;
    },
    get$text(receiver) {
      return this.text;
    }
  };
  A.SourceSpanException.prototype = {
    get$message(_) {
      return this._span_exception$_message;
    },
    toString$0(_) {
      var t3, highlight,
        t1 = this._span,
        t2 = "" + ("line " + (t1.get$start(t1).get$line() + 1) + ", column " + (t1.get$start(t1).get$column() + 1));
      if (t1.get$sourceUrl() != null) {
        t3 = t1.get$sourceUrl();
        t3 = t2 + (" of " + $.$get$context().prettyUri$1(t3));
        t2 = t3;
      }
      t2 += ": " + this._span_exception$_message;
      highlight = t1.highlight$1$color(0, null);
      t1 = highlight.length !== 0 ? t2 + "\n" + highlight : t2;
      return "Error on " + (t1.charCodeAt(0) == 0 ? t1 : t1);
    },
    $isException: 1
  };
  A.SourceSpanFormatException.prototype = {
    get$offset(_) {
      var t1 = this._span;
      t1 = A.FileLocation$_(t1.file, t1._file$_start);
      return t1.offset;
    },
    $isFormatException: 1,
    get$source(receiver) {
      return this.source;
    }
  };
  A.SourceSpanMixin.prototype = {
    get$sourceUrl() {
      return this.get$start(this).get$sourceUrl();
    },
    get$length(_) {
      var t2,
        t1 = this.get$end();
      t1 = t1.get$offset(t1);
      t2 = this.get$start(this);
      return t1 - t2.get$offset(t2);
    },
    compareTo$1(_, other) {
      var result;
      type$.SourceSpan._as(other);
      result = this.get$start(this).compareTo$1(0, other.get$start(other));
      return result === 0 ? this.get$end().compareTo$1(0, other.get$end()) : result;
    },
    highlight$1$color(_, color) {
      var _this = this;
      if (!type$.SourceSpanWithContext._is(_this) && _this.get$length(_this) === 0)
        return "";
      return A.Highlighter$(_this, color).highlight$0(0);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceSpan._is(other) && this.get$start(this).$eq(0, other.get$start(other)) && this.get$end().$eq(0, other.get$end());
    },
    get$hashCode(_) {
      return A.Object_hash(this.get$start(this), this.get$end(), B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "<" + A.getRuntimeType(_this).toString$0(0) + ": from " + _this.get$start(_this).toString$0(0) + " to " + _this.get$end().toString$0(0) + ' "' + _this.get$text(_this) + '">';
    },
    $isComparable: 1,
    $isSourceSpan: 1
  };
  A.SourceSpanWithContext.prototype = {
    get$context() {
      return this._context;
    }
  };
  A.Chain.prototype = {
    toTrace$0() {
      var t1 = this.traces,
        t2 = A._arrayInstanceType(t1);
      return A.Trace$(new A.ExpandIterable(t1, t2._eval$1("Iterable<Frame>(1)")._as(new A.Chain_toTrace_closure()), t2._eval$1("ExpandIterable<1,Frame>")), null);
    },
    toString$0(_) {
      var t1 = this.traces,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Chain_toString_closure(new A.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.Chain_toString_closure0()), t2._eval$1("MappedListIterable<1,int>")).fold$1$2(0, 0, B.CONSTANT, type$.int))), t2._eval$1("MappedListIterable<1,String>")).join$1(0, string$.x3d_____);
    },
    $isStackTrace: 1,
    get$traces() {
      return this.traces;
    }
  };
  A.Chain_Chain$forTrace_closure.prototype = {
    call$0() {
      return A.Chain_Chain$parse(this.trace.toString$0(0));
    },
    $signature: 142
  };
  A.Chain_Chain$parse_closure.prototype = {
    call$1(line) {
      return A._asString(line).length !== 0;
    },
    $signature: 2
  };
  A.Chain_Chain$parse_closure0.prototype = {
    call$1(trace) {
      return A.Trace$parseVM(A._asString(trace));
    },
    $signature: 36
  };
  A.Chain_Chain$parse_closure1.prototype = {
    call$1(trace) {
      return A.Trace$parseFriendly(A._asString(trace));
    },
    $signature: 36
  };
  A.Chain_toTrace_closure.prototype = {
    call$1(trace) {
      return type$.Trace._as(trace).get$frames();
    },
    $signature: 144
  };
  A.Chain_toString_closure0.prototype = {
    call$1(trace) {
      var t1 = type$.Trace._as(trace).get$frames(),
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.Chain_toString__closure0()), t2._eval$1("MappedListIterable<1,int>")).fold$1$2(0, 0, B.CONSTANT, type$.int);
    },
    $signature: 145
  };
  A.Chain_toString__closure0.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      return frame.get$location(frame).length;
    },
    $signature: 34
  };
  A.Chain_toString_closure.prototype = {
    call$1(trace) {
      var t1 = type$.Trace._as(trace).get$frames(),
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Chain_toString__closure(this.longest)), t2._eval$1("MappedListIterable<1,String>")).join$0(0);
    },
    $signature: 147
  };
  A.Chain_toString__closure.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      return B.JSString_methods.padRight$1(frame.get$location(frame), this.longest) + "  " + A.S(frame.get$member()) + "\n";
    },
    $signature: 33
  };
  A.Frame.prototype = {
    get$isCore() {
      return this.uri.get$scheme() === "dart";
    },
    get$library() {
      var t1 = this.uri;
      if (t1.get$scheme() === "data")
        return "data:...";
      return $.$get$context().prettyUri$1(t1);
    },
    get$$package() {
      var t1 = this.uri;
      if (t1.get$scheme() !== "package")
        return null;
      return B.JSArray_methods.get$first(t1.get$path(t1).split("/"));
    },
    get$location(_) {
      var t2, _this = this,
        t1 = _this.line;
      if (t1 == null)
        return _this.get$library();
      t2 = _this.column;
      if (t2 == null)
        return _this.get$library() + " " + A.S(t1);
      return _this.get$library() + " " + A.S(t1) + ":" + A.S(t2);
    },
    toString$0(_) {
      return this.get$location(this) + " in " + A.S(this.member);
    },
    get$uri() {
      return this.uri;
    },
    get$line() {
      return this.line;
    },
    get$column() {
      return this.column;
    },
    get$member() {
      return this.member;
    }
  };
  A.Frame_Frame$parseVM_closure.prototype = {
    call$0() {
      var match, t2, t3, member, uri, lineAndColumn, line, _null = null,
        t1 = this.frame;
      if (t1 === "...")
        return new A.Frame(A._Uri__Uri(_null, _null, _null, _null), _null, _null, "...");
      match = $.$get$_vmFrame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t1 = match._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      t2.toString;
      t3 = type$.Pattern._as($.$get$_asyncBody());
      t2 = A.stringReplaceAllUnchecked(t2, t3, "<async>");
      member = A.stringReplaceAllUnchecked(t2, "<anonymous closure>", "<fn>");
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      t3 = t2;
      t3.toString;
      if (B.JSString_methods.startsWith$1(t3, "<data:"))
        uri = A.Uri_Uri$dataFromString("");
      else {
        t2 = t2;
        t2.toString;
        uri = A.Uri_parse(t2);
      }
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      lineAndColumn = t1[3].split(":");
      t1 = lineAndColumn.length;
      line = t1 > 1 ? A.int_parse(lineAndColumn[1], _null) : _null;
      return new A.Frame(uri, line, t1 > 2 ? A.int_parse(lineAndColumn[2], _null) : _null, member);
    },
    $signature: 9
  };
  A.Frame_Frame$parseV8_closure.prototype = {
    call$0() {
      var t2, t3, t4, _s4_ = "<fn>",
        t1 = this.frame,
        match = $.$get$_v8Frame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(null, "unparsed", null, null), t1);
      t1 = new A.Frame_Frame$parseV8_closure_parseLocation(t1);
      t2 = match._match;
      t3 = t2.length;
      if (2 >= t3)
        return A.ioore(t2, 2);
      t4 = t2[2];
      if (t4 != null) {
        t3 = t4;
        t3.toString;
        t2 = t2[1];
        t2.toString;
        t2 = A.stringReplaceAllUnchecked(t2, "<anonymous>", _s4_);
        t2 = A.stringReplaceAllUnchecked(t2, "Anonymous function", _s4_);
        return t1.call$2(t3, A.stringReplaceAllUnchecked(t2, "(anonymous function)", _s4_));
      } else {
        if (3 >= t3)
          return A.ioore(t2, 3);
        t2 = t2[3];
        t2.toString;
        return t1.call$2(t2, _s4_);
      }
    },
    $signature: 9
  };
  A.Frame_Frame$parseV8_closure_parseLocation.prototype = {
    call$2($location, member) {
      var t2, urlMatch, uri, line, columnMatch, _null = null,
        t1 = $.$get$_v8EvalLocation(),
        evalMatch = t1.firstMatch$1($location);
      for (; evalMatch != null; $location = t2) {
        t2 = evalMatch._match;
        if (1 >= t2.length)
          return A.ioore(t2, 1);
        t2 = t2[1];
        t2.toString;
        evalMatch = t1.firstMatch$1(t2);
      }
      if ($location === "native")
        return new A.Frame(A.Uri_parse("native"), _null, _null, member);
      urlMatch = $.$get$_v8UrlLocation().firstMatch$1($location);
      if (urlMatch == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), this.frame);
      t1 = urlMatch._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      t2.toString;
      uri = A.Frame__uriOrPathToUri(t2);
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      t2.toString;
      line = A.int_parse(t2, _null);
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      columnMatch = t1[3];
      return new A.Frame(uri, line, columnMatch != null ? A.int_parse(columnMatch, _null) : _null, member);
    },
    $signature: 150
  };
  A.Frame_Frame$_parseFirefoxEval_closure.prototype = {
    call$0() {
      var t2, member, uri, line, _null = null,
        t1 = this.frame,
        match = $.$get$_firefoxEvalLocation().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t1 = match._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      t2.toString;
      member = A.stringReplaceAllUnchecked(t2, "/<", "");
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      t2.toString;
      uri = A.Frame__uriOrPathToUri(t2);
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      t1 = t1[3];
      t1.toString;
      line = A.int_parse(t1, _null);
      return new A.Frame(uri, line, _null, member.length === 0 || member === "anonymous" ? "<fn>" : member);
    },
    $signature: 9
  };
  A.Frame_Frame$parseFirefox_closure.prototype = {
    call$0() {
      var t2, t3, t4, uri, member, line, column, _null = null,
        t1 = this.frame,
        match = $.$get$_firefoxSafariFrame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t2 = match._match;
      if (3 >= t2.length)
        return A.ioore(t2, 3);
      t3 = t2[3];
      t4 = t3;
      t4.toString;
      if (B.JSString_methods.contains$1(t4, " line "))
        return A.Frame_Frame$_parseFirefoxEval(t1);
      t1 = t3;
      t1.toString;
      uri = A.Frame__uriOrPathToUri(t1);
      t1 = t2.length;
      if (1 >= t1)
        return A.ioore(t2, 1);
      member = t2[1];
      if (member != null) {
        if (2 >= t1)
          return A.ioore(t2, 2);
        t1 = t2[2];
        t1.toString;
        t1 = B.JSString_methods.allMatches$1("/", t1);
        member += B.JSArray_methods.join$0(A.List_List$filled(t1.get$length(t1), ".<fn>", false, type$.String));
        if (member === "")
          member = "<fn>";
        member = B.JSString_methods.replaceFirst$2(member, $.$get$_initialDot(), "");
      } else
        member = "<fn>";
      if (4 >= t2.length)
        return A.ioore(t2, 4);
      t1 = t2[4];
      if (t1 === "")
        line = _null;
      else {
        t1 = t1;
        t1.toString;
        line = A.int_parse(t1, _null);
      }
      if (5 >= t2.length)
        return A.ioore(t2, 5);
      t1 = t2[5];
      if (t1 == null || t1 === "")
        column = _null;
      else {
        t1 = t1;
        t1.toString;
        column = A.int_parse(t1, _null);
      }
      return new A.Frame(uri, line, column, member);
    },
    $signature: 9
  };
  A.Frame_Frame$parseFriendly_closure.prototype = {
    call$0() {
      var t2, uri, line, column, _null = null,
        t1 = this.frame,
        match = $.$get$_friendlyFrame().firstMatch$1(t1);
      if (match == null)
        throw A.wrapException(A.FormatException$("Couldn't parse package:stack_trace stack trace line '" + t1 + "'.", _null, _null));
      t1 = match._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      if (t2 === "data:...")
        uri = A.Uri_Uri$dataFromString("");
      else {
        t2 = t2;
        t2.toString;
        uri = A.Uri_parse(t2);
      }
      if (uri.get$scheme() === "") {
        t2 = $.$get$context();
        uri = t2.toUri$1(t2.absolute$7(0, t2.style.pathFromUri$1(A._parseUri(uri)), _null, _null, _null, _null, _null, _null));
      }
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      if (t2 == null)
        line = _null;
      else {
        t2 = t2;
        t2.toString;
        line = A.int_parse(t2, _null);
      }
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      t2 = t1[3];
      if (t2 == null)
        column = _null;
      else {
        t2 = t2;
        t2.toString;
        column = A.int_parse(t2, _null);
      }
      if (4 >= t1.length)
        return A.ioore(t1, 4);
      return new A.Frame(uri, line, column, t1[4]);
    },
    $signature: 9
  };
  A.LazyChain.prototype = {
    get$_chain() {
      var result, _this = this,
        value = _this.__LazyChain__chain_FI;
      if (value === $) {
        result = _this._thunk.call$0();
        _this.__LazyChain__chain_FI !== $ && A.throwLateFieldADI("_chain");
        _this.__LazyChain__chain_FI = result;
        value = result;
      }
      return value;
    },
    get$traces() {
      return this.get$_chain().get$traces();
    },
    toString$0(_) {
      return this.get$_chain().toString$0(0);
    },
    $isStackTrace: 1,
    $isChain: 1
  };
  A.Trace.prototype = {
    toString$0(_) {
      var t1 = this.frames,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Trace_toString_closure(new A.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.Trace_toString_closure0()), t2._eval$1("MappedListIterable<1,int>")).fold$1$2(0, 0, B.CONSTANT, type$.int))), t2._eval$1("MappedListIterable<1,String>")).join$0(0);
    },
    $isStackTrace: 1,
    get$frames() {
      return this.frames;
    }
  };
  A.Trace__parseVM_closure.prototype = {
    call$1(line) {
      return A._asString(line).length !== 0;
    },
    $signature: 2
  };
  A.Trace__parseVM_closure0.prototype = {
    call$1(line) {
      return A.Frame_Frame$parseVM(A._asString(line));
    },
    $signature: 10
  };
  A.Trace$parseV8_closure.prototype = {
    call$1(line) {
      return !B.JSString_methods.startsWith$1(A._asString(line), $.$get$_v8TraceLine());
    },
    $signature: 2
  };
  A.Trace$parseV8_closure0.prototype = {
    call$1(line) {
      return A.Frame_Frame$parseV8(A._asString(line));
    },
    $signature: 10
  };
  A.Trace$parseJSCore_closure.prototype = {
    call$1(line) {
      return A._asString(line) !== "\tat ";
    },
    $signature: 2
  };
  A.Trace$parseJSCore_closure0.prototype = {
    call$1(line) {
      return A.Frame_Frame$parseV8(A._asString(line));
    },
    $signature: 10
  };
  A.Trace$parseFirefox_closure.prototype = {
    call$1(line) {
      A._asString(line);
      return line.length !== 0 && line !== "[native code]";
    },
    $signature: 2
  };
  A.Trace$parseFirefox_closure0.prototype = {
    call$1(line) {
      return A.Frame_Frame$parseFirefox(A._asString(line));
    },
    $signature: 10
  };
  A.Trace$parseFriendly_closure.prototype = {
    call$1(line) {
      return !B.JSString_methods.startsWith$1(A._asString(line), "=====");
    },
    $signature: 2
  };
  A.Trace$parseFriendly_closure0.prototype = {
    call$1(line) {
      return A.Frame_Frame$parseFriendly(A._asString(line));
    },
    $signature: 10
  };
  A.Trace_toString_closure0.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      return frame.get$location(frame).length;
    },
    $signature: 34
  };
  A.Trace_toString_closure.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      if (frame instanceof A.UnparsedFrame)
        return frame.toString$0(0) + "\n";
      return B.JSString_methods.padRight$1(frame.get$location(frame), this.longest) + "  " + A.S(frame.get$member()) + "\n";
    },
    $signature: 33
  };
  A.UnparsedFrame.prototype = {
    toString$0(_) {
      return this.member;
    },
    $isFrame: 1,
    get$uri() {
      return this.uri;
    },
    get$line() {
      return null;
    },
    get$column() {
      return null;
    },
    get$isCore() {
      return false;
    },
    get$$package() {
      return null;
    },
    get$location() {
      return "unparsed";
    },
    get$member() {
      return this.member;
    }
  };
  A.StringScannerException.prototype = {
    get$source(_) {
      return A._asString(this.source);
    }
  };
  A.StringScanner.prototype = {
    get$lastMatch() {
      var _this = this;
      if (_this._string_scanner$_position !== _this._lastMatchPosition)
        _this._lastMatch = null;
      return _this._lastMatch;
    },
    scan$1(pattern) {
      var success, _this = this,
        t1 = _this._lastMatch = J.matchAsPrefix$2$s(type$.Pattern._as(pattern), _this.string, _this._string_scanner$_position);
      _this._lastMatchPosition = _this._string_scanner$_position;
      success = t1 != null;
      if (success)
        _this._lastMatchPosition = _this._string_scanner$_position = t1.get$end();
      return success;
    },
    expect$2$name(pattern, $name) {
      var t1;
      type$.Pattern._as(pattern);
      if (this.scan$1(pattern))
        return;
      if ($name == null)
        if (type$.RegExp._is(pattern))
          $name = "/" + pattern.pattern + "/";
        else {
          t1 = J.toString$0$(pattern);
          t1 = A.stringReplaceAllUnchecked(t1, "\\", "\\\\");
          $name = '"' + A.stringReplaceAllUnchecked(t1, '"', '\\"') + '"';
        }
      this.error$3$length$position(0, "expected " + $name + ".", 0, this._string_scanner$_position);
    },
    expect$1(pattern) {
      return this.expect$2$name(pattern, null);
    },
    expectDone$0() {
      var t1 = this._string_scanner$_position;
      if (t1 === this.string.length)
        return;
      this.error$3$length$position(0, "expected no more input.", 0, t1);
    },
    error$3$length$position(_, message, $length, position) {
      var t2, t3, t4, t5, sourceFile, end,
        t1 = this.string;
      if (position < 0)
        A.throwExpression(A.RangeError$("position must be greater than or equal to 0."));
      else if (position > t1.length)
        A.throwExpression(A.RangeError$("position must be less than or equal to the string length."));
      t2 = position + $length > t1.length;
      if (t2)
        A.throwExpression(A.RangeError$("position plus length must not go beyond the end of the string."));
      t2 = this.sourceUrl;
      t3 = new A.CodeUnits(t1);
      t4 = A._setArrayType([0], type$.JSArray_int);
      t5 = new Uint32Array(A._ensureNativeList(t3.toList$0(t3)));
      sourceFile = new A.SourceFile(t2, t4, t5);
      sourceFile.SourceFile$decoded$2$url(t3, t2);
      end = position + $length;
      if (end > t5.length)
        A.throwExpression(A.RangeError$("End " + end + string$.x20must_ + sourceFile.get$length(sourceFile) + "."));
      else if (position < 0)
        A.throwExpression(A.RangeError$("Start may not be negative, was " + position + "."));
      throw A.wrapException(new A.StringScannerException(t1, message, new A._FileSpan(sourceFile, position, end)));
    }
  };
  A.Uuid.prototype = {
    get$_uuid$_state() {
      var t2, t3,
        t1 = $.$get$Uuid__stateExpando();
      A.Expando__checkType(this);
      t2 = t1._jsWeakMap;
      t3 = t2.get(this);
      if (t3 == null) {
        t3 = A.LinkedHashMap_LinkedHashMap$_literal(["seedBytes", null, "node", null, "clockSeq", null, "mSecs", 0, "nSecs", 0, "hasInitV1", false, "hasInitV4", false], type$.String, type$.dynamic);
        t2.set(this, A._instanceType(t1)._eval$1("1?")._as(t3));
        t1 = t3;
      } else
        t1 = t3;
      return t1;
    },
    _initV4$0() {
      var _s9_ = "hasInitV4",
        t1 = this.get$_uuid$_state().$index(0, _s9_);
      t1.toString;
      if (!A._asBool(t1)) {
        t1 = this.get$_uuid$_state();
        t1.$indexSet(0, "globalRNG", A.uuid_util_UuidUtil_mathRNG$closure());
        this.get$_uuid$_state().$indexSet(0, _s9_, true);
      }
    }
  };
  A.Actions_package_closure.prototype = {
    call$1(tag) {
      return new A.SeededAssetTag(null, A._asString(tag), B.MechanismEnum_AUTOMATIC, null);
    },
    $signature: 152
  };
  A.Actions_linkify_closure.prototype = {
    call$1(element) {
      return type$.Share._as(element).access === B.AccessEnum_PUBLIC;
    },
    $signature: 153
  };
  A.Blocks_save_closure.prototype = {
    call$1(element) {
      return type$.ClientBlock._as(element).snippet === this.snippet;
    },
    $signature: 154
  };
  A.Events_copy_closure.prototype = {
    call$1(child) {
      return type$.Element._as(child).className === "pieces-btn-text";
    },
    $signature: 4
  };
  A.Events_copy_closure0.prototype = {
    call$0() {
      this.textSpan.innerText = "Copy";
    },
    $signature: 3
  };
  A.Events_save_closure.prototype = {
    call$1(child) {
      return type$.Element._as(child).className === "pieces-btn-text";
    },
    $signature: 4
  };
  A.Events_save_closure0.prototype = {
    call$0() {
      var t1 = this.copy ? "Copy and Save" : "Save";
      this.textSpan.innerText = t1;
    },
    $signature: 3
  };
  A.Events_sendToPieces_closure.prototype = {
    call$1(element) {
      return type$.Element._as(element).tagName.toLowerCase() === "pre";
    },
    $signature: 4
  };
  A.Events_sendToPieces_closure0.prototype = {
    call$0() {
      return type$.Element._as(A._ElementFactoryProvider_createElement_tag("pre", null));
    },
    $signature: 156
  };
  A.Events_sendToPieces_closure1.prototype = {
    call$1(clazz) {
      return B.JSString_methods.contains$1(A._asString(clazz), "lang-");
    },
    $signature: 2
  };
  A.Events_sendToPieces_closure2.prototype = {
    call$0() {
      return "";
    },
    $signature: 38
  };
  A.Events_generateLink_closure.prototype = {
    call$1(child) {
      return type$.Element._as(child).className === "pieces-btn-text";
    },
    $signature: 4
  };
  A.Events_generateLink_closure0.prototype = {
    call$0() {
      this.button.innerText = "Share";
    },
    $signature: 3
  };
  A.Events_generateLink_closure1.prototype = {
    call$0() {
      this.button.innerText = "Share";
    },
    $signature: 3
  };
  A.ClientConfiguration.prototype = {
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["version", "2.6.1", "requiredOsMajorVersion", 5, "requiredOsMinorVersion", 0, "requiredOsPatchVersion", 0, "url", "http://localhost", "port", this.port, "platform", this.platform, "keycodes", this.keycodes], type$.String, type$.dynamic);
    },
    set$keycodes(keycodes) {
      this.keycodes = type$.nullable_List_int._as(keycodes);
    }
  };
  A.ClientSettings.prototype = {
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["placement", $.$get$ButtonPlacementOptionsEnumExtension_toMap().$index(0, _this.placement), "theme", $.$get$ElementThemeEnumExtension_toMap().$index(0, _this.theme), "mainBtn", $.$get$MainButtonFunctionalityEnumExtension_toMap().$index(0, _this.mainBtn), "blacklist", _this.blacklist, "minChars", _this.minChars, "port", 1000, "backtrackLimit", _this.backtrackLimit, "telemetry", _this.telemetry, "url", _this.url, "host", _this.host, "whitelist", _this.whitelist, "enabled", _this.enabled], type$.String, type$.dynamic);
    }
  };
  A.Context__tags_closure.prototype = {
    call$1(element) {
      var text;
      type$.Element._as(element);
      text = element.innerText;
      if (J.get$classes$x(element).contains$1(0, "post-tag") && !B.JSArray_methods.contains$1(this.tags, text))
        B.JSArray_methods.add$1(this.tags, text);
    },
    $signature: 7
  };
  A.CustomCodeExtraction_accumulator_closure.prototype = {
    call$1(element) {
      return type$.Element._as(element).tagName.toLowerCase() === "pre";
    },
    $signature: 4
  };
  A.LocalState.prototype = {
    toJson$0() {
      var t4, _this = this,
        t1 = _this.settings.toJson$0(),
        t2 = _this.config.toJson$0(),
        t3 = _this.context;
      t3 = t3 == null ? null : t3.toJson$0();
      t4 = _this.allocation;
      t4 = t4 == null ? null : t4.toJson$0();
      return A.LinkedHashMap_LinkedHashMap$_literal(["settings", t1, "config", t2, "context", t3, "user", null, "allocation", t4, "current", _this.current.toJson$0(), "history", _this.history.toJson$0(), "backtracked", _this.backtracked], type$.String, type$.dynamic);
    },
    set$context(context) {
      this.context = type$.nullable_Context._as(context);
    },
    set$backtracked(backtracked) {
      this.backtracked = type$.List_String._as(backtracked);
    }
  };
  A.Placement_listen_closure.prototype = {
    call$1(element) {
      var t1, t2, t3, t4;
      type$.Element._as(element);
      t1 = J.getInterceptor$x(element);
      t2 = t1.get$onMouseEnter(element);
      t3 = t2.$ti;
      t4 = t3._eval$1("~(1)?")._as(new A.Placement_listen__closure5(element));
      type$.nullable_void_Function._as(null);
      A._EventStreamSubscription$(t2._target, t2._eventType, t4, false, t3._precomputed1);
      t1 = t1.get$onMouseLeave(element);
      t3 = t1.$ti;
      A._EventStreamSubscription$(t1._target, t1._eventType, t3._eval$1("~(1)?")._as(new A.Placement_listen__closure6(element)), false, t3._precomputed1);
    },
    $signature: 7
  };
  A.Placement_listen__closure5.prototype = {
    call$1($event) {
      var t1;
      type$.MouseEvent._as($event);
      t1 = J.get$children$x(this.element);
      t1.forEach$1(t1, new A.Placement_listen___closure0());
    },
    $signature: 5
  };
  A.Placement_listen___closure0.prototype = {
    call$1(element) {
      A.Styles_opacity(type$.Element._as(element), "1");
    },
    $signature: 7
  };
  A.Placement_listen__closure6.prototype = {
    call$1($event) {
      var t1;
      type$.MouseEvent._as($event);
      t1 = J.get$children$x(this.element);
      t1.forEach$1(t1, new A.Placement_listen___closure());
    },
    $signature: 5
  };
  A.Placement_listen___closure.prototype = {
    call$1(element) {
      A.Styles_opacity(type$.Element._as(element), "0");
    },
    $signature: 7
  };
  A.Placement_listen_closure0.prototype = {
    call$1(element) {
      var t1, t2, t3, t4;
      type$.Element._as(element);
      t1 = J.getInterceptor$x(element);
      t2 = t1.get$onClick(element);
      t3 = t2.$ti;
      t4 = t3._eval$1("~(1)?")._as(new A.Placement_listen__closure2(element));
      type$.nullable_void_Function._as(null);
      A._EventStreamSubscription$(t2._target, t2._eventType, t4, false, t3._precomputed1);
      t3 = t1.get$onMouseEnter(element);
      t4 = t3.$ti;
      A._EventStreamSubscription$(t3._target, t3._eventType, t4._eval$1("~(1)?")._as(new A.Placement_listen__closure3(element)), false, t4._precomputed1);
      t1 = t1.get$onMouseLeave(element);
      t4 = t1.$ti;
      A._EventStreamSubscription$(t1._target, t1._eventType, t4._eval$1("~(1)?")._as(new A.Placement_listen__closure4(element)), false, t4._precomputed1);
    },
    $signature: 7
  };
  A.Placement_listen__closure2.prototype = {
    call$1($event) {
      type$.MouseEvent._as($event);
      switch ($.$get$LocalState__singleton().settings.mainBtn) {
        case B.MainButtonFunctionalityEnum_0:
          A.Events_copy(this.element);
          break;
        case B.MainButtonFunctionalityEnum_1:
          A.Events_save(false, this.element);
          break;
        case B.MainButtonFunctionalityEnum_2:
          A.Events_save(true, this.element);
          break;
        default:
          return;
      }
    },
    $signature: 5
  };
  A.Placement_listen__closure3.prototype = {
    call$1($event) {
      var t1;
      type$.MouseEvent._as($event);
      t1 = this.element.style;
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), "0.8", "");
    },
    $signature: 5
  };
  A.Placement_listen__closure4.prototype = {
    call$1($event) {
      var t1;
      type$.MouseEvent._as($event);
      t1 = this.element.style;
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), "1", "");
    },
    $signature: 5
  };
  A.Placement_listen_closure1.prototype = {
    call$1(element) {
      var t1, t2, t3, t4;
      type$.Element._as(element);
      t1 = J.getInterceptor$x(element);
      t2 = t1.get$onClick(element);
      t3 = t2.$ti;
      t4 = t3._eval$1("~(1)?")._as(new A.Placement_listen__closure(element));
      type$.nullable_void_Function._as(null);
      A._EventStreamSubscription$(t2._target, t2._eventType, t4, false, t3._precomputed1);
      t3 = t1.get$onMouseEnter(element);
      t4 = t3.$ti;
      A._EventStreamSubscription$(t3._target, t3._eventType, t4._eval$1("~(1)?")._as(new A.Placement_listen__closure0(element)), false, t4._precomputed1);
      t1 = t1.get$onMouseLeave(element);
      t4 = t1.$ti;
      A._EventStreamSubscription$(t1._target, t1._eventType, t4._eval$1("~(1)?")._as(new A.Placement_listen__closure1(element)), false, t4._precomputed1);
    },
    $signature: 7
  };
  A.Placement_listen__closure.prototype = {
    call$1($event) {
      return this.$call$body$Placement_listen__closure(type$.MouseEvent._as($event));
    },
    $call$body$Placement_listen__closure($event) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              A.Events_generateLink($async$self.element);
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 159
  };
  A.Placement_listen__closure0.prototype = {
    call$1($event) {
      var t1;
      type$.MouseEvent._as($event);
      t1 = this.element.style;
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), "0.8", "");
    },
    $signature: 5
  };
  A.Placement_listen__closure1.prototype = {
    call$1($event) {
      var t1;
      type$.MouseEvent._as($event);
      t1 = this.element.style;
      B.CssStyleDeclaration_methods._setPropertyHelper$3(t1, B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "opacity"), "1", "");
    },
    $signature: 5
  };
  A.Scraper_getBlocks_closure.prototype = {
    call$1(e) {
      var t1;
      type$.Element._as(e);
      if (e.tagName.toLowerCase() === "div")
        if (e.querySelector("pre") == null) {
          t1 = e.parentElement;
          if (t1 == null)
            t1 = null;
          else {
            t1 = t1.parentElement;
            if (t1 == null)
              t1 = null;
            else {
              t1 = t1.parentElement;
              t1 = t1 == null ? null : t1.querySelector("pre");
            }
          }
          if (t1 == null) {
            t1 = J.getInterceptor$x(e);
            t1 = !(t1.get$classes(e).contains$1(0, "language-selector") || t1.get$classes(e).contains$1(0, "language-select"));
          } else
            t1 = false;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    $signature: 4
  };
  A.Scraper_getBlocks_closure0.prototype = {
    call$1(element) {
      return !J.get$classes$x(type$.Element._as(element)).contains$1(0, "playground");
    },
    $signature: 4
  };
  A.Scraper_getLanguage_closure.prototype = {
    call$1(element) {
      return type$.Element._as(element).tagName.toLowerCase() === "code";
    },
    $signature: 4
  };
  A.Settings_migrate_closure.prototype = {
    call$1(item) {
      return B.JSString_methods.trim$0(A._asString(item));
    },
    $signature: 6
  };
  A.Settings_populate_closure.prototype = {
    call$1(item) {
      return B.JSString_methods.trim$0(A._asString(item));
    },
    $signature: 6
  };
  A.Settings_populate_closure0.prototype = {
    call$1(item) {
      return B.JSString_methods.trim$0(A._asString(item));
    },
    $signature: 6
  };
  A.BlocksFeatureEnum.prototype = {
    toString$0(_) {
      return "BlocksFeatureEnum." + this._name;
    }
  };
  A.ButtonPlacementOptionsEnum.prototype = {
    toString$0(_) {
      return "ButtonPlacementOptionsEnum." + this._name;
    }
  };
  A.ClassesEnum.prototype = {
    toString$0(_) {
      return "ClassesEnum." + this._name;
    }
  };
  A.ClientBlock.prototype = {
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["classification", _this.classification, "description", _this.description, "snippet", _this.snippet, "url", _this.url, "host", _this.host, "encountered", _this.encountered.toString$0(0)], type$.String, type$.dynamic);
    }
  };
  A.ClientBlocks.prototype = {
    set$blocks(value) {
      type$.List_ClientBlock._as(value);
      this.set$_blocks(value.length > 100 ? B.JSArray_methods.sublist$2(value, 0, 100) : value);
    },
    toJson$0() {
      var t1 = this._blocks,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Map<String,@>>");
      return A.LinkedHashMap_LinkedHashMap$_literal(["blocks", A.List_List$of(new A.MappedListIterable(t1, t2._eval$1("Map<String,@>(1)")._as(new A.ClientBlocks_toJson_closure()), t3), true, t3._eval$1("ListIterable.E"))], type$.String, type$.dynamic);
    },
    set$_blocks(_blocks) {
      this._blocks = type$.List_ClientBlock._as(_blocks);
    }
  };
  A.ClientBlocks_toJson_closure.prototype = {
    call$1(e) {
      return type$.ClientBlock._as(e).toJson$0();
    },
    $signature: 160
  };
  A.CustomDetectionWebsitesEnum.prototype = {
    toString$0(_) {
      return "CustomDetectionWebsitesEnum." + this._name;
    }
  };
  A.CustomExtractionWebsitesEnum.prototype = {
    toString$0(_) {
      return "CustomExtractionWebsitesEnum." + this._name;
    }
  };
  A.ElementThemeEnum.prototype = {
    toString$0(_) {
      return "ElementThemeEnum." + this._name;
    }
  };
  A.MainButtonFunctionalityEnum.prototype = {
    toString$0(_) {
      return "MainButtonFunctionalityEnum." + this._name;
    }
  };
  A.Metadata.prototype = {
    toString$0(_) {
      var _this = this;
      return "host: " + _this.host + ", url: " + _this.url + ", name: " + _this.name + ", title: " + _this.title + ", postTags: " + A.S(_this.tags) + ", description: " + _this.description + ", relatedLinks: " + A.S(_this.relatedLinks);
    }
  };
  A.main_closure.prototype = {
    call$1(options) {
      var t1;
      options.dsn = "https://1d21cbc2233040ec83c179dec32ec2cb@o552351.ingest.sentry.io/6370799";
      options._debug = false;
      t1 = J.$eq$(options._logger, options.get$_debugLogger());
      if (t1)
        options.set$_logger(A.sentry_options__noOpLogger$closure());
    },
    $signature: 161
  };
  A.Version.prototype = {
    Version$5$build$preRelease(major, minor, patch, build, preRelease) {
      var t1, i, t2, t3, _this = this, _null = null;
      for (t1 = _this._preRelease, i = 0; i < t1.length; ++i) {
        t2 = t1[i];
        if (B.JSString_methods.trim$0(t2).length === 0)
          throw A.wrapException(A.ArgumentError$("preRelease segments must not be empty", _null));
        B.JSArray_methods.$indexSet(t1, i, t2);
        t2 = $.$get$Version__preReleaseRegex();
        if (!(i < t1.length))
          return A.ioore(t1, i);
        t3 = A._asString(t1[i]);
        t2 = t2._nativeRegExp;
        if (!t2.test(t3))
          throw A.wrapException(A.FormatException$("preRelease segments must only contain [0-9A-Za-z-]", _null, _null));
      }
      t1 = _this.build;
      if (t1.length !== 0) {
        t2 = $.$get$Version__buildRegex()._nativeRegExp;
        t1 = !t2.test(t1);
      } else
        t1 = false;
      if (t1)
        throw A.wrapException(A.FormatException$("build must only contain [0-9A-Za-z-.]", _null, _null));
      if (_this.major < 0 || _this.minor < 0 || _this.patch < 0)
        throw A.wrapException(A.ArgumentError$("Version numbers must be greater than 0", _null));
    },
    get$hashCode(_) {
      return B.JSString_methods.get$hashCode(this.toString$0(0));
    },
    $eq(_, o) {
      if (o == null)
        return false;
      return o instanceof A.Version && A.Version__compare(this, o) === 0;
    },
    compareTo$1(_, other) {
      type$.nullable_Version._as(other);
      return A.Version__compare(this, other);
    },
    toString$0(_) {
      var _this = this,
        t1 = "" + _this.major + "." + _this.minor + "." + _this.patch,
        t2 = _this._preRelease;
      if (t2.length !== 0)
        t1 += "-" + B.JSArray_methods.join$1(t2, ".");
      t2 = B.JSString_methods.trim$0(_this.build);
      if (t2.length !== 0)
        t1 += "+" + t2;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isComparable: 1
  };
  (function aliases() {
    var _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
    _ = A.JsLinkedHashMap.prototype;
    _.super$JsLinkedHashMap$internalContainsKey = _.internalContainsKey$1;
    _.super$JsLinkedHashMap$internalGet = _.internalGet$1;
    _.super$JsLinkedHashMap$internalSet = _.internalSet$2;
    _.super$JsLinkedHashMap$internalRemove = _.internalRemove$1;
    _ = A.ListMixin.prototype;
    _.super$ListMixin$setRange = _.setRange$4;
    _ = A.Converter.prototype;
    _.super$Converter$fuse = _.fuse$1$1;
    _ = A.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _.super$Iterable$skipWhile = _.skipWhile$1;
    _ = A.Object.prototype;
    _.super$Object$toString = _.toString$0;
    _ = A.JsObject.prototype;
    _.super$JsObject$$index = _.$index;
    _.super$JsObject$$indexSet = _.$indexSet;
    _ = A._JsArray_JsObject_ListMixin.prototype;
    _.super$_JsArray_JsObject_ListMixin$$indexSet = _.$indexSet;
    _ = A.BaseRequest.prototype;
    _.super$BaseRequest$finalize = _.finalize$0;
    _ = A.SourceSpanMixin.prototype;
    _.super$SourceSpanMixin$compareTo = _.compareTo$1;
    _.super$SourceSpanMixin$$eq = _.$eq;
  })();
  (function installTearOffs() {
    var _static_2 = hunkHelpers._static_2,
      _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0,
      _static = hunkHelpers.installStaticTearOff,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance_0_i = hunkHelpers._instance_0i,
      _instance_2_i = hunkHelpers._instance_2i;
    _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 31);
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 22);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 22);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 22);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_1(A, "async___nullDataHandler$closure", "_nullDataHandler", 8);
    _static_2(A, "async___nullErrorHandler$closure", "_nullErrorHandler", 11);
    _static_0(A, "async___nullDoneHandler$closure", "_nullDoneHandler", 0);
    _static(A, "async___rootScheduleMicrotask$closure", 4, null, ["call$4"], ["_rootScheduleMicrotask"], 164, 0);
    var _;
    _instance_0_u(_ = A._BroadcastSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance(A._Completer.prototype, "get$completeError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["completeError$2", "completeError$1"], 112, 0, 0);
    _instance_2_u(A._Future.prototype, "get$_completeError", "_completeError$2", 11);
    _instance_1_i(_ = A._StreamController.prototype, "get$_async$_add", "_async$_add$1", 15);
    _instance_2_u(_, "get$_addError", "_addError$2", 11);
    _instance_0_u(_, "get$_close", "_close$0", 0);
    _instance_0_u(_ = A._ControllerSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_1_i(_ = A._StreamSinkWrapper.prototype, "get$add", "add$1", 15);
    _instance_0_i(_, "get$close", "close$0", 151);
    _instance_0_u(_ = A._BufferingStreamSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_0_u(A._DoneStreamSubscription.prototype, "get$_sendDone", "_sendDone$0", 0);
    _static_2(A, "collection___defaultEquals$closure", "_defaultEquals", 30);
    _static_1(A, "collection___defaultHashCode$closure", "_defaultHashCode", 35);
    _static_2(A, "collection_ListMixin__compareAny$closure", "ListMixin__compareAny", 31);
    _instance(A._LinkedHashSet.prototype, "get$_newSimilarSet", 0, 0, null, ["call$1$0", "call$0"], ["_newSimilarSet$1$0", "_newSimilarSet$0"], 157, 0, 0);
    _static_1(A, "convert___defaultToEncodable$closure", "_defaultToEncodable", 1);
    _instance_1_i(_ = A._ByteCallbackSink.prototype, "get$add", "add$1", 15);
    _instance_0_i(_, "get$close", "close$0", 0);
    _static_1(A, "core__identityHashCode$closure", "identityHashCode", 35);
    _static_2(A, "core__identical$closure", "identical", 30);
    _static_1(A, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 6);
    _instance_2_i(A.HttpRequest.prototype, "get$setRequestHeader", "setRequestHeader$2", 17);
    _static_1(A, "js___convertToJS$closure", "_convertToJS", 32);
    _static_1(A, "js___convertToDart$closure", "_convertToDart", 168);
    _static(A, "math__max$closure", 2, null, ["call$1$2", "call$2"], ["max", function(a, b) {
      return A.max(a, b, type$.num);
    }], 169, 1);
    _static_1(A, "response_Response_fromStream$closure", "Response_fromStream", 170);
    _instance_0_u(_ = A._CachedItem.prototype, "get$getData", "getData$0", 20);
    _instance_0_u(_, "get$getDataLength", "getDataLength$0", 132);
    _static(A, "sentry_options__noOpLogger$closure", 2, function() {
      return {exception: null, logger: null, stackTrace: null};
    }, ["call$5$exception$logger$stackTrace", "call$2", "call$4$exception$stackTrace"], ["noOpLogger", function(level, message) {
      return A.noOpLogger(level, message, null, null, null);
    }, function(level, message, exception, stackTrace) {
      return A.noOpLogger(level, message, exception, null, stackTrace);
    }], 37, 0);
    _instance(A.SentryOptions.prototype, "get$_debugLogger", 0, 2, function() {
      return {exception: null, logger: null, stackTrace: null};
    }, ["call$5$exception$logger$stackTrace", "call$2", "call$4$exception$stackTrace"], ["_debugLogger$5$exception$logger$stackTrace", "_debugLogger$2", "_debugLogger$4$exception$stackTrace"], 37, 0, 0);
    _static_1(A, "content__initialize$closure", "initialize", 12);
    _static_1(A, "content__initHistoryBlocks$closure", "initHistoryBlocks", 12);
    _static_2(A, "content___onMutation$closure", "_onMutation", 172);
    _static_0(A, "utils__getUtcDateTime$closure", "getUtcDateTime", 173);
    _static_1(A, "utils__jsonSerializationFallback$closure", "jsonSerializationFallback", 32);
    _static(A, "uuid_util_UuidUtil_mathRNG$closure", 0, function() {
      return {seed: -1};
    }, ["call$1$seed", "call$0"], ["UuidUtil_mathRNG", function() {
      return A.UuidUtil_mathRNG(-1);
    }], 116, 0);
    _static_1(A, "backtracking_Backtracking_updateCallback$closure", "Backtracking_updateCallback", 12);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.Object, null);
    _inheritMany(A.Object, [A.JS_CONST, J.Interceptor, J.ArrayIterator, A.Iterable, A.CastIterator, A.Closure, A.MapMixin, A.Error, A._ListBase_Object_ListMixin, A.SentinelValue, A.ListIterator, A.Iterator, A.ExpandIterator, A.EmptyIterator, A.WhereTypeIterator, A.FixedLengthListMixin, A.UnmodifiableListMixin, A.Symbol, A.MapView, A.ConstantMap, A.JSInvocationMirror, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A.ExceptionAndStackTrace, A._StackTrace, A._Required, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.JSSyntaxRegExp, A._MatchImplementation, A._AllMatchesIterator, A.StringMatch, A._StringAllMatchesIterator, A._Cell, A.Rti, A._FunctionParameters, A._Type, A._TimerImpl, A._AsyncAwaitCompleter, A._AsyncStarStreamController, A._IterationMarker, A._SyncStarIterator, A.AsyncError, A._BufferingStreamSubscription, A._BroadcastStreamController, A._Completer, A._FutureListener, A._Future, A._AsyncCallbackEntry, A.Stream, A.StreamSubscription, A.StreamTransformerBase, A._StreamController, A._SyncStreamControllerDispatch, A._AsyncStreamControllerDispatch, A._StreamSinkWrapper, A._AddStreamState, A._DelayedEvent, A._DelayedDone, A._PendingEvents, A._DoneStreamSubscription, A._StreamIterator, A._ZoneFunction, A._Zone, A.__SetBase_Object_SetMixin, A._LinkedHashSetCell, A._LinkedHashSetIterator, A.ListMixin, A._MapBaseValueIterator, A._UnmodifiableMapMixin, A._ListQueueIterator, A.SetMixin, A._SetBase_Object_SetMixin, A.Codec, A._Base64Encoder, A.ChunkedConversionSink, A._JsonStringifier, A._JsonPrettyPrintMixin, A._Utf8Encoder, A._Utf8Decoder, A.DateTime, A.Duration, A._Enum, A.OutOfMemoryError, A.StackOverflowError, A._Exception, A.FormatException, A.MapEntry, A.Null, A._StringStackTrace, A.StringBuffer, A._Uri, A.UriData, A._SimpleUri, A.Expando, A.CssStyleDeclarationBase, A.EventStreamProvider, A.ImmutableListMixin, A.FixedSizeListIterator, A._AcceptStructuredClone, A.JsObject, A.NullRejectionException, A._JSRandom, A._Random, A._RectangleBase, A.CanonicalizedMap, A.ConnectorApi, A.ApiClient0, A.ApiException0, A.AllocationsApi, A.AssetsApi, A.LinkifyApi, A.OSApi, A.WellKnownApi, A.ApiClient, A.ApiException, A.OAuth, A.BaseClient, A.BaseRequest, A.BaseResponse, A.ClientException, A.MediaType, A.Context, A.Style, A.ParsedPath, A.PathException, A.AccessEnum, A.AccessEnumTypeTransformer, A.Accessor, A.Accessors, A.Activities, A.Activity, A.Aesthetics, A.AllocationCloud, A.AllocationCloudStatus, A.AllocationCloudUrl, A.AllocationCloudUrls, A.AllocationStatusEnum, A.AllocationStatusEnumTypeTransformer, A.Allocations, A.Analyses, A.Analysis, A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs, A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnum, A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnumTypeTransformer, A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnum, A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnumTypeTransformer, A.Application, A.ApplicationNameEnum, A.ApplicationNameEnumTypeTransformer, A.Applications, A.Asset, A.AssetFormats, A.AssetReclassification, A.Assets, A.Auth0, A.Auth0Identity, A.Auth0Redirects, A.Auth0User, A.Auth0UserMetadata, A.AvailableFormats, A.ByteDescriptor, A.CapabilitiesEnum, A.CapabilitiesEnumTypeTransformer, A.ChallengedPKCE, A.ChallengedPKCEMethodEnum, A.ChallengedPKCEMethodEnumTypeTransformer, A.Classification, A.ClassificationGenericEnum, A.ClassificationGenericEnumTypeTransformer, A.ClassificationRenderingEnum, A.ClassificationRenderingEnumTypeTransformer, A.ClassificationSpecificEnum, A.ClassificationSpecificEnumTypeTransformer, A.CodeAnalyses, A.CodeAnalysis, A.ConnectorSnapshot, A.Context0, A.DiscoveredAsset, A.DiscoveredAssets, A.DiscoveredHtmlWebpage, A.DiscoveredHtmlWebpages, A.DiscoveredRelatedTag, A.DiscoveredRelatedTags, A.DiscoveredSensitive, A.DiscoveredSensitives, A.Distribution, A.Distributions, A.Edges, A.EmbeddedModelSchema, A.EmbeddedModelSchemaSemanticVersionEnum, A.EmbeddedModelSchemaSemanticVersionEnumTypeTransformer, A.Embedding, A.Embeddings, A.ExportedAsset, A.ExportedDatabase, A.ExportedDatabaseFormat, A.ExportedDatabaseFormats, A.ExternalProvider, A.ExternalProviderProfileData, A.ExternalProviderTypeEnum, A.ExternalProviderTypeEnumTypeTransformer, A.ExternalProviders, A.ExternallySourcedEnum, A.ExternallySourcedEnumTypeTransformer, A.FileFormat, A.FileMetadata, A.FlattenedActivities, A.FlattenedActivity, A.FlattenedAnalysis, A.FlattenedAsset, A.FlattenedAssets, A.FlattenedDistribution, A.FlattenedDistributions, A.FlattenedFormat, A.FlattenedFormats, A.FlattenedImageAnalysis, A.FlattenedOCRAnalysis, A.FlattenedPerson, A.FlattenedPersons, A.FlattenedPreview, A.FlattenedSensitive, A.FlattenedSensitives, A.FlattenedShare, A.FlattenedShares, A.FlattenedTag, A.FlattenedTags, A.FlattenedUserProfile, A.FlattenedWebsite, A.FlattenedWebsites, A.Font, A.Format, A.FormatMetric, A.FormatReclassification, A.Formats, A.FormatsMetrics, A.FragmentFormat, A.FragmentMetadata, A.GitHubDistribution, A.GitHubGistDistribution, A.GraphicalImageDescriptiveStatistics, A.GraphicalImageProcessing, A.GraphicalImageStatistics, A.GraphicalMachineLearningProcessingEvent, A.GraphicalOCRDescriptiveStatistics, A.GraphicalOCRDescriptiveStatisticsConfidence, A.GraphicalOCRProcessing, A.GraphicalOCRStatistics, A.GraphicalSVGStatistics, A.GroupedTimestamp, A.Health, A.ImageAnalyses, A.ImageAnalysis, A.InteractedAsset, A.InteractedAssetInteractions, A.InteractedAssets, A.Linkify, A.LinkifyMultiple, A.MailgunDistribution, A.MailgunMetadata, A.MechanismEnum, A.MechanismEnumTypeTransformer, A.Model, A.ModelTypeEnum, A.ModelTypeEnumTypeTransformer, A.ModelUsageEnum, A.ModelUsageEnumTypeTransformer, A.Models, A.Node, A.NodeTypeEnum, A.NodeTypeEnumTypeTransformer, A.Notification, A.OAuthAccount, A.OAuthGroup, A.OAuthToken, A.OAuthTokenTokenTypeEnum, A.OAuthTokenTokenTypeEnumTypeTransformer, A.OCRAnalyses, A.OCRAnalysis, A.OrderedMetrics, A.OSHealth, A.Person, A.PersonAccess, A.PersonAccessScopedEnum, A.PersonAccessScopedEnumTypeTransformer, A.PersonBasicType, A.PersonType, A.Persons, A.PKCE, A.PlatformEnum, A.PlatformEnumTypeTransformer, A.Preview, A.PrivacyEnum, A.PrivacyEnumTypeTransformer, A.Reaction, A.Recipients, A.ReferencedActivity, A.ReferencedAsset, A.ReferencedDistribution, A.ReferencedFormat, A.ReferencedPerson, A.ReferencedSensitive, A.ReferencedShare, A.ReferencedTag, A.ReferencedUser, A.ReferencedWebsite, A.Relationship, A.Relationships, A.ResultedPKCE, A.ReturnedUserProfile, A.ReuseReaction, A.ReuseSuggestion, A.RevokedPKCE, A.Role, A.RoleTypeTransformer, A.SaveSuggestion, A.Score, A.Searched, A.SearchedAsset, A.SearchedAssets, A.SearchedMatchEnum, A.SearchedMatchEnumTypeTransformer, A.Seed, A.SeedTypeEnum, A.SeedTypeEnumTypeTransformer, A.SeededAccessor, A.SeededActivity, A.SeededAsset, A.SeededAssetMetadata, A.SeededAssetSensitive, A.SeededAssetTag, A.SeededAssetTags, A.SeededAssetWebsite, A.SeededAssetsRecommendation, A.SeededClassification, A.SeededConnectorAsset, A.SeededConnectorConnection, A.SeededConnectorCreation, A.SeededConnectorTracking, A.SeededDiscoverableAsset, A.SeededDiscoverableAssets, A.SeededDiscoverableHtmlWebpage, A.SeededDiscoverableHtmlWebpages, A.SeededDiscoverableRelatedTag, A.SeededDiscoverableRelatedTags, A.SeededDiscoverableSensitive, A.SeededDiscoverableSensitives, A.SeededDistribution, A.SeededDistributions, A.SeededExternalProvider, A.SeededFile, A.SeededFormat, A.SeededFragment, A.SeededGitHubDistribution, A.SeededGitHubGistDistribution, A.SeededGithubGistsImport, A.SeededMacOSAsset, A.SeededModel, A.SeededPerson, A.SeededPKCE, A.SeededPKCEResponseTypeEnum, A.SeededPKCEResponseTypeEnumTypeTransformer, A.SeededPKCECodeChallengeMethodEnum, A.SeededPKCECodeChallengeMethodEnumTypeTransformer, A.SeededPKCEScreenHintEnum, A.SeededPKCEScreenHintEnumTypeTransformer, A.SeededPKCEPromptEnum, A.SeededPKCEPromptEnumTypeTransformer, A.SeededPKCEScopeEnum, A.SeededPKCEScopeEnumTypeTransformer, A.SeededPKCEResponseModeEnum, A.SeededPKCEResponseModeEnumTypeTransformer, A.SeededPKCEADDITIONALPARAMETERS, A.SeededPKCEADDITIONALPARAMETERSAccessTypeEnum, A.SeededPKCEADDITIONALPARAMETERSAccessTypeEnumTypeTransformer, A.SeededPKCEADDITIONALPARAMETERSDisplayEnum, A.SeededPKCEADDITIONALPARAMETERSDisplayEnumTypeTransformer, A.SeededSensitive, A.SeededShare, A.SeededTag, A.SeededTrackedAdoptionEvent, A.SeededTrackedApplication, A.SeededTrackedAssetEvent, A.SeededTrackedAssetsEvent, A.SeededTrackedAssetsEventMetadata, A.SeededTrackedFormatEvent, A.SeededTrackedInteractionEvent, A.SeededTrackedInteractionEventIdentifierDescriptionPairs, A.SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnum, A.SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer, A.SeededTrackedKeyboardEvent, A.SeededTrackedKeyboardEventIdentifierDescriptionPairs, A.SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnum, A.SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer, A.SeededTrackedMachineLearningEvent, A.SeededTrackedSessionEvent, A.SeededUltraSuiteAsset, A.SeededUser, A.SeededWebsite, A.Seeds, A.Sensitive, A.SensitiveCategoryEnum, A.SensitiveCategoryEnumTypeTransformer, A.SensitiveMetadata, A.SensitiveSeverityEnum, A.SensitiveSeverityEnumTypeTransformer, A.Sensitives, A.Session, A.Share, A.Shares, A.Space, A.StreamedIdentifier, A.StreamedIdentifiers, A.Suggestion, A.SuggestionTarget, A.SystemExecutionCpuInformation, A.SystemExecutionInformation, A.Tag, A.TagCategoryEnum, A.TagCategoryEnumTypeTransformer, A.Tags, A.TextLocation, A.TextMatch, A.Theme, A.TLPCodeDirectoryAnalytics, A.TLPCodeFileAnalytics, A.TLPCodeFragmentClassification, A.TLPCodeFragmentClassificationMetadata, A.TLPCodeFragmentDescription, A.TLPCodeFragmentDescriptiveStatistics, A.TLPCodeFragmentReclassification, A.TLPCodeFragmentReclassificationUpdates, A.TLPCodeFragmentStatistics, A.TLPCodeFragmentSuggestedReuse, A.TLPCodeFragmentSuggestedSave, A.TLPCodeFragmentTagify, A.TLPCodeProcessing, A.TLPCodeRepositoryAnalytics, A.TLPCodeSnippetAnalytics, A.TLPCodeSnippetSuggestedInteractions, A.TLPCodeSnippetTagifyCode, A.TLPDirectedDiscoveryFilter, A.TLPDirectedDiscoveryFilterEnum, A.TLPDirectedDiscoveryFilterEnumTypeTransformer, A.TLPDirectedDiscoveryFilters, A.TLPMachineLearningProcessingEvent, A.TokenizedPKCE, A.TokenizedPKCEGrantTypeEnum, A.TokenizedPKCEGrantTypeEnumTypeTransformer, A.TrackedApplication, A.TrackedApplicationInstall, A.TrackedApplicationUpdate, A.TrackedAssetEventCreationMetadata, A.TrackedAssetEventCreationMetadataClipboard, A.TrackedAssetEventCreationMetadataFile, A.TrackedAssetEventFormatReclassificationMetadata, A.TrackedAssetEventIdentifierDescriptionPairs, A.TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnum, A.TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnum, A.TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnum, A.TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnumTypeTransformer, A.TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnum, A.TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnumTypeTransformer, A.TrackedAssetEventMetadata, A.TrackedAssetEventRenameMetadata, A.TrackedAssetsEventIdentifierDescriptionPairs, A.TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnum, A.TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnumTypeTransformer, A.TrackedAssetsEventSearchMetadata, A.TrackedAssetsEventSearchMetadataResults, A.TrackedFormat, A.TrackedFormatEvent, A.TrackedFormatEventIdentifierDescriptionPairs, A.TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnum, A.TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnumTypeTransformer, A.TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnum, A.TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnumTypeTransformer, A.TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnum, A.TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnumTypeTransformer, A.TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnum, A.TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnumTypeTransformer, A.TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnum, A.TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnumTypeTransformer, A.TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnum, A.TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnumTypeTransformer, A.TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnum, A.TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnumTypeTransformer, A.TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnum, A.TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnumTypeTransformer, A.TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnum, A.TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnumTypeTransformer, A.TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnum, A.TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnumTypeTransformer, A.TrackedFormatEventMetadata, A.TrackedInteractionEvent, A.TrackedKeyboardEvent, A.TrackedSessionEventIdentifierDescriptionPairs, A.TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnum, A.TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnumTypeTransformer, A.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnum, A.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnumTypeTransformer, A.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnum, A.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnumTypeTransformer, A.TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnum, A.TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnumTypeTransformer, A.TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnum, A.TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnumTypeTransformer, A.TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnum, A.TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnumTypeTransformer, A.TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnum, A.TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnumTypeTransformer, A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnum, A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnumTypeTransformer, A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnum, A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnumTypeTransformer, A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnum, A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnumTypeTransformer, A.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnum, A.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnumTypeTransformer, A.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnum, A.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnumTypeTransformer, A.TrackedUserProfile, A.TrackedUserProfileGranularityEnum, A.TrackedUserProfileGranularityEnumTypeTransformer, A.TransferableBytes, A.TransferableString, A.UserProfile, A.Users, A.Website, A.Websites, A.ClientReport, A.ClientReportRecorder, A._QuantityKey, A.DiscardedEvent, A.NoOpClientReportRecorder, A.EnvironmentVariables, A.EventProcessor, A.WebEnricherEventProcessor, A.WebExcptionEventProcessor, A.Hub, A._StackItem, A._WeakMap, A.HubAdapter, A.NoOpClient, A.NoOpHub, A.Platform, A.PlatformChecker, A.Dsn, A.SdkVersion, A.SentryCulture, A.SentryDevice, A._SentryEvent_Object_SentryEventLike, A.SentryException, A.SentryId, A.SentryLevel, A.SentryPackage, A.SentryRequest, A.SentryStackFrame, A.SentryStackTrace, A.Scope, A.SentryClient, A.SentryClientAttachmentProcessor, A.SentryEnvelope, A.SentryEnvelopeHeader, A.SentryEnvelopeItem, A._CachedItem, A.SentryEnvelopeItemHeader, A.SentryEventLike, A.SentryExceptionFactory, A.SentryOptions, A.SentryStackTraceFactory, A.SentryTracesSampler, A.ThrowableMechanism, A.HttpTransport, A._CredentialBuilder, A.NoOpTransport, A.RateLimit, A.RateLimitParser, A.RateLimiter, A.SourceFile, A.SourceLocationMixin, A.SourceSpanMixin, A.Highlighter, A._Highlight, A._Line, A.SourceLocation, A.SourceSpanException, A.Chain, A.Frame, A.LazyChain, A.Trace, A.UnparsedFrame, A.StringScanner, A.Uuid, A.ClientConfiguration, A.ClientSettings, A.LocalState, A.ClientBlock, A.ClientBlocks, A.Metadata, A.Version]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, A.NativeByteBuffer, A.NativeTypedData]);
    _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, A.EventTarget, A.Blob, A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase, A.DomException, A.DomTokenList, A.Event, A._HtmlCollection_JavaScriptObject_ListMixin, A.ImageData, A.Location, A.MutationObserver, A._NodeList_JavaScriptObject_ListMixin, A.Screen, A.__NamedNodeMap_JavaScriptObject_ListMixin, A.KeyRange]);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A.Iterable, [A._CastIterableBase, A.EfficientLengthIterable, A.MappedIterable, A.WhereIterable, A.ExpandIterable, A.TakeIterable, A.SkipIterable, A.SkipWhileIterable, A.WhereTypeIterable, A._ConstantMapKeyIterable, A.IterableBase, A._StringAllMatchesIterable]);
    _inheritMany(A._CastIterableBase, [A.CastIterable, A.__CastListBase__CastIterableBase_ListMixin, A.CastSet, A.CastQueue]);
    _inherit(A._EfficientLengthCastIterable, A.CastIterable);
    _inherit(A._CastListBase, A.__CastListBase__CastIterableBase_ListMixin);
    _inheritMany(A.Closure, [A.Closure2Args, A.CastMap_entries_closure, A.Closure0Args, A.ConstantStringMap_values_closure, A.Instantiation, A.TearOffClosure, A.JsLinkedHashMap_values_closure, A.initHooks_closure, A.initHooks_closure1, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._awaitOnObject_closure, A._asyncStarHelper_closure0, A.Future_wait_closure, A._Future__chainForeignFuture_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A.Stream_length_closure, A.Stream_first_closure0, A._RootZone_bindUnaryCallbackGuarded_closure, A._LinkedCustomHashMap_closure, A.MapMixin_entries_closure, A._JsonMap_values_closure, A.JsonUtf8Encoder_convert_addChunk, A.DateTime_parse_parseIntOrZero, A.DateTime_parse_parseMilliAndMicroseconds, A._Uri__makePath_closure, A._createTables_setChars, A._createTables_setRange, A._EventStreamSubscription_closure, A._EventStreamSubscription_onData_closure, A.CssClassSetImpl_add_closure, A.FilteredElementList__iterable_closure, A.FilteredElementList__iterable_closure0, A.FilteredElementList_removeRange_closure, A._convertToJS_closure, A._convertToJS_closure0, A._wrapToDart_closure, A._wrapToDart_closure0, A._wrapToDart_closure1, A.promiseToFuture_closure, A.promiseToFuture_closure0, A.CanonicalizedMap_entries_closure, A.CanonicalizedMap_keys_closure, A.CanonicalizedMap_values_closure, A.ApiClient_invokeAPI_closure0, A.ApiClient__deserialize_closure2, A.ApiClient__deserialize_closure3, A.ApiClient__deserialize_closure4, A.ApiClient_invokeAPI_closure, A.ApiClient__deserialize_closure, A.ApiClient__deserialize_closure0, A.ApiClient__deserialize_closure1, A.BaseRequest_closure0, A.BrowserClient_send_closure, A.BrowserClient_send_closure0, A.ByteStream_toBytes_closure, A.mapToQuery_closure0, A.CaseInsensitiveMap$from_closure, A.MediaType_toString__closure, A.expectQuotedString_closure, A.Context_joinAll_closure, A.Context_split_closure, A._validateArgList_closure, A.WindowsStyle_absolutePathToUri_closure, A.Accessors_toJson_closure, A.Activities_toJson_closure, A.Allocations_toJson_closure, A.Analyses_toJson_closure, A.Applications_toJson_closure, A.AssetFormats_toJson_closure, A.Assets_toJson_closure, A.Auth0User_toJson_closure, A.AvailableFormats_toJson_closure, A.CodeAnalyses_toJson_closure, A.DiscoveredAssets_toJson_closure, A.DiscoveredHtmlWebpages_toJson_closure, A.DiscoveredRelatedTags_toJson_closure, A.DiscoveredSensitives_toJson_closure, A.Distributions_toJson_closure, A.Edges_toJson_closure, A.Embeddings_toJson_closure, A.ExportedDatabaseFormats_toJson_closure, A.ExternalProviders_toJson_closure, A.FlattenedActivities_toJson_closure, A.FlattenedAssets_toJson_closure, A.FlattenedDistributions_toJson_closure, A.FlattenedFormats_toJson_closure, A.FlattenedPersons_toJson_closure, A.FlattenedSensitives_toJson_closure, A.FlattenedShares_toJson_closure, A.FlattenedTags_toJson_closure, A.FlattenedWebsites_toJson_closure, A.Formats_toJson_closure, A.FormatsMetrics_toJson_closure, A.ImageAnalyses_toJson_closure, A.InteractedAssets_toJson_closure, A.Linkify_toJson_closure, A.LinkifyMultiple_toJson_closure, A.Models_toJson_closure, A.OCRAnalyses_toJson_closure, A.Persons_toJson_closure, A.Recipients_toJson_closure, A.Relationships_toJson_closure, A.SearchedAssets_toJson_closure, A.SeededAssetMetadata_toJson_closure, A.SeededAssetMetadata_toJson_closure0, A.SeededAssetMetadata_toJson_closure1, A.SeededAssetMetadata_toJson_closure2, A.SeededAssetTags_toJson_closure, A.SeededDiscoverableAssets_toJson_closure, A.SeededDiscoverableHtmlWebpages_toJson_closure, A.SeededDiscoverableRelatedTags_toJson_closure, A.SeededDiscoverableSensitives_toJson_closure, A.SeededDistributions_toJson_closure, A.SeededFormat_toJson_closure, A.SeededFormat_toJson_closure0, A.SeededPKCE_toJson_closure, A.SeededShare_toJson_closure, A.Seeds_toJson_closure, A.Sensitives_toJson_closure, A.Shares_toJson_closure, A.StreamedIdentifiers_toJson_closure, A.Tags_toJson_closure, A.TLPDirectedDiscoveryFilters_toJson_closure, A.Users_toJson_closure, A.Websites_toJson_closure, A.ClientReport_toJson_closure, A.ClientReport_toJson_closure0, A.ClientReportRecorder_flush_closure, A.Contexts_clone_closure, A.Contexts_clone_closure0, A.Contexts_copyWith_closure, A.SdkVersion_toJson_closure, A.SentryEvent_toJson_closure, A.SentryEvent_toJson_closure0, A.SentryEvent_toJson_closure1, A.SentryEvent_toJson_closure2, A.SentryEvent_toJson_closure3, A.SentryEvent_toJson_closure4, A.SentryEvent_toJson_closure5, A.SentryRequest_closure, A.SentryStackTrace_toJson_closure, A.SentryClient__eventWithRemovedBreadcrumbsIfHandled_closure, A.SentryClient__eventWithRemovedBreadcrumbsIfHandled_closure0, A.SentryEnvelope_SentryEnvelope$fromEvent_closure, A.Highlighter$__closure, A.Highlighter$___closure, A.Highlighter$__closure0, A.Highlighter__collateLines_closure, A.Highlighter__collateLines_closure1, A.Highlighter__collateLines__closure, A.Highlighter_highlight_closure, A.Chain_Chain$parse_closure, A.Chain_Chain$parse_closure0, A.Chain_Chain$parse_closure1, A.Chain_toTrace_closure, A.Chain_toString_closure0, A.Chain_toString__closure0, A.Chain_toString_closure, A.Chain_toString__closure, A.Trace__parseVM_closure, A.Trace__parseVM_closure0, A.Trace$parseV8_closure, A.Trace$parseV8_closure0, A.Trace$parseJSCore_closure, A.Trace$parseJSCore_closure0, A.Trace$parseFirefox_closure, A.Trace$parseFirefox_closure0, A.Trace$parseFriendly_closure, A.Trace$parseFriendly_closure0, A.Trace_toString_closure0, A.Trace_toString_closure, A.Actions_package_closure, A.Actions_linkify_closure, A.Blocks_save_closure, A.Events_copy_closure, A.Events_save_closure, A.Events_sendToPieces_closure, A.Events_sendToPieces_closure1, A.Events_generateLink_closure, A.Context__tags_closure, A.CustomCodeExtraction_accumulator_closure, A.Placement_listen_closure, A.Placement_listen__closure5, A.Placement_listen___closure0, A.Placement_listen__closure6, A.Placement_listen___closure, A.Placement_listen_closure0, A.Placement_listen__closure2, A.Placement_listen__closure3, A.Placement_listen__closure4, A.Placement_listen_closure1, A.Placement_listen__closure, A.Placement_listen__closure0, A.Placement_listen__closure1, A.Scraper_getBlocks_closure, A.Scraper_getBlocks_closure0, A.Scraper_getLanguage_closure, A.Settings_migrate_closure, A.Settings_populate_closure, A.Settings_populate_closure0, A.ClientBlocks_toJson_closure, A.main_closure]);
    _inheritMany(A.Closure2Args, [A._CastListBase_sort_closure, A.CastMap_forEach_closure, A.ConstantMap_map_closure, A.Primitives_functionNoSuchMethod_closure, A.JsLinkedHashMap_addAll_closure, A.initHooks_closure0, A._awaitOnObject_closure0, A._wrapJsFunctionForAsync_closure, A.Future_wait_handleError, A._Future__chainForeignFuture_closure0, A._RootZone_bindBinaryCallbackGuarded_closure, A.LinkedHashMap_LinkedHashMap$from_closure, A.MapBase_mapToString_closure, A._JsonStringifier_writeMap_closure, A._JsonPrettyPrintMixin_writeMap_closure, A._symbolMapToStringMap_closure, A.NoSuchMethodError_toString_closure, A.Uri__parseIPv4Address_error, A.Uri_parseIPv6Address_error, A.Uri_parseIPv6Address_parseHex, A._createTables_build, A.MutationObserver_observe_override, A._AcceptStructuredClone_walk_closure, A.CanonicalizedMap_addAll_closure, A.CanonicalizedMap_forEach_closure, A.CanonicalizedMap_map_closure, A.BaseRequest_closure, A.mapToQuery_closure, A.MediaType_toString_closure, A.Contexts_toJson_closure, A.Scope_applyToEvent_closure, A.Scope__mergeEventTags_closure, A.Scope__mergeEventExtra_closure, A.Highlighter__collateLines_closure0, A.Frame_Frame$parseV8_closure_parseLocation]);
    _inherit(A.CastList, A._CastListBase);
    _inherit(A.MapBase, A.MapMixin);
    _inheritMany(A.MapBase, [A.CastMap, A.JsLinkedHashMap, A._JsonMap]);
    _inheritMany(A.Error, [A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A.RuntimeError, A.AssertionError, A._Error, A.JsonUnsupportedObjectError, A.NullThrownError, A.ArgumentError, A.NoSuchMethodError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError, A.CyclicInitializationError]);
    _inherit(A.ListBase, A._ListBase_Object_ListMixin);
    _inheritMany(A.ListBase, [A.UnmodifiableListBase, A._ChildrenElementList, A._FrozenElementList, A._ChildNodeListLazy, A.FilteredElementList]);
    _inherit(A.CodeUnits, A.UnmodifiableListBase);
    _inheritMany(A.Closure0Args, [A.nullFuture_closure, A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A._asyncStarHelper_closure, A._AsyncStarStreamController__resumeBody, A._AsyncStarStreamController__resumeBody_closure, A._AsyncStarStreamController_closure0, A._AsyncStarStreamController_closure1, A._AsyncStarStreamController_closure, A._AsyncStarStreamController__closure, A.Future_Future$delayed_closure, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainForeignFuture_closure1, A._Future__asyncCompleteWithValue_closure, A._Future__chainFuture_closure, A._Future__asyncCompleteError_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A.Stream_length_closure0, A.Stream_first_closure, A._StreamController__subscribe_closure, A._StreamController__recordCancel_complete, A._AddStreamState_cancel_closure, A._BufferingStreamSubscription__sendError_sendError, A._BufferingStreamSubscription__sendDone_sendDone, A._PendingEvents_schedule_closure, A._cancelAndValue_closure, A._rootHandleError_closure, A._RootZone_bindCallback_closure, A._RootZone_bindCallbackGuarded_closure, A.Utf8Decoder__decoder_closure, A.Utf8Decoder__decoderNonfatal_closure, A.MediaType_MediaType$parse_closure, A.WebEnricherEventProcessor__getRequest_closure, A.SentryEnvelopeItem_SentryEnvelopeItem$fromAttachment_closure, A.SentryEnvelopeItem_SentryEnvelopeItem$fromEvent_closure, A.SentryEnvelopeItem_SentryEnvelopeItem$fromClientReport_closure, A.Highlighter_closure, A.Highlighter__writeFileStart_closure, A.Highlighter__writeMultilineHighlights_closure, A.Highlighter__writeMultilineHighlights_closure0, A.Highlighter__writeMultilineHighlights_closure1, A.Highlighter__writeMultilineHighlights_closure2, A.Highlighter__writeMultilineHighlights__closure, A.Highlighter__writeMultilineHighlights__closure0, A.Highlighter__writeHighlightedText_closure, A.Highlighter__writeIndicator_closure, A.Highlighter__writeIndicator_closure0, A.Highlighter__writeIndicator_closure1, A.Highlighter__writeSidebar_closure, A._Highlight_closure, A.Chain_Chain$forTrace_closure, A.Frame_Frame$parseVM_closure, A.Frame_Frame$parseV8_closure, A.Frame_Frame$_parseFirefoxEval_closure, A.Frame_Frame$parseFirefox_closure, A.Frame_Frame$parseFriendly_closure, A.Events_copy_closure0, A.Events_save_closure0, A.Events_sendToPieces_closure0, A.Events_sendToPieces_closure2, A.Events_generateLink_closure0, A.Events_generateLink_closure1]);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.EmptyIterable, A.LinkedHashMapKeyIterable, A._MapBaseValueIterable]);
    _inheritMany(A.ListIterable, [A.SubListIterable, A.MappedListIterable, A.ReversedListIterable, A.ListQueue, A._JsonMapKeyIterable]);
    _inherit(A.EfficientLengthMappedIterable, A.MappedIterable);
    _inheritMany(A.Iterator, [A.MappedIterator, A.WhereIterator, A.TakeIterator, A.SkipIterator, A.SkipWhileIterator]);
    _inherit(A.EfficientLengthTakeIterable, A.TakeIterable);
    _inherit(A.EfficientLengthSkipIterable, A.SkipIterable);
    _inheritMany(A.MapView, [A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A.Contexts]);
    _inherit(A.UnmodifiableMapView, A._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inherit(A.ConstantMapView, A.UnmodifiableMapView);
    _inherit(A.ConstantStringMap, A.ConstantMap);
    _inherit(A.Instantiation1, A.Instantiation);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inherit(A._AssertionError, A.AssertionError);
    _inheritMany(A.IterableBase, [A._AllMatchesIterable, A._SyncStarIterable]);
    _inheritMany(A.NativeTypedData, [A.NativeByteData, A.NativeTypedArray]);
    _inheritMany(A.NativeTypedArray, [A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfDouble, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(A.NativeTypedArrayOfDouble, [A.NativeFloat32List, A.NativeFloat64List]);
    _inheritMany(A.NativeTypedArrayOfInt, [A.NativeInt16List, A.NativeInt32List, A.NativeInt8List, A.NativeUint16List, A.NativeUint32List, A.NativeUint8ClampedList, A.NativeUint8List]);
    _inherit(A._TypeError, A._Error);
    _inherit(A._ControllerSubscription, A._BufferingStreamSubscription);
    _inherit(A._BroadcastSubscription, A._ControllerSubscription);
    _inherit(A._AsyncBroadcastStreamController, A._BroadcastStreamController);
    _inherit(A._AsyncCompleter, A._Completer);
    _inheritMany(A.Stream, [A.StreamView, A._StreamImpl, A._EmptyStream, A._EventStream]);
    _inheritMany(A._StreamController, [A._AsyncStreamController, A._SyncStreamController]);
    _inherit(A._ControllerStream, A._StreamImpl);
    _inherit(A._StreamControllerAddStreamState, A._AddStreamState);
    _inheritMany(A._DelayedEvent, [A._DelayedData, A._DelayedError]);
    _inherit(A._RootZone, A._Zone);
    _inheritMany(A.JsLinkedHashMap, [A._LinkedIdentityHashMap, A._LinkedCustomHashMap]);
    _inherit(A._SetBase, A.__SetBase_Object_SetMixin);
    _inherit(A._LinkedHashSet, A._SetBase);
    _inherit(A.SetBase, A._SetBase_Object_SetMixin);
    _inheritMany(A.Codec, [A.Encoding, A.Base64Codec, A._FusedCodec, A.JsonCodec]);
    _inheritMany(A.Encoding, [A.AsciiCodec, A.Latin1Codec, A.Utf8Codec]);
    _inherit(A.Converter, A.StreamTransformerBase);
    _inheritMany(A.Converter, [A._UnicodeSubsetEncoder, A._UnicodeSubsetDecoder, A.Base64Encoder, A._FusedConverter, A.JsonEncoder, A.JsonUtf8Encoder, A.JsonDecoder, A.Utf8Encoder, A.Utf8Decoder]);
    _inheritMany(A._UnicodeSubsetEncoder, [A.AsciiEncoder, A.Latin1Encoder]);
    _inheritMany(A._UnicodeSubsetDecoder, [A.AsciiDecoder, A.Latin1Decoder]);
    _inherit(A.ByteConversionSink, A.ChunkedConversionSink);
    _inherit(A.ByteConversionSinkBase, A.ByteConversionSink);
    _inherit(A._ByteCallbackSink, A.ByteConversionSinkBase);
    _inherit(A.JsonCyclicError, A.JsonUnsupportedObjectError);
    _inheritMany(A._JsonStringifier, [A._JsonStringStringifier, A._JsonUtf8Stringifier]);
    _inherit(A.__JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin, A._JsonUtf8Stringifier);
    _inherit(A._JsonUtf8StringifierPretty, A.__JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inherit(A._DataUri, A._Uri);
    _inheritMany(A.EventTarget, [A.Node0, A.HttpRequestEventTarget, A.Window, A.WorkerGlobalScope]);
    _inheritMany(A.Node0, [A.Element, A.CharacterData, A.Document]);
    _inheritMany(A.Element, [A.HtmlElement, A.SvgElement]);
    _inheritMany(A.HtmlElement, [A.AnchorElement, A.AreaElement, A.FormElement, A.ImageElement, A.SelectElement]);
    _inherit(A.CssStyleDeclaration, A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase);
    _inherit(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A._HtmlCollection_JavaScriptObject_ListMixin);
    _inherit(A.HtmlCollection, A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.HttpRequest, A.HttpRequestEventTarget);
    _inheritMany(A.Event, [A.UIEvent, A.ProgressEvent]);
    _inherit(A.MouseEvent, A.UIEvent);
    _inherit(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A._NodeList_JavaScriptObject_ListMixin);
    _inherit(A.NodeList, A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin);
    _inherit(A._NamedNodeMap, A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.CssClassSetImpl, A.SetBase);
    _inheritMany(A.CssClassSetImpl, [A._ElementCssClassSet, A.AttributeClassSet]);
    _inherit(A._ElementEventStreamImpl, A._EventStream);
    _inherit(A._EventStreamSubscription, A.StreamSubscription);
    _inherit(A._AcceptStructuredCloneDart2Js, A._AcceptStructuredClone);
    _inheritMany(A.JsObject, [A.JsFunction, A._JsArray_JsObject_ListMixin]);
    _inherit(A.JsArray, A._JsArray_JsObject_ListMixin);
    _inherit(A.Rectangle, A._RectangleBase);
    _inherit(A.BrowserClient, A.BaseClient);
    _inherit(A.ByteStream, A.StreamView);
    _inheritMany(A.BaseRequest, [A.Request, A.StreamedRequest]);
    _inheritMany(A.BaseResponse, [A.Response, A.StreamedResponse]);
    _inherit(A.CaseInsensitiveMap, A.CanonicalizedMap);
    _inherit(A.InternalStyle, A.Style);
    _inheritMany(A.InternalStyle, [A.PosixStyle, A.UrlStyle, A.WindowsStyle]);
    _inheritMany(A._Enum, [A.DiscardReason, A.SentryOrientation, A.DataCategory, A.BlocksFeatureEnum, A.ButtonPlacementOptionsEnum, A.ClassesEnum, A.CustomDetectionWebsitesEnum, A.CustomExtractionWebsitesEnum, A.ElementThemeEnum, A.MainButtonFunctionalityEnum]);
    _inherit(A.WebEnvironmentVariables, A.EnvironmentVariables);
    _inherit(A.DeduplicationEventProcessor, A.EventProcessor);
    _inherit(A.WebPlatform, A.Platform);
    _inherit(A.SentryEvent, A._SentryEvent_Object_SentryEventLike);
    _inherit(A.FileLocation, A.SourceLocationMixin);
    _inheritMany(A.SourceSpanMixin, [A._FileSpan, A.SourceSpanBase]);
    _inherit(A.SourceSpanFormatException, A.SourceSpanException);
    _inherit(A.SourceSpanWithContext, A.SourceSpanBase);
    _inherit(A.StringScannerException, A.SourceSpanFormatException);
    _mixin(A.UnmodifiableListBase, A.UnmodifiableListMixin);
    _mixin(A.__CastListBase__CastIterableBase_ListMixin, A.ListMixin);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A.ListMixin);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._AsyncStreamController, A._AsyncStreamControllerDispatch);
    _mixin(A._SyncStreamController, A._SyncStreamControllerDispatch);
    _mixin(A._ListBase_Object_ListMixin, A.ListMixin);
    _mixin(A._SetBase_Object_SetMixin, A.SetMixin);
    _mixin(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A._UnmodifiableMapMixin);
    _mixin(A.__SetBase_Object_SetMixin, A.SetMixin);
    _mixin(A.__JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin, A._JsonPrettyPrintMixin);
    _mixin(A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase, A.CssStyleDeclarationBase);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin, A.ListMixin);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._NodeList_JavaScriptObject_ListMixin, A.ListMixin);
    _mixin(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin, A.ListMixin);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixinHard(A._JsArray_JsObject_ListMixin, A.ListMixin);
    _mixin(A._SentryEvent_Object_SentryEventLike, A.SentryEventLike);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    types: ["~()", "@(@)", "bool(String)", "Null()", "bool(Element)", "~(MouseEvent)", "String(String)", "~(Element)", "~(@)", "Frame()", "Frame(String)", "~(Object,StackTrace)", "~(JsObject)", "~(String,@)", "Null(@)", "~(Object?)", "~(Object?,Object?)", "~(String,String)", "Map<String,@>(SeededUser)", "bool(Map<String,@>)", "Future<List<int>>()", "bool(_Highlight)", "~(~())", "bool(MapEntry<String,@>)", "~(Symbol0,@)", "int(String?)", "Map<String,@>(Format)", "~(Uint8List,String,int)", "~(Event)", "String(QueryParam)", "bool(Object?,Object?)", "int(@,@)", "Object?(Object?)", "String(Frame)", "int(Frame)", "int(Object?)", "Trace(String)", "~(SentryLevel,String{exception:Object?,logger:String?,stackTrace:StackTrace?})", "String()", "Map<String,@>(SeededAssetTag)", "@(String)", "String(Match)", "Null(ProgressEvent)", "@()", "bool(String,String)", "int(String)", "JsObject(@)", "~(List<int>)", "String(List<String>)", "MediaType()", "JsArray<@>(@)", "_Future<@>?()", "String(String?)", "Map<String,@>(Accessor)", "Map<String,@>(Activity)", "Map<String,@>(AllocationCloud)", "Map<String,@>(Analysis)", "Map<String,@>(Application)", "Future<Null>()", "Map<String,@>(Asset)", "Map<String,@>(Auth0Identity)", "Map<String,@>(Classification)", "Map<String,@>(CodeAnalysis)", "Map<String,@>(DiscoveredAsset)", "Map<String,@>(DiscoveredHtmlWebpage)", "Map<String,@>(DiscoveredRelatedTag)", "Map<String,@>(DiscoveredSensitive)", "Map<String,@>(Distribution)", "Map<String,@>(Node)", "Map<String,@>(Embedding)", "Map<String,@>(ExportedDatabaseFormat)", "Map<String,@>(ExternalProvider)", "Map<String,@>(ReferencedActivity)", "Map<String,@>(ReferencedAsset)", "Map<String,@>(ReferencedDistribution)", "Map<String,@>(ReferencedFormat)", "Map<String,@>(ReferencedPerson)", "Map<String,@>(ReferencedSensitive)", "Map<String,@>(FlattenedShare)", "Map<String,@>(ReferencedTag)", "Map<String,@>(ReferencedWebsite)", "Map<String,@>(FormatMetric)", "Map<String,@>(ImageAnalysis)", "Map<String,@>(InteractedAsset)", "JsFunction(@)", "Map<String,@>(Model)", "Map<String,@>(OCRAnalysis)", "int(int,int)", "Map<String,@>(PersonBasicType)", "Map<String,@>(Relationship)", "Map<String,@>(SearchedAsset)", "Element(Node0)", "Map<String,@>(SeededAssetWebsite)", "Map<String,@>(SeededAssetSensitive)", "Map<String,@>(SeededPerson)", "Map<String,@>(SeededDiscoverableAsset)", "Map<String,@>(SeededDiscoverableHtmlWebpage)", "Map<String,@>(SeededDiscoverableRelatedTag)", "Map<String,@>(SeededDiscoverableSensitive)", "Map<String,@>(SeededDistribution)", "Map<String,@>(SeededWebsite)", "Map<String,@>(SeededTag)", "String(SeededPKCEScopeEnum)", "Map<String,@>(Seed)", "Map<String,@>(Sensitive)", "Map<String,@>(Share)", "Map<String,@>(StreamedIdentifier)", "Map<String,@>(Tag)", "Map<String,@>(TLPDirectedDiscoveryFilter)", "Map<String,@>(UserProfile)", "Map<String,@>(Website)", "Map<String,@>(DiscardedEvent)", "~(Object[StackTrace?])", "DiscardedEvent(_QuantityKey)", "bool(Node0)", "SentryRuntime(SentryRuntime)", "Uint8List({seed:int})", "Map<String,@>(SentryPackage)", "Map<String,@>(SentryException)", "int?(SentryException)", "bool(int?)", "Map<String,@>(SentryThread)", "Map<String,@>(Breadcrumb)", "bool(MapEntry<String,String>)", "Map<String,@>(SentryStackFrame)", "MapEntry<String,String>(String,String)", "MapEntry<String,@>(String,@)", "Mechanism?(SentryException)", "bool(Mechanism)", "SentryEnvelopeItem(SentryAttachment)", "Future<Uint8List>()", "Null(Object,StackTrace)", "Future<int>()", "bool(Set<String>)", "String?()", "int(_Line)", "_Future<@>(@)", "Object(_Line)", "Object(_Highlight)", "int(_Highlight,_Highlight)", "List<_Line>(MapEntry<Object,List<_Highlight>>)", "SourceSpanWithContext()", "Chain()", "@(@,@)", "List<Frame>(Trace)", "int(Trace)", "Null(@,@)", "String(Trace)", "~(int,@)", "@(@,String)", "Frame(String,String)", "Future<@>()", "SeededAssetTag(String)", "bool(Share)", "bool(ClientBlock)", "bool(@)", "Element()", "Set<0^>()<Object?>", "~(@,@)", "Future<~>(MouseEvent)", "Map<String,@>(ClientBlock)", "Null(SentryOptions)", "Uint8List(@,@)", "Null(~())", "~(Zone?,ZoneDelegate?,Zone,~())", "Null(@,StackTrace)", "~(String,int?)", "~(String,int)", "Object?(@)", "0^(0^,0^)<num>", "Future<Response>(StreamedResponse)", "~(Uint8List,int,int)", "~(List<@>,MutationObserver)", "DateTime()", "Map<String,@>(Person)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti")
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","JavaScriptFunction":"LegacyJavaScriptObject","AbortPaymentEvent":"Event","ExtendableEvent":"Event","AElement":"SvgElement","GraphicsElement":"SvgElement","_ResourceProgressEvent":"ProgressEvent","AudioElement":"HtmlElement","MediaElement":"HtmlElement","ShadowRoot":"Node0","DocumentFragment":"Node0","MediaQueryList":"EventTarget","HtmlDocument":"Document","PointerEvent":"MouseEvent","CompositionEvent":"UIEvent","DedicatedWorkerGlobalScope":"WorkerGlobalScope","CDataSection":"CharacterData","Text":"CharacterData","MathMLElement":"Element","HtmlFormControlsCollection":"HtmlCollection","File":"Blob","JSBool":{"bool":[]},"JSNull":{"Null":[]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"JSIndexable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"JSIndexable":["1"]},"ArrayIterator":{"Iterator":["1"]},"JSNumber":{"double":[],"num":[],"Comparable":["num"]},"JSInt":{"double":[],"int":[],"num":[],"Comparable":["num"]},"JSNumNotInt":{"double":[],"num":[],"Comparable":["num"]},"JSString":{"String":[],"Comparable":["String"],"Pattern":[],"JSIndexable":["@"]},"_CastIterableBase":{"Iterable":["2"]},"CastIterator":{"Iterator":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListMixin":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListMixin":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListMixin.E":"2","Iterable.E":"2"},"CastSet":{"Set":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"CastMap":{"MapMixin":["3","4"],"Map":["3","4"],"MapMixin.K":"3","MapMixin.V":"4"},"CastQueue":{"Queue":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"LateError":{"Error":[]},"CodeUnits":{"ListMixin":["int"],"UnmodifiableListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int","UnmodifiableListMixin.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"ListIterator":{"Iterator":["1"]},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedIterator":{"Iterator":["2"]},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListIterable.E":"2","Iterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereIterator":{"Iterator":["1"]},"ExpandIterable":{"Iterable":["2"],"Iterable.E":"2"},"ExpandIterator":{"Iterator":["2"]},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"TakeIterator":{"Iterator":["1"]},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterator":{"Iterator":["1"]},"SkipWhileIterable":{"Iterable":["1"],"Iterable.E":"1"},"SkipWhileIterator":{"Iterator":["1"]},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"EmptyIterator":{"Iterator":["1"]},"WhereTypeIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereTypeIterator":{"Iterator":["1"]},"UnmodifiableListBase":{"ListMixin":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ReversedListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"Symbol":{"Symbol0":[]},"ConstantMapView":{"UnmodifiableMapView":["1","2"],"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"],"MapView.K":"1","MapView.V":"2"},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_ConstantMapKeyIterable":{"Iterable":["1"],"Iterable.E":"1"},"Instantiation":{"Closure":[],"Function":[]},"Instantiation1":{"Closure":[],"Function":[]},"JSInvocationMirror":{"Invocation":[]},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"NullThrownFromJavaScriptException":{"Exception":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"Closure0Args":{"Closure":[],"Function":[]},"Closure2Args":{"Closure":[],"Function":[]},"TearOffClosure":{"Closure":[],"Function":[]},"StaticClosure":{"Closure":[],"Function":[]},"BoundClosure":{"Closure":[],"Function":[]},"RuntimeError":{"Error":[]},"_AssertionError":{"Error":[]},"JsLinkedHashMap":{"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapKeyIterator":{"Iterator":["1"]},"JSSyntaxRegExp":{"RegExp":[],"Pattern":[]},"_MatchImplementation":{"RegExpMatch":[],"Match":[]},"_AllMatchesIterable":{"Iterable":["RegExpMatch"],"Iterable.E":"RegExpMatch"},"_AllMatchesIterator":{"Iterator":["RegExpMatch"]},"StringMatch":{"Match":[]},"_StringAllMatchesIterable":{"Iterable":["Match"],"Iterable.E":"Match"},"_StringAllMatchesIterator":{"Iterator":["Match"]},"NativeByteBuffer":{"ByteBuffer":[]},"NativeTypedData":{"TypedData":[]},"NativeByteData":{"TypedData":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"],"TypedData":[],"JSIndexable":["1"]},"NativeTypedArrayOfDouble":{"NativeTypedArray":["double"],"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"EfficientLengthIterable":["double"],"TypedData":[],"JSIndexable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"]},"NativeTypedArrayOfInt":{"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"]},"NativeFloat32List":{"NativeTypedArray":["double"],"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"EfficientLengthIterable":["double"],"TypedData":[],"JSIndexable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"],"ListMixin.E":"double","FixedLengthListMixin.E":"double"},"NativeFloat64List":{"NativeTypedArray":["double"],"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"EfficientLengthIterable":["double"],"TypedData":[],"JSIndexable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"],"ListMixin.E":"double","FixedLengthListMixin.E":"double"},"NativeInt16List":{"NativeTypedArrayOfInt":[],"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeInt32List":{"NativeTypedArrayOfInt":[],"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeInt8List":{"NativeTypedArrayOfInt":[],"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint16List":{"NativeTypedArrayOfInt":[],"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint32List":{"NativeTypedArrayOfInt":[],"NativeTypedArray":["int"],"ListMixin":["int"],"Uint32List":[],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint8ClampedList":{"NativeTypedArrayOfInt":[],"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"NativeUint8List":{"NativeTypedArrayOfInt":[],"NativeTypedArray":["int"],"ListMixin":["int"],"Uint8List":[],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"_Future":{"Future":["1"]},"_SyncStarIterator":{"Iterator":["1"]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"AsyncError":{"Error":[]},"_BroadcastSubscription":{"_ControllerSubscription":["1"],"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_EventDispatch":["1"]},"_BroadcastStreamController":{"StreamController":["1"],"_StreamControllerLifecycle":["1"],"_EventDispatch":["1"]},"_AsyncBroadcastStreamController":{"_BroadcastStreamController":["1"],"StreamController":["1"],"_StreamControllerLifecycle":["1"],"_EventDispatch":["1"]},"_AsyncCompleter":{"_Completer":["1"]},"StreamView":{"Stream":["1"]},"_StreamController":{"StreamController":["1"],"_StreamControllerLifecycle":["1"],"_EventDispatch":["1"]},"_AsyncStreamController":{"_AsyncStreamControllerDispatch":["1"],"_StreamController":["1"],"StreamController":["1"],"_StreamControllerLifecycle":["1"],"_EventDispatch":["1"]},"_SyncStreamController":{"_SyncStreamControllerDispatch":["1"],"_StreamController":["1"],"StreamController":["1"],"_StreamControllerLifecycle":["1"],"_EventDispatch":["1"]},"_ControllerStream":{"_StreamImpl":["1"],"Stream":["1"],"Stream.T":"1"},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_EventDispatch":["1"]},"_StreamControllerAddStreamState":{"_AddStreamState":["1"]},"_BufferingStreamSubscription":{"StreamSubscription":["1"],"_EventDispatch":["1"]},"_StreamImpl":{"Stream":["1"]},"_DelayedData":{"_DelayedEvent":["1"]},"_DelayedError":{"_DelayedEvent":["@"]},"_DelayedDone":{"_DelayedEvent":["@"]},"_DoneStreamSubscription":{"StreamSubscription":["1"]},"_EmptyStream":{"Stream":["1"],"Stream.T":"1"},"_Zone":{"Zone":[]},"_RootZone":{"_Zone":[],"Zone":[]},"_LinkedIdentityHashMap":{"JsLinkedHashMap":["1","2"],"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_LinkedCustomHashMap":{"JsLinkedHashMap":["1","2"],"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"_LinkedHashSet":{"_SetBase":["1"],"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"SetMixin.E":"1"},"_LinkedHashSetIterator":{"Iterator":["1"]},"IterableBase":{"Iterable":["1"]},"ListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"MapMixin":["1","2"],"Map":["1","2"]},"MapMixin":{"Map":["1","2"]},"_MapBaseValueIterable":{"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_MapBaseValueIterator":{"Iterator":["2"]},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"],"MapView.K":"1","MapView.V":"2"},"ListQueue":{"ListIterable":["1"],"Queue":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"_ListQueueIterator":{"Iterator":["1"]},"SetBase":{"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_SetBase":{"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"Encoding":{"Codec":["String","List<int>"]},"_JsonMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"ListIterable.E":"String","Iterable.E":"String"},"AsciiCodec":{"Encoding":[],"Codec":["String","List<int>"],"Codec.S":"String"},"_UnicodeSubsetEncoder":{"Converter":["String","List<int>"]},"AsciiEncoder":{"Converter":["String","List<int>"],"Converter.T":"List<int>","Converter.S":"String"},"_UnicodeSubsetDecoder":{"Converter":["List<int>","String"]},"AsciiDecoder":{"Converter":["List<int>","String"],"Converter.T":"String","Converter.S":"List<int>"},"Base64Codec":{"Codec":["List<int>","String"],"Codec.S":"List<int>"},"Base64Encoder":{"Converter":["List<int>","String"],"Converter.T":"String","Converter.S":"List<int>"},"ByteConversionSink":{"ChunkedConversionSink":["List<int>"]},"ByteConversionSinkBase":{"ChunkedConversionSink":["List<int>"]},"_ByteCallbackSink":{"ChunkedConversionSink":["List<int>"]},"_FusedCodec":{"Codec":["1","3"],"Codec.S":"1"},"_FusedConverter":{"Converter":["1","3"],"Converter.T":"3","Converter.S":"1"},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"JsonCodec":{"Codec":["Object?","String"],"Codec.S":"Object?"},"JsonEncoder":{"Converter":["Object?","String"],"Converter.T":"String","Converter.S":"Object?"},"JsonUtf8Encoder":{"Converter":["Object?","List<int>"],"Converter.T":"List<int>","Converter.S":"Object?"},"JsonDecoder":{"Converter":["String","Object?"],"Converter.T":"Object?","Converter.S":"String"},"Latin1Codec":{"Encoding":[],"Codec":["String","List<int>"],"Codec.S":"String"},"Latin1Encoder":{"Converter":["String","List<int>"],"Converter.T":"List<int>","Converter.S":"String"},"Latin1Decoder":{"Converter":["List<int>","String"],"Converter.T":"String","Converter.S":"List<int>"},"Utf8Codec":{"Encoding":[],"Codec":["String","List<int>"],"Codec.S":"String"},"Utf8Encoder":{"Converter":["String","List<int>"],"Converter.T":"List<int>","Converter.S":"String"},"Utf8Decoder":{"Converter":["List<int>","String"],"Converter.T":"String","Converter.S":"List<int>"},"DateTime":{"Comparable":["DateTime"]},"double":{"num":[],"Comparable":["num"]},"Duration":{"Comparable":["Duration"]},"int":{"num":[],"Comparable":["num"]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"num":{"Comparable":["num"]},"RegExpMatch":{"Match":[]},"Set":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"String":{"Comparable":["String"],"Pattern":[]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"NullThrownError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"NoSuchMethodError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"CyclicInitializationError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"_StringStackTrace":{"StackTrace":[]},"StringBuffer":{"StringSink":[]},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"Element":{"Node0":[],"EventTarget":[]},"HttpRequest":{"EventTarget":[]},"MouseEvent":{"Event":[]},"Node0":{"EventTarget":[]},"ProgressEvent":{"Event":[]},"HtmlElement":{"Element":[],"Node0":[],"EventTarget":[]},"AnchorElement":{"Element":[],"Node0":[],"EventTarget":[]},"AreaElement":{"Element":[],"Node0":[],"EventTarget":[]},"CharacterData":{"Node0":[],"EventTarget":[]},"Document":{"Node0":[],"EventTarget":[]},"_ChildrenElementList":{"ListMixin":["Element"],"List":["Element"],"EfficientLengthIterable":["Element"],"Iterable":["Element"],"ListMixin.E":"Element"},"_FrozenElementList":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListMixin.E":"1"},"FormElement":{"Element":[],"Node0":[],"EventTarget":[]},"HtmlCollection":{"ListMixin":["Node0"],"ImmutableListMixin":["Node0"],"List":["Node0"],"JavaScriptIndexingBehavior":["Node0"],"EfficientLengthIterable":["Node0"],"Iterable":["Node0"],"JSIndexable":["Node0"],"ListMixin.E":"Node0","ImmutableListMixin.E":"Node0"},"HttpRequestEventTarget":{"EventTarget":[]},"ImageElement":{"Element":[],"Node0":[],"EventTarget":[]},"_ChildNodeListLazy":{"ListMixin":["Node0"],"List":["Node0"],"EfficientLengthIterable":["Node0"],"Iterable":["Node0"],"ListMixin.E":"Node0"},"NodeList":{"ListMixin":["Node0"],"ImmutableListMixin":["Node0"],"List":["Node0"],"JavaScriptIndexingBehavior":["Node0"],"EfficientLengthIterable":["Node0"],"Iterable":["Node0"],"JSIndexable":["Node0"],"ListMixin.E":"Node0","ImmutableListMixin.E":"Node0"},"SelectElement":{"Element":[],"Node0":[],"EventTarget":[]},"UIEvent":{"Event":[]},"Window":{"EventTarget":[]},"WorkerGlobalScope":{"EventTarget":[]},"_NamedNodeMap":{"ListMixin":["Node0"],"ImmutableListMixin":["Node0"],"List":["Node0"],"JavaScriptIndexingBehavior":["Node0"],"EfficientLengthIterable":["Node0"],"Iterable":["Node0"],"JSIndexable":["Node0"],"ListMixin.E":"Node0","ImmutableListMixin.E":"Node0"},"_ElementCssClassSet":{"SetMixin":["String"],"Set":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"SetMixin.E":"String"},"_EventStream":{"Stream":["1"],"Stream.T":"1"},"_ElementEventStreamImpl":{"_EventStream":["1"],"Stream":["1"],"Stream.T":"1"},"_EventStreamSubscription":{"StreamSubscription":["1"]},"FixedSizeListIterator":{"Iterator":["1"]},"CssClassSetImpl":{"SetMixin":["String"],"Set":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"]},"FilteredElementList":{"ListMixin":["Element"],"List":["Element"],"EfficientLengthIterable":["Element"],"Iterable":["Element"],"ListMixin.E":"Element"},"JsFunction":{"JsObject":[]},"JsArray":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"JsObject":[],"Iterable":["1"],"ListMixin.E":"1"},"NullRejectionException":{"Exception":[]},"_JSRandom":{"Random":[]},"_Random":{"Random":[]},"Rectangle":{"_RectangleBase":["1"]},"AttributeClassSet":{"SetMixin":["String"],"Set":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"SetMixin.E":"String"},"SvgElement":{"Element":[],"Node0":[],"EventTarget":[]},"CanonicalizedMap":{"Map":["2","3"]},"ApiException0":{"Exception":[]},"ApiException":{"Exception":[]},"OAuth":{"Authentication":[]},"BaseClient":{"Client":[]},"BrowserClient":{"Client":[]},"ByteStream":{"StreamView":["List<int>"],"Stream":["List<int>"],"Stream.T":"List<int>","StreamView.T":"List<int>"},"ClientException":{"Exception":[]},"Request":{"BaseRequest":[]},"StreamedRequest":{"BaseRequest":[]},"CaseInsensitiveMap":{"CanonicalizedMap":["String","String","1"],"Map":["String","1"],"CanonicalizedMap.V":"1","CanonicalizedMap.K":"String","CanonicalizedMap.C":"String"},"PathException":{"Exception":[]},"PosixStyle":{"InternalStyle":[]},"UrlStyle":{"InternalStyle":[]},"WindowsStyle":{"InternalStyle":[]},"NoOpClientReportRecorder":{"ClientReportRecorder":[]},"WebEnvironmentVariables":{"EnvironmentVariables":[]},"DeduplicationEventProcessor":{"EventProcessor":[]},"WebEnricherEventProcessor":{"EventProcessor":[]},"WebExcptionEventProcessor":{"EventProcessor":[]},"NoOpClient":{"Client":[]},"Contexts":{"MapView":["String","@"],"Map":["String","@"],"MapView.K":"String","MapView.V":"@"},"HttpTransport":{"Transport":[]},"NoOpTransport":{"Transport":[]},"FileLocation":{"SourceLocation":[],"Comparable":["SourceLocation"]},"_FileSpan":{"FileSpan":[],"SourceSpanWithContext":[],"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceLocation":{"Comparable":["SourceLocation"]},"SourceLocationMixin":{"SourceLocation":[],"Comparable":["SourceLocation"]},"SourceSpan":{"Comparable":["SourceSpan"]},"SourceSpanBase":{"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceSpanException":{"Exception":[]},"SourceSpanFormatException":{"FormatException":[],"Exception":[]},"SourceSpanMixin":{"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceSpanWithContext":{"SourceSpan":[],"Comparable":["SourceSpan"]},"Chain":{"StackTrace":[]},"LazyChain":{"Chain":[],"StackTrace":[]},"Trace":{"StackTrace":[]},"UnparsedFrame":{"Frame":[]},"StringScannerException":{"FormatException":[],"Exception":[]},"Version":{"Comparable":["Version"]},"ByteData":{"TypedData":[]},"Int8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Uint8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Uint8ClampedList":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Int16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Uint16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Int32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Uint32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Float32List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"],"TypedData":[]},"Float64List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"],"TypedData":[]}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"UnmodifiableListBase":1,"__CastListBase__CastIterableBase_ListMixin":2,"NativeTypedArray":1,"StreamTransformerBase":2,"IterableBase":1,"ListBase":1,"MapBase":2,"SetBase":1,"_ListBase_Object_ListMixin":1,"_SetBase_Object_SetMixin":1,"__SetBase_Object_SetMixin":1,"_JsArray_JsObject_ListMixin":1,"SentryEventLike":1}'));
  var string$ = {
    x20must_: " must not be greater than the number of characters in the file, ",
    x3d_____: "===== asynchronous gap ===========================\n",
    ABCDEF: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    An_exc: "An exception occurred while processing event by a processor",
    Analyt: "AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs",
    Cannotff: "Cannot extract a file path from a URI with a fragment component",
    Cannotfq: "Cannot extract a file path from a URI with a query component",
    Cannotn: "Cannot extract a non-Windows file path from a file URI with an authority",
    Could_: "Could not find a suitable class for deserialization",
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type",
    Expand: "Expandos are not allowed on strings, numbers, booleans or null",
    Graphi: "GraphicalOCRDescriptiveStatisticsConfidence",
    SeededI: "SeededTrackedInteractionEventIdentifierDescriptionPairs",
    SeededK: "SeededTrackedKeyboardEventIdentifierDescriptionPairs",
    The_pr: "The provided buffer needs to have a length of 16.",
    TrackeAEC: "TrackedAssetEventCreationMetadataClipboard",
    TrackeAEF: "TrackedAssetEventFormatReclassificationMetadata",
    TrackeAEI: "TrackedAssetEventIdentifierDescriptionPairs",
    TrackeAs: "TrackedAssetsEventIdentifierDescriptionPairs",
    TrackeF: "TrackedFormatEventIdentifierDescriptionPairs",
    TrackeS: "TrackedSessionEventIdentifierDescriptionPairs",
    a_gene: "a_generic_classification_was_changed_on_a_format_within_an_asset",
    a_sear: "a_searched_asset_was_referenced_by_the_user",
    a_sesshe: "a_session_has_been_ended_and_the_application_has_been_closed",
    a_sesshi: "a_session_has_been_initialized_and_the_application_has_been_opened",
    a_sessia: "a_session_is_active_because_the_application_is_in_the_foreground",
    a_sessii: "a_session_is_inactive_because_the_application_is_not_in_the_foreground",
    a_specc: "a_specific_classification_was_changed_on_a_format_within_an_asset",
    a_specfv: "a_specific_format_value_was_edited_on_an_asset",
    a_specfw: "a_specific_format_was_updated_on_an_asset",
    a_sugg: "a_suggested_asset_was_referenced_by_the_user",
    a_userdd: "a_user_did_not_sign_into_the_session_with_a_dismissal",
    a_userdr: "a_user_did_not_sign_into_the_session_with_a_reminder",
    a_userh: "a_user_has_signed_into_this_session_with_a_an_external_account",
    an_act: "an_activity_asset_was_referenced_by_the_user",
    asset_g: "asset_format_generic_classification_updated",
    asset_s: "asset_format_specific_classification_updated",
    if_a_g: "if_a_generic_classification_was_changed_on_a_format",
    if_a_s: "if_a_specific_classification_was_changed_on_a_format",
    max_mu: "max must be in range 0 < max \u2264 2^32, was ",
    onboarc: "onboarding_has_been_completed_for_this_session",
    onboari: "onboarding_has_been_initialized_for_this_session",
    one_orf: "one_or_more_applications_has_failed_to_connect_locally",
    one_ors: "one_or_more_applications_has_successfully_connected",
    the_asa: "the_assets_list_was_refreshed_through_a_keyboard_shortcut",
    the_asu: "the_assets_list_was_refreshed_through_ui_element",
    the_usi: "the_user_has_installed_a_pieces_application",
    the_usu: "the_user_has_uninstalled_a_pieces_application"
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      Accessor: findType("Accessor"),
      Activity: findType("Activity"),
      AllocationCloud: findType("AllocationCloud"),
      Analysis: findType("Analysis"),
      Application: findType("Application"),
      Asset: findType("Asset"),
      AsyncError: findType("AsyncError"),
      Auth0Identity: findType("Auth0Identity"),
      Authentication: findType("Authentication0"),
      Authentication_2: findType("Authentication"),
      Blob: findType("Blob"),
      Breadcrumb: findType("Breadcrumb"),
      ByteBuffer: findType("ByteBuffer"),
      Chain: findType("Chain"),
      Classification: findType("Classification"),
      ClientBlock: findType("ClientBlock"),
      Client_Function: findType("Client()"),
      CodeAnalysis: findType("CodeAnalysis"),
      CodeUnits: findType("CodeUnits"),
      Comparable_dynamic: findType("Comparable<@>"),
      ConstantMapView_Symbol_dynamic: findType("ConstantMapView<Symbol0,@>"),
      Context: findType("Context0"),
      Contexts: findType("Contexts"),
      DataCategory: findType("DataCategory"),
      DateTime: findType("DateTime"),
      DiscardedEvent: findType("DiscardedEvent"),
      DiscoveredAsset: findType("DiscoveredAsset"),
      DiscoveredHtmlWebpage: findType("DiscoveredHtmlWebpage"),
      DiscoveredRelatedTag: findType("DiscoveredRelatedTag"),
      DiscoveredSensitive: findType("DiscoveredSensitive"),
      Distribution: findType("Distribution"),
      Document: findType("Document"),
      Duration: findType("Duration"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element"),
      Embedding: findType("Embedding"),
      Error: findType("Error"),
      Event: findType("Event"),
      EventProcessor: findType("EventProcessor"),
      Exception: findType("Exception"),
      Expando_Object: findType("Expando<Object>"),
      ExportedDatabaseFormat: findType("ExportedDatabaseFormat"),
      ExternalProvider: findType("ExternalProvider"),
      FileSpan: findType("FileSpan"),
      FlattenedShare: findType("FlattenedShare"),
      Format: findType("Format"),
      FormatException: findType("FormatException"),
      FormatMetric: findType("FormatMetric"),
      Frame: findType("Frame"),
      Frame_Function_String: findType("Frame(String)"),
      Function: findType("Function"),
      Future_dynamic: findType("Future<@>"),
      Future_void: findType("Future<~>"),
      HttpRequest: findType("HttpRequest"),
      ImageAnalysis: findType("ImageAnalysis"),
      ImageData: findType("ImageData"),
      Integration_SentryOptions: findType("Integration<SentryOptions>"),
      InteractedAsset: findType("InteractedAsset"),
      InternalStyle: findType("InternalStyle"),
      Invocation: findType("Invocation"),
      Iterable_String: findType("Iterable<String>"),
      Iterable_dynamic: findType("Iterable<@>"),
      Iterable_int: findType("Iterable<int>"),
      JSArray_Accessor: findType("JSArray<Accessor>"),
      JSArray_Activity: findType("JSArray<Activity>"),
      JSArray_AllocationCloud: findType("JSArray<AllocationCloud>"),
      JSArray_Analysis: findType("JSArray<Analysis>"),
      JSArray_Application: findType("JSArray<Application>"),
      JSArray_Asset: findType("JSArray<Asset>"),
      JSArray_Auth0Identity: findType("JSArray<Auth0Identity>"),
      JSArray_Breadcrumb: findType("JSArray<Breadcrumb>"),
      JSArray_Classification: findType("JSArray<Classification>"),
      JSArray_ClientBlock: findType("JSArray<ClientBlock>"),
      JSArray_CodeAnalysis: findType("JSArray<CodeAnalysis>"),
      JSArray_DiscoveredAsset: findType("JSArray<DiscoveredAsset>"),
      JSArray_DiscoveredHtmlWebpage: findType("JSArray<DiscoveredHtmlWebpage>"),
      JSArray_DiscoveredRelatedTag: findType("JSArray<DiscoveredRelatedTag>"),
      JSArray_DiscoveredSensitive: findType("JSArray<DiscoveredSensitive>"),
      JSArray_Distribution: findType("JSArray<Distribution>"),
      JSArray_Element: findType("JSArray<Element>"),
      JSArray_Embedding: findType("JSArray<Embedding>"),
      JSArray_EventProcessor: findType("JSArray<EventProcessor>"),
      JSArray_ExportedDatabaseFormat: findType("JSArray<ExportedDatabaseFormat>"),
      JSArray_ExternalProvider: findType("JSArray<ExternalProvider>"),
      JSArray_FlattenedShare: findType("JSArray<FlattenedShare>"),
      JSArray_Format: findType("JSArray<Format>"),
      JSArray_FormatMetric: findType("JSArray<FormatMetric>"),
      JSArray_Frame: findType("JSArray<Frame>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_ImageAnalysis: findType("JSArray<ImageAnalysis>"),
      JSArray_Integration_SentryOptions: findType("JSArray<Integration<SentryOptions>>"),
      JSArray_InteractedAsset: findType("JSArray<InteractedAsset>"),
      JSArray_List_String: findType("JSArray<List<String>>"),
      JSArray_List_int: findType("JSArray<List<int>>"),
      JSArray_Model: findType("JSArray<Model>"),
      JSArray_Node: findType("JSArray<Node>"),
      JSArray_OCRAnalysis: findType("JSArray<OCRAnalysis>"),
      JSArray_Person: findType("JSArray<Person>"),
      JSArray_PersonBasicType: findType("JSArray<PersonBasicType>"),
      JSArray_QueryParam: findType("JSArray<QueryParam>"),
      JSArray_RateLimit: findType("JSArray<RateLimit>"),
      JSArray_ReferencedActivity: findType("JSArray<ReferencedActivity>"),
      JSArray_ReferencedAsset: findType("JSArray<ReferencedAsset>"),
      JSArray_ReferencedDistribution: findType("JSArray<ReferencedDistribution>"),
      JSArray_ReferencedFormat: findType("JSArray<ReferencedFormat>"),
      JSArray_ReferencedPerson: findType("JSArray<ReferencedPerson>"),
      JSArray_ReferencedSensitive: findType("JSArray<ReferencedSensitive>"),
      JSArray_ReferencedTag: findType("JSArray<ReferencedTag>"),
      JSArray_ReferencedWebsite: findType("JSArray<ReferencedWebsite>"),
      JSArray_Relationship: findType("JSArray<Relationship>"),
      JSArray_ScopeObserver: findType("JSArray<ScopeObserver>"),
      JSArray_SearchedAsset: findType("JSArray<SearchedAsset>"),
      JSArray_Seed: findType("JSArray<Seed>"),
      JSArray_SeededAssetSensitive: findType("JSArray<SeededAssetSensitive>"),
      JSArray_SeededAssetTag: findType("JSArray<SeededAssetTag>"),
      JSArray_SeededAssetWebsite: findType("JSArray<SeededAssetWebsite>"),
      JSArray_SeededDiscoverableAsset: findType("JSArray<SeededDiscoverableAsset>"),
      JSArray_SeededDiscoverableHtmlWebpage: findType("JSArray<SeededDiscoverableHtmlWebpage>"),
      JSArray_SeededDiscoverableRelatedTag: findType("JSArray<SeededDiscoverableRelatedTag>"),
      JSArray_SeededDiscoverableSensitive: findType("JSArray<SeededDiscoverableSensitive>"),
      JSArray_SeededDistribution: findType("JSArray<SeededDistribution>"),
      JSArray_SeededPKCEScopeEnum: findType("JSArray<SeededPKCEScopeEnum>"),
      JSArray_SeededPerson: findType("JSArray<SeededPerson>"),
      JSArray_SeededTag: findType("JSArray<SeededTag>"),
      JSArray_SeededUser: findType("JSArray<SeededUser>"),
      JSArray_SeededWebsite: findType("JSArray<SeededWebsite>"),
      JSArray_Sensitive: findType("JSArray<Sensitive>"),
      JSArray_SentryAttachment: findType("JSArray<SentryAttachment>"),
      JSArray_SentryEnvelopeItem: findType("JSArray<SentryEnvelopeItem>"),
      JSArray_SentryException: findType("JSArray<SentryException>"),
      JSArray_SentryStackFrame: findType("JSArray<SentryStackFrame>"),
      JSArray_Share: findType("JSArray<Share>"),
      JSArray_StreamedIdentifier: findType("JSArray<StreamedIdentifier>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_TLPDirectedDiscoveryFilter: findType("JSArray<TLPDirectedDiscoveryFilter>"),
      JSArray_Tag: findType("JSArray<Tag>"),
      JSArray_Trace: findType("JSArray<Trace>"),
      JSArray_UserProfile: findType("JSArray<UserProfile>"),
      JSArray_Website: findType("JSArray<Website>"),
      JSArray__Highlight: findType("JSArray<_Highlight>"),
      JSArray__Line: findType("JSArray<_Line>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      JSIndexable_dynamic: findType("JSIndexable<@>"),
      JSNull: findType("JSNull"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JsArray_dynamic: findType("JsArray<@>"),
      JsLinkedHashMap_String_dynamic: findType("JsLinkedHashMap<String,@>"),
      JsLinkedHashMap_Symbol_dynamic: findType("JsLinkedHashMap<Symbol0,@>"),
      JsObject: findType("JsObject"),
      KeyRange: findType("KeyRange"),
      List_ClientBlock: findType("List<ClientBlock>"),
      List_EventProcessor: findType("List<EventProcessor>"),
      List_QueryParam: findType("List<QueryParam>"),
      List_SentryAttachment: findType("List<SentryAttachment>"),
      List_SentryRuntime: findType("List<SentryRuntime>"),
      List_String: findType("List<String>"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      List_nullable__Highlight: findType("List<_Highlight?>"),
      Location: findType("Location"),
      MapEntry_String_String: findType("MapEntry<String,String>"),
      MapEntry_String_dynamic: findType("MapEntry<String,@>"),
      MapEntry_of_Object_and_List__Highlight: findType("MapEntry<Object,List<_Highlight>>"),
      Map_String_String: findType("Map<String,String>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      MappedIterable_String_Frame: findType("MappedIterable<String,Frame>"),
      MappedListIterable_String_String: findType("MappedListIterable<String,String>"),
      MappedListIterable_String_Trace: findType("MappedListIterable<String,Trace>"),
      MappedListIterable_String_dynamic: findType("MappedListIterable<String,@>"),
      MappedListIterable_of_List_String_and_String: findType("MappedListIterable<List<String>,String>"),
      Mechanism: findType("Mechanism"),
      MediaType: findType("MediaType"),
      Model: findType("Model"),
      MouseEvent: findType("MouseEvent"),
      MutationObserver: findType("MutationObserver"),
      NativeTypedArrayOfInt: findType("NativeTypedArrayOfInt"),
      NativeUint8List: findType("NativeUint8List"),
      Node: findType("Node0"),
      Node_2: findType("Node"),
      Null: findType("Null"),
      OCRAnalysis: findType("OCRAnalysis"),
      Object: findType("Object"),
      Pattern: findType("Pattern"),
      Person: findType("Person"),
      PersonBasicType: findType("PersonBasicType"),
      ProgressEvent: findType("ProgressEvent"),
      QueryParam: findType("QueryParam"),
      Rectangle_num: findType("Rectangle<num>"),
      ReferencedActivity: findType("ReferencedActivity"),
      ReferencedAsset: findType("ReferencedAsset"),
      ReferencedDistribution: findType("ReferencedDistribution"),
      ReferencedFormat: findType("ReferencedFormat"),
      ReferencedPerson: findType("ReferencedPerson"),
      ReferencedSensitive: findType("ReferencedSensitive"),
      ReferencedTag: findType("ReferencedTag"),
      ReferencedWebsite: findType("ReferencedWebsite"),
      RegExp: findType("RegExp"),
      RegExpMatch: findType("RegExpMatch"),
      Relationship: findType("Relationship"),
      Response: findType("Response"),
      ReversedListIterable_SentryStackFrame: findType("ReversedListIterable<SentryStackFrame>"),
      Scope: findType("Scope"),
      SearchedAsset: findType("SearchedAsset"),
      Seed: findType("Seed"),
      SeededAssetSensitive: findType("SeededAssetSensitive"),
      SeededAssetTag: findType("SeededAssetTag"),
      SeededAssetWebsite: findType("SeededAssetWebsite"),
      SeededDiscoverableAsset: findType("SeededDiscoverableAsset"),
      SeededDiscoverableHtmlWebpage: findType("SeededDiscoverableHtmlWebpage"),
      SeededDiscoverableRelatedTag: findType("SeededDiscoverableRelatedTag"),
      SeededDiscoverableSensitive: findType("SeededDiscoverableSensitive"),
      SeededDistribution: findType("SeededDistribution"),
      SeededPKCEScopeEnum: findType("SeededPKCEScopeEnum"),
      SeededPerson: findType("SeededPerson"),
      SeededTag: findType("SeededTag"),
      SeededUser: findType("SeededUser"),
      SeededWebsite: findType("SeededWebsite"),
      Sensitive: findType("Sensitive"),
      SentryAttachment: findType("SentryAttachment"),
      SentryEnvelopeItem: findType("SentryEnvelopeItem"),
      SentryException: findType("SentryException"),
      SentryId: findType("SentryId"),
      SentryLevel: findType("SentryLevel"),
      SentryPackage: findType("SentryPackage"),
      SentryRuntime: findType("SentryRuntime"),
      SentryStackFrame: findType("SentryStackFrame"),
      SentryThread: findType("SentryThread"),
      Set_String: findType("Set<String>"),
      Set_dynamic: findType("Set<@>"),
      Share: findType("Share"),
      Shares: findType("Shares"),
      SourceLocation: findType("SourceLocation"),
      SourceSpan: findType("SourceSpan"),
      SourceSpanWithContext: findType("SourceSpanWithContext"),
      StackTrace: findType("StackTrace"),
      Stream_dynamic: findType("Stream<@>"),
      StreamedIdentifier: findType("StreamedIdentifier"),
      StreamedRequest: findType("StreamedRequest"),
      StreamedResponse: findType("StreamedResponse"),
      String: findType("String"),
      String_Function_List_String: findType("String(List<String>)"),
      String_Function_Match: findType("String(Match)"),
      String_Function_String: findType("String(String)"),
      Symbol: findType("Symbol0"),
      TLPDirectedDiscoveryFilter: findType("TLPDirectedDiscoveryFilter"),
      Tag: findType("Tag"),
      Trace: findType("Trace"),
      Trace_Function_String: findType("Trace(String)"),
      TypeError: findType("TypeError"),
      TypedData: findType("TypedData"),
      Uint8List: findType("Uint8List"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      UnmodifiableMapView_String_String: findType("UnmodifiableMapView<String,String>"),
      Uri: findType("Uri"),
      UserProfile: findType("UserProfile"),
      Utf8Codec: findType("Utf8Codec"),
      Website: findType("Website"),
      WhereIterable_String: findType("WhereIterable<String>"),
      WhereTypeIterable_Mechanism: findType("WhereTypeIterable<Mechanism>"),
      WhereTypeIterable_String: findType("WhereTypeIterable<String>"),
      Window: findType("Window"),
      WorkerGlobalScope: findType("WorkerGlobalScope"),
      Zone: findType("Zone"),
      _AsyncCompleter_StreamedResponse: findType("_AsyncCompleter<StreamedResponse>"),
      _AsyncCompleter_Uint8List: findType("_AsyncCompleter<Uint8List>"),
      _ElementEventStreamImpl_MouseEvent: findType("_ElementEventStreamImpl<MouseEvent>"),
      _EmptyStream_List_int: findType("_EmptyStream<List<int>>"),
      _EventStream_ProgressEvent: findType("_EventStream<ProgressEvent>"),
      _FrozenElementList_Element: findType("_FrozenElementList<Element>"),
      _Future_StreamedResponse: findType("_Future<StreamedResponse>"),
      _Future_Uint8List: findType("_Future<Uint8List>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_void: findType("_Future<~>"),
      _Highlight: findType("_Highlight"),
      _Line: findType("_Line"),
      _QuantityKey: findType("_QuantityKey"),
      _StackItem: findType("_StackItem"),
      _StreamControllerAddStreamState_nullable_Object: findType("_StreamControllerAddStreamState<Object?>"),
      bool: findType("bool"),
      bool_Function_Object: findType("bool(Object)"),
      bool_Function_String: findType("bool(String)"),
      bool_Function__Highlight: findType("bool(_Highlight)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      dynamic_Function_Set_String: findType("@(Set<String>)"),
      dynamic_Function_String: findType("@(String)"),
      dynamic_Function_dynamic_dynamic: findType("@(@,@)"),
      int: findType("int"),
      legacy_Never: findType("0&*"),
      legacy_Object: findType("Object*"),
      nullable_Asset: findType("Asset?"),
      nullable_Context: findType("Context0?"),
      nullable_EventTarget: findType("EventTarget?"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_List_Breadcrumb: findType("List<Breadcrumb>?"),
      nullable_List_Map_String_dynamic: findType("List<Map<String,@>>?"),
      nullable_List_SentryException: findType("List<SentryException>?"),
      nullable_List_SentryThread: findType("List<SentryThread>?"),
      nullable_List_String: findType("List<String>?"),
      nullable_List_dynamic: findType("List<@>?"),
      nullable_List_int: findType("List<int>?"),
      nullable_Map_String_String: findType("Map<String,String>?"),
      nullable_Map_String_dynamic: findType("Map<String,@>?"),
      nullable_Object: findType("Object?"),
      nullable_SentryApp: findType("SentryApp?"),
      nullable_SentryBrowser: findType("SentryBrowser?"),
      nullable_SentryCulture: findType("SentryCulture?"),
      nullable_SentryDevice: findType("SentryDevice?"),
      nullable_SentryEvent: findType("SentryEvent?"),
      nullable_SentryGpu: findType("SentryGpu?"),
      nullable_SentryId: findType("SentryId?"),
      nullable_SentryOperatingSystem: findType("SentryOperatingSystem?"),
      nullable_SentryResponse: findType("SentryResponse?"),
      nullable_SentryTraceContext: findType("SentryTraceContext?"),
      nullable_Share: findType("Share?"),
      nullable_StackTrace: findType("StackTrace?"),
      nullable_StackZoneSpecification: findType("StackZoneSpecification?"),
      nullable_String_Function: findType("String()?"),
      nullable_String_Function_Match: findType("String(Match)?"),
      nullable_String_Function_String: findType("String(String)?"),
      nullable_Version: findType("Version?"),
      nullable_Zone: findType("Zone?"),
      nullable_ZoneDelegate: findType("ZoneDelegate?"),
      nullable__DelayedEvent_dynamic: findType("_DelayedEvent<@>?"),
      nullable__FutureListener_dynamic_dynamic: findType("_FutureListener<@,@>?"),
      nullable__Highlight: findType("_Highlight?"),
      nullable__LinkedHashSetCell: findType("_LinkedHashSetCell?"),
      nullable_dynamic_Function_Event: findType("@(Event)?"),
      nullable_int_Function_Element_Element: findType("int(Element,Element)?"),
      nullable_int_Function_Node_Node: findType("int(Node0,Node0)?"),
      nullable_nullable_Object_Function_2_nullable_Object_and_nullable_Object: findType("Object?(Object?,Object?)?"),
      nullable_nullable_Object_Function_dynamic: findType("Object?(@)?"),
      nullable_void_Function: findType("~()?"),
      nullable_void_Function_Scope: findType("~(Scope)?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_2_SentryLevel_and_String_$named_exception_nullable_Object_and_logger_nullable_String_and_stackTrace_nullable_StackTrace: findType("~(SentryLevel,String{exception:Object?,logger:String?,stackTrace:StackTrace?})"),
      void_Function_Element: findType("~(Element)"),
      void_Function_List_int: findType("~(List<int>)"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)"),
      void_Function_String_dynamic: findType("~(String,@)"),
      void_Function_int_dynamic: findType("~(int,@)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.CssStyleDeclaration_methods = A.CssStyleDeclaration.prototype;
    B.HttpRequest_methods = A.HttpRequest.prototype;
    B.ImageElement_methods = A.ImageElement.prototype;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSBool_methods = J.JSBool.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSNumber_methods = J.JSNumber.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.Location_methods = A.Location.prototype;
    B.MutationObserver_methods = A.MutationObserver.prototype;
    B.NativeUint32List_methods = A.NativeUint32List.prototype;
    B.NativeUint8List_methods = A.NativeUint8List.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.Screen_methods = A.Screen.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.Window_methods = A.Window.prototype;
    B.AccessEnum_PRIVATE = new A.AccessEnum("PRIVATE");
    B.AccessEnum_PUBLIC = new A.AccessEnum("PUBLIC");
    B.AllocationStatusEnum_FAILED = new A.AllocationStatusEnum("FAILED");
    B.AllocationStatusEnum_PENDING = new A.AllocationStatusEnum("PENDING");
    B.AllocationStatusEnum_RUNNING = new A.AllocationStatusEnum("RUNNING");
    B.AllocationStatusEnum_SUCCEEDED = new A.AllocationStatusEnum("SUCCEEDED");
    B.AllocationStatusEnum_UNKNOWN = new A.AllocationStatusEnum("UNKNOWN");
    B.ApplicationNameEnum_ATOM_PACKAGE = new A.ApplicationNameEnum("ATOM_PACKAGE");
    B.ApplicationNameEnum_BRAVE = new A.ApplicationNameEnum("BRAVE");
    B.ApplicationNameEnum_CHAT_GPT = new A.ApplicationNameEnum("CHAT_GPT");
    B.ApplicationNameEnum_FIREFOX_ADDON_MV2 = new A.ApplicationNameEnum("FIREFOX_ADDON_MV2");
    B.ApplicationNameEnum_FIREFOX_ADDON_MV3 = new A.ApplicationNameEnum("FIREFOX_ADDON_MV3");
    B.ApplicationNameEnum_GOOGLE_CHAT = new A.ApplicationNameEnum("GOOGLE_CHAT");
    B.ApplicationNameEnum_GOOGLE_CHROME_EXTENSION_MV2 = new A.ApplicationNameEnum("GOOGLE_CHROME_EXTENSION_MV2");
    B.ApplicationNameEnum_GOOGLE_CHROME_EXTENSION_MV3 = new A.ApplicationNameEnum("GOOGLE_CHROME_EXTENSION_MV3");
    B.ApplicationNameEnum_JETBRAINS = new A.ApplicationNameEnum("JETBRAINS");
    B.ApplicationNameEnum_JUPYTER_HUB = new A.ApplicationNameEnum("JUPYTER_HUB");
    B.ApplicationNameEnum_MICROSOFT_EDGE = new A.ApplicationNameEnum("MICROSOFT_EDGE");
    B.ApplicationNameEnum_MICROSOFT_TEAMS = new A.ApplicationNameEnum("MICROSOFT_TEAMS");
    B.ApplicationNameEnum_OBSIDIAN = new A.ApplicationNameEnum("OBSIDIAN");
    B.ApplicationNameEnum_OS_SERVER = new A.ApplicationNameEnum("OS_SERVER");
    B.ApplicationNameEnum_PIECES_FOR_DEVELOPERS = new A.ApplicationNameEnum("PIECES_FOR_DEVELOPERS");
    B.ApplicationNameEnum_PIECES_FOR_DEVELOPERS_CLI = new A.ApplicationNameEnum("PIECES_FOR_DEVELOPERS_CLI");
    B.ApplicationNameEnum_SAFARI_EXTENSION_MV2 = new A.ApplicationNameEnum("SAFARI_EXTENSION_MV2");
    B.ApplicationNameEnum_SAFARI_EXTENSION_MV3 = new A.ApplicationNameEnum("SAFARI_EXTENSION_MV3");
    B.ApplicationNameEnum_SLACK = new A.ApplicationNameEnum("SLACK");
    B.ApplicationNameEnum_SUBLIME = new A.ApplicationNameEnum("SUBLIME");
    B.ApplicationNameEnum_ULTRA_EDIT = new A.ApplicationNameEnum("ULTRA_EDIT");
    B.ApplicationNameEnum_VISUAL_STUDIO = new A.ApplicationNameEnum("VISUAL_STUDIO");
    B.ApplicationNameEnum_VS_CODE = new A.ApplicationNameEnum("VS_CODE");
    B.ApplicationNameEnum_hG8 = new A.ApplicationNameEnum("ADOBE_ILLUSTRATOR_PIECES_COLOR_SHARE");
    B.AsciiDecoder_false_127 = new A.AsciiDecoder(false, 127);
    B.AsciiEncoder_127 = new A.AsciiEncoder(127);
    B.BlocksFeatureEnum_0 = new A.BlocksFeatureEnum("suggested");
    B.BlocksFeatureEnum_1 = new A.BlocksFeatureEnum("history");
    B.ButtonPlacementOptionsEnum_0 = new A.ButtonPlacementOptionsEnum("bottom_left");
    B.ButtonPlacementOptionsEnum_1 = new A.ButtonPlacementOptionsEnum("bottom_right");
    B.ButtonPlacementOptionsEnum_2 = new A.ButtonPlacementOptionsEnum("top_left");
    B.ButtonPlacementOptionsEnum_3 = new A.ButtonPlacementOptionsEnum("top_right");
    B.C__EmptyStream = new A._EmptyStream(type$._EmptyStream_List_int);
    B.ByteStream__EmptyStream = new A.ByteStream(B.C__EmptyStream);
    B.CONSTANT = new A.Instantiation1(A.math__max$closure(), A.findType("Instantiation1<int>"));
    B.C_AccessEnumTypeTransformer = new A.AccessEnumTypeTransformer();
    B.C_AllocationStatusEnumTypeTransformer = new A.AllocationStatusEnumTypeTransformer();
    B.C_AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnum = new A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnum();
    B.C_AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnumTypeTransformer = new A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnumTypeTransformer();
    B.C_AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnum = new A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnum();
    B.C_AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnumTypeTransformer = new A.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnumTypeTransformer();
    B.C_ApplicationNameEnumTypeTransformer = new A.ApplicationNameEnumTypeTransformer();
    B.C_AsciiCodec = new A.AsciiCodec();
    B.C_Base64Encoder = new A.Base64Encoder();
    B.C_Base64Codec = new A.Base64Codec();
    B.C_CapabilitiesEnumTypeTransformer = new A.CapabilitiesEnumTypeTransformer();
    B.C_ChallengedPKCEMethodEnum = new A.ChallengedPKCEMethodEnum();
    B.C_ChallengedPKCEMethodEnumTypeTransformer = new A.ChallengedPKCEMethodEnumTypeTransformer();
    B.C_ClassificationGenericEnumTypeTransformer = new A.ClassificationGenericEnumTypeTransformer();
    B.C_ClassificationRenderingEnumTypeTransformer = new A.ClassificationRenderingEnumTypeTransformer();
    B.C_ClassificationSpecificEnumTypeTransformer = new A.ClassificationSpecificEnumTypeTransformer();
    B.C_EmbeddedModelSchemaSemanticVersionEnum = new A.EmbeddedModelSchemaSemanticVersionEnum();
    B.C_EmbeddedModelSchemaSemanticVersionEnumTypeTransformer = new A.EmbeddedModelSchemaSemanticVersionEnumTypeTransformer();
    B.C_EmptyIterator = new A.EmptyIterator(A.findType("EmptyIterator<0&>"));
    B.C_ExternalProviderTypeEnumTypeTransformer = new A.ExternalProviderTypeEnumTypeTransformer();
    B.C_ExternallySourcedEnumTypeTransformer = new A.ExternallySourcedEnumTypeTransformer();
    B.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.C_JS_CONST3 = function(hooks) { return hooks; }
;
    B.C_JsonCodec = new A.JsonCodec();
    B.C_Latin1Codec = new A.Latin1Codec();
    B.C_MechanismEnumTypeTransformer = new A.MechanismEnumTypeTransformer();
    B.C_ModelTypeEnumTypeTransformer = new A.ModelTypeEnumTypeTransformer();
    B.C_ModelUsageEnumTypeTransformer = new A.ModelUsageEnumTypeTransformer();
    B.C_NodeTypeEnumTypeTransformer = new A.NodeTypeEnumTypeTransformer();
    B.C_OAuthTokenTokenTypeEnum = new A.OAuthTokenTokenTypeEnum();
    B.C_OAuthTokenTokenTypeEnumTypeTransformer = new A.OAuthTokenTokenTypeEnumTypeTransformer();
    B.C_OutOfMemoryError = new A.OutOfMemoryError();
    B.C_PersonAccessScopedEnumTypeTransformer = new A.PersonAccessScopedEnumTypeTransformer();
    B.C_PlatformEnumTypeTransformer = new A.PlatformEnumTypeTransformer();
    B.C_PrivacyEnumTypeTransformer = new A.PrivacyEnumTypeTransformer();
    B.C_RoleTypeTransformer = new A.RoleTypeTransformer();
    B.C_SearchedMatchEnumTypeTransformer = new A.SearchedMatchEnumTypeTransformer();
    B.C_SeedTypeEnumTypeTransformer = new A.SeedTypeEnumTypeTransformer();
    B.C_SeededPKCEADDITIONALPARAMETERSAccessTypeEnum = new A.SeededPKCEADDITIONALPARAMETERSAccessTypeEnum();
    B.C_SeededPKCEADDITIONALPARAMETERSAccessTypeEnumTypeTransformer = new A.SeededPKCEADDITIONALPARAMETERSAccessTypeEnumTypeTransformer();
    B.C_SeededPKCEADDITIONALPARAMETERSDisplayEnum = new A.SeededPKCEADDITIONALPARAMETERSDisplayEnum();
    B.C_SeededPKCEADDITIONALPARAMETERSDisplayEnumTypeTransformer = new A.SeededPKCEADDITIONALPARAMETERSDisplayEnumTypeTransformer();
    B.C_SeededPKCECodeChallengeMethodEnum = new A.SeededPKCECodeChallengeMethodEnum();
    B.C_SeededPKCECodeChallengeMethodEnumTypeTransformer = new A.SeededPKCECodeChallengeMethodEnumTypeTransformer();
    B.C_SeededPKCEPromptEnumTypeTransformer = new A.SeededPKCEPromptEnumTypeTransformer();
    B.C_SeededPKCEResponseModeEnumTypeTransformer = new A.SeededPKCEResponseModeEnumTypeTransformer();
    B.C_SeededPKCEResponseTypeEnumTypeTransformer = new A.SeededPKCEResponseTypeEnumTypeTransformer();
    B.C_SeededPKCEScopeEnumTypeTransformer = new A.SeededPKCEScopeEnumTypeTransformer();
    B.C_SeededPKCEScreenHintEnum = new A.SeededPKCEScreenHintEnum();
    B.C_SeededPKCEScreenHintEnumTypeTransformer = new A.SeededPKCEScreenHintEnumTypeTransformer();
    B.C_SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnum = new A.SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnum();
    B.C_SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer = new A.SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer();
    B.C_SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnum = new A.SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnum();
    B.C_SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer = new A.SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer();
    B.C_SensitiveCategoryEnumTypeTransformer = new A.SensitiveCategoryEnumTypeTransformer();
    B.C_SensitiveSeverityEnumTypeTransformer = new A.SensitiveSeverityEnumTypeTransformer();
    B.C_SentinelValue = new A.SentinelValue();
    B.C_TLPDirectedDiscoveryFilterEnumTypeTransformer = new A.TLPDirectedDiscoveryFilterEnumTypeTransformer();
    B.C_TagCategoryEnumTypeTransformer = new A.TagCategoryEnumTypeTransformer();
    B.C_TokenizedPKCEGrantTypeEnumTypeTransformer = new A.TokenizedPKCEGrantTypeEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnumTypeTransformer();
    B.C_TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnum = new A.TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnum();
    B.C_TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnumTypeTransformer = new A.TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnumTypeTransformer();
    B.C_TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnum = new A.TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnum();
    B.C_TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnumTypeTransformer = new A.TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnumTypeTransformer();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnum = new A.TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnum();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnumTypeTransformer = new A.TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnumTypeTransformer();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnum = new A.TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnum();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnumTypeTransformer = new A.TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnumTypeTransformer();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnum = new A.TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnum();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnumTypeTransformer = new A.TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnumTypeTransformer();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnum = new A.TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnum();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnumTypeTransformer = new A.TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnumTypeTransformer();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnum = new A.TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnum();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnumTypeTransformer = new A.TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnumTypeTransformer();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnum = new A.TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnum();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnumTypeTransformer = new A.TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnumTypeTransformer();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnum = new A.TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnum();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnumTypeTransformer = new A.TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnumTypeTransformer();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnum = new A.TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnum();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnumTypeTransformer = new A.TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnumTypeTransformer();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnum = new A.TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnum();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnumTypeTransformer = new A.TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnumTypeTransformer();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnum = new A.TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnum();
    B.C_TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnumTypeTransformer = new A.TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnumTypeTransformer();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnum = new A.TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnum();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnumTypeTransformer = new A.TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnumTypeTransformer();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnum = new A.TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnum();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnumTypeTransformer = new A.TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnumTypeTransformer();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnum = new A.TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnum();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnumTypeTransformer = new A.TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnumTypeTransformer();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnum = new A.TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnum();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnumTypeTransformer = new A.TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnumTypeTransformer();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnum = new A.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnum();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnumTypeTransformer = new A.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnumTypeTransformer();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnum = new A.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnum();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnumTypeTransformer = new A.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnumTypeTransformer();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnum = new A.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnum();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnumTypeTransformer = new A.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnumTypeTransformer();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnum = new A.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnum();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnumTypeTransformer = new A.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnumTypeTransformer();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnum = new A.TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnum();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnumTypeTransformer = new A.TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnumTypeTransformer();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnum = new A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnum();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnumTypeTransformer = new A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnumTypeTransformer();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnum = new A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnum();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnumTypeTransformer = new A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnumTypeTransformer();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnum = new A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnum();
    B.C_TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnumTypeTransformer = new A.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnumTypeTransformer();
    B.C_TrackedUserProfileGranularityEnumTypeTransformer = new A.TrackedUserProfileGranularityEnumTypeTransformer();
    B.C_Utf8Codec = new A.Utf8Codec();
    B.C_Utf8Encoder = new A.Utf8Encoder();
    B.C_WebPlatform = new A.WebPlatform();
    B.C__DelayedDone = new A._DelayedDone();
    B.C__JSRandom = new A._JSRandom();
    B.C__Required = new A._Required();
    B.C__RootZone = new A._RootZone();
    B.CapabilitiesEnum_BLENDED = new A.CapabilitiesEnum("BLENDED");
    B.CapabilitiesEnum_CLOUD = new A.CapabilitiesEnum("CLOUD");
    B.CapabilitiesEnum_LOCAL = new A.CapabilitiesEnum("LOCAL");
    B.ClassesEnum_0 = new A.ClassesEnum("CODE_CONTAINER");
    B.ClassesEnum_1 = new A.ClassesEnum("BUTTON_CONTAINER");
    B.ClassesEnum_2 = new A.ClassesEnum("BUTTON");
    B.ClassesEnum_3 = new A.ClassesEnum("LOGO");
    B.ClassesEnum_4 = new A.ClassesEnum("SPAN");
    B.ClassificationGenericEnum_CODE = new A.ClassificationGenericEnum("CODE");
    B.ClassificationGenericEnum_EXTERNAL_RESOURCE_REFERENCE = new A.ClassificationGenericEnum("EXTERNAL_RESOURCE_REFERENCE");
    B.ClassificationGenericEnum_FILE = new A.ClassificationGenericEnum("FILE");
    B.ClassificationGenericEnum_IMAGE = new A.ClassificationGenericEnum("IMAGE");
    B.ClassificationGenericEnum_TEXT = new A.ClassificationGenericEnum("TEXT");
    B.ClassificationGenericEnum_UNKNOWN = new A.ClassificationGenericEnum("UNKNOWN");
    B.ClassificationGenericEnum_VIDEO = new A.ClassificationGenericEnum("VIDEO");
    B.ClassificationRenderingEnum_HIGHLIGHT_JS_HTML = new A.ClassificationRenderingEnum("HIGHLIGHT_JS_HTML");
    B.ClassificationRenderingEnum_HTML = new A.ClassificationRenderingEnum("HTML");
    B.ClassificationRenderingEnum_inH = new A.ClassificationRenderingEnum("TWENTY_FOUR_BIT_ANSI_ESCAPED_SEQUENCES");
    B.ClassificationSpecificEnum_0 = new A.ClassificationSpecificEnum("hljs-haskell");
    B.ClassificationSpecificEnum_06J = new A.ClassificationSpecificEnum("hljs-erb");
    B.ClassificationSpecificEnum_06J0 = new A.ClassificationSpecificEnum("hljs-x86asm");
    B.ClassificationSpecificEnum_0SX = new A.ClassificationSpecificEnum("hljs-bash");
    B.ClassificationSpecificEnum_0Tb = new A.ClassificationSpecificEnum("hljs-cpp");
    B.ClassificationSpecificEnum_0kf = new A.ClassificationSpecificEnum("hljs-makefile");
    B.ClassificationSpecificEnum_26m = new A.ClassificationSpecificEnum("hljs-apache");
    B.ClassificationSpecificEnum_2No = new A.ClassificationSpecificEnum("hljs-routeros");
    B.ClassificationSpecificEnum_2nP = new A.ClassificationSpecificEnum("Cargo.lock");
    B.ClassificationSpecificEnum_2rX = new A.ClassificationSpecificEnum("hljs-profile");
    B.ClassificationSpecificEnum_3KU = new A.ClassificationSpecificEnum("hljs-gherkin");
    B.ClassificationSpecificEnum_42e = new A.ClassificationSpecificEnum("hljs-cmake");
    B.ClassificationSpecificEnum_4CA = new A.ClassificationSpecificEnum(".bash_profile");
    B.ClassificationSpecificEnum_4YB = new A.ClassificationSpecificEnum("hljs-llvm");
    B.ClassificationSpecificEnum_4qR = new A.ClassificationSpecificEnum("hljs-xquery");
    B.ClassificationSpecificEnum_4t0 = new A.ClassificationSpecificEnum("hljs-mathematica");
    B.ClassificationSpecificEnum_4ys = new A.ClassificationSpecificEnum("hljs-crmsh");
    B.ClassificationSpecificEnum_6Vn = new A.ClassificationSpecificEnum("hljs-gams");
    B.ClassificationSpecificEnum_6l8 = new A.ClassificationSpecificEnum("hljs-htmlbars");
    B.ClassificationSpecificEnum_6p3 = new A.ClassificationSpecificEnum("hljs-mercury");
    B.ClassificationSpecificEnum_6tX = new A.ClassificationSpecificEnum("Gopkg.lock");
    B.ClassificationSpecificEnum_7B4 = new A.ClassificationSpecificEnum("hljs-scss");
    B.ClassificationSpecificEnum_7Nb = new A.ClassificationSpecificEnum(".zlogout");
    B.ClassificationSpecificEnum_7Qz = new A.ClassificationSpecificEnum("hljs-csp");
    B.ClassificationSpecificEnum_7Qz0 = new A.ClassificationSpecificEnum("hljs-css");
    B.ClassificationSpecificEnum_7Qz1 = new A.ClassificationSpecificEnum("hljs-hsp");
    B.ClassificationSpecificEnum_7Qz2 = new A.ClassificationSpecificEnum("hljs-lsl");
    B.ClassificationSpecificEnum_7Qz3 = new A.ClassificationSpecificEnum("hljs-rsl");
    B.ClassificationSpecificEnum_81b = new A.ClassificationSpecificEnum("hljs-subunit");
    B.ClassificationSpecificEnum_8Gl = new A.ClassificationSpecificEnum("hljs-vhdl");
    B.ClassificationSpecificEnum_8YE = new A.ClassificationSpecificEnum("hljs-vbscript");
    B.ClassificationSpecificEnum_8YO = new A.ClassificationSpecificEnum("hljs-zephir");
    B.ClassificationSpecificEnum_8kV = new A.ClassificationSpecificEnum("hljs-arduino");
    B.ClassificationSpecificEnum_8pf = new A.ClassificationSpecificEnum(".profile");
    B.ClassificationSpecificEnum_9x8 = new A.ClassificationSpecificEnum("hljs-fix");
    B.ClassificationSpecificEnum_9x80 = new A.ClassificationSpecificEnum("hljs-nix");
    B.ClassificationSpecificEnum_9x81 = new A.ClassificationSpecificEnum("hljs-rib");
    B.ClassificationSpecificEnum_9x82 = new A.ClassificationSpecificEnum("hljs-vim");
    B.ClassificationSpecificEnum_AKW = new A.ClassificationSpecificEnum(".bash_login");
    B.ClassificationSpecificEnum_AKW0 = new A.ClassificationSpecificEnum("hljs-gcode");
    B.ClassificationSpecificEnum_AKW1 = new A.ClassificationSpecificEnum("hljs-haml");
    B.ClassificationSpecificEnum_AKW2 = new A.ClassificationSpecificEnum("hljs-matlab");
    B.ClassificationSpecificEnum_AKW3 = new A.ClassificationSpecificEnum("hljs-yaml");
    B.ClassificationSpecificEnum_AkY = new A.ClassificationSpecificEnum("hljs-pgsql");
    B.ClassificationSpecificEnum_Appfile = new A.ClassificationSpecificEnum("Appfile");
    B.ClassificationSpecificEnum_Appraisals = new A.ClassificationSpecificEnum("Appraisals");
    B.ClassificationSpecificEnum_Art = new A.ClassificationSpecificEnum("hljs-handlebars");
    B.ClassificationSpecificEnum_Avr = new A.ClassificationSpecificEnum("hljs-thrift");
    B.ClassificationSpecificEnum_Berksfile = new A.ClassificationSpecificEnum("Berksfile");
    B.ClassificationSpecificEnum_Brewfile = new A.ClassificationSpecificEnum("Brewfile");
    B.ClassificationSpecificEnum_Cheffile = new A.ClassificationSpecificEnum("Cheffile");
    B.ClassificationSpecificEnum_Cjk = new A.ClassificationSpecificEnum("hljs-asciidoc");
    B.ClassificationSpecificEnum_Deliverfile = new A.ClassificationSpecificEnum("Deliverfile");
    B.ClassificationSpecificEnum_EO3 = new A.ClassificationSpecificEnum("hljs-shell");
    B.ClassificationSpecificEnum_EOZ = new A.ClassificationSpecificEnum("hljs-prolog");
    B.ClassificationSpecificEnum_ES6 = new A.ClassificationSpecificEnum("hljs-isbl");
    B.ClassificationSpecificEnum_ESz = new A.ClassificationSpecificEnum("hljs-jboss-cli");
    B.ClassificationSpecificEnum_Ecu = new A.ClassificationSpecificEnum("hljs-axapta");
    B.ClassificationSpecificEnum_Eht = new A.ClassificationSpecificEnum(".zshrc");
    B.ClassificationSpecificEnum_EuK = new A.ClassificationSpecificEnum("hljs-protobuf");
    B.ClassificationSpecificEnum_FKj = new A.ClassificationSpecificEnum("hljs-mojolicious");
    B.ClassificationSpecificEnum_Fastfile = new A.ClassificationSpecificEnum("Fastfile");
    B.ClassificationSpecificEnum_GB6 = new A.ClassificationSpecificEnum("hljs-powershell");
    B.ClassificationSpecificEnum_Gemfile = new A.ClassificationSpecificEnum("Gemfile");
    B.ClassificationSpecificEnum_GfL = new A.ClassificationSpecificEnum(".bash_completions");
    B.ClassificationSpecificEnum_Gky = new A.ClassificationSpecificEnum("hljs-cal");
    B.ClassificationSpecificEnum_Gky0 = new A.ClassificationSpecificEnum("hljs-sas");
    B.ClassificationSpecificEnum_Gky1 = new A.ClassificationSpecificEnum("hljs-tap");
    B.ClassificationSpecificEnum_Guardfile = new A.ClassificationSpecificEnum("Guardfile");
    B.ClassificationSpecificEnum_Hro = new A.ClassificationSpecificEnum("hljs-gradle");
    B.ClassificationSpecificEnum_IAG = new A.ClassificationSpecificEnum("hljs-kotlin");
    B.ClassificationSpecificEnum_IMP = new A.ClassificationSpecificEnum("hljs-aspectj");
    B.ClassificationSpecificEnum_IRg = new A.ClassificationSpecificEnum("hljs-diff");
    B.ClassificationSpecificEnum_IUx = new A.ClassificationSpecificEnum("hljs-autohotkey");
    B.ClassificationSpecificEnum_Jd2 = new A.ClassificationSpecificEnum("hljs-1c");
    B.ClassificationSpecificEnum_Jsm = new A.ClassificationSpecificEnum("hljs-brainfuck");
    B.ClassificationSpecificEnum_K1J = new A.ClassificationSpecificEnum("hljs-parser3");
    B.ClassificationSpecificEnum_KHA = new A.ClassificationSpecificEnum("hljs-autoit");
    B.ClassificationSpecificEnum_LIV = new A.ClassificationSpecificEnum("hljs-accesslog");
    B.ClassificationSpecificEnum_Lri = new A.ClassificationSpecificEnum("hljs-ldif");
    B.ClassificationSpecificEnum_MQk = new A.ClassificationSpecificEnum("hljs-ceylon");
    B.ClassificationSpecificEnum_MQk0 = new A.ClassificationSpecificEnum("hljs-scheme");
    B.ClassificationSpecificEnum_MQu = new A.ClassificationSpecificEnum("hljs-pony");
    B.ClassificationSpecificEnum_MpF = new A.ClassificationSpecificEnum("hljs-toml");
    B.ClassificationSpecificEnum_NQk = new A.ClassificationSpecificEnum("hljs-cs");
    B.ClassificationSpecificEnum_NQk0 = new A.ClassificationSpecificEnum("hljs-http");
    B.ClassificationSpecificEnum_NQk1 = new A.ClassificationSpecificEnum("hljs-verilog");
    B.ClassificationSpecificEnum_O1c = new A.ClassificationSpecificEnum("hljs-delphi");
    B.ClassificationSpecificEnum_O8Y = new A.ClassificationSpecificEnum("hljs-dart");
    B.ClassificationSpecificEnum_ON8 = new A.ClassificationSpecificEnum("hljs-typescript");
    B.ClassificationSpecificEnum_Oc1 = new A.ClassificationSpecificEnum("hljs-tp");
    B.ClassificationSpecificEnum_PKGBUILD = new A.ClassificationSpecificEnum("PKGBUILD");
    B.ClassificationSpecificEnum_Pipfile = new A.ClassificationSpecificEnum("Pipfile");
    B.ClassificationSpecificEnum_Podfile = new A.ClassificationSpecificEnum("Podfile");
    B.ClassificationSpecificEnum_Q5s0 = new A.ClassificationSpecificEnum("hljs-clean");
    B.ClassificationSpecificEnum_Q5s = new A.ClassificationSpecificEnum("pxd.in");
    B.ClassificationSpecificEnum_Qa6 = new A.ClassificationSpecificEnum("hljs-taggerscript");
    B.ClassificationSpecificEnum_QoN = new A.ClassificationSpecificEnum("hljs-ocaml");
    B.ClassificationSpecificEnum_R0t = new A.ClassificationSpecificEnum("pyx.in");
    B.ClassificationSpecificEnum_RMn = new A.ClassificationSpecificEnum("hljs-ada");
    B.ClassificationSpecificEnum_RWw = new A.ClassificationSpecificEnum("hljs-fortran");
    B.ClassificationSpecificEnum_Rakefile = new A.ClassificationSpecificEnum("Rakefile");
    B.ClassificationSpecificEnum_Rantfile = new A.ClassificationSpecificEnum("Rantfile");
    B.ClassificationSpecificEnum_S7h = new A.ClassificationSpecificEnum("hljs-markdown");
    B.ClassificationSpecificEnum_SKA = new A.ClassificationSpecificEnum("hljs-mipsasm");
    B.ClassificationSpecificEnum_SVK = new A.ClassificationSpecificEnum("hljs-actionscript");
    B.ClassificationSpecificEnum_Scanfile = new A.ClassificationSpecificEnum("Scanfile");
    B.ClassificationSpecificEnum_ShF = new A.ClassificationSpecificEnum("hljs-dsconfig");
    B.ClassificationSpecificEnum_Snapfile = new A.ClassificationSpecificEnum("Snapfile");
    B.ClassificationSpecificEnum_T1A = new A.ClassificationSpecificEnum("hljs-dts");
    B.ClassificationSpecificEnum_Thorfile = new A.ClassificationSpecificEnum("Thorfile");
    B.ClassificationSpecificEnum_UFf = new A.ClassificationSpecificEnum("hljs-step21");
    B.ClassificationSpecificEnum_UNKNOWN = new A.ClassificationSpecificEnum("UNKNOWN");
    B.ClassificationSpecificEnum_UOR = new A.ClassificationSpecificEnum("hljs-mizar");
    B.ClassificationSpecificEnum_Uez = new A.ClassificationSpecificEnum("poetry.lock");
    B.ClassificationSpecificEnum_Uyy = new A.ClassificationSpecificEnum("hljs-openscad");
    B.ClassificationSpecificEnum_V2j = new A.ClassificationSpecificEnum("hljs-tcl");
    B.ClassificationSpecificEnum_Vagrantfile = new A.ClassificationSpecificEnum("Vagrantfile");
    B.ClassificationSpecificEnum_ViB = new A.ClassificationSpecificEnum("hljs-inform7");
    B.ClassificationSpecificEnum_WZn = new A.ClassificationSpecificEnum("hljs-coffeescript");
    B.ClassificationSpecificEnum_WZt = new A.ClassificationSpecificEnum("hljs-gauss");
    B.ClassificationSpecificEnum_WZt0 = new A.ClassificationSpecificEnum("hljs-lasso");
    B.ClassificationSpecificEnum_WzB = new A.ClassificationSpecificEnum("hljs-livecodeserver");
    B.ClassificationSpecificEnum_Xu7 = new A.ClassificationSpecificEnum("hljs-lua");
    B.ClassificationSpecificEnum_YDe = new A.ClassificationSpecificEnum("hljs-python");
    B.ClassificationSpecificEnum_Ymk = new A.ClassificationSpecificEnum("hljs-ruleslanguage");
    B.ClassificationSpecificEnum_ZXT = new A.ClassificationSpecificEnum("hljs-ruby");
    B.ClassificationSpecificEnum_a5W = new A.ClassificationSpecificEnum("hljs-awk");
    B.ClassificationSpecificEnum_aQo = new A.ClassificationSpecificEnum("hljs-reasonml");
    B.ClassificationSpecificEnum_aZ8 = new A.ClassificationSpecificEnum("hljs-glsl");
    B.ClassificationSpecificEnum_adb = new A.ClassificationSpecificEnum("adb");
    B.ClassificationSpecificEnum_ads = new A.ClassificationSpecificEnum("ads");
    B.ClassificationSpecificEnum_agda = new A.ClassificationSpecificEnum("agda");
    B.ClassificationSpecificEnum_ai = new A.ClassificationSpecificEnum("ai");
    B.ClassificationSpecificEnum_alO = new A.ClassificationSpecificEnum("hljs-erlang-repl");
    B.ClassificationSpecificEnum_ash = new A.ClassificationSpecificEnum("ash");
    B.ClassificationSpecificEnum_bOL = new A.ClassificationSpecificEnum(".zprofile");
    B.ClassificationSpecificEnum_bash = new A.ClassificationSpecificEnum("bash");
    B.ClassificationSpecificEnum_bashrc = new A.ClassificationSpecificEnum("bashrc");
    B.ClassificationSpecificEnum_bat = new A.ClassificationSpecificEnum("bat");
    B.ClassificationSpecificEnum_bazel = new A.ClassificationSpecificEnum("bazel");
    B.ClassificationSpecificEnum_bin = new A.ClassificationSpecificEnum("bin");
    B.ClassificationSpecificEnum_bmp = new A.ClassificationSpecificEnum("bmp");
    B.ClassificationSpecificEnum_bsh = new A.ClassificationSpecificEnum("bsh");
    B.ClassificationSpecificEnum_bzl = new A.ClassificationSpecificEnum("bzl");
    B.ClassificationSpecificEnum_c = new A.ClassificationSpecificEnum("c");
    B.ClassificationSpecificEnum_c4R = new A.ClassificationSpecificEnum("hljs-javascript");
    B.ClassificationSpecificEnum_c4p = new A.ClassificationSpecificEnum("hljs-moonscript");
    B.ClassificationSpecificEnum_cKo = new A.ClassificationSpecificEnum("hljs-stata");
    B.ClassificationSpecificEnum_capfile = new A.ClassificationSpecificEnum("capfile");
    B.ClassificationSpecificEnum_cc = new A.ClassificationSpecificEnum("cc");
    B.ClassificationSpecificEnum_cco = new A.ClassificationSpecificEnum("cco");
    B.ClassificationSpecificEnum_chs = new A.ClassificationSpecificEnum("pxi.in");
    B.ClassificationSpecificEnum_class = new A.ClassificationSpecificEnum("class");
    B.ClassificationSpecificEnum_clj = new A.ClassificationSpecificEnum("clj");
    B.ClassificationSpecificEnum_cls = new A.ClassificationSpecificEnum("cls");
    B.ClassificationSpecificEnum_cmd = new A.ClassificationSpecificEnum("cmd");
    B.ClassificationSpecificEnum_coffee = new A.ClassificationSpecificEnum("coffee");
    B.ClassificationSpecificEnum_cp = new A.ClassificationSpecificEnum("cp");
    B.ClassificationSpecificEnum_cpp = new A.ClassificationSpecificEnum("cpp");
    B.ClassificationSpecificEnum_cppm = new A.ClassificationSpecificEnum("cppm");
    B.ClassificationSpecificEnum_cpy = new A.ClassificationSpecificEnum("cpy");
    B.ClassificationSpecificEnum_cs = new A.ClassificationSpecificEnum("cs");
    B.ClassificationSpecificEnum_csproj = new A.ClassificationSpecificEnum("csproj");
    B.ClassificationSpecificEnum_css = new A.ClassificationSpecificEnum("css");
    B.ClassificationSpecificEnum_csv = new A.ClassificationSpecificEnum("csv");
    B.ClassificationSpecificEnum_csx = new A.ClassificationSpecificEnum("csx");
    B.ClassificationSpecificEnum_curl = new A.ClassificationSpecificEnum("curl");
    B.ClassificationSpecificEnum_custom_url_scheme = new A.ClassificationSpecificEnum("custom_url_scheme");
    B.ClassificationSpecificEnum_cuw = new A.ClassificationSpecificEnum("hljs-mel");
    B.ClassificationSpecificEnum_cuw0 = new A.ClassificationSpecificEnum("hljs-tex");
    B.ClassificationSpecificEnum_cxx = new A.ClassificationSpecificEnum("cxx");
    B.ClassificationSpecificEnum_d8x = new A.ClassificationSpecificEnum("hljs-perl");
    B.ClassificationSpecificEnum_dae = new A.ClassificationSpecificEnum("dae");
    B.ClassificationSpecificEnum_dart = new A.ClassificationSpecificEnum("dart");
    B.ClassificationSpecificEnum_ddl = new A.ClassificationSpecificEnum("ddl");
    B.ClassificationSpecificEnum_dmg = new A.ClassificationSpecificEnum("dmg");
    B.ClassificationSpecificEnum_dml = new A.ClassificationSpecificEnum("dml");
    B.ClassificationSpecificEnum_doc = new A.ClassificationSpecificEnum("doc");
    B.ClassificationSpecificEnum_dockerfile = new A.ClassificationSpecificEnum("dockerfile");
    B.ClassificationSpecificEnum_docm = new A.ClassificationSpecificEnum("docm");
    B.ClassificationSpecificEnum_docx = new A.ClassificationSpecificEnum("docx");
    B.ClassificationSpecificEnum_dtml = new A.ClassificationSpecificEnum("dtml");
    B.ClassificationSpecificEnum_dy2 = new A.ClassificationSpecificEnum("hljs-elixir");
    B.ClassificationSpecificEnum_eAf = new A.ClassificationSpecificEnum("hljs-angelscript");
    B.ClassificationSpecificEnum_eAj = new A.ClassificationSpecificEnum("hljs-scala");
    B.ClassificationSpecificEnum_eUP = new A.ClassificationSpecificEnum("hljs-groovy");
    B.ClassificationSpecificEnum_ea2 = new A.ClassificationSpecificEnum("hljs-elm");
    B.ClassificationSpecificEnum_ebuild = new A.ClassificationSpecificEnum("ebuild");
    B.ClassificationSpecificEnum_eclass = new A.ClassificationSpecificEnum("eclass");
    B.ClassificationSpecificEnum_ecma = new A.ClassificationSpecificEnum("ecma");
    B.ClassificationSpecificEnum_ekJ = new A.ClassificationSpecificEnum("hljs-go");
    B.ClassificationSpecificEnum_el = new A.ClassificationSpecificEnum("el");
    B.ClassificationSpecificEnum_elm = new A.ClassificationSpecificEnum("elm");
    B.ClassificationSpecificEnum_eot = new A.ClassificationSpecificEnum("eot");
    B.ClassificationSpecificEnum_eps = new A.ClassificationSpecificEnum("eps");
    B.ClassificationSpecificEnum_erl = new A.ClassificationSpecificEnum("erl");
    B.ClassificationSpecificEnum_escript = new A.ClassificationSpecificEnum("escript");
    B.ClassificationSpecificEnum_ewF = new A.ClassificationSpecificEnum("hljs-purebasic");
    B.ClassificationSpecificEnum_ex = new A.ClassificationSpecificEnum("ex");
    B.ClassificationSpecificEnum_exe = new A.ClassificationSpecificEnum("exe");
    B.ClassificationSpecificEnum_exs = new A.ClassificationSpecificEnum("exs");
    B.ClassificationSpecificEnum_ezA = new A.ClassificationSpecificEnum("hljs-lisp");
    B.ClassificationSpecificEnum_f03 = new A.ClassificationSpecificEnum("f03");
    B.ClassificationSpecificEnum_f08 = new A.ClassificationSpecificEnum("f08");
    B.ClassificationSpecificEnum_f18 = new A.ClassificationSpecificEnum("f18");
    B.ClassificationSpecificEnum_f90 = new A.ClassificationSpecificEnum("f90");
    B.ClassificationSpecificEnum_f95 = new A.ClassificationSpecificEnum("f95");
    B.ClassificationSpecificEnum_fhf = new A.ClassificationSpecificEnum("hljs-xl");
    B.ClassificationSpecificEnum_fsproj = new A.ClassificationSpecificEnum("fsproj");
    B.ClassificationSpecificEnum_ftt = new A.ClassificationSpecificEnum("hljs-vbscript-html");
    B.ClassificationSpecificEnum_gO7 = new A.ClassificationSpecificEnum("hljs-golo");
    B.ClassificationSpecificEnum_gemspec = new A.ClassificationSpecificEnum("gemspec");
    B.ClassificationSpecificEnum_gif = new A.ClassificationSpecificEnum("gif");
    B.ClassificationSpecificEnum_gkc = new A.ClassificationSpecificEnum("hljs-applescript");
    B.ClassificationSpecificEnum_glsl = new A.ClassificationSpecificEnum("glsl");
    B.ClassificationSpecificEnum_gltf = new A.ClassificationSpecificEnum("gltf");
    B.ClassificationSpecificEnum_go = new A.ClassificationSpecificEnum("go");
    B.ClassificationSpecificEnum_groovy = new A.ClassificationSpecificEnum("groovy");
    B.ClassificationSpecificEnum_gvA = new A.ClassificationSpecificEnum("hljs-objectivec");
    B.ClassificationSpecificEnum_gya = new A.ClassificationSpecificEnum("hljs-coq");
    B.ClassificationSpecificEnum_gya0 = new A.ClassificationSpecificEnum("hljs-cos");
    B.ClassificationSpecificEnum_gya1 = new A.ClassificationSpecificEnum("hljs-dos");
    B.ClassificationSpecificEnum_gyp = new A.ClassificationSpecificEnum("gyp");
    B.ClassificationSpecificEnum_gypi = new A.ClassificationSpecificEnum("gypi");
    B.ClassificationSpecificEnum_gz = new A.ClassificationSpecificEnum("gz");
    B.ClassificationSpecificEnum_h = new A.ClassificationSpecificEnum("h");
    B.ClassificationSpecificEnum_h4A = new A.ClassificationSpecificEnum("hljs-properties");
    B.ClassificationSpecificEnum_hh = new A.ClassificationSpecificEnum("hh");
    B.ClassificationSpecificEnum_hpp = new A.ClassificationSpecificEnum("hpp");
    B.ClassificationSpecificEnum_hrl = new A.ClassificationSpecificEnum("hrl");
    B.ClassificationSpecificEnum_hs = new A.ClassificationSpecificEnum("hs");
    B.ClassificationSpecificEnum_hsig = new A.ClassificationSpecificEnum("hsig");
    B.ClassificationSpecificEnum_htc = new A.ClassificationSpecificEnum("htc");
    B.ClassificationSpecificEnum_htm = new A.ClassificationSpecificEnum("htm");
    B.ClassificationSpecificEnum_html = new A.ClassificationSpecificEnum("html");
    B.ClassificationSpecificEnum_hxx = new A.ClassificationSpecificEnum("hxx");
    B.ClassificationSpecificEnum_iDY = new A.ClassificationSpecificEnum("hljs-dockerfile");
    B.ClassificationSpecificEnum_ico = new A.ClassificationSpecificEnum("ico");
    B.ClassificationSpecificEnum_ifx = new A.ClassificationSpecificEnum("hljs-haxe");
    B.ClassificationSpecificEnum_ijF = new A.ClassificationSpecificEnum("hljs-monkey");
    B.ClassificationSpecificEnum_ilA = new A.ClassificationSpecificEnum("hljs-n1ql");
    B.ClassificationSpecificEnum_inl = new A.ClassificationSpecificEnum("inl");
    B.ClassificationSpecificEnum_ipp = new A.ClassificationSpecificEnum("ipp");
    B.ClassificationSpecificEnum_ipynb = new A.ClassificationSpecificEnum("ipynb");
    B.ClassificationSpecificEnum_irbrc = new A.ClassificationSpecificEnum("irbrc");
    B.ClassificationSpecificEnum_ixx = new A.ClassificationSpecificEnum("ixx");
    B.ClassificationSpecificEnum_jar = new A.ClassificationSpecificEnum("jar");
    B.ClassificationSpecificEnum_java = new A.ClassificationSpecificEnum("java");
    B.ClassificationSpecificEnum_jbuilder = new A.ClassificationSpecificEnum("jbuilder");
    B.ClassificationSpecificEnum_jl = new A.ClassificationSpecificEnum("jl");
    B.ClassificationSpecificEnum_jmM = new A.ClassificationSpecificEnum("hljs-swift");
    B.ClassificationSpecificEnum_jpe = new A.ClassificationSpecificEnum("jpe");
    B.ClassificationSpecificEnum_jpeg = new A.ClassificationSpecificEnum("jpeg");
    B.ClassificationSpecificEnum_jpg = new A.ClassificationSpecificEnum("jpg");
    B.ClassificationSpecificEnum_jpgm = new A.ClassificationSpecificEnum("jpgm");
    B.ClassificationSpecificEnum_jpgv = new A.ClassificationSpecificEnum("jpgv");
    B.ClassificationSpecificEnum_js = new A.ClassificationSpecificEnum("js");
    B.ClassificationSpecificEnum_json = new A.ClassificationSpecificEnum("json");
    B.ClassificationSpecificEnum_jsonml = new A.ClassificationSpecificEnum("jsonml");
    B.ClassificationSpecificEnum_jsx = new A.ClassificationSpecificEnum("jsx");
    B.ClassificationSpecificEnum_kV6 = new A.ClassificationSpecificEnum("sublime-snippet");
    B.ClassificationSpecificEnum_kaS = new A.ClassificationSpecificEnum("hljs-flix");
    B.ClassificationSpecificEnum_kjl = new A.ClassificationSpecificEnum("hljs-oxygene");
    B.ClassificationSpecificEnum_kqP = new A.ClassificationSpecificEnum("hljs-nsis");
    B.ClassificationSpecificEnum_kt = new A.ClassificationSpecificEnum("kt");
    B.ClassificationSpecificEnum_kvD = new A.ClassificationSpecificEnum(".bash_functions");
    B.ClassificationSpecificEnum_kvD0 = new A.ClassificationSpecificEnum("hljs-sqf");
    B.ClassificationSpecificEnum_kvD1 = new A.ClassificationSpecificEnum("hljs-sql");
    B.ClassificationSpecificEnum_l7R = new A.ClassificationSpecificEnum("hljs-clojure");
    B.ClassificationSpecificEnum_lean = new A.ClassificationSpecificEnum("lean");
    B.ClassificationSpecificEnum_lisp = new A.ClassificationSpecificEnum("lisp");
    B.ClassificationSpecificEnum_list = new A.ClassificationSpecificEnum("list");
    B.ClassificationSpecificEnum_log = new A.ClassificationSpecificEnum("log");
    B.ClassificationSpecificEnum_ltx = new A.ClassificationSpecificEnum("ltx");
    B.ClassificationSpecificEnum_lua = new A.ClassificationSpecificEnum("lua");
    B.ClassificationSpecificEnum_m = new A.ClassificationSpecificEnum("m");
    B.ClassificationSpecificEnum_mGC = new A.ClassificationSpecificEnum("hljs-smalltalk");
    B.ClassificationSpecificEnum_mJC = new A.ClassificationSpecificEnum("hljs-irpf90");
    B.ClassificationSpecificEnum_mZn = new A.ClassificationSpecificEnum("hljs-nginx");
    B.ClassificationSpecificEnum_markdn = new A.ClassificationSpecificEnum("markdn");
    B.ClassificationSpecificEnum_markdown = new A.ClassificationSpecificEnum("markdown");
    B.ClassificationSpecificEnum_matlab = new A.ClassificationSpecificEnum("matlab");
    B.ClassificationSpecificEnum_mcurl = new A.ClassificationSpecificEnum("mcurl");
    B.ClassificationSpecificEnum_md = new A.ClassificationSpecificEnum("md");
    B.ClassificationSpecificEnum_mdown = new A.ClassificationSpecificEnum("mdown");
    B.ClassificationSpecificEnum_mdwn = new A.ClassificationSpecificEnum("mdwn");
    B.ClassificationSpecificEnum_mjs = new A.ClassificationSpecificEnum("mjs");
    B.ClassificationSpecificEnum_ml = new A.ClassificationSpecificEnum("ml");
    B.ClassificationSpecificEnum_mlV = new A.ClassificationSpecificEnum(".zshenv");
    B.ClassificationSpecificEnum_mm = new A.ClassificationSpecificEnum("mm");
    B.ClassificationSpecificEnum_mp2 = new A.ClassificationSpecificEnum("mp2");
    B.ClassificationSpecificEnum_mp2a = new A.ClassificationSpecificEnum("mp2a");
    B.ClassificationSpecificEnum_mp3 = new A.ClassificationSpecificEnum("mp3");
    B.ClassificationSpecificEnum_mp4 = new A.ClassificationSpecificEnum("mp4");
    B.ClassificationSpecificEnum_mp4a = new A.ClassificationSpecificEnum("mp4a");
    B.ClassificationSpecificEnum_mpT = new A.ClassificationSpecificEnum("hljs-crystal");
    B.ClassificationSpecificEnum_mpkg = new A.ClassificationSpecificEnum("mpkg");
    B.ClassificationSpecificEnum_n3g = new A.ClassificationSpecificEnum("hljs-smali");
    B.ClassificationSpecificEnum_node = new A.ClassificationSpecificEnum("node");
    B.ClassificationSpecificEnum_o3E = new A.ClassificationSpecificEnum("hljs-julia-repl");
    B.ClassificationSpecificEnum_oAc = new A.ClassificationSpecificEnum("hljs-processing");
    B.ClassificationSpecificEnum_oCX = new A.ClassificationSpecificEnum(".bash_variables");
    B.ClassificationSpecificEnum_oCX0 = new A.ClassificationSpecificEnum("hljs-excel");
    B.ClassificationSpecificEnum_oga = new A.ClassificationSpecificEnum("oga");
    B.ClassificationSpecificEnum_ogg = new A.ClassificationSpecificEnum("ogg");
    B.ClassificationSpecificEnum_ogv = new A.ClassificationSpecificEnum("ogv");
    B.ClassificationSpecificEnum_ogx = new A.ClassificationSpecificEnum("ogx");
    B.ClassificationSpecificEnum_opml = new A.ClassificationSpecificEnum("opml");
    B.ClassificationSpecificEnum_oxB = new A.ClassificationSpecificEnum("hljs-hy");
    B.ClassificationSpecificEnum_oyU = new A.ClassificationSpecificEnum("hljs-vbnet");
    B.ClassificationSpecificEnum_oyn = new A.ClassificationSpecificEnum(".textmate_init");
    B.ClassificationSpecificEnum_oyn0 = new A.ClassificationSpecificEnum("hljs-arcade");
    B.ClassificationSpecificEnum_oyn1 = new A.ClassificationSpecificEnum("hljs-armasm");
    B.ClassificationSpecificEnum_oyn2 = new A.ClassificationSpecificEnum("hljs-erlang");
    B.ClassificationSpecificEnum_oyn3 = new A.ClassificationSpecificEnum("hljs-leaf");
    B.ClassificationSpecificEnum_p = new A.ClassificationSpecificEnum("p");
    B.ClassificationSpecificEnum_p6R = new A.ClassificationSpecificEnum("hljs-html");
    B.ClassificationSpecificEnum_pOB = new A.ClassificationSpecificEnum("hljs-roboconf");
    B.ClassificationSpecificEnum_pOB0 = new A.ClassificationSpecificEnum("hljs-scilab");
    B.ClassificationSpecificEnum_pas = new A.ClassificationSpecificEnum("pas");
    B.ClassificationSpecificEnum_pc = new A.ClassificationSpecificEnum("pc");
    B.ClassificationSpecificEnum_pdf = new A.ClassificationSpecificEnum("pdf");
    B.ClassificationSpecificEnum_php = new A.ClassificationSpecificEnum("php");
    B.ClassificationSpecificEnum_php3 = new A.ClassificationSpecificEnum("php3");
    B.ClassificationSpecificEnum_php4 = new A.ClassificationSpecificEnum("php4");
    B.ClassificationSpecificEnum_php5 = new A.ClassificationSpecificEnum("php5");
    B.ClassificationSpecificEnum_php7 = new A.ClassificationSpecificEnum("php7");
    B.ClassificationSpecificEnum_php8 = new A.ClassificationSpecificEnum("php8");
    B.ClassificationSpecificEnum_phps = new A.ClassificationSpecificEnum("phps");
    B.ClassificationSpecificEnum_phpt = new A.ClassificationSpecificEnum("phpt");
    B.ClassificationSpecificEnum_phtml = new A.ClassificationSpecificEnum("phtml");
    B.ClassificationSpecificEnum_pl = new A.ClassificationSpecificEnum("pl");
    B.ClassificationSpecificEnum_pm = new A.ClassificationSpecificEnum("pm");
    B.ClassificationSpecificEnum_pmc = new A.ClassificationSpecificEnum("pmc");
    B.ClassificationSpecificEnum_png = new A.ClassificationSpecificEnum("png");
    B.ClassificationSpecificEnum_pod = new A.ClassificationSpecificEnum("pod");
    B.ClassificationSpecificEnum_podspec = new A.ClassificationSpecificEnum("podspec");
    B.ClassificationSpecificEnum_ppt = new A.ClassificationSpecificEnum("ppt");
    B.ClassificationSpecificEnum_pptm = new A.ClassificationSpecificEnum("pptm");
    B.ClassificationSpecificEnum_pptx = new A.ClassificationSpecificEnum("pptx");
    B.ClassificationSpecificEnum_prawn = new A.ClassificationSpecificEnum("prawn");
    B.ClassificationSpecificEnum_props = new A.ClassificationSpecificEnum("props");
    B.ClassificationSpecificEnum_pryrc = new A.ClassificationSpecificEnum("pryrc");
    B.ClassificationSpecificEnum_ps = new A.ClassificationSpecificEnum("ps");
    B.ClassificationSpecificEnum_ps1 = new A.ClassificationSpecificEnum("ps1");
    B.ClassificationSpecificEnum_pxd = new A.ClassificationSpecificEnum("pxd");
    B.ClassificationSpecificEnum_pxi = new A.ClassificationSpecificEnum("pxi");
    B.ClassificationSpecificEnum_py = new A.ClassificationSpecificEnum("py");
    B.ClassificationSpecificEnum_py3 = new A.ClassificationSpecificEnum("py3");
    B.ClassificationSpecificEnum_pyc = new A.ClassificationSpecificEnum("pyc");
    B.ClassificationSpecificEnum_pyi = new A.ClassificationSpecificEnum("pyi");
    B.ClassificationSpecificEnum_pyw = new A.ClassificationSpecificEnum("pyw");
    B.ClassificationSpecificEnum_pyx = new A.ClassificationSpecificEnum("pyx");
    B.ClassificationSpecificEnum_q5A = new A.ClassificationSpecificEnum("hljs-stan");
    B.ClassificationSpecificEnum_qBv = new A.ClassificationSpecificEnum("hljs-maxima");
    B.ClassificationSpecificEnum_qQo = new A.ClassificationSpecificEnum("hljs-php");
    B.ClassificationSpecificEnum_qh2 = new A.ClassificationSpecificEnum("hljs-julia");
    B.ClassificationSpecificEnum_qt = new A.ClassificationSpecificEnum("qt");
    B.ClassificationSpecificEnum_qzK = new A.ClassificationSpecificEnum("hljs-dust");
    B.ClassificationSpecificEnum_qzK0 = new A.ClassificationSpecificEnum("hljs-rust");
    B.ClassificationSpecificEnum_r = new A.ClassificationSpecificEnum("r");
    B.ClassificationSpecificEnum_rDF = new A.ClassificationSpecificEnum("hljs-clojure-repl");
    B.ClassificationSpecificEnum_rabl = new A.ClassificationSpecificEnum("rabl");
    B.ClassificationSpecificEnum_rake = new A.ClassificationSpecificEnum("rake");
    B.ClassificationSpecificEnum_rb = new A.ClassificationSpecificEnum("rb");
    B.ClassificationSpecificEnum_rbi = new A.ClassificationSpecificEnum("rbi");
    B.ClassificationSpecificEnum_rbx = new A.ClassificationSpecificEnum("rbx");
    B.ClassificationSpecificEnum_rh2 = new A.ClassificationSpecificEnum("hljs-less");
    B.ClassificationSpecificEnum_rjs = new A.ClassificationSpecificEnum("rjs");
    B.ClassificationSpecificEnum_rkt = new A.ClassificationSpecificEnum("rkt");
    B.ClassificationSpecificEnum_rng = new A.ClassificationSpecificEnum("rng");
    B.ClassificationSpecificEnum_rpm = new A.ClassificationSpecificEnum("rpm");
    B.ClassificationSpecificEnum_rpy = new A.ClassificationSpecificEnum("rpy");
    B.ClassificationSpecificEnum_rs = new A.ClassificationSpecificEnum("rs");
    B.ClassificationSpecificEnum_rss = new A.ClassificationSpecificEnum("rss");
    B.ClassificationSpecificEnum_rtf = new A.ClassificationSpecificEnum("rtf");
    B.ClassificationSpecificEnum_rtx = new A.ClassificationSpecificEnum("rtx");
    B.ClassificationSpecificEnum_s3P = new A.ClassificationSpecificEnum("hljs-avrasm");
    B.ClassificationSpecificEnum_sJO = new A.ClassificationSpecificEnum("hljs-fsharp");
    B.ClassificationSpecificEnum_sbt = new A.ClassificationSpecificEnum("sbt");
    B.ClassificationSpecificEnum_sc = new A.ClassificationSpecificEnum("sc");
    B.ClassificationSpecificEnum_scala = new A.ClassificationSpecificEnum("scala");
    B.ClassificationSpecificEnum_scm = new A.ClassificationSpecificEnum("scm");
    B.ClassificationSpecificEnum_sh = new A.ClassificationSpecificEnum("sh");
    B.ClassificationSpecificEnum_shtml = new A.ClassificationSpecificEnum("shtml");
    B.ClassificationSpecificEnum_simplecov = new A.ClassificationSpecificEnum("simplecov");
    B.ClassificationSpecificEnum_smk = new A.ClassificationSpecificEnum("smk");
    B.ClassificationSpecificEnum_sparql = new A.ClassificationSpecificEnum("sparql");
    B.ClassificationSpecificEnum_sql = new A.ClassificationSpecificEnum("sql");
    B.ClassificationSpecificEnum_sqlproj = new A.ClassificationSpecificEnum("sqlproj");
    B.ClassificationSpecificEnum_ssml = new A.ClassificationSpecificEnum("ssml");
    B.ClassificationSpecificEnum_sty = new A.ClassificationSpecificEnum("sty");
    B.ClassificationSpecificEnum_svg = new A.ClassificationSpecificEnum("svg");
    B.ClassificationSpecificEnum_svgz = new A.ClassificationSpecificEnum("svgz");
    B.ClassificationSpecificEnum_swR = new A.ClassificationSpecificEnum(".bash_aliases");
    B.ClassificationSpecificEnum_swift = new A.ClassificationSpecificEnum("swift");
    B.ClassificationSpecificEnum_t = new A.ClassificationSpecificEnum("t");
    B.ClassificationSpecificEnum_tAl = new A.ClassificationSpecificEnum("hljs-abnf");
    B.ClassificationSpecificEnum_tAl0 = new A.ClassificationSpecificEnum("hljs-ebnf");
    B.ClassificationSpecificEnum_tWR = new A.ClassificationSpecificEnum("hs-boot");
    B.ClassificationSpecificEnum_targets = new A.ClassificationSpecificEnum("targets");
    B.ClassificationSpecificEnum_tex = new A.ClassificationSpecificEnum("tex");
    B.ClassificationSpecificEnum_text = new A.ClassificationSpecificEnum("text");
    B.ClassificationSpecificEnum_thor = new A.ClassificationSpecificEnum("thor");
    B.ClassificationSpecificEnum_tif = new A.ClassificationSpecificEnum("tif");
    B.ClassificationSpecificEnum_tiff = new A.ClassificationSpecificEnum("tiff");
    B.ClassificationSpecificEnum_tld = new A.ClassificationSpecificEnum("tld");
    B.ClassificationSpecificEnum_tmLanguage = new A.ClassificationSpecificEnum("tmLanguage");
    B.ClassificationSpecificEnum_tmPreferences = new A.ClassificationSpecificEnum("tmPreferences");
    B.ClassificationSpecificEnum_tmSnippet = new A.ClassificationSpecificEnum("tmSnippet");
    B.ClassificationSpecificEnum_tmTheme = new A.ClassificationSpecificEnum("tmTheme");
    B.ClassificationSpecificEnum_tml = new A.ClassificationSpecificEnum("tml");
    B.ClassificationSpecificEnum_toml = new A.ClassificationSpecificEnum("toml");
    B.ClassificationSpecificEnum_ts = new A.ClassificationSpecificEnum("ts");
    B.ClassificationSpecificEnum_tsx = new A.ClassificationSpecificEnum("tsx");
    B.ClassificationSpecificEnum_txt = new A.ClassificationSpecificEnum("txt");
    B.ClassificationSpecificEnum_uniform_resource_identifier = new A.ClassificationSpecificEnum("uniform_resource_identifier");
    B.ClassificationSpecificEnum_uniform_resource_locator = new A.ClassificationSpecificEnum("uniform_resource_locator");
    B.ClassificationSpecificEnum_unix_file_path = new A.ClassificationSpecificEnum("unix_file_path");
    B.ClassificationSpecificEnum_uri = new A.ClassificationSpecificEnum("uri");
    B.ClassificationSpecificEnum_uris = new A.ClassificationSpecificEnum("uris");
    B.ClassificationSpecificEnum_urls = new A.ClassificationSpecificEnum("urls");
    B.ClassificationSpecificEnum_v7D = new A.ClassificationSpecificEnum("hljs-puppet");
    B.ClassificationSpecificEnum_vIF = new A.ClassificationSpecificEnum("hljs-basic");
    B.ClassificationSpecificEnum_vbproj = new A.ClassificationSpecificEnum("vbproj");
    B.ClassificationSpecificEnum_vcproj = new A.ClassificationSpecificEnum("vcproj");
    B.ClassificationSpecificEnum_vcxproj = new A.ClassificationSpecificEnum("vcxproj");
    B.ClassificationSpecificEnum_vhdl = new A.ClassificationSpecificEnum("vhdl");
    B.ClassificationSpecificEnum_vpy = new A.ClassificationSpecificEnum("vpy");
    B.ClassificationSpecificEnum_w2d = new A.ClassificationSpecificEnum("hljs-java");
    B.ClassificationSpecificEnum_w2d0 = new A.ClassificationSpecificEnum("hljs-vala");
    B.ClassificationSpecificEnum_wAg = new A.ClassificationSpecificEnum("hljs-twig");
    B.ClassificationSpecificEnum_wEo = new A.ClassificationSpecificEnum("hljs-livescript");
    B.ClassificationSpecificEnum_wM5 = new A.ClassificationSpecificEnum("hljs-bnf");
    B.ClassificationSpecificEnum_wM50 = new A.ClassificationSpecificEnum("hljs-dns");
    B.ClassificationSpecificEnum_wM51 = new A.ClassificationSpecificEnum("hljs-ini");
    B.ClassificationSpecificEnum_wasm = new A.ClassificationSpecificEnum("wasm");
    B.ClassificationSpecificEnum_wav = new A.ClassificationSpecificEnum("wav");
    B.ClassificationSpecificEnum_weba = new A.ClassificationSpecificEnum("weba");
    B.ClassificationSpecificEnum_webm = new A.ClassificationSpecificEnum("webm");
    B.ClassificationSpecificEnum_webp = new A.ClassificationSpecificEnum("webp");
    B.ClassificationSpecificEnum_windows_file_path = new A.ClassificationSpecificEnum("windows_file_path");
    B.ClassificationSpecificEnum_wlp = new A.ClassificationSpecificEnum(".zlogin");
    B.ClassificationSpecificEnum_wlp0 = new A.ClassificationSpecificEnum("hljs-c");
    B.ClassificationSpecificEnum_wlp1 = new A.ClassificationSpecificEnum("hljs-d");
    B.ClassificationSpecificEnum_wlp2 = new A.ClassificationSpecificEnum("hljs-django");
    B.ClassificationSpecificEnum_wlp3 = new A.ClassificationSpecificEnum("hljs-gml");
    B.ClassificationSpecificEnum_wlp4 = new A.ClassificationSpecificEnum("hljs-q");
    B.ClassificationSpecificEnum_wlp5 = new A.ClassificationSpecificEnum("hljs-qml");
    B.ClassificationSpecificEnum_wlp6 = new A.ClassificationSpecificEnum("hljs-r");
    B.ClassificationSpecificEnum_wlp7 = new A.ClassificationSpecificEnum("hljs-sml");
    B.ClassificationSpecificEnum_wlp8 = new A.ClassificationSpecificEnum("hljs-xml");
    B.ClassificationSpecificEnum_woc = new A.ClassificationSpecificEnum("hljs-nimrod");
    B.ClassificationSpecificEnum_woff = new A.ClassificationSpecificEnum("woff");
    B.ClassificationSpecificEnum_woff2 = new A.ClassificationSpecificEnum("woff2");
    B.ClassificationSpecificEnum_wsa = new A.ClassificationSpecificEnum("hljs-json");
    B.ClassificationSpecificEnum_wsa0 = new A.ClassificationSpecificEnum("hljs-pf");
    B.ClassificationSpecificEnum_wscript = new A.ClassificationSpecificEnum("wscript");
    B.ClassificationSpecificEnum_wwP = new A.ClassificationSpecificEnum("hljs-plaintext");
    B.ClassificationSpecificEnum_xaml = new A.ClassificationSpecificEnum("xaml");
    B.ClassificationSpecificEnum_xhtml = new A.ClassificationSpecificEnum("xhtml");
    B.ClassificationSpecificEnum_xla = new A.ClassificationSpecificEnum("xla");
    B.ClassificationSpecificEnum_xlam = new A.ClassificationSpecificEnum("xlam");
    B.ClassificationSpecificEnum_xlc = new A.ClassificationSpecificEnum("xlc");
    B.ClassificationSpecificEnum_xlm = new A.ClassificationSpecificEnum("xlm");
    B.ClassificationSpecificEnum_xls = new A.ClassificationSpecificEnum("xls");
    B.ClassificationSpecificEnum_xlsb = new A.ClassificationSpecificEnum("xlsb");
    B.ClassificationSpecificEnum_xlsm = new A.ClassificationSpecificEnum("xlsm");
    B.ClassificationSpecificEnum_xlsx = new A.ClassificationSpecificEnum("xlsx");
    B.ClassificationSpecificEnum_xlt = new A.ClassificationSpecificEnum("xlt");
    B.ClassificationSpecificEnum_xltm = new A.ClassificationSpecificEnum("xltm");
    B.ClassificationSpecificEnum_xltx = new A.ClassificationSpecificEnum("xltx");
    B.ClassificationSpecificEnum_xml = new A.ClassificationSpecificEnum("xml");
    B.ClassificationSpecificEnum_xsd = new A.ClassificationSpecificEnum("xsd");
    B.ClassificationSpecificEnum_xsl = new A.ClassificationSpecificEnum("xsl");
    B.ClassificationSpecificEnum_xslt = new A.ClassificationSpecificEnum("xslt");
    B.ClassificationSpecificEnum_yHP = new A.ClassificationSpecificEnum(".bash_logout");
    B.ClassificationSpecificEnum_yHZ = new A.ClassificationSpecificEnum("hljs-stylus");
    B.ClassificationSpecificEnum_yaml = new A.ClassificationSpecificEnum("yaml");
    B.ClassificationSpecificEnum_yml = new A.ClassificationSpecificEnum("yml");
    B.ClassificationSpecificEnum_zXC = new A.ClassificationSpecificEnum("hljs-capnproto");
    B.ClassificationSpecificEnum_zig = new A.ClassificationSpecificEnum("zig");
    B.ClassificationSpecificEnum_zip = new A.ClassificationSpecificEnum("zip");
    B.ClassificationSpecificEnum_zsh = new A.ClassificationSpecificEnum("zsh");
    B.CustomDetectionWebsitesEnum_0 = new A.CustomDetectionWebsitesEnum("dart_dev");
    B.CustomDetectionWebsitesEnum_1 = new A.CustomDetectionWebsitesEnum("dartpad_dev");
    B.CustomDetectionWebsitesEnum_2 = new A.CustomDetectionWebsitesEnum("medium");
    B.CustomDetectionWebsitesEnum_3 = new A.CustomDetectionWebsitesEnum("apple_developer");
    B.CustomDetectionWebsitesEnum_4 = new A.CustomDetectionWebsitesEnum("chat_gpt");
    B.CustomDetectionWebsitesEnum_5 = new A.CustomDetectionWebsitesEnum("lit");
    B.CustomDetectionWebsitesEnum_6 = new A.CustomDetectionWebsitesEnum("gitlab");
    B.CustomExtractionWebsitesEnum_0 = new A.CustomExtractionWebsitesEnum("dartpad_dev");
    B.CustomExtractionWebsitesEnum_1 = new A.CustomExtractionWebsitesEnum("github_gist");
    B.CustomExtractionWebsitesEnum_2 = new A.CustomExtractionWebsitesEnum("codepen");
    B.CustomExtractionWebsitesEnum_3 = new A.CustomExtractionWebsitesEnum("chat_gpt");
    B.CustomExtractionWebsitesEnum_4 = new A.CustomExtractionWebsitesEnum("lit");
    B.CustomExtractionWebsitesEnum_5 = new A.CustomExtractionWebsitesEnum("gitlab");
    B.DataCategory_0 = new A.DataCategory("all");
    B.DataCategory_1 = new A.DataCategory("dataCategoryDefault");
    B.DataCategory_2 = new A.DataCategory("error");
    B.DataCategory_3 = new A.DataCategory("session");
    B.DataCategory_4 = new A.DataCategory("transaction");
    B.DataCategory_5 = new A.DataCategory("attachment");
    B.DataCategory_6 = new A.DataCategory("security");
    B.DataCategory_7 = new A.DataCategory("unknown");
    B.DiscardReason_0 = new A.DiscardReason("beforeSend");
    B.DiscardReason_1 = new A.DiscardReason("eventProcessor");
    B.DiscardReason_2 = new A.DiscardReason("sampleRate");
    B.DiscardReason_3 = new A.DiscardReason("networkError");
    B.DiscardReason_4 = new A.DiscardReason("queueOverflow");
    B.DiscardReason_5 = new A.DiscardReason("cacheOverflow");
    B.DiscardReason_6 = new A.DiscardReason("rateLimitBackoff");
    B.Duration_0 = new A.Duration(0);
    B.Duration_60000000 = new A.Duration(60000000);
    B.ElementThemeEnum_0 = new A.ElementThemeEnum("dark");
    B.ElementThemeEnum_1 = new A.ElementThemeEnum("light");
    B.ExternalProviderTypeEnum_BuK = new A.ExternalProviderTypeEnum("google-oauth2");
    B.ExternalProviderTypeEnum_auth0 = new A.ExternalProviderTypeEnum("auth0");
    B.ExternalProviderTypeEnum_bitbucket = new A.ExternalProviderTypeEnum("bitbucket");
    B.ExternalProviderTypeEnum_facebook = new A.ExternalProviderTypeEnum("facebook");
    B.ExternalProviderTypeEnum_github = new A.ExternalProviderTypeEnum("github");
    B.ExternalProviderTypeEnum_linkedin = new A.ExternalProviderTypeEnum("linkedin");
    B.ExternalProviderTypeEnum_twitter = new A.ExternalProviderTypeEnum("twitter");
    B.ExternalProviderTypeEnum_waad = new A.ExternalProviderTypeEnum("waad");
    B.ExternallySourcedEnum_BIT_BUCKET = new A.ExternallySourcedEnum("BIT_BUCKET");
    B.ExternallySourcedEnum_DISCORD = new A.ExternallySourcedEnum("DISCORD");
    B.ExternallySourcedEnum_FACEBOOK = new A.ExternallySourcedEnum("FACEBOOK");
    B.ExternallySourcedEnum_GIT_HUB = new A.ExternallySourcedEnum("GIT_HUB");
    B.ExternallySourcedEnum_GIT_LAB = new A.ExternallySourcedEnum("GIT_LAB");
    B.ExternallySourcedEnum_INSTAGRAM = new A.ExternallySourcedEnum("INSTAGRAM");
    B.ExternallySourcedEnum_LINKED_IN = new A.ExternallySourcedEnum("LINKED_IN");
    B.ExternallySourcedEnum_MAILGUN = new A.ExternallySourcedEnum("MAILGUN");
    B.ExternallySourcedEnum_MEDIUM = new A.ExternallySourcedEnum("MEDIUM");
    B.ExternallySourcedEnum_REDDIT = new A.ExternallySourcedEnum("REDDIT");
    B.ExternallySourcedEnum_SLACK = new A.ExternallySourcedEnum("SLACK");
    B.ExternallySourcedEnum_TWITTER = new A.ExternallySourcedEnum("TWITTER");
    B.JsonDecoder_null = new A.JsonDecoder(null);
    B.JsonEncoder_null = new A.JsonEncoder(null);
    B.Latin1Decoder_false_255 = new A.Latin1Decoder(false, 255);
    B.Latin1Encoder_255 = new A.Latin1Encoder(255);
    B.List_2Vk = A._setArrayType(makeConstList([0, 0, 32776, 33792, 1, 10240, 0, 0]), type$.JSArray_int);
    B.List_AVy = A._setArrayType(makeConstList(["app", "device", "os", "runtimes", "runtime", "gpu", "browser", "culture", "trace", "response"]), type$.JSArray_String);
    B.List_CVk = A._setArrayType(makeConstList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_JYB = A._setArrayType(makeConstList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]), type$.JSArray_int);
    B.List_empty3 = A._setArrayType(makeConstList([]), type$.JSArray_SeededAssetSensitive);
    B.List_empty4 = A._setArrayType(makeConstList([]), type$.JSArray_SeededPerson);
    B.List_empty6 = A._setArrayType(makeConstList([]), type$.JSArray_SeededTag);
    B.List_empty = A._setArrayType(makeConstList([]), type$.JSArray_SeededUser);
    B.List_empty5 = A._setArrayType(makeConstList([]), type$.JSArray_SeededWebsite);
    B.List_empty1 = A._setArrayType(makeConstList([]), type$.JSArray_String);
    B.List_empty0 = A._setArrayType(makeConstList([]), type$.JSArray_int);
    B.List_empty2 = A._setArrayType(makeConstList([]), A.findType("JSArray<num>"));
    B.List_empty7 = A._setArrayType(makeConstList([]), type$.JSArray_dynamic);
    B.List_gRj = A._setArrayType(makeConstList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_k2a = A._setArrayType(makeConstList(["application/json"]), type$.JSArray_String);
    B.List_nxB = A._setArrayType(makeConstList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_pQJ = A._setArrayType(makeConstList(["sentry", "sentry_flutter", "sentry_logging", "sentry_dio", "sentry_file"]), type$.JSArray_String);
    B.List_qFt = A._setArrayType(makeConstList([0, 0, 27858, 1023, 65534, 51199, 65535, 32767]), type$.JSArray_int);
    B.List_qNA = A._setArrayType(makeConstList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_qg40 = A._setArrayType(makeConstList([0, 0, 32722, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_qg4 = A._setArrayType(makeConstList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.MainButtonFunctionalityEnum_0 = new A.MainButtonFunctionalityEnum("copy");
    B.MainButtonFunctionalityEnum_1 = new A.MainButtonFunctionalityEnum("save");
    B.MainButtonFunctionalityEnum_2 = new A.MainButtonFunctionalityEnum("copy_save");
    B.Map_empty0 = new A.ConstantStringMap(0, {}, B.List_empty1, A.findType("ConstantStringMap<String,String>"));
    B.Map_empty = new A.ConstantStringMap(0, {}, B.List_empty1, A.findType("ConstantStringMap<String,num>"));
    B.List_empty8 = A._setArrayType(makeConstList([]), A.findType("JSArray<Symbol0>"));
    B.Map_empty1 = new A.ConstantStringMap(0, {}, B.List_empty8, A.findType("ConstantStringMap<Symbol0,@>"));
    B.Map_empty2 = new A.ConstantStringMap(0, {}, B.List_empty7, A.findType("ConstantStringMap<@,@>"));
    B.MechanismEnum_AUTOMATIC = new A.MechanismEnum("AUTOMATIC");
    B.MechanismEnum_INTERNAL = new A.MechanismEnum("INTERNAL");
    B.MechanismEnum_MANUAL = new A.MechanismEnum("MANUAL");
    B.MechanismEnum_RECOMMENDED = new A.MechanismEnum("RECOMMENDED");
    B.ModelTypeEnum_ACCURACY = new A.ModelTypeEnum("ACCURACY");
    B.ModelTypeEnum_BALANCED = new A.ModelTypeEnum("BALANCED");
    B.ModelTypeEnum_SPEED = new A.ModelTypeEnum("SPEED");
    B.ModelUsageEnum_CODE_CLASSIFICATION = new A.ModelUsageEnum("CODE_CLASSIFICATION");
    B.ModelUsageEnum_CODE_DESCRIPTION = new A.ModelUsageEnum("CODE_DESCRIPTION");
    B.ModelUsageEnum_OCR = new A.ModelUsageEnum("OCR");
    B.ModelUsageEnum_TAGIFY_CODE = new A.ModelUsageEnum("TAGIFY_CODE");
    B.ModelUsageEnum_TAGIFY_COLOR_FROM_CODE = new A.ModelUsageEnum("TAGIFY_COLOR_FROM_CODE");
    B.ModelUsageEnum_TEXT_VS_CODE = new A.ModelUsageEnum("TEXT_VS_CODE");
    B.ModelUsageEnum_TLP_NEURAL_CODE_SEARCH = new A.ModelUsageEnum("TLP_NEURAL_CODE_SEARCH");
    B.ModelUsageEnum_TLP_TAG_SEARCH = new A.ModelUsageEnum("TLP_TAG_SEARCH");
    B.NodeTypeEnum_ASSET = new A.NodeTypeEnum("ASSET");
    B.NodeTypeEnum_FORMAT = new A.NodeTypeEnum("FORMAT");
    B.NodeTypeEnum_TAG = new A.NodeTypeEnum("TAG");
    B.NodeTypeEnum_WEBSITE = new A.NodeTypeEnum("WEBSITE");
    B.PersonAccessScopedEnum_COMMENTER = new A.PersonAccessScopedEnum("COMMENTER");
    B.PersonAccessScopedEnum_EDITOR = new A.PersonAccessScopedEnum("EDITOR");
    B.PersonAccessScopedEnum_OWNER = new A.PersonAccessScopedEnum("OWNER");
    B.PersonAccessScopedEnum_VIEWER = new A.PersonAccessScopedEnum("VIEWER");
    B.PlatformEnum_ANDROID = new A.PlatformEnum("ANDROID");
    B.PlatformEnum_FUCHSIA = new A.PlatformEnum("FUCHSIA");
    B.PlatformEnum_IOS = new A.PlatformEnum("IOS");
    B.PlatformEnum_LINUX = new A.PlatformEnum("LINUX");
    B.PlatformEnum_MACOS = new A.PlatformEnum("MACOS");
    B.PlatformEnum_UNKNOWN = new A.PlatformEnum("UNKNOWN");
    B.PlatformEnum_WEB = new A.PlatformEnum("WEB");
    B.PlatformEnum_WINDOWS = new A.PlatformEnum("WINDOWS");
    B.PrivacyEnum_ANONYMOUS = new A.PrivacyEnum("ANONYMOUS");
    B.PrivacyEnum_CLOSED = new A.PrivacyEnum("CLOSED");
    B.PrivacyEnum_OPEN = new A.PrivacyEnum("OPEN");
    B.Role_ADDITIONAL = new A.Role("ADDITIONAL");
    B.Role_BOTH = new A.Role("BOTH");
    B.Role_ORIGINAL = new A.Role("ORIGINAL");
    B.Role_PREVIEW = new A.Role("PREVIEW");
    B.SearchedMatchEnum_CONTENT = new A.SearchedMatchEnum("CONTENT");
    B.SearchedMatchEnum_DESCRIPTION = new A.SearchedMatchEnum("DESCRIPTION");
    B.SearchedMatchEnum_FUZZY = new A.SearchedMatchEnum("FUZZY");
    B.SearchedMatchEnum_MULTIPLE = new A.SearchedMatchEnum("MULTIPLE");
    B.SearchedMatchEnum_PERSONS = new A.SearchedMatchEnum("PERSONS");
    B.SearchedMatchEnum_TAGS = new A.SearchedMatchEnum("TAGS");
    B.SearchedMatchEnum_TITLE = new A.SearchedMatchEnum("TITLE");
    B.SearchedMatchEnum_WEBSITES = new A.SearchedMatchEnum("WEBSITES");
    B.SeedTypeEnum_SEEDED_ASSET = new A.SeedTypeEnum("SEEDED_ASSET");
    B.SeedTypeEnum_SEEDED_FORMAT = new A.SeedTypeEnum("SEEDED_FORMAT");
    B.SeededPKCEPromptEnum_login = new A.SeededPKCEPromptEnum("login");
    B.SeededPKCEPromptEnum_none = new A.SeededPKCEPromptEnum("none");
    B.SeededPKCEResponseModeEnum_form_post = new A.SeededPKCEResponseModeEnum("form_post");
    B.SeededPKCEResponseModeEnum_fragment = new A.SeededPKCEResponseModeEnum("fragment");
    B.SeededPKCEResponseModeEnum_query = new A.SeededPKCEResponseModeEnum("query");
    B.SeededPKCEResponseModeEnum_web_message = new A.SeededPKCEResponseModeEnum("web_message");
    B.SeededPKCEResponseTypeEnum_code = new A.SeededPKCEResponseTypeEnum("code");
    B.SeededPKCEResponseTypeEnum_id_token = new A.SeededPKCEResponseTypeEnum("id_token");
    B.SeededPKCEResponseTypeEnum_token = new A.SeededPKCEResponseTypeEnum("token");
    B.SeededPKCEScopeEnum_email = new A.SeededPKCEScopeEnum("email");
    B.SeededPKCEScopeEnum_offline_access = new A.SeededPKCEScopeEnum("offline_access");
    B.SeededPKCEScopeEnum_openid = new A.SeededPKCEScopeEnum("openid");
    B.SeededPKCEScopeEnum_profile = new A.SeededPKCEScopeEnum("profile");
    B.SensitiveCategoryEnum_ACCESS_KEY = new A.SensitiveCategoryEnum("ACCESS_KEY");
    B.SensitiveCategoryEnum_ACCESS_TOKEN = new A.SensitiveCategoryEnum("ACCESS_TOKEN");
    B.SensitiveCategoryEnum_API_ID = new A.SensitiveCategoryEnum("API_ID");
    B.SensitiveCategoryEnum_API_KEY = new A.SensitiveCategoryEnum("API_KEY");
    B.SensitiveCategoryEnum_API_TOKEN = new A.SensitiveCategoryEnum("API_TOKEN");
    B.SensitiveCategoryEnum_CLIENT_ID = new A.SensitiveCategoryEnum("CLIENT_ID");
    B.SensitiveCategoryEnum_CLIENT_SECRET = new A.SensitiveCategoryEnum("CLIENT_SECRET");
    B.SensitiveCategoryEnum_PRIVATE_KEY = new A.SensitiveCategoryEnum("PRIVATE_KEY");
    B.SensitiveCategoryEnum_PUBLIC_KEY = new A.SensitiveCategoryEnum("PUBLIC_KEY");
    B.SensitiveCategoryEnum_SECRET = new A.SensitiveCategoryEnum("SECRET");
    B.SensitiveCategoryEnum_SECRET_KEY = new A.SensitiveCategoryEnum("SECRET_KEY");
    B.SensitiveCategoryEnum_URL = new A.SensitiveCategoryEnum("URL");
    B.SensitiveCategoryEnum_WEB_HOOK_URL = new A.SensitiveCategoryEnum("WEB_HOOK_URL");
    B.SensitiveSeverityEnum_HIGH = new A.SensitiveSeverityEnum("HIGH");
    B.SensitiveSeverityEnum_LOW = new A.SensitiveSeverityEnum("LOW");
    B.SensitiveSeverityEnum_MODERATE = new A.SensitiveSeverityEnum("MODERATE");
    B.SentryLevel_debug = new A.SentryLevel("debug");
    B.SentryLevel_error = new A.SentryLevel("error");
    B.SentryLevel_fatal = new A.SentryLevel("fatal");
    B.SentryLevel_info = new A.SentryLevel("info");
    B.SentryLevel_warning = new A.SentryLevel("warning");
    B.SentryOrientation_0 = new A.SentryOrientation("portrait");
    B.SentryOrientation_1 = new A.SentryOrientation("landscape");
    B.Symbol__clientToken = new A.Symbol("_clientToken");
    B.Symbol_call = new A.Symbol("call");
    B.TLPDirectedDiscoveryFilterEnum_ABSTRACT = new A.TLPDirectedDiscoveryFilterEnum("ABSTRACT");
    B.TLPDirectedDiscoveryFilterEnum_CLASS = new A.TLPDirectedDiscoveryFilterEnum("CLASS");
    B.TLPDirectedDiscoveryFilterEnum_COMMENT = new A.TLPDirectedDiscoveryFilterEnum("COMMENT");
    B.TLPDirectedDiscoveryFilterEnum_FUNCTION = new A.TLPDirectedDiscoveryFilterEnum("FUNCTION");
    B.TLPDirectedDiscoveryFilterEnum_IF = new A.TLPDirectedDiscoveryFilterEnum("IF");
    B.TLPDirectedDiscoveryFilterEnum_IMPORT = new A.TLPDirectedDiscoveryFilterEnum("IMPORT");
    B.TLPDirectedDiscoveryFilterEnum_LOOP = new A.TLPDirectedDiscoveryFilterEnum("LOOP");
    B.TLPDirectedDiscoveryFilterEnum_METHOD = new A.TLPDirectedDiscoveryFilterEnum("METHOD");
    B.TLPDirectedDiscoveryFilterEnum_RETURN = new A.TLPDirectedDiscoveryFilterEnum("RETURN");
    B.TLPDirectedDiscoveryFilterEnum_STRUCT = new A.TLPDirectedDiscoveryFilterEnum("STRUCT");
    B.TagCategoryEnum_EMAIL = new A.TagCategoryEnum("EMAIL");
    B.TagCategoryEnum_HANDLE = new A.TagCategoryEnum("HANDLE");
    B.TagCategoryEnum_UNKNOWN = new A.TagCategoryEnum("UNKNOWN");
    B.TokenizedPKCEGrantTypeEnum_authorization_code = new A.TokenizedPKCEGrantTypeEnum("authorization_code");
    B.TokenizedPKCEGrantTypeEnum_refresh_token = new A.TokenizedPKCEGrantTypeEnum("refresh_token");
    B.TrackedUserProfileGranularityEnum_ACCOUNT = new A.TrackedUserProfileGranularityEnum("ACCOUNT");
    B.TrackedUserProfileGranularityEnum_ANONYMOUS = new A.TrackedUserProfileGranularityEnum("ANONYMOUS");
    B.TrackedUserProfileGranularityEnum_DEVICE = new A.TrackedUserProfileGranularityEnum("DEVICE");
    B.Type_ByteBuffer_RkP = A.typeLiteral("ByteBuffer");
    B.Type_ByteData_zNC = A.typeLiteral("ByteData");
    B.Type_Float32List_LB7 = A.typeLiteral("Float32List");
    B.Type_Float64List_LB7 = A.typeLiteral("Float64List");
    B.Type_Int16List_uXf = A.typeLiteral("Int16List");
    B.Type_Int32List_O50 = A.typeLiteral("Int32List");
    B.Type_Int8List_ekJ = A.typeLiteral("Int8List");
    B.Type_JSObject_8k0 = A.typeLiteral("JSObject");
    B.Type_Object_xQ6 = A.typeLiteral("Object");
    B.Type_String_k8F = A.typeLiteral("String");
    B.Type_Uint16List_2bx = A.typeLiteral("Uint16List");
    B.Type_Uint32List_2bx = A.typeLiteral("Uint32List");
    B.Type_Uint8ClampedList_Jik = A.typeLiteral("Uint8ClampedList");
    B.Type_Uint8List_WLA = A.typeLiteral("Uint8List");
    B.Type_bool_lhE = A.typeLiteral("bool");
    B.Type_double_K1J = A.typeLiteral("double");
    B.Type_int_tHn = A.typeLiteral("int");
    B.Type_num_cv7 = A.typeLiteral("num");
    B.Utf8Decoder_false = new A.Utf8Decoder(false);
    B._IterationMarker_null_2 = new A._IterationMarker(null, 2);
    B._StringStackTrace_3uE = new A._StringStackTrace("");
    B._ZoneFunction__RootZone__rootScheduleMicrotask = new A._ZoneFunction(B.C__RootZone, A.async___rootScheduleMicrotask$closure(), A.findType("_ZoneFunction<~(Zone,ZoneDelegate,Zone,~())>"));
  })();
  (function staticFields() {
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.printToZone = null;
    $.Primitives__identityHashCodeProperty = null;
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $._toStringVisiting = A._setArrayType([], A.findType("JSArray<Object>"));
    $._currentUriBase = null;
    $._current = null;
    $.AccessEnumTypeTransformer__instance = null;
    $.AllocationStatusEnumTypeTransformer__instance = null;
    $.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionInstallEnumTypeTransformer__instance = null;
    $.AnalyticsTrackedAdoptionEventIdentifierDescriptionPairsAdoptionUninstallEnumTypeTransformer__instance = null;
    $.ApplicationNameEnumTypeTransformer__instance = null;
    $.CapabilitiesEnumTypeTransformer__instance = null;
    $.ChallengedPKCEMethodEnumTypeTransformer__instance = null;
    $.ClassificationGenericEnumTypeTransformer__instance = null;
    $.ClassificationRenderingEnumTypeTransformer__instance = null;
    $.ClassificationSpecificEnumTypeTransformer__instance = null;
    $.EmbeddedModelSchemaSemanticVersionEnumTypeTransformer__instance = null;
    $.ExternalProviderTypeEnumTypeTransformer__instance = null;
    $.ExternallySourcedEnumTypeTransformer__instance = null;
    $.MechanismEnumTypeTransformer__instance = null;
    $.ModelTypeEnumTypeTransformer__instance = null;
    $.ModelUsageEnumTypeTransformer__instance = null;
    $.NodeTypeEnumTypeTransformer__instance = null;
    $.OAuthTokenTokenTypeEnumTypeTransformer__instance = null;
    $.PersonAccessScopedEnumTypeTransformer__instance = null;
    $.PlatformEnumTypeTransformer__instance = null;
    $.PrivacyEnumTypeTransformer__instance = null;
    $.RoleTypeTransformer__instance = null;
    $.SearchedMatchEnumTypeTransformer__instance = null;
    $.SeedTypeEnumTypeTransformer__instance = null;
    $.SeededPKCEResponseTypeEnumTypeTransformer__instance = null;
    $.SeededPKCECodeChallengeMethodEnumTypeTransformer__instance = null;
    $.SeededPKCEScreenHintEnumTypeTransformer__instance = null;
    $.SeededPKCEPromptEnumTypeTransformer__instance = null;
    $.SeededPKCEScopeEnumTypeTransformer__instance = null;
    $.SeededPKCEResponseModeEnumTypeTransformer__instance = null;
    $.SeededPKCEADDITIONALPARAMETERSAccessTypeEnumTypeTransformer__instance = null;
    $.SeededPKCEADDITIONALPARAMETERSDisplayEnumTypeTransformer__instance = null;
    $.SeededTrackedInteractionEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer__instance = null;
    $.SeededTrackedKeyboardEventIdentifierDescriptionPairsAssetsListRefreshedEnumTypeTransformer__instance = null;
    $.SensitiveCategoryEnumTypeTransformer__instance = null;
    $.SensitiveSeverityEnumTypeTransformer__instance = null;
    $.TagCategoryEnumTypeTransformer__instance = null;
    $.TLPDirectedDiscoveryFilterEnumTypeTransformer__instance = null;
    $.TokenizedPKCEGrantTypeEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetCreatedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetViewedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatCopiedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatDownloadedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetDeletedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetDescriptionUpdatedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetNameUpdatedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatGenericClassificationUpdatedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatSpecificClassificationUpdatedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetCreationFailedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetTagAddedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetLinkAddedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetLinkGeneratedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetLinkDeletedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetTagDeletedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetUpdatedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatValueEditedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetFormatUpdatedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetLinkRevokedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetPersonAddedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetPersonDeletedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveAddedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetSensitiveDeletedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsSuggestedAssetReferencedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsSearchedAssetReferencedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsAssetReferencedEnumTypeTransformer__instance = null;
    $.TrackedAssetEventIdentifierDescriptionPairsActivityAssetReferencedEnumTypeTransformer__instance = null;
    $.TrackedAssetsEventIdentifierDescriptionPairsAssetsSearchedEnumTypeTransformer__instance = null;
    $.TrackedFormatEventIdentifierDescriptionPairsFormatCreatedEnumTypeTransformer__instance = null;
    $.TrackedFormatEventIdentifierDescriptionPairsFormatCopiedEnumTypeTransformer__instance = null;
    $.TrackedFormatEventIdentifierDescriptionPairsFormatPartiallyCopiedEnumTypeTransformer__instance = null;
    $.TrackedFormatEventIdentifierDescriptionPairsFormatDownloadedEnumTypeTransformer__instance = null;
    $.TrackedFormatEventIdentifierDescriptionPairsFormatDeletedEnumTypeTransformer__instance = null;
    $.TrackedFormatEventIdentifierDescriptionPairsFormatGenericClassificationUpdatedEnumTypeTransformer__instance = null;
    $.TrackedFormatEventIdentifierDescriptionPairsFormatSpecificClassificationUpdatedEnumTypeTransformer__instance = null;
    $.TrackedFormatEventIdentifierDescriptionPairsFormatUpdatedEnumTypeTransformer__instance = null;
    $.TrackedFormatEventIdentifierDescriptionPairsFormatInsertedEnumTypeTransformer__instance = null;
    $.TrackedFormatEventIdentifierDescriptionPairsFormatValueEditedEnumTypeTransformer__instance = null;
    $.TrackedSessionEventIdentifierDescriptionPairsSessionInitializedEnumTypeTransformer__instance = null;
    $.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionSucceededEnumTypeTransformer__instance = null;
    $.TrackedSessionEventIdentifierDescriptionPairsSessionLocalConnectionFailedEnumTypeTransformer__instance = null;
    $.TrackedSessionEventIdentifierDescriptionPairsSessionInactiveEnumTypeTransformer__instance = null;
    $.TrackedSessionEventIdentifierDescriptionPairsSessionActiveEnumTypeTransformer__instance = null;
    $.TrackedSessionEventIdentifierDescriptionPairsSessionTerminatedEnumTypeTransformer__instance = null;
    $.TrackedSessionEventIdentifierDescriptionPairsSessionAuthenticatedWithSignInEnumTypeTransformer__instance = null;
    $.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithSignOutEnumTypeTransformer__instance = null;
    $.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithDismissEnumTypeTransformer__instance = null;
    $.TrackedSessionEventIdentifierDescriptionPairsSessionUnauthenticatedWithRemindEnumTypeTransformer__instance = null;
    $.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingInitializedEnumTypeTransformer__instance = null;
    $.TrackedSessionEventIdentifierDescriptionPairsSessionOnboardingCompletedEnumTypeTransformer__instance = null;
    $.TrackedUserProfileGranularityEnumTypeTransformer__instance = null;
    $.Scraper_customClassMap = function() {
      var t1 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$_literal(["www.w3schools.com", "w3-code", "colab.research.google.com", "lazy-editor", "bitbucket.org", "diff-chunk-inner"], t1, t1);
    }();
    $.Scraper_blocked = A._setArrayType(["jetbrains.com/idea", "github.com/features/copilot", "replit.com", "https://sentry.io/organizations"], type$.JSArray_String);
    $.Settings_placementOldToNew = function() {
      var t1 = type$.dynamic;
      return A.LinkedHashMap_LinkedHashMap$_literal(["tl", B.ButtonPlacementOptionsEnum_2, "tr", B.ButtonPlacementOptionsEnum_3, "bl", B.ButtonPlacementOptionsEnum_0, "br", B.ButtonPlacementOptionsEnum_1], t1, t1);
    }();
    $.Settings_mainBtnOldToNew = function() {
      var t1 = type$.dynamic;
      return A.LinkedHashMap_LinkedHashMap$_literal(["copy-and-save", B.MainButtonFunctionalityEnum_2, "just-copy", B.MainButtonFunctionalityEnum_0, "just-save", B.MainButtonFunctionalityEnum_1], t1, t1);
    }();
    $.ButtonPlacementOptionsEnumExtension_fromMap = A.LinkedHashMap_LinkedHashMap$_literal(["bottom_left", B.ButtonPlacementOptionsEnum_0, "bottom_right", B.ButtonPlacementOptionsEnum_1, "top_left", B.ButtonPlacementOptionsEnum_2, "top_right", B.ButtonPlacementOptionsEnum_3], type$.String, A.findType("ButtonPlacementOptionsEnum"));
    $.CustomDetectionWebsitesEnumExtension_fromMap = A.LinkedHashMap_LinkedHashMap$_literal(["dart.dev", B.CustomDetectionWebsitesEnum_0, "dartpad.dev", B.CustomDetectionWebsitesEnum_1, "medium.com", B.CustomDetectionWebsitesEnum_2, "developer.apple.com", B.CustomDetectionWebsitesEnum_3, "chat.openai.com", B.CustomDetectionWebsitesEnum_4, "lit.dev", B.CustomDetectionWebsitesEnum_5, "gitlab.com", B.CustomDetectionWebsitesEnum_6], type$.String, A.findType("CustomDetectionWebsitesEnum"));
    $.CustomExtractionWebsitesEnumExtension_fromMap = A.LinkedHashMap_LinkedHashMap$_literal(["dartpad.dev", B.CustomExtractionWebsitesEnum_0, "gist.github.com", B.CustomExtractionWebsitesEnum_1, "codepen.io", B.CustomExtractionWebsitesEnum_2, "chat.openai.com", B.CustomExtractionWebsitesEnum_3, "lit.dev", B.CustomExtractionWebsitesEnum_4, "gitlab.com", B.CustomExtractionWebsitesEnum_5], type$.String, A.findType("CustomExtractionWebsitesEnum"));
    $.ElementThemeEnumExtension_fromMap = A.LinkedHashMap_LinkedHashMap$_literal(["dark", B.ElementThemeEnum_0, "light", B.ElementThemeEnum_1], type$.String, A.findType("ElementThemeEnum"));
    $.MainButtonFunctionalityEnumExtension_fromMap = A.LinkedHashMap_LinkedHashMap$_literal(["copy", B.MainButtonFunctionalityEnum_0, "save", B.MainButtonFunctionalityEnum_1, "copy_save", B.MainButtonFunctionalityEnum_2], type$.String, A.findType("MainButtonFunctionalityEnum"));
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "nullFuture", "$get$nullFuture", () => B.C__RootZone.run$1$1(new A.nullFuture_closure(), A.findType("Future<Null>")));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
    _lazyFinal($, "Future__nullFuture", "$get$Future__nullFuture", () => A.findType("_Future<Null>")._as($.$get$nullFuture()));
    _lazyFinal($, "Utf8Decoder__decoder", "$get$Utf8Decoder__decoder", () => new A.Utf8Decoder__decoder_closure().call$0());
    _lazyFinal($, "Utf8Decoder__decoderNonfatal", "$get$Utf8Decoder__decoderNonfatal", () => new A.Utf8Decoder__decoderNonfatal_closure().call$0());
    _lazyFinal($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", () => A.NativeInt8List__create1(A._ensureNativeList(A._setArrayType([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int))));
    _lazyFinal($, "Encoding__nameToEncoding", "$get$Encoding__nameToEncoding", () => A.LinkedHashMap_LinkedHashMap$_literal(["iso_8859-1:1987", B.C_Latin1Codec, "iso-ir-100", B.C_Latin1Codec, "iso_8859-1", B.C_Latin1Codec, "iso-8859-1", B.C_Latin1Codec, "latin1", B.C_Latin1Codec, "l1", B.C_Latin1Codec, "ibm819", B.C_Latin1Codec, "cp819", B.C_Latin1Codec, "csisolatin1", B.C_Latin1Codec, "iso-ir-6", B.C_AsciiCodec, "ansi_x3.4-1968", B.C_AsciiCodec, "ansi_x3.4-1986", B.C_AsciiCodec, "iso_646.irv:1991", B.C_AsciiCodec, "iso646-us", B.C_AsciiCodec, "us-ascii", B.C_AsciiCodec, "us", B.C_AsciiCodec, "ibm367", B.C_AsciiCodec, "cp367", B.C_AsciiCodec, "csascii", B.C_AsciiCodec, "ascii", B.C_AsciiCodec, "csutf8", B.C_Utf8Codec, "utf-8", B.C_Utf8Codec], type$.String, A.findType("Encoding")));
    _lazyFinal($, "_Uri__isWindowsCached", "$get$_Uri__isWindowsCached", () => typeof process != "undefined" && Object.prototype.toString.call(process) == "[object process]" && process.platform == "win32");
    _lazyFinal($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", () => A.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", false));
    _lazy($, "_hasErrorStackProperty", "$get$_hasErrorStackProperty", () => new Error().stack != void 0);
    _lazyFinal($, "DateTime__parseFormat", "$get$DateTime__parseFormat", () => A.RegExp_RegExp("^([+-]?\\d{4,6})-?(\\d\\d)-?(\\d\\d)(?:[ T](\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d+))?)?)?( ?[zZ]| ?([-+])(\\d\\d)(?::?(\\d\\d))?)?)?$", false));
    _lazyFinal($, "_hashSeed", "$get$_hashSeed", () => A.objectHashCode(B.Type_Object_xQ6));
    _lazyFinal($, "_scannerTables", "$get$_scannerTables", () => A._createTables());
    _lazyFinal($, "CssStyleDeclaration__propertyCache", "$get$CssStyleDeclaration__propertyCache", () => ({}));
    _lazyFinal($, "CssClassSetImpl__validTokenRE", "$get$CssClassSetImpl__validTokenRE", () => A.RegExp_RegExp("^\\S+$", false));
    _lazyFinal($, "Device_isOpera", "$get$Device_isOpera", () => B.JSString_methods.contains$2(A.Device_userAgent(), "Opera", 0));
    _lazyFinal($, "Device_isIE", "$get$Device_isIE", () => !A.boolConversionCheck($.$get$Device_isOpera()) && B.JSString_methods.contains$2(A.Device_userAgent(), "Trident/", 0));
    _lazyFinal($, "Device_isFirefox", "$get$Device_isFirefox", () => B.JSString_methods.contains$2(A.Device_userAgent(), "Firefox", 0));
    _lazyFinal($, "Device_cssPrefix", "$get$Device_cssPrefix", () => "-" + $.$get$Device_propertyPrefix() + "-");
    _lazyFinal($, "Device_propertyPrefix", "$get$Device_propertyPrefix", () => {
      if (A.boolConversionCheck($.$get$Device_isFirefox()))
        var t1 = "moz";
      else if ($.$get$Device_isIE())
        t1 = "ms";
      else
        t1 = A.boolConversionCheck($.$get$Device_isOpera()) ? "o" : "webkit";
      return t1;
    });
    _lazyFinal($, "_context", "$get$_context", () => A._wrapToDart(self));
    _lazyFinal($, "_DART_OBJECT_PROPERTY_NAME", "$get$_DART_OBJECT_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartObject"));
    _lazyFinal($, "_dartProxyCtor", "$get$_dartProxyCtor", () => function DartObject(o) {
      this.o = o;
    });
    _lazyFinal($, "_regList", "$get$_regList0", () => A.RegExp_RegExp("^List<(.*)>$", false));
    _lazyFinal($, "_regSet", "$get$_regSet0", () => A.RegExp_RegExp("^Set<(.*)>$", false));
    _lazyFinal($, "_regMap", "$get$_regMap0", () => A.RegExp_RegExp("^Map<String,(.*)>$", false));
    _lazyFinal($, "_regList0", "$get$_regList", () => A.RegExp_RegExp("^List<(.*)>$", false));
    _lazyFinal($, "_regSet0", "$get$_regSet", () => A.RegExp_RegExp("^Set<(.*)>$", false));
    _lazyFinal($, "_regMap0", "$get$_regMap", () => A.RegExp_RegExp("^Map<String,(.*)>$", false));
    _lazyFinal($, "BaseRequest__tokenRE", "$get$BaseRequest__tokenRE", () => A.RegExp_RegExp("^[\\w!#%&'*+\\-.^`|~]+$", false));
    _lazyFinal($, "_escapedChar", "$get$_escapedChar", () => A.RegExp_RegExp('["\\x00-\\x1F\\x7F]', false));
    _lazyFinal($, "token", "$get$token", () => A.RegExp_RegExp('[^()<>@,;:"\\\\/[\\]?={} \\t\\x00-\\x1F\\x7F]+', false));
    _lazyFinal($, "_lws", "$get$_lws", () => A.RegExp_RegExp("(?:\\r\\n)?[ \\t]+", false));
    _lazyFinal($, "_quotedString", "$get$_quotedString", () => A.RegExp_RegExp('"(?:[^"\\x00-\\x1F\\x7F]|\\\\.)*"', false));
    _lazyFinal($, "_quotedPair", "$get$_quotedPair", () => A.RegExp_RegExp("\\\\(.)", false));
    _lazyFinal($, "nonToken", "$get$nonToken", () => A.RegExp_RegExp('[()<>@,;:"\\\\/\\[\\]?={} \\t\\x00-\\x1F\\x7F]', false));
    _lazyFinal($, "whitespace", "$get$whitespace", () => A.RegExp_RegExp("(?:" + $.$get$_lws().pattern + ")*", false));
    _lazyFinal($, "windows", "$get$windows", () => A.Context_Context($.$get$Style_windows()));
    _lazyFinal($, "context", "$get$context", () => new A.Context(type$.InternalStyle._as($.$get$Style_platform()), null));
    _lazyFinal($, "Style_posix", "$get$Style_posix", () => new A.PosixStyle(A.RegExp_RegExp("/", false), A.RegExp_RegExp("[^/]$", false), A.RegExp_RegExp("^/", false)));
    _lazyFinal($, "Style_windows", "$get$Style_windows", () => new A.WindowsStyle(A.RegExp_RegExp("[/\\\\]", false), A.RegExp_RegExp("[^/\\\\]$", false), A.RegExp_RegExp("^(\\\\\\\\[^\\\\]+\\\\[^\\\\/]+|[a-zA-Z]:[/\\\\])", false), A.RegExp_RegExp("^[/\\\\](?![/\\\\])", false)));
    _lazyFinal($, "Style_url", "$get$Style_url", () => new A.UrlStyle(A.RegExp_RegExp("/", false), A.RegExp_RegExp("(^[a-zA-Z][-+.a-zA-Z\\d]*://|[^/])$", false), A.RegExp_RegExp("[a-zA-Z][-+.a-zA-Z\\d]*://[^/]*", false), A.RegExp_RegExp("^/", false)));
    _lazyFinal($, "Style_platform", "$get$Style_platform", () => A.Style__getPlatformStyle());
    _lazyFinal($, "envs", "$get$envs", () => new A.WebEnvironmentVariables());
    _lazyFinal($, "HubAdapter__instance", "$get$HubAdapter__instance", () => new A.HubAdapter());
    _lazyFinal($, "NoOpClient__instance", "$get$NoOpClient__instance", () => new A.NoOpClient());
    _lazyFinal($, "NoOpClient__response", "$get$NoOpClient__response", () => {
      var _null = null,
        t1 = A._encodingForHeaders(B.Map_empty0).encode$1(""),
        t2 = A.toUint8List(t1);
      t1 = J.get$length$asx(t1);
      t2 = new A.Response(t2, _null, 500, _null, t1, B.Map_empty0, false, true);
      t2.BaseResponse$7$contentLength$headers$isRedirect$persistentConnection$reasonPhrase$request(500, t1, B.Map_empty0, false, true, _null, _null);
      return A.Future_Future$value(t2, type$.Response);
    });
    _lazyFinal($, "NoOpClient__streamedResponse", "$get$NoOpClient__streamedResponse", () => A.Future_Future$value(A.StreamedResponse$(new A._EmptyStream(type$._EmptyStream_List_int), 500, null, B.Map_empty0, null, null), type$.StreamedResponse));
    _lazyFinal($, "NoOpHub__instance", "$get$NoOpHub__instance", () => {
      var t1 = type$.JSArray_String;
      t1 = new A.SentryOptions($.$get$NoOpClient__instance(), A.sentry_options__noOpLogger$closure(), A._setArrayType([], type$.JSArray_EventProcessor), A._setArrayType([], type$.JSArray_Integration_SentryOptions), B.SentryLevel_debug, A._setArrayType([], t1), A._setArrayType([], t1), new A.NoOpTransport(), new A.PlatformChecker(), $.$get$envs(), A._setArrayType([], type$.JSArray_ScopeObserver), A._setArrayType([".*"], t1), A.Duration$(3));
      t1.__SentryOptions_sdk_A = A.SdkVersion$("noop", "6.22.0");
      return new A.NoOpHub(t1);
    });
    _lazyFinal($, "SentryId__uuidGenerator", "$get$SentryId__uuidGenerator", () => new A.Uuid());
    _lazyFinal($, "SentryStackFrame_asynchronousGapFrameJson", "$get$SentryStackFrame_asynchronousGapFrameJson", () => {
      var _null = null;
      return A.SentryStackFrame$("<asynchronous suspension>", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    });
    _lazy($, "Sentry__hub", "$get$Sentry__hub", () => A.NoOpHub_NoOpHub());
    _lazyFinal($, "SentryClient__sentryId", "$get$SentryClient__sentryId", () => A.Future_Future$value(A.SentryId$empty(), type$.SentryId));
    _lazyFinal($, "utf8JsonEncoder", "$get$utf8JsonEncoder", () => A.JsonUtf8Encoder$(null, A.utils__jsonSerializationFallback$closure(), null));
    _lazyFinal($, "_hashSeed0", "$get$_hashSeed0", () => A.objectHashCode(B.Type_Object_xQ6));
    _lazyFinal($, "_specKey", "$get$_specKey", () => new A.Object());
    _lazyFinal($, "_vmFrame", "$get$_vmFrame", () => A.RegExp_RegExp("^#\\d+\\s+(\\S.*) \\((.+?)((?::\\d+){0,2})\\)$", false));
    _lazyFinal($, "_v8Frame", "$get$_v8Frame", () => A.RegExp_RegExp("^\\s*at (?:(\\S.*?)(?: \\[as [^\\]]+\\])? \\((.*)\\)|(.*))$", false));
    _lazyFinal($, "_v8UrlLocation", "$get$_v8UrlLocation", () => A.RegExp_RegExp("^(.*?):(\\d+)(?::(\\d+))?$|native$", false));
    _lazyFinal($, "_v8EvalLocation", "$get$_v8EvalLocation", () => A.RegExp_RegExp("^eval at (?:\\S.*?) \\((.*)\\)(?:, .*?:\\d+:\\d+)?$", false));
    _lazyFinal($, "_firefoxEvalLocation", "$get$_firefoxEvalLocation", () => A.RegExp_RegExp("(\\S+)@(\\S+) line (\\d+) >.* (Function|eval):\\d+:\\d+", false));
    _lazyFinal($, "_firefoxSafariFrame", "$get$_firefoxSafariFrame", () => A.RegExp_RegExp("^(?:([^@(/]*)(?:\\(.*\\))?((?:/[^/]*)*)(?:\\(.*\\))?@)?(.*?):(\\d*)(?::(\\d*))?$", false));
    _lazyFinal($, "_friendlyFrame", "$get$_friendlyFrame", () => A.RegExp_RegExp("^(\\S+)(?: (\\d+)(?::(\\d+))?)?\\s+([^\\d].*)$", false));
    _lazyFinal($, "_asyncBody", "$get$_asyncBody", () => A.RegExp_RegExp("<(<anonymous closure>|[^>]+)_async_body>", false));
    _lazyFinal($, "_initialDot", "$get$_initialDot", () => A.RegExp_RegExp("^\\.", false));
    _lazyFinal($, "Frame__uriRegExp", "$get$Frame__uriRegExp", () => A.RegExp_RegExp("^[a-zA-Z][-+.a-zA-Z\\d]*://", false));
    _lazyFinal($, "Frame__windowsRegExp", "$get$Frame__windowsRegExp", () => A.RegExp_RegExp("^([a-zA-Z]:[\\\\/]|\\\\\\\\)", false));
    _lazyFinal($, "_v8Trace", "$get$_v8Trace", () => A.RegExp_RegExp("\\n    ?at ", false));
    _lazyFinal($, "_v8TraceLine", "$get$_v8TraceLine", () => A.RegExp_RegExp("    ?at ", false));
    _lazyFinal($, "_firefoxEvalTrace", "$get$_firefoxEvalTrace", () => A.RegExp_RegExp("@\\S+ line \\d+ >.* (Function|eval):\\d+:\\d+", false));
    _lazyFinal($, "_firefoxSafariTrace", "$get$_firefoxSafariTrace", () => A.RegExp_RegExp("^(([.0-9A-Za-z_$/<]|\\(.*\\))*@)?[^\\s]*:\\d*$", true));
    _lazyFinal($, "_friendlyTrace", "$get$_friendlyTrace", () => A.RegExp_RegExp("^[^\\s<][^\\s]*( \\d+(:\\d+)?)?[ \\t]+[^\\s]+$", true));
    _lazyFinal($, "vmChainGap", "$get$vmChainGap", () => A.RegExp_RegExp("^<asynchronous suspension>\\n?$", true));
    _lazyFinal($, "Uuid__byteToHex", "$get$Uuid__byteToHex", () => {
      var i,
        _list = J.JSArray_JSArray$allocateGrowable(256, type$.String);
      for (i = 0; i < 256; ++i)
        _list[i] = B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(i, 16), 2, "0");
      return _list;
    });
    _lazyFinal($, "Uuid__stateExpando", "$get$Uuid__stateExpando", () => A.Expando$(type$.Map_String_dynamic));
    _lazyFinal($, "UuidUtil__random", "$get$UuidUtil__random", () => A.Random_Random(null));
    _lazy($, "Analytics_basePath", "$get$Analytics_basePath", () => {
      A.LocalState_LocalState().config.toString;
      return "http://localhost:" + B.JSInt_methods.toString$0(A.LocalState_LocalState().config.port);
    });
    _lazy($, "Analytics_connectorApi", "$get$Analytics_connectorApi", () => A.ConnectorApi$(A.ApiClient$0($.$get$Analytics_basePath())));
    _lazy($, "Analytics_telemetry", "$get$Analytics_telemetry", () => A.LocalState_LocalState().settings.telemetry);
    _lazy($, "Analytics_application", "$get$Analytics_application", () => {
      var t1 = A.LocalState_LocalState().context;
      return t1 == null ? null : t1.application;
    });
    _lazy($, "PiecesApi_basePath", "$get$PiecesApi_basePath", () => {
      A.LocalState_LocalState().config.toString;
      return "http://localhost:" + B.JSInt_methods.toString$0(A.LocalState_LocalState().config.port);
    });
    _lazy($, "PiecesApi_assetsApi", "$get$PiecesApi_assetsApi", () => {
      var t1 = A.ApiClient$($.$get$PiecesApi_basePath());
      return new A.AssetsApi(t1);
    });
    _lazy($, "PiecesApi_wellKnownApi", "$get$PiecesApi_wellKnownApi", () => {
      var t1 = A.ApiClient$($.$get$PiecesApi_basePath());
      return new A.WellKnownApi(t1);
    });
    _lazy($, "PiecesApi_osApi", "$get$PiecesApi_osApi", () => {
      var t1 = A.ApiClient$($.$get$PiecesApi_basePath());
      return new A.OSApi(t1);
    });
    _lazy($, "PiecesApi_allocationsApi", "$get$PiecesApi_allocationsApi", () => {
      var t1 = A.ApiClient$($.$get$PiecesApi_basePath());
      return new A.AllocationsApi(t1);
    });
    _lazy($, "PiecesApi_linkifyApi", "$get$PiecesApi_linkifyApi", () => {
      var t1 = A.ApiClient$($.$get$PiecesApi_basePath());
      return new A.LinkifyApi(t1);
    });
    _lazy($, "PiecesApi_connectorApi", "$get$PiecesApi_connectorApi", () => A.ConnectorApi$(A.ApiClient$0($.$get$PiecesApi_basePath())));
    _lazyFinal($, "ClientConfiguration__singleton", "$get$ClientConfiguration__singleton", () => new A.ClientConfiguration());
    _lazyFinal($, "ClientSettings__singleton", "$get$ClientSettings__singleton", () => new A.ClientSettings(B.ButtonPlacementOptionsEnum_0, B.ElementThemeEnum_0, B.MainButtonFunctionalityEnum_2, [], []));
    _lazyFinal($, "LocalState__singleton", "$get$LocalState__singleton", () => new A.LocalState(new A._AsyncBroadcastStreamController(null, null, A.findType("_AsyncBroadcastStreamController<@>")), $.$get$ClientSettings__singleton(), $.$get$ClientConfiguration__singleton(), A.ClientBlocks$(), A.ClientBlocks$(), A._setArrayType([], type$.JSArray_String)));
    _lazyFinal($, "ButtonPlacementOptionsEnumExtension_toMap", "$get$ButtonPlacementOptionsEnumExtension_toMap", () => A.LinkedHashMap_LinkedHashMap$_literal([B.ButtonPlacementOptionsEnum_0, "bottom_left", B.ButtonPlacementOptionsEnum_1, "bottom_right", B.ButtonPlacementOptionsEnum_2, "top_left", B.ButtonPlacementOptionsEnum_3, "top_right"], A.findType("ButtonPlacementOptionsEnum"), type$.String));
    _lazyFinal($, "ElementThemeEnumExtension_toMap", "$get$ElementThemeEnumExtension_toMap", () => A.LinkedHashMap_LinkedHashMap$_literal([B.ElementThemeEnum_0, "dark", B.ElementThemeEnum_1, "light"], A.findType("ElementThemeEnum"), type$.String));
    _lazyFinal($, "MainButtonFunctionalityEnumExtension_toMap", "$get$MainButtonFunctionalityEnumExtension_toMap", () => A.LinkedHashMap_LinkedHashMap$_literal([B.MainButtonFunctionalityEnum_0, "copy", B.MainButtonFunctionalityEnum_1, "save", B.MainButtonFunctionalityEnum_2, "copy_save"], A.findType("MainButtonFunctionalityEnum"), type$.String));
    _lazyFinal($, "Version__versionRegex", "$get$Version__versionRegex", () => A.RegExp_RegExp("^([\\d.]+)(-([0-9A-Za-z\\-.]+))?(\\+([0-9A-Za-z\\-.]+))?$", false));
    _lazyFinal($, "Version__buildRegex", "$get$Version__buildRegex", () => A.RegExp_RegExp("^[0-9A-Za-z\\-.]+$", false));
    _lazyFinal($, "Version__preReleaseRegex", "$get$Version__preReleaseRegex", () => A.RegExp_RegExp("^[0-9A-Za-z\\-]+$", false));
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({DOMError: J.JavaScriptObject, MediaError: J.JavaScriptObject, MutationRecord: J.JavaScriptObject, Navigator: J.JavaScriptObject, NavigatorConcurrentHardware: J.JavaScriptObject, NavigatorUserMediaError: J.JavaScriptObject, OverconstrainedError: J.JavaScriptObject, PositionError: J.JavaScriptObject, GeolocationPositionError: J.JavaScriptObject, ArrayBuffer: A.NativeByteBuffer, ArrayBufferView: A.NativeTypedData, DataView: A.NativeByteData, Float32Array: A.NativeFloat32List, Float64Array: A.NativeFloat64List, Int16Array: A.NativeInt16List, Int32Array: A.NativeInt32List, Int8Array: A.NativeInt8List, Uint16Array: A.NativeUint16List, Uint32Array: A.NativeUint32List, Uint8ClampedArray: A.NativeUint8ClampedList, CanvasPixelArray: A.NativeUint8ClampedList, Uint8Array: A.NativeUint8List, HTMLAudioElement: A.HtmlElement, HTMLBRElement: A.HtmlElement, HTMLBaseElement: A.HtmlElement, HTMLBodyElement: A.HtmlElement, HTMLButtonElement: A.HtmlElement, HTMLCanvasElement: A.HtmlElement, HTMLContentElement: A.HtmlElement, HTMLDListElement: A.HtmlElement, HTMLDataElement: A.HtmlElement, HTMLDataListElement: A.HtmlElement, HTMLDetailsElement: A.HtmlElement, HTMLDialogElement: A.HtmlElement, HTMLDivElement: A.HtmlElement, HTMLEmbedElement: A.HtmlElement, HTMLFieldSetElement: A.HtmlElement, HTMLHRElement: A.HtmlElement, HTMLHeadElement: A.HtmlElement, HTMLHeadingElement: A.HtmlElement, HTMLHtmlElement: A.HtmlElement, HTMLIFrameElement: A.HtmlElement, HTMLInputElement: A.HtmlElement, HTMLLIElement: A.HtmlElement, HTMLLabelElement: A.HtmlElement, HTMLLegendElement: A.HtmlElement, HTMLLinkElement: A.HtmlElement, HTMLMapElement: A.HtmlElement, HTMLMediaElement: A.HtmlElement, HTMLMenuElement: A.HtmlElement, HTMLMetaElement: A.HtmlElement, HTMLMeterElement: A.HtmlElement, HTMLModElement: A.HtmlElement, HTMLOListElement: A.HtmlElement, HTMLObjectElement: A.HtmlElement, HTMLOptGroupElement: A.HtmlElement, HTMLOptionElement: A.HtmlElement, HTMLOutputElement: A.HtmlElement, HTMLParagraphElement: A.HtmlElement, HTMLParamElement: A.HtmlElement, HTMLPictureElement: A.HtmlElement, HTMLPreElement: A.HtmlElement, HTMLProgressElement: A.HtmlElement, HTMLQuoteElement: A.HtmlElement, HTMLScriptElement: A.HtmlElement, HTMLShadowElement: A.HtmlElement, HTMLSlotElement: A.HtmlElement, HTMLSourceElement: A.HtmlElement, HTMLSpanElement: A.HtmlElement, HTMLStyleElement: A.HtmlElement, HTMLTableCaptionElement: A.HtmlElement, HTMLTableCellElement: A.HtmlElement, HTMLTableDataCellElement: A.HtmlElement, HTMLTableHeaderCellElement: A.HtmlElement, HTMLTableColElement: A.HtmlElement, HTMLTableElement: A.HtmlElement, HTMLTableRowElement: A.HtmlElement, HTMLTableSectionElement: A.HtmlElement, HTMLTemplateElement: A.HtmlElement, HTMLTextAreaElement: A.HtmlElement, HTMLTimeElement: A.HtmlElement, HTMLTitleElement: A.HtmlElement, HTMLTrackElement: A.HtmlElement, HTMLUListElement: A.HtmlElement, HTMLUnknownElement: A.HtmlElement, HTMLVideoElement: A.HtmlElement, HTMLDirectoryElement: A.HtmlElement, HTMLFontElement: A.HtmlElement, HTMLFrameElement: A.HtmlElement, HTMLFrameSetElement: A.HtmlElement, HTMLMarqueeElement: A.HtmlElement, HTMLElement: A.HtmlElement, HTMLAnchorElement: A.AnchorElement, HTMLAreaElement: A.AreaElement, Blob: A.Blob, File: A.Blob, CDATASection: A.CharacterData, CharacterData: A.CharacterData, Comment: A.CharacterData, ProcessingInstruction: A.CharacterData, Text: A.CharacterData, CSSStyleDeclaration: A.CssStyleDeclaration, MSStyleCSSProperties: A.CssStyleDeclaration, CSS2Properties: A.CssStyleDeclaration, Document: A.Document, HTMLDocument: A.Document, XMLDocument: A.Document, DOMException: A.DomException, DOMTokenList: A.DomTokenList, MathMLElement: A.Element, Element: A.Element, AbortPaymentEvent: A.Event, AnimationEvent: A.Event, AnimationPlaybackEvent: A.Event, ApplicationCacheErrorEvent: A.Event, BackgroundFetchClickEvent: A.Event, BackgroundFetchEvent: A.Event, BackgroundFetchFailEvent: A.Event, BackgroundFetchedEvent: A.Event, BeforeInstallPromptEvent: A.Event, BeforeUnloadEvent: A.Event, BlobEvent: A.Event, CanMakePaymentEvent: A.Event, ClipboardEvent: A.Event, CloseEvent: A.Event, CustomEvent: A.Event, DeviceMotionEvent: A.Event, DeviceOrientationEvent: A.Event, ErrorEvent: A.Event, ExtendableEvent: A.Event, ExtendableMessageEvent: A.Event, FetchEvent: A.Event, FontFaceSetLoadEvent: A.Event, ForeignFetchEvent: A.Event, GamepadEvent: A.Event, HashChangeEvent: A.Event, InstallEvent: A.Event, MediaEncryptedEvent: A.Event, MediaKeyMessageEvent: A.Event, MediaQueryListEvent: A.Event, MediaStreamEvent: A.Event, MediaStreamTrackEvent: A.Event, MessageEvent: A.Event, MIDIConnectionEvent: A.Event, MIDIMessageEvent: A.Event, MutationEvent: A.Event, NotificationEvent: A.Event, PageTransitionEvent: A.Event, PaymentRequestEvent: A.Event, PaymentRequestUpdateEvent: A.Event, PopStateEvent: A.Event, PresentationConnectionAvailableEvent: A.Event, PresentationConnectionCloseEvent: A.Event, PromiseRejectionEvent: A.Event, PushEvent: A.Event, RTCDataChannelEvent: A.Event, RTCDTMFToneChangeEvent: A.Event, RTCPeerConnectionIceEvent: A.Event, RTCTrackEvent: A.Event, SecurityPolicyViolationEvent: A.Event, SensorErrorEvent: A.Event, SpeechRecognitionError: A.Event, SpeechRecognitionEvent: A.Event, SpeechSynthesisEvent: A.Event, StorageEvent: A.Event, SyncEvent: A.Event, TrackEvent: A.Event, TransitionEvent: A.Event, WebKitTransitionEvent: A.Event, VRDeviceEvent: A.Event, VRDisplayEvent: A.Event, VRSessionEvent: A.Event, MojoInterfaceRequestEvent: A.Event, USBConnectionEvent: A.Event, IDBVersionChangeEvent: A.Event, AudioProcessingEvent: A.Event, OfflineAudioCompletionEvent: A.Event, WebGLContextEvent: A.Event, Event: A.Event, InputEvent: A.Event, SubmitEvent: A.Event, MediaQueryList: A.EventTarget, ScreenOrientation: A.EventTarget, Clipboard: A.EventTarget, EventTarget: A.EventTarget, HTMLFormElement: A.FormElement, HTMLCollection: A.HtmlCollection, HTMLFormControlsCollection: A.HtmlCollection, HTMLOptionsCollection: A.HtmlCollection, XMLHttpRequest: A.HttpRequest, XMLHttpRequestEventTarget: A.HttpRequestEventTarget, ImageData: A.ImageData, HTMLImageElement: A.ImageElement, Location: A.Location, MouseEvent: A.MouseEvent, DragEvent: A.MouseEvent, PointerEvent: A.MouseEvent, WheelEvent: A.MouseEvent, MutationObserver: A.MutationObserver, WebKitMutationObserver: A.MutationObserver, DocumentFragment: A.Node0, ShadowRoot: A.Node0, Attr: A.Node0, DocumentType: A.Node0, Node: A.Node0, NodeList: A.NodeList, RadioNodeList: A.NodeList, ProgressEvent: A.ProgressEvent, ResourceProgressEvent: A.ProgressEvent, Screen: A.Screen, HTMLSelectElement: A.SelectElement, CompositionEvent: A.UIEvent, FocusEvent: A.UIEvent, KeyboardEvent: A.UIEvent, TextEvent: A.UIEvent, TouchEvent: A.UIEvent, UIEvent: A.UIEvent, Window: A.Window, DOMWindow: A.Window, DedicatedWorkerGlobalScope: A.WorkerGlobalScope, ServiceWorkerGlobalScope: A.WorkerGlobalScope, SharedWorkerGlobalScope: A.WorkerGlobalScope, WorkerGlobalScope: A.WorkerGlobalScope, NamedNodeMap: A._NamedNodeMap, MozNamedAttrMap: A._NamedNodeMap, IDBKeyRange: A.KeyRange, SVGAElement: A.SvgElement, SVGAnimateElement: A.SvgElement, SVGAnimateMotionElement: A.SvgElement, SVGAnimateTransformElement: A.SvgElement, SVGAnimationElement: A.SvgElement, SVGCircleElement: A.SvgElement, SVGClipPathElement: A.SvgElement, SVGDefsElement: A.SvgElement, SVGDescElement: A.SvgElement, SVGDiscardElement: A.SvgElement, SVGEllipseElement: A.SvgElement, SVGFEBlendElement: A.SvgElement, SVGFEColorMatrixElement: A.SvgElement, SVGFEComponentTransferElement: A.SvgElement, SVGFECompositeElement: A.SvgElement, SVGFEConvolveMatrixElement: A.SvgElement, SVGFEDiffuseLightingElement: A.SvgElement, SVGFEDisplacementMapElement: A.SvgElement, SVGFEDistantLightElement: A.SvgElement, SVGFEFloodElement: A.SvgElement, SVGFEFuncAElement: A.SvgElement, SVGFEFuncBElement: A.SvgElement, SVGFEFuncGElement: A.SvgElement, SVGFEFuncRElement: A.SvgElement, SVGFEGaussianBlurElement: A.SvgElement, SVGFEImageElement: A.SvgElement, SVGFEMergeElement: A.SvgElement, SVGFEMergeNodeElement: A.SvgElement, SVGFEMorphologyElement: A.SvgElement, SVGFEOffsetElement: A.SvgElement, SVGFEPointLightElement: A.SvgElement, SVGFESpecularLightingElement: A.SvgElement, SVGFESpotLightElement: A.SvgElement, SVGFETileElement: A.SvgElement, SVGFETurbulenceElement: A.SvgElement, SVGFilterElement: A.SvgElement, SVGForeignObjectElement: A.SvgElement, SVGGElement: A.SvgElement, SVGGeometryElement: A.SvgElement, SVGGraphicsElement: A.SvgElement, SVGImageElement: A.SvgElement, SVGLineElement: A.SvgElement, SVGLinearGradientElement: A.SvgElement, SVGMarkerElement: A.SvgElement, SVGMaskElement: A.SvgElement, SVGMetadataElement: A.SvgElement, SVGPathElement: A.SvgElement, SVGPatternElement: A.SvgElement, SVGPolygonElement: A.SvgElement, SVGPolylineElement: A.SvgElement, SVGRadialGradientElement: A.SvgElement, SVGRectElement: A.SvgElement, SVGScriptElement: A.SvgElement, SVGSetElement: A.SvgElement, SVGStopElement: A.SvgElement, SVGStyleElement: A.SvgElement, SVGElement: A.SvgElement, SVGSVGElement: A.SvgElement, SVGSwitchElement: A.SvgElement, SVGSymbolElement: A.SvgElement, SVGTSpanElement: A.SvgElement, SVGTextContentElement: A.SvgElement, SVGTextElement: A.SvgElement, SVGTextPathElement: A.SvgElement, SVGTextPositioningElement: A.SvgElement, SVGTitleElement: A.SvgElement, SVGUseElement: A.SvgElement, SVGViewElement: A.SvgElement, SVGGradientElement: A.SvgElement, SVGComponentTransferFunctionElement: A.SvgElement, SVGFEDropShadowElement: A.SvgElement, SVGMPathElement: A.SvgElement});
    hunkHelpers.setOrUpdateLeafTags({DOMError: true, MediaError: true, MutationRecord: true, Navigator: true, NavigatorConcurrentHardware: true, NavigatorUserMediaError: true, OverconstrainedError: true, PositionError: true, GeolocationPositionError: true, ArrayBuffer: true, ArrayBufferView: false, DataView: true, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false, HTMLAudioElement: true, HTMLBRElement: true, HTMLBaseElement: true, HTMLBodyElement: true, HTMLButtonElement: true, HTMLCanvasElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLDivElement: true, HTMLEmbedElement: true, HTMLFieldSetElement: true, HTMLHRElement: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLIFrameElement: true, HTMLInputElement: true, HTMLLIElement: true, HTMLLabelElement: true, HTMLLegendElement: true, HTMLLinkElement: true, HTMLMapElement: true, HTMLMediaElement: true, HTMLMenuElement: true, HTMLMetaElement: true, HTMLMeterElement: true, HTMLModElement: true, HTMLOListElement: true, HTMLObjectElement: true, HTMLOptGroupElement: true, HTMLOptionElement: true, HTMLOutputElement: true, HTMLParagraphElement: true, HTMLParamElement: true, HTMLPictureElement: true, HTMLPreElement: true, HTMLProgressElement: true, HTMLQuoteElement: true, HTMLScriptElement: true, HTMLShadowElement: true, HTMLSlotElement: true, HTMLSourceElement: true, HTMLSpanElement: true, HTMLStyleElement: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTemplateElement: true, HTMLTextAreaElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUListElement: true, HTMLUnknownElement: true, HTMLVideoElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, HTMLAnchorElement: true, HTMLAreaElement: true, Blob: true, File: true, CDATASection: true, CharacterData: true, Comment: true, ProcessingInstruction: true, Text: true, CSSStyleDeclaration: true, MSStyleCSSProperties: true, CSS2Properties: true, Document: true, HTMLDocument: true, XMLDocument: true, DOMException: true, DOMTokenList: true, MathMLElement: true, Element: false, AbortPaymentEvent: true, AnimationEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, BlobEvent: true, CanMakePaymentEvent: true, ClipboardEvent: true, CloseEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ErrorEvent: true, ExtendableEvent: true, ExtendableMessageEvent: true, FetchEvent: true, FontFaceSetLoadEvent: true, ForeignFetchEvent: true, GamepadEvent: true, HashChangeEvent: true, InstallEvent: true, MediaEncryptedEvent: true, MediaKeyMessageEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MessageEvent: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, MutationEvent: true, NotificationEvent: true, PageTransitionEvent: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, PopStateEvent: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, PromiseRejectionEvent: true, PushEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, StorageEvent: true, SyncEvent: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, MojoInterfaceRequestEvent: true, USBConnectionEvent: true, IDBVersionChangeEvent: true, AudioProcessingEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, Event: false, InputEvent: false, SubmitEvent: false, MediaQueryList: true, ScreenOrientation: true, Clipboard: true, EventTarget: false, HTMLFormElement: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, XMLHttpRequest: true, XMLHttpRequestEventTarget: false, ImageData: true, HTMLImageElement: true, Location: true, MouseEvent: true, DragEvent: true, PointerEvent: true, WheelEvent: true, MutationObserver: true, WebKitMutationObserver: true, DocumentFragment: true, ShadowRoot: true, Attr: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, ProgressEvent: true, ResourceProgressEvent: true, Screen: true, HTMLSelectElement: true, CompositionEvent: true, FocusEvent: true, KeyboardEvent: true, TextEvent: true, TouchEvent: true, UIEvent: false, Window: true, DOMWindow: true, DedicatedWorkerGlobalScope: true, ServiceWorkerGlobalScope: true, SharedWorkerGlobalScope: true, WorkerGlobalScope: true, NamedNodeMap: true, MozNamedAttrMap: true, IDBKeyRange: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEColorMatrixElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFETurbulenceElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: true, SVGGraphicsElement: true, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGScriptElement: true, SVGSetElement: true, SVGStopElement: true, SVGStyleElement: true, SVGElement: true, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: true, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: true, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true});
    A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
  })();
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = A.main;
    if (typeof dartMainRunner === "function")
      dartMainRunner(callMain, []);
    else
      callMain([]);
  });
})();

//# sourceMappingURL=content.dart.js.map
